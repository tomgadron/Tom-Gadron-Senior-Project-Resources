in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 5
ortho basis:
01010
01100

B_can_lab before row reduction:
01111

B_can_lab after row reduction:
01111
101011001000011

word generated as sum over rows of ortho_basis starting at 2: 00000
gate: 00001
k_gate: 00011
nonzero_gate: 10000
radix_gate: 11111

Starting main loop:
word: 00000

combo: 00000

word: 01010

combo: 00001

word: 00110

combo: 00011

word: 01100

combo: 00010

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 6
ortho basis:
001010
001100
110000

B_can_lab before row reduction:
001111

B_can_lab after row reduction:
001111
101011001000011

word generated as sum over rows of ortho_basis starting at 2: 110000
gate: 000001
k_gate: 000011
nonzero_gate: 110000
radix_gate: 011111

Starting main loop:
word: 110000

combo: 000000

word: 111010

combo: 000001

temp: 000001

orbit_checks[temp>>log2radix]= 000000

passed if statements
temp basis:
110101
rs list:
1 0 1 0 1 1 
B_aug:
[1 1 1 1 0 0]
[0 1 0 1 1 1]
m:
[1 0 1 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (5,6), (2,4)(5,6), (1,3)(5,6), (1,5,3,6) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 3, 2, 4, 5]
[1, 4, 3, 5, 0, 2]
orbits:
111010
110110
111100
word: 110110

combo: 000011

temp: 000011

orbit_checks[temp>>log2radix]= 001110

word: 111100

combo: 000010

temp: 000010

orbit_checks[temp>>log2radix]= 001110

exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 0 1 1]
[0 1 0 1 1 1]
limit on degree (length): 7
ortho basis:
1110100
0101000

B_can_lab before row reduction:
0011011
0111100

B_can_lab after row reduction:
0011011
0111100

word generated as sum over rows of ortho_basis starting at 2: 0000000
gate: 0000011
k_gate: 0000011
nonzero_gate: 1000000
radix_gate: 0011111

Starting main loop:
word: 0000000

combo: 0000000

word: 1110100

combo: 0000001

temp: 0000001

orbit_checks[temp>>log2radix]= 0000000

passed if statements
temp basis:
1011001
0111010
rs list:
1 0 0 1 1 0 1 
0 1 0 1 1 1 0 
B_aug:
[1 0 1 1 0 1 0]
[0 1 0 1 1 1 0]
[0 0 1 0 1 1 1]
m:
[1 0 0 1 1 0 1]
[0 1 0 1 1 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (1,2)(6,7), (2,6)(4,5), (2,5)(4,6) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 4, 3, 2, 6, 5]
[0, 1, 5, 3, 6, 2, 4]
[0, 2, 1, 6, 4, 5, 3]
[0, 1, 6, 3, 5, 4, 2]
orbits:
1110100
1011100
word: 1011100

combo: 0000011

temp: 0000011

orbit_checks[temp>>log2radix]= 0001010

word: 0101000

combo: 0000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 1 0 1]
[0 1 0 1 1 1 0]
[0 0 1 0 1 1 1]
limit on degree (length): 8
ortho basis:
11101000

B_can_lab before row reduction:
01010101
00110110
01111000

B_can_lab after row reduction:
01010101
00110110
01111000

word generated as sum over rows of ortho_basis starting at 1: 00000000
gate: 00000111
k_gate: 00000001
nonzero_gate: 10000000
radix_gate: 00011111

Starting main loop:
word: 00000000

combo: 00000000

word: 11101000

combo: 00000001

temp: 00000001

orbit_checks[temp>>log2radix]= 00000000

passed if statements
temp basis:
10110001
11010010
01110100
rs list:
1 0 0 0 1 1 0 1 
0 1 0 0 1 0 1 1 
0 0 1 0 1 1 1 0 
B_aug:
[1 0 0 1 1 0 1 0]
[0 1 0 1 1 1 0 0]
[0 0 1 0 1 1 1 0]
[0 0 0 1 0 1 1 1]
m:
[1 0 0 0 1 1 0 1]
[0 1 0 0 1 0 1 1]
[0 0 1 0 1 1 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (2,3)(6,8), (1,2)(6,7), (3,7)(5,6) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 5, 4, 3, 7, 6]
[0, 1, 2, 6, 4, 7, 3, 5]
[0, 1, 3, 2, 7, 5, 6, 4]
[0, 1, 2, 7, 4, 6, 5, 3]
orbits:
11101000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 0 1]
[0 1 0 0 1 0 1 1]
[0 0 1 0 1 1 1 0]
[0 0 0 1 0 1 1 1]
limit on degree (length): 9
ortho basis:

B_can_lab before row reduction:
011001001
010101010
001101100
011110000

B_can_lab after row reduction:
011001001
010101010
001101100
011110000
000111000

word generated as sum over rows of ortho_basis starting at 0: 000000000
gate: 000001111
k_gate: 000000000
nonzero_gate: 100000000
radix_gate: 000011111

Starting main loop:
word: 000000000

combo: 000000000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 0 1]
[0 1 0 0 1 0 1 1]
[0 0 1 0 1 1 1 0]
[0 0 0 1 0 1 1 1]
limit on degree (length): 10
ortho basis:
1100000000

B_can_lab before row reduction:
0011001001
0010101010
0001101100
0011110000

B_can_lab after row reduction:
0011001001
0010101010
0001101100
0011110000
0000111000

word generated as sum over rows of ortho_basis starting at 0: 1100000000
gate: 0000001111
k_gate: 0000000000
nonzero_gate: 1100000000
radix_gate: 0000011111

Starting main loop:
word: 1100000000

combo: 0000000000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 0 1]
[0 1 0 0 1 0 1 1]
[0 0 1 0 1 1 1 0]
[0 0 0 1 0 1 1 1]
limit on degree (length): 11
ortho basis:
10100000000
11000000000

B_can_lab before row reduction:
00011001001
00010101010
00001101100
00011110000

B_can_lab after row reduction:
00011001001
00010101010
00001101100
00011110000
00000111000

word generated as sum over rows of ortho_basis starting at 0: 01100000000
gate: 00000001111
k_gate: 00000000000
nonzero_gate: 11100000000
radix_gate: 00000011111

Starting main loop:
word: 01100000000

combo: 00000000000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 0 1]
[0 1 0 0 1 0 1 1]
[0 0 1 0 1 1 1 0]
[0 0 0 1 0 1 1 1]
limit on degree (length): 12
ortho basis:
100100000000
101000000000
110000000000

B_can_lab before row reduction:
000011001001
000010101010
000001101100
000011110000

B_can_lab after row reduction:
000011001001
000010101010
000001101100
000011110000
000000111000

word generated as sum over rows of ortho_basis starting at 0: 111100000000
gate: 000000001111
k_gate: 000000000000
nonzero_gate: 111100000000
radix_gate: 000000011111

Starting main loop:
word: 111100000000

combo: 000000000000

temp: 000000000000

orbit_checks[temp>>log2radix]= 000000000000

passed if statements
temp basis:
111100000000
000010110001
000011010010
000001110100
rs list:
0 0 0 0 0 0 0 0 1 1 1 1 
1 0 0 0 1 1 0 1 0 0 0 0 
0 1 0 0 1 0 1 1 0 0 0 0 
0 0 1 0 1 1 1 0 0 0 0 0 
B_aug:
[1 0 0 0 1 1 0 1 0 0 0 0]
[0 1 0 0 1 0 1 1 0 0 0 0]
[0 0 1 0 1 1 1 0 0 0 0 0]
[0 0 0 1 0 1 1 1 0 0 0 0]
[0 0 0 0 0 0 0 0 1 1 1 1]
m:
[0 0 0 0 0 0 0 0 1 1 1 1]
[1 0 0 0 1 1 0 1 0 0 0 0]
[0 1 0 0 1 0 1 1 0 0 0 0]
[0 0 1 0 1 1 1 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,12), (10,11), ( 9,10), (2,3)(6,8), (1,2)(6,7), (3,7)(5,6) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 5, 4, 3, 7, 6, 8, 9, 10, 11]
[0, 1, 2, 6, 4, 7, 3, 5, 8, 9, 10, 11]
[0, 1, 3, 2, 7, 5, 6, 4, 8, 9, 10, 11]
[0, 1, 2, 7, 4, 6, 5, 3, 8, 9, 10, 11]
[0, 2, 3, 1, 5, 7, 6, 4, 8, 9, 10, 11]
[0, 1, 3, 4, 7, 6, 5, 2, 8, 9, 10, 11]
[1, 2, 3, 0, 6, 7, 5, 4, 8, 9, 10, 11]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
orbits:
111100000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 0 1]
[0 1 0 0 1 0 1 1]
[0 0 1 0 1 1 1 0]
[0 0 0 1 0 1 1 1]
limit on degree (length): 13
ortho basis:
1000100000000
1001000000000
1010000000000
1100000000000

B_can_lab before row reduction:
0000011001001
0000010101010
0000001101100
0000011110000

B_can_lab after row reduction:
0000011001001
0000010101010
0000001101100
0000011110000
0000000111000

word generated as sum over rows of ortho_basis starting at 0: 0111100000000
gate: 0000000001111
k_gate: 0000000000000
nonzero_gate: 1111100000000
radix_gate: 0000000011111

Starting main loop:
word: 0111100000000

combo: 0000000000000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 0 1]
[0 1 0 0 1 0 1 1]
[0 0 1 0 1 1 1 0]
[0 0 0 1 0 1 1 1]
limit on degree (length): 14
ortho basis:
10000100000000
10001000000000
10010000000000
10100000000000
11000000000000

B_can_lab before row reduction:
00000011001001
00000010101010
00000001101100
00000011110000

B_can_lab after row reduction:
00000011001001
00000010101010
00000001101100
00000011110000
00000000111000

word generated as sum over rows of ortho_basis starting at 0: 11111100000000
gate: 00000000001111
k_gate: 00000000000000
nonzero_gate: 11111100000000
radix_gate: 00000000011111

Starting main loop:
word: 11111100000000

combo: 00000000000000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 0 1]
[0 1 0 0 1 0 1 1]
[0 0 1 0 1 1 1 0]
[0 0 0 1 0 1 1 1]
limit on degree (length): 15
ortho basis:
100000100000000
100001000000000
100010000000000
100100000000000
101000000000000
110000000000000

B_can_lab before row reduction:
000000011001001
000000010101010
000000001101100
000000011110000

B_can_lab after row reduction:
000000011001001
000000010101010
000000001101100
000000011110000
000000000111000

word generated as sum over rows of ortho_basis starting at 0: 011111100000000
gate: 000000000001111
k_gate: 000000000000000
nonzero_gate: 111111100000000
radix_gate: 000000000011111

Starting main loop:
word: 011111100000000

combo: 000000000000000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 0 1]
[0 1 0 0 1 0 1 1]
[0 0 1 0 1 1 1 0]
[0 0 0 1 0 1 1 1]
limit on degree (length): 16
ortho basis:
1000000100000000
1000001000000000
1000010000000000
1000100000000000
1001000000000000
1010000000000000
1100000000000000

B_can_lab before row reduction:
0000000011001001
0000000010101010
0000000001101100
0000000011110000

B_can_lab after row reduction:
0000000011001001
0000000010101010
0000000001101100
0000000011110000
0000000000111000

word generated as sum over rows of ortho_basis starting at 0: 1111111100000000
gate: 0000000000001111
k_gate: 0000000000000000
nonzero_gate: 1111111100000000
radix_gate: 0000000000011111

Starting main loop:
word: 1111111100000000

combo: 0000000000000000

temp: 0000000000000000

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1111111100000000
0000000010110001
0000000011010010
0000000001110100
rs list:
0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
1 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 
0 1 0 0 1 0 1 1 0 0 0 0 0 0 0 0 
0 0 1 0 1 1 1 0 0 0 0 0 0 0 0 0 
B_aug:
[1 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0]
[0 1 0 0 1 0 1 1 0 0 0 0 0 0 0 0]
[0 0 1 0 1 1 1 0 0 0 0 0 0 0 0 0]
[0 0 0 1 0 1 1 1 0 0 0 0 0 0 0 0]
[0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1]
m:
[0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1]
[1 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0]
[0 1 0 0 1 0 1 1 0 0 0 0 0 0 0 0]
[0 0 1 0 1 1 1 0 0 0 0 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), (12,13), (11,12), (10,11), ( 9,10), (2,3)(6,8), (1,2)(6,7), (3,7)(5,6) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 5, 4, 3, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15]
[0, 1, 2, 6, 4, 7, 3, 5, 8, 9, 10, 11, 12, 13, 14, 15]
[0, 1, 3, 2, 7, 5, 6, 4, 8, 9, 10, 11, 12, 13, 14, 15]
[0, 1, 2, 7, 4, 6, 5, 3, 8, 9, 10, 11, 12, 13, 14, 15]
[0, 2, 3, 1, 5, 7, 6, 4, 8, 9, 10, 11, 12, 13, 14, 15]
[0, 1, 3, 4, 7, 6, 5, 2, 8, 9, 10, 11, 12, 13, 14, 15]
[1, 2, 3, 0, 6, 7, 5, 4, 8, 9, 10, 11, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111111100000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 1 0 1]
[0 1 0 1 1 1 0]
[0 0 1 0 1 1 1]
limit on degree (length): 9
ortho basis:
101101000
110000000

B_can_lab before row reduction:
001010101
000110110
001111000

B_can_lab after row reduction:
001010101
000110110
001111000

word generated as sum over rows of ortho_basis starting at 1: 110000000
gate: 000000111
k_gate: 000000001
nonzero_gate: 110000000
radix_gate: 000011111

Starting main loop:
word: 110000000

combo: 000000000

word: 011101000

combo: 000000001

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 1 0 1]
[0 1 0 1 1 1 0]
[0 0 1 0 1 1 1]
limit on degree (length): 10
ortho basis:
1001101000
1010000000
1100000000

B_can_lab before row reduction:
0001010101
0000110110
0001111000

B_can_lab after row reduction:
0001010101
0000110110
0001111000

word generated as sum over rows of ortho_basis starting at 1: 0110000000
gate: 0000000111
k_gate: 0000000001
nonzero_gate: 1110000000
radix_gate: 0000011111

Starting main loop:
word: 0110000000

combo: 0000000000

word: 1111101000

combo: 0000000001

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 1 0 1]
[0 1 0 1 1 1 0]
[0 0 1 0 1 1 1]
limit on degree (length): 11
ortho basis:
10001101000
10010000000
10100000000
11000000000

B_can_lab before row reduction:
00001010101
00000110110
00001111000

B_can_lab after row reduction:
00001010101
00000110110
00001111000

word generated as sum over rows of ortho_basis starting at 1: 11110000000
gate: 00000000111
k_gate: 00000000001
nonzero_gate: 11110000000
radix_gate: 00000011111

Starting main loop:
word: 11110000000

combo: 00000000000

temp: 00000000000

orbit_checks[temp>>log2radix]= 00000000000

passed if statements
temp basis:
11110000000
00001011001
00000111010
rs list:
0 0 0 0 0 0 0 1 1 1 1 
1 0 0 1 1 0 1 0 0 0 0 
0 1 0 1 1 1 0 0 0 0 0 
B_aug:
[1 0 0 1 1 0 1 0 0 0 0]
[0 1 0 1 1 1 0 0 0 0 0]
[0 0 1 0 1 1 1 0 0 0 0]
[0 0 0 0 0 0 0 1 1 1 1]
m:
[0 0 0 0 0 0 0 1 1 1 1]
[1 0 0 1 1 0 1 0 0 0 0]
[0 1 0 1 1 1 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (10,11), ( 9,10), (8,9), (1,2)(6,7), (2,6)(4,5), (2,5)(4,6) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 4, 3, 2, 6, 5, 7, 8, 9, 10]
[0, 1, 5, 3, 6, 2, 4, 7, 8, 9, 10]
[0, 2, 1, 6, 4, 5, 3, 7, 8, 9, 10]
[0, 1, 6, 3, 5, 4, 2, 7, 8, 9, 10]
[1, 2, 0, 5, 4, 6, 3, 7, 8, 9, 10]
[0, 2, 3, 6, 5, 4, 1, 7, 8, 9, 10]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
orbits:
11110000000
word: 01111101000

combo: 00000000001

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 1 0 1]
[0 1 0 1 1 1 0]
[0 0 1 0 1 1 1]
limit on degree (length): 12
ortho basis:
100001101000
100010000000
100100000000
101000000000
110000000000

B_can_lab before row reduction:
000001010101
000000110110
000001111000

B_can_lab after row reduction:
000001010101
000000110110
000001111000

word generated as sum over rows of ortho_basis starting at 1: 011110000000
gate: 000000000111
k_gate: 000000000001
nonzero_gate: 111110000000
radix_gate: 000000011111

Starting main loop:
word: 011110000000

combo: 000000000000

word: 111111101000

combo: 000000000001

temp: 000000000001

orbit_checks[temp>>log2radix]= 000000000000

passed if statements
temp basis:
111111101000
000001011001
000000111010
rs list:
0 0 0 1 0 1 1 1 1 1 1 1 
1 0 0 1 1 0 1 0 0 0 0 0 
0 1 0 1 1 1 0 0 0 0 0 0 
B_aug:
[1 0 0 1 1 0 1 0 0 0 0 0]
[0 1 0 1 1 1 0 0 0 0 0 0]
[0 0 1 0 1 1 1 0 0 0 0 0]
[0 0 0 1 0 1 1 1 1 1 1 1]
m:
[0 0 0 1 0 1 1 1 1 1 1 1]
[1 0 0 1 1 0 1 0 0 0 0 0]
[0 1 0 1 1 1 0 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,12), (10,11), ( 9,10), (8,9), (1,2)(6,7), (2,6)(4,5), (2,5)(4,6) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 4, 3, 2, 6, 5, 7, 8, 9, 10, 11]
[0, 1, 5, 3, 6, 2, 4, 7, 8, 9, 10, 11]
[0, 2, 1, 6, 4, 5, 3, 7, 8, 9, 10, 11]
[0, 1, 6, 3, 5, 4, 2, 7, 8, 9, 10, 11]
[1, 2, 0, 5, 4, 6, 3, 7, 8, 9, 10, 11]
[0, 2, 3, 6, 5, 4, 1, 7, 8, 9, 10, 11]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
orbits:
111111101000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 1 0 1]
[0 1 0 1 1 1 0]
[0 0 1 0 1 1 1]
limit on degree (length): 13
ortho basis:
1000001101000
1000010000000
1000100000000
1001000000000
1010000000000
1100000000000

B_can_lab before row reduction:
0000001010101
0000000110110
0000001111000

B_can_lab after row reduction:
0000001010101
0000000110110
0000001111000

word generated as sum over rows of ortho_basis starting at 1: 1111110000000
gate: 0000000000111
k_gate: 0000000000001
nonzero_gate: 1111110000000
radix_gate: 0000000011111

Starting main loop:
word: 1111110000000

combo: 0000000000000

word: 0111111101000

combo: 0000000000001

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 1 0 1]
[0 1 0 1 1 1 0]
[0 0 1 0 1 1 1]
limit on degree (length): 14
ortho basis:
10000001101000
10000010000000
10000100000000
10001000000000
10010000000000
10100000000000
11000000000000

B_can_lab before row reduction:
00000001010101
00000000110110
00000001111000

B_can_lab after row reduction:
00000001010101
00000000110110
00000001111000

word generated as sum over rows of ortho_basis starting at 1: 01111110000000
gate: 00000000000111
k_gate: 00000000000001
nonzero_gate: 11111110000000
radix_gate: 00000000011111

Starting main loop:
word: 01111110000000

combo: 00000000000000

word: 11111111101000

combo: 00000000000001

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 1 0 1]
[0 1 0 1 1 1 0]
[0 0 1 0 1 1 1]
limit on degree (length): 15
ortho basis:
100000001101000
100000010000000
100000100000000
100001000000000
100010000000000
100100000000000
101000000000000
110000000000000

B_can_lab before row reduction:
000000001010101
000000000110110
000000001111000

B_can_lab after row reduction:
000000001010101
000000000110110
000000001111000

word generated as sum over rows of ortho_basis starting at 1: 111111110000000
gate: 000000000000111
k_gate: 000000000000001
nonzero_gate: 111111110000000
radix_gate: 000000000011111

Starting main loop:
word: 111111110000000

combo: 000000000000000

temp: 000000000000000

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
111111110000000
000000001011001
000000000111010
rs list:
0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
1 0 0 1 1 0 1 0 0 0 0 0 0 0 0 
0 1 0 1 1 1 0 0 0 0 0 0 0 0 0 
B_aug:
[1 0 0 1 1 0 1 0 0 0 0 0 0 0 0]
[0 1 0 1 1 1 0 0 0 0 0 0 0 0 0]
[0 0 1 0 1 1 1 0 0 0 0 0 0 0 0]
[0 0 0 0 0 0 0 1 1 1 1 1 1 1 1]
m:
[0 0 0 0 0 0 0 1 1 1 1 1 1 1 1]
[1 0 0 1 1 0 1 0 0 0 0 0 0 0 0]
[0 1 0 1 1 1 0 0 0 0 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (14,15), (13,14), (12,13), (11,12), (10,11), ( 9,10), (8,9), (1,2)(6,7), (2,6)(4,5), (2,5)(4,6) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 4, 3, 2, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14]
[0, 1, 5, 3, 6, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14]
[0, 2, 1, 6, 4, 5, 3, 7, 8, 9, 10, 11, 12, 13, 14]
[0, 1, 6, 3, 5, 4, 2, 7, 8, 9, 10, 11, 12, 13, 14]
[1, 2, 0, 5, 4, 6, 3, 7, 8, 9, 10, 11, 12, 13, 14]
[0, 2, 3, 6, 5, 4, 1, 7, 8, 9, 10, 11, 12, 13, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
111111110000000
word: 011111111101000

combo: 000000000000001

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 1 0 1]
[0 1 0 1 1 1 0]
[0 0 1 0 1 1 1]
limit on degree (length): 16
ortho basis:
1000000001101000
1000000010000000
1000000100000000
1000001000000000
1000010000000000
1000100000000000
1001000000000000
1010000000000000
1100000000000000

B_can_lab before row reduction:
0000000001010101
0000000000110110
0000000001111000

B_can_lab after row reduction:
0000000001010101
0000000000110110
0000000001111000

word generated as sum over rows of ortho_basis starting at 1: 0111111110000000
gate: 0000000000000111
k_gate: 0000000000000001
nonzero_gate: 1111111110000000
radix_gate: 0000000000011111

Starting main loop:
word: 0111111110000000

combo: 0000000000000000

word: 1111111111101000

combo: 0000000000000001

temp: 0000000000000001

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1111111111101000
0000000001011001
0000000000111010
rs list:
0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 
1 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 
0 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0 
B_aug:
[1 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0]
[0 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0]
[0 0 1 0 1 1 1 0 0 0 0 0 0 0 0 0]
[0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1]
m:
[0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1]
[1 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0]
[0 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), (12,13), (11,12), (10,11), ( 9,10), (8,9), (1,2)(6,7), (2,6)(4,5), (2,5)(4,6) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 4, 3, 2, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[0, 1, 5, 3, 6, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[0, 2, 1, 6, 4, 5, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[0, 1, 6, 3, 5, 4, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[1, 2, 0, 5, 4, 6, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[0, 2, 3, 6, 5, 4, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111111111101000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 0 1 1]
[0 1 0 1 1 1]
limit on degree (length): 8
ortho basis:
10110100
00101000
11000000

B_can_lab before row reduction:
00011011
00111100

B_can_lab after row reduction:
00011011
00111100

word generated as sum over rows of ortho_basis starting at 2: 11000000
gate: 00000011
k_gate: 00000011
nonzero_gate: 11000000
radix_gate: 00011111

Starting main loop:
word: 11000000

combo: 00000000

word: 01110100

combo: 00000001

word: 01011100

combo: 00000011

word: 11101000

combo: 00000010

temp: 00000010

orbit_checks[temp>>log2radix]= 00000000

passed if statements
temp basis:
11000101
11010010
rs list:
1 0 1 0 0 0 1 1 
0 1 0 0 1 0 1 1 
B_aug:
[1 0 1 1 0 1 0 0]
[0 1 0 1 1 1 0 0]
[0 0 0 1 0 1 1 1]
m:
[1 0 1 0 0 0 1 1]
[0 1 0 0 1 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (7,8), (4,6), (2,5), (2,7)(5,8), (1,2)(3,5) ] )
Right transversal of automorphism group of B_aug:
[3, 1, 5, 0, 4, 2, 6, 7]
[3, 0, 5, 1, 2, 4, 6, 7]
[3, 0, 5, 6, 2, 7, 1, 4]
orbits:
11101000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 0 0 1 1]
[0 1 0 0 1 0 1 1]
[0 0 1 0 0 1 1 1]
limit on degree (length): 9
ortho basis:
011101000
010010000

B_can_lab before row reduction:
010110001
000110110
001111000

B_can_lab after row reduction:
010110001
000110110
001111000

word generated as sum over rows of ortho_basis starting at 2: 000000000
gate: 000000111
k_gate: 000000011
nonzero_gate: 100000000
radix_gate: 000011111

Starting main loop:
word: 000000000

combo: 000000000

word: 011101000

combo: 000000001

word: 001111000

combo: 000000011

word: 010010000

combo: 000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 0 0 1 1]
[0 1 0 0 1 0 1 1]
[0 0 1 0 0 1 1 1]
limit on degree (length): 10
ortho basis:
0011101000
0010010000
1100000000

B_can_lab before row reduction:
0010110001
0000110110
0001111000

B_can_lab after row reduction:
0010110001
0000110110
0001111000

word generated as sum over rows of ortho_basis starting at 2: 1100000000
gate: 0000000111
k_gate: 0000000011
nonzero_gate: 1100000000
radix_gate: 0000011111

Starting main loop:
word: 1100000000

combo: 0000000000

word: 1111101000

combo: 0000000001

word: 1101111000

combo: 0000000011

word: 1110010000

combo: 0000000010

temp: 0000000010

orbit_checks[temp>>log2radix]= 0000000000

passed if statements
temp basis:
1100001001
1100100010
1101000100
rs list:
1 0 0 1 0 0 0 0 1 1 
0 1 0 0 0 1 0 0 1 1 
0 0 1 0 0 0 1 0 1 1 
B_aug:
[1 0 0 1 1 0 0 1 0 0]
[0 1 0 0 1 1 0 1 0 0]
[0 0 1 0 1 0 1 1 0 0]
[0 0 0 0 1 0 0 1 1 1]
m:
[1 0 0 1 0 0 0 0 1 1]
[0 1 0 0 0 1 0 0 1 1]
[0 0 1 0 0 0 1 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,10), (5,8), (3,7), ( 3, 9)( 7,10), (2,3)(6,7), (1,2)(4,6) ] )
Right transversal of automorphism group of B_aug:
[4, 1, 2, 7, 0, 5, 6, 3, 8, 9]
[4, 0, 2, 7, 1, 3, 6, 5, 8, 9]
[4, 0, 1, 7, 2, 3, 5, 6, 8, 9]
[4, 0, 1, 7, 8, 3, 5, 9, 2, 6]
orbits:
1110010000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 0 0 0 1 1]
[0 1 0 0 0 1 0 0 1 1]
[0 0 1 0 0 0 1 0 1 1]
[0 0 0 1 0 0 0 1 1 1]
limit on degree (length): 11
ortho basis:
11111010000
01000100000

B_can_lab before row reduction:
01001100001
00101100010
00001101100
00011110000

B_can_lab after row reduction:
01001100001
00101100010
00001101100
00011110000
00000111000

word generated as sum over rows of ortho_basis starting at 2: 00000000000
gate: 00000001111
k_gate: 00000000011
nonzero_gate: 10000000000
radix_gate: 00000011111

Starting main loop:
word: 00000000000

combo: 00000000000

word: 11111010000

combo: 00000000001

word: 10111110000

combo: 00000000011

word: 01000100000

combo: 00000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 0 0 0 1 1]
[0 1 0 0 0 1 0 0 1 1]
[0 0 1 0 0 0 1 0 1 1]
[0 0 0 1 0 0 0 1 1 1]
limit on degree (length): 12
ortho basis:
101111010000
001000100000
110000000000

B_can_lab before row reduction:
001001100001
000101100010
000001101100
000011110000

B_can_lab after row reduction:
001001100001
000101100010
000001101100
000011110000
000000111000

word generated as sum over rows of ortho_basis starting at 2: 110000000000
gate: 000000001111
k_gate: 000000000011
nonzero_gate: 110000000000
radix_gate: 000000011111

Starting main loop:
word: 110000000000

combo: 000000000000

word: 011111010000

combo: 000000000001

word: 010111110000

combo: 000000000011

word: 111000100000

combo: 000000000010

temp: 000000000010

orbit_checks[temp>>log2radix]= 000000000000

passed if statements
temp basis:
110000010001
110001000010
110010000100
110100001000
rs list:
1 0 0 0 1 0 0 0 0 0 1 1 
0 1 0 0 0 0 1 0 0 0 1 1 
0 0 1 0 0 0 0 1 0 0 1 1 
0 0 0 1 0 0 0 0 1 0 1 1 
B_aug:
[1 0 0 0 1 1 0 0 0 1 0 0]
[0 1 0 0 0 1 1 0 0 1 0 0]
[0 0 1 0 0 1 0 1 0 1 0 0]
[0 0 0 1 0 1 0 0 1 1 0 0]
[0 0 0 0 0 1 0 0 0 1 1 1]
m:
[1 0 0 0 1 0 0 0 0 0 1 1]
[0 1 0 0 0 0 1 0 0 0 1 1]
[0 0 1 0 0 0 0 1 0 0 1 1]
[0 0 0 1 0 0 0 0 1 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,12), ( 6,10), (4,9), ( 4,11)( 9,12), (3,4)(8,9), (2,3)(7,8), (1,2)(5,7) ] )
Right transversal of automorphism group of B_aug:
[5, 1, 2, 3, 9, 0, 6, 7, 8, 4, 10, 11]
[5, 0, 2, 3, 9, 1, 4, 7, 8, 6, 10, 11]
[5, 0, 1, 3, 9, 2, 4, 6, 8, 7, 10, 11]
[5, 0, 1, 2, 9, 3, 4, 6, 7, 8, 10, 11]
[5, 0, 1, 2, 9, 10, 4, 6, 7, 11, 3, 8]
orbits:
111000100000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 1 0 0 0 0 1 1]
[0 1 0 0 0 0 1 0 0 0 1 1]
[0 0 1 0 0 0 0 1 0 0 1 1]
[0 0 0 1 0 0 0 0 1 0 1 1]
[0 0 0 0 1 0 0 0 0 1 1 1]
limit on degree (length): 13
ortho basis:
0111110100000
0100001000000

B_can_lab before row reduction:
0100011000001
0010011000010
0001011000100
0000011011000
0000111100000

B_can_lab after row reduction:
0100011000001
0010011000010
0001011000100
0000011011000
0000111100000

word generated as sum over rows of ortho_basis starting at 2: 0000000000000
gate: 0000000011111
k_gate: 0000000000011
nonzero_gate: 1000000000000
radix_gate: 0000000011111

Starting main loop:
word: 0000000000000

combo: 0000000000000

word: 0111110100000

combo: 0000000000001

word: 0011111100000

combo: 0000000000011

word: 0100001000000

combo: 0000000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 1 0 0 0 0 1 1]
[0 1 0 0 0 0 1 0 0 0 1 1]
[0 0 1 0 0 0 0 1 0 0 1 1]
[0 0 0 1 0 0 0 0 1 0 1 1]
[0 0 0 0 1 0 0 0 0 1 1 1]
limit on degree (length): 14
ortho basis:
00111110100000
00100001000000
11000000000000

B_can_lab before row reduction:
00100011000001
00010011000010
00001011000100
00000011011000
00000111100000

B_can_lab after row reduction:
00100011000001
00010011000010
00001011000100
00000011011000
00000111100000

word generated as sum over rows of ortho_basis starting at 2: 11000000000000
gate: 00000000011111
k_gate: 00000000000011
nonzero_gate: 11000000000000
radix_gate: 00000000011111

Starting main loop:
word: 11000000000000

combo: 00000000000000

word: 11111110100000

combo: 00000000000001

temp: 00000000000001

orbit_checks[temp>>log2radix]= 00000000000000

passed if statements
temp basis:
00100001100001
00100011000010
00100101000100
11010111101000
11111110100000
rs list:
1 0 0 0 0 1 1 0 0 0 0 1 0 0 
0 1 0 0 0 0 1 1 0 0 0 1 0 0 
0 0 1 0 0 0 1 0 1 0 0 1 0 0 
0 0 0 1 0 1 1 1 1 0 1 0 1 1 
0 0 0 0 0 1 0 1 1 1 1 1 1 1 
B_aug:
[1 0 0 0 0 1 1 0 0 0 0 1 0 0]
[0 1 0 0 0 0 1 1 0 0 0 1 0 0]
[0 0 1 0 0 0 1 0 1 0 0 1 0 0]
[0 0 0 1 0 0 1 0 0 1 0 1 0 0]
[0 0 0 0 1 0 1 0 0 0 1 1 0 0]
[0 0 0 0 0 1 0 1 1 1 1 1 1 1]
m:
[1 0 0 0 0 1 1 0 0 0 0 1 0 0]
[0 1 0 0 0 0 1 1 0 0 0 1 0 0]
[0 0 1 0 0 0 1 0 1 0 0 1 0 0]
[0 0 0 1 0 1 1 1 1 0 1 0 1 1]
[0 0 0 0 0 1 0 1 1 1 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (13,14), ( 3, 4)( 9,10), (2,3)(8,9), (1,2)(6,8), ( 4,12)( 7,10), ( 4,10)( 7,12) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 6, 5, 4, 7, 8, 9, 11, 10, 12, 13]
[0, 1, 2, 3, 10, 5, 11, 7, 8, 9, 4, 6, 12, 13]
[0, 1, 2, 4, 3, 5, 6, 7, 8, 10, 9, 11, 12, 13]
[0, 1, 2, 3, 11, 5, 10, 7, 8, 9, 6, 4, 12, 13]
[0, 1, 2, 4, 9, 5, 11, 7, 8, 10, 3, 6, 12, 13]
[0, 1, 3, 4, 2, 5, 6, 7, 9, 10, 8, 11, 12, 13]
[0, 1, 3, 4, 8, 5, 11, 7, 9, 10, 2, 6, 12, 13]
[0, 2, 3, 4, 1, 5, 6, 8, 9, 10, 7, 11, 12, 13]
[0, 2, 3, 4, 7, 5, 11, 8, 9, 10, 1, 6, 12, 13]
[1, 2, 3, 4, 0, 7, 6, 8, 9, 10, 5, 11, 12, 13]
[1, 2, 3, 4, 5, 7, 11, 8, 9, 10, 0, 6, 12, 13]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
orbits:
11111110100000
11011111100000
word: 11011111100000

combo: 00000000000011

temp: 00000000000011

orbit_checks[temp>>log2radix]= 00000000001010

word: 11100001000000

combo: 00000000000010

temp: 00000000000010

orbit_checks[temp>>log2radix]= 00000000001010

passed if statements
temp basis:
11000000100001
11000010000010
11000100000100
11001000001000
11010000010000
rs list:
1 0 0 0 0 1 0 0 0 0 0 0 1 1 
0 1 0 0 0 0 0 1 0 0 0 0 1 1 
0 0 1 0 0 0 0 0 1 0 0 0 1 1 
0 0 0 1 0 0 0 0 0 1 0 0 1 1 
0 0 0 0 1 0 0 0 0 0 1 0 1 1 
B_aug:
[1 0 0 0 0 1 1 0 0 0 0 1 0 0]
[0 1 0 0 0 0 1 1 0 0 0 1 0 0]
[0 0 1 0 0 0 1 0 1 0 0 1 0 0]
[0 0 0 1 0 0 1 0 0 1 0 1 0 0]
[0 0 0 0 1 0 1 0 0 0 1 1 0 0]
[0 0 0 0 0 0 1 0 0 0 0 1 1 1]
m:
[1 0 0 0 0 1 0 0 0 0 0 0 1 1]
[0 1 0 0 0 0 0 1 0 0 0 0 1 1]
[0 0 1 0 0 0 0 0 1 0 0 0 1 1]
[0 0 0 1 0 0 0 0 0 1 0 0 1 1]
[0 0 0 0 1 0 0 0 0 0 1 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (13,14), ( 7,12), ( 5,11), ( 5,13)(11,14), ( 4, 5)(10,11), ( 3, 4)( 9,10), (2,3)(8,9), (1,2)(6,8) ] )
Right transversal of automorphism group of B_aug:
[6, 1, 2, 3, 4, 11, 0, 7, 8, 9, 10, 5, 12, 13]
[6, 0, 2, 3, 4, 11, 1, 5, 8, 9, 10, 7, 12, 13]
[6, 0, 1, 3, 4, 11, 2, 5, 7, 9, 10, 8, 12, 13]
[6, 0, 1, 2, 4, 11, 3, 5, 7, 8, 10, 9, 12, 13]
[6, 0, 1, 2, 3, 11, 4, 5, 7, 8, 9, 10, 12, 13]
[6, 0, 1, 2, 3, 11, 12, 5, 7, 8, 9, 13, 4, 10]
orbits:
11100001000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 1 0 0 0 0 0 1 1]
[0 1 0 0 0 0 0 1 0 0 0 0 1 1]
[0 0 1 0 0 0 0 0 1 0 0 0 1 1]
[0 0 0 1 0 0 0 0 0 1 0 0 1 1]
[0 0 0 0 1 0 0 0 0 0 1 0 1 1]
[0 0 0 0 0 1 0 0 0 0 0 1 1 1]
limit on degree (length): 15
ortho basis:
111111101000000
010000010000000

B_can_lab before row reduction:
010000110000001
001000110000010
000100110000100
000010110001000
000000110110000
000001111000000

B_can_lab after row reduction:
010000110000001
001000110000010
000100110000100
000010110001000
000000110110000
000001111000000
000000000100001

word generated as sum over rows of ortho_basis starting at 2: 000000000000000
gate: 000000000111111
k_gate: 000000000000011
nonzero_gate: 100000000000000
radix_gate: 000000000011111

Starting main loop:
word: 000000000000000

combo: 000000000000000

word: 111111101000000

combo: 000000000000001

temp: 000000000000001

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
010000011000001
010000110000010
010001010000100
010010010001000
101011111010000
111111101000000
rs list:
1 0 0 0 0 0 1 1 0 0 0 0 0 1 0 
0 1 0 0 0 0 0 1 1 0 0 0 0 1 0 
0 0 1 0 0 0 0 1 0 1 0 0 0 1 0 
0 0 0 1 0 0 0 1 0 0 1 0 0 1 0 
0 0 0 0 1 0 1 1 1 1 1 0 1 0 1 
0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 
B_aug:
[1 0 0 0 0 0 1 1 0 0 0 0 0 1 0]
[0 1 0 0 0 0 0 1 1 0 0 0 0 1 0]
[0 0 1 0 0 0 0 1 0 1 0 0 0 1 0]
[0 0 0 1 0 0 0 1 0 0 1 0 0 1 0]
[0 0 0 0 1 0 0 1 0 0 0 1 0 1 0]
[0 0 0 0 0 1 0 1 0 0 0 0 1 1 0]
[0 0 0 0 0 0 1 0 1 1 1 1 1 1 1]
m:
[1 0 0 0 0 0 1 1 0 0 0 0 0 1 0]
[0 1 0 0 0 0 0 1 1 0 0 0 0 1 0]
[0 0 1 0 0 0 0 1 0 1 0 0 0 1 0]
[0 0 0 1 0 0 0 1 0 0 1 0 0 1 0]
[0 0 0 0 1 0 1 1 1 1 1 0 1 0 1]
[0 0 0 0 0 0 1 0 1 1 1 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 4, 5)(11,12), ( 3, 4)(10,11), ( 2, 3)( 9,10), (1,2)(7,9), ( 5,14)( 8,12), ( 5,12)( 8,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 7, 6, 5, 8, 9, 10, 11, 13, 12, 14]
[0, 1, 2, 3, 4, 12, 6, 13, 8, 9, 10, 11, 5, 7, 14]
[0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 12, 11, 13, 14]
[0, 1, 2, 3, 4, 13, 6, 12, 8, 9, 10, 11, 7, 5, 14]
[0, 1, 2, 3, 5, 11, 6, 13, 8, 9, 10, 12, 4, 7, 14]
[0, 1, 2, 4, 5, 3, 6, 7, 8, 9, 11, 12, 10, 13, 14]
[0, 1, 2, 4, 5, 10, 6, 13, 8, 9, 11, 12, 3, 7, 14]
[0, 1, 3, 4, 5, 2, 6, 7, 8, 10, 11, 12, 9, 13, 14]
[0, 1, 3, 4, 5, 9, 6, 13, 8, 10, 11, 12, 2, 7, 14]
[0, 2, 3, 4, 5, 1, 6, 7, 9, 10, 11, 12, 8, 13, 14]
[0, 2, 3, 4, 5, 8, 6, 13, 9, 10, 11, 12, 1, 7, 14]
[1, 2, 3, 4, 5, 0, 8, 7, 9, 10, 11, 12, 6, 13, 14]
[1, 2, 3, 4, 5, 6, 8, 13, 9, 10, 11, 12, 0, 7, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
111111101000000
101111111000000
word: 101111111000000

combo: 000000000000011

temp: 000000000000011

orbit_checks[temp>>log2radix]= 000000000001010

word: 010000010000000

combo: 000000000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 1 0 0 0 0 0 1 1]
[0 1 0 0 0 0 0 1 0 0 0 0 1 1]
[0 0 1 0 0 0 0 0 1 0 0 0 1 1]
[0 0 0 1 0 0 0 0 0 1 0 0 1 1]
[0 0 0 0 1 0 0 0 0 0 1 0 1 1]
[0 0 0 0 0 1 0 0 0 0 0 1 1 1]
limit on degree (length): 16
ortho basis:
1011111101000000
0010000010000000
1100000000000000

B_can_lab before row reduction:
0010000110000001
0001000110000010
0000100110000100
0000010110001000
0000000110110000
0000001111000000

B_can_lab after row reduction:
0010000110000001
0001000110000010
0000100110000100
0000010110001000
0000000110110000
0000001111000000
0000010010100001

word generated as sum over rows of ortho_basis starting at 2: 1100000000000000
gate: 0000000000111111
k_gate: 0000000000000011
nonzero_gate: 1100000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1100000000000000

combo: 0000000000000000

word: 0111111101000000

combo: 0000000000000001

word: 0101111111000000

combo: 0000000000000011

word: 1110000010000000

combo: 0000000000000010

temp: 0000000000000010

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1100000001000001
1100000100000010
1100001000000100
1100010000001000
1100100000010000
1101000000100000
rs list:
1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 
0 1 0 0 0 0 0 0 1 0 0 0 0 0 1 1 
0 0 1 0 0 0 0 0 0 1 0 0 0 0 1 1 
0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 1 
0 0 0 0 1 0 0 0 0 0 0 1 0 0 1 1 
0 0 0 0 0 1 0 0 0 0 0 0 1 0 1 1 
B_aug:
[1 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0]
[0 1 0 0 0 0 0 1 1 0 0 0 0 1 0 0]
[0 0 1 0 0 0 0 1 0 1 0 0 0 1 0 0]
[0 0 0 1 0 0 0 1 0 0 1 0 0 1 0 0]
[0 0 0 0 1 0 0 1 0 0 0 1 0 1 0 0]
[0 0 0 0 0 1 0 1 0 0 0 0 1 1 0 0]
[0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1]
m:
[1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1]
[0 1 0 0 0 0 0 0 1 0 0 0 0 0 1 1]
[0 0 1 0 0 0 0 0 0 1 0 0 0 0 1 1]
[0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 1]
[0 0 0 0 1 0 0 0 0 0 0 1 0 0 1 1]
[0 0 0 0 0 1 0 0 0 0 0 0 1 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), ( 8,14), ( 6,13), ( 6,15)(13,16), ( 5, 6)(12,13), ( 4, 5)(11,12), ( 3, 4)(10,11), ( 2, 3)( 9,10), (1,2)(7,9) ] )
Right transversal of automorphism group of B_aug:
[7, 1, 2, 3, 4, 5, 13, 0, 8, 9, 10, 11, 12, 6, 14, 15]
[7, 0, 2, 3, 4, 5, 13, 1, 6, 9, 10, 11, 12, 8, 14, 15]
[7, 0, 1, 3, 4, 5, 13, 2, 6, 8, 10, 11, 12, 9, 14, 15]
[7, 0, 1, 2, 4, 5, 13, 3, 6, 8, 9, 11, 12, 10, 14, 15]
[7, 0, 1, 2, 3, 5, 13, 4, 6, 8, 9, 10, 12, 11, 14, 15]
[7, 0, 1, 2, 3, 4, 13, 5, 6, 8, 9, 10, 11, 12, 14, 15]
[7, 0, 1, 2, 3, 4, 13, 14, 6, 8, 9, 10, 11, 15, 5, 12]
orbits:
1110000010000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 1 0 0 0 0 1 1]
[0 1 0 0 0 0 1 0 0 0 1 1]
[0 0 1 0 0 0 0 1 0 0 1 1]
[0 0 0 1 0 0 0 0 1 0 1 1]
[0 0 0 0 1 0 0 0 0 1 1 1]
limit on degree (length): 15
ortho basis:
000111110100000
000100001000000
101000000000000
110000000000000

B_can_lab before row reduction:
000100011000001
000010011000010
000001011000100
000000011011000
000000111100000

B_can_lab after row reduction:
000100011000001
000010011000010
000001011000100
000000011011000
000000111100000

word generated as sum over rows of ortho_basis starting at 2: 011000000000000
gate: 000000000011111
k_gate: 000000000000011
nonzero_gate: 111000000000000
radix_gate: 000000000011111

Starting main loop:
word: 011000000000000

combo: 000000000000000

word: 011111110100000

combo: 000000000000001

word: 011011111100000

combo: 000000000000011

word: 011100001000000

combo: 000000000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 1 0 0 0 0 1 1]
[0 1 0 0 0 0 1 0 0 0 1 1]
[0 0 1 0 0 0 0 1 0 0 1 1]
[0 0 0 1 0 0 0 0 1 0 1 1]
[0 0 0 0 1 0 0 0 0 1 1 1]
limit on degree (length): 16
ortho basis:
0000111110100000
0000100001000000
1001000000000000
1010000000000000
1100000000000000

B_can_lab before row reduction:
0000100011000001
0000010011000010
0000001011000100
0000000011011000
0000000111100000

B_can_lab after row reduction:
0000100011000001
0000010011000010
0000001011000100
0000000011011000
0000000111100000

word generated as sum over rows of ortho_basis starting at 2: 1111000000000000
gate: 0000000000011111
k_gate: 0000000000000011
nonzero_gate: 1111000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1111000000000000

combo: 0000000000000000

temp: 0000000000000000

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1111000000000000
0000100001100001
0000100011000010
0000100101000100
0000101001001000
rs list:
0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
1 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 
0 1 0 0 0 0 1 1 0 0 0 1 0 0 0 0 
0 0 1 0 0 0 1 0 1 0 0 1 0 0 0 0 
0 0 0 1 0 0 1 0 0 1 0 1 0 0 0 0 
B_aug:
[1 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0]
[0 1 0 0 0 0 1 1 0 0 0 1 0 0 0 0]
[0 0 1 0 0 0 1 0 1 0 0 1 0 0 0 0]
[0 0 0 1 0 0 1 0 0 1 0 1 0 0 0 0]
[0 0 0 0 1 0 1 0 0 0 1 1 0 0 0 0]
[0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1]
m:
[0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1]
[1 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0]
[0 1 0 0 0 0 1 1 0 0 0 1 0 0 0 0]
[0 0 1 0 0 0 1 0 1 0 0 1 0 0 0 0]
[0 0 0 1 0 0 1 0 0 1 0 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), ( 7,12), ( 5,11), ( 4, 7)(10,12), ( 3, 4)( 9,10), (2,3)(8,9), (1,2)(6,8) ] )
Right transversal of automorphism group of B_aug:
[4, 1, 2, 3, 0, 10, 6, 7, 8, 9, 5, 11, 12, 13, 14, 15]
[4, 0, 2, 3, 1, 10, 6, 5, 8, 9, 7, 11, 12, 13, 14, 15]
[4, 0, 1, 3, 2, 10, 6, 5, 7, 9, 8, 11, 12, 13, 14, 15]
[4, 0, 1, 2, 3, 10, 6, 5, 7, 8, 9, 11, 12, 13, 14, 15]
[4, 0, 1, 2, 6, 10, 3, 5, 7, 8, 11, 9, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111000000000000
word: 1111111110100000

combo: 0000000000000001

word: 1111011111100000

combo: 0000000000000011

word: 1111100001000000

combo: 0000000000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 0 0 0 1 1]
[0 1 0 0 0 1 0 0 1 1]
[0 0 1 0 0 0 1 0 1 1]
[0 0 0 1 0 0 0 1 1 1]
limit on degree (length): 13
ortho basis:
1001111010000
0001000100000
1010000000000
1100000000000

B_can_lab before row reduction:
0001001100001
0000101100010
0000001101100
0000011110000

B_can_lab after row reduction:
0001001100001
0000101100010
0000001101100
0000011110000
0000000111000

word generated as sum over rows of ortho_basis starting at 2: 0110000000000
gate: 0000000001111
k_gate: 0000000000011
nonzero_gate: 1110000000000
radix_gate: 0000000011111

Starting main loop:
word: 0110000000000

combo: 0000000000000

word: 1111111010000

combo: 0000000000001

temp: 0000000000001

orbit_checks[temp>>log2radix]= 0000000000000

passed if statements
temp basis:
0001000110001
0001001100010
1110101110100
1111111010000
rs list:
1 0 0 0 1 1 0 0 0 1 0 0 0 
0 1 0 0 0 1 1 0 0 1 0 0 0 
0 0 1 0 1 1 1 0 1 0 1 1 1 
0 0 0 0 1 0 1 1 1 1 1 1 1 
B_aug:
[1 0 0 0 1 1 0 0 0 1 0 0 0]
[0 1 0 0 0 1 1 0 0 1 0 0 0]
[0 0 1 0 0 1 0 1 0 1 0 0 0]
[0 0 0 1 0 1 0 0 1 1 0 0 0]
[0 0 0 0 1 0 1 1 1 1 1 1 1]
m:
[1 0 0 0 1 1 0 0 0 1 0 0 0]
[0 1 0 0 0 1 1 0 0 1 0 0 0]
[0 0 1 0 1 1 1 0 1 0 1 1 1]
[0 0 0 0 1 0 1 1 1 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (12,13), (11,12), (2,3)(7,8), (1,2)(5,7), ( 3,10)( 6, 8), ( 3, 8)( 6,10) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 5, 4, 3, 6, 7, 9, 8, 10, 11, 12]
[0, 1, 2, 8, 4, 9, 6, 7, 3, 5, 10, 11, 12]
[0, 1, 3, 2, 4, 5, 6, 8, 7, 9, 10, 11, 12]
[0, 1, 2, 9, 4, 8, 6, 7, 5, 3, 10, 11, 12]
[0, 1, 3, 7, 4, 9, 6, 8, 2, 5, 10, 11, 12]
[0, 2, 3, 1, 4, 5, 7, 8, 6, 9, 10, 11, 12]
[0, 2, 3, 6, 4, 9, 7, 8, 1, 5, 10, 11, 12]
[1, 2, 3, 0, 6, 5, 7, 8, 4, 9, 10, 11, 12]
[1, 2, 3, 4, 6, 9, 7, 8, 0, 5, 10, 11, 12]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
orbits:
1111111010000
1110111110000
word: 1110111110000

combo: 0000000000011

temp: 0000000000011

orbit_checks[temp>>log2radix]= 0000000001010

word: 0111000100000

combo: 0000000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 0 0 0 1 1]
[0 1 0 0 0 1 0 0 1 1]
[0 0 1 0 0 0 1 0 1 1]
[0 0 0 1 0 0 0 1 1 1]
limit on degree (length): 14
ortho basis:
10001111010000
00001000100000
10010000000000
10100000000000
11000000000000

B_can_lab before row reduction:
00001001100001
00000101100010
00000001101100
00000011110000

B_can_lab after row reduction:
00001001100001
00000101100010
00000001101100
00000011110000
00000000111000

word generated as sum over rows of ortho_basis starting at 2: 11110000000000
gate: 00000000001111
k_gate: 00000000000011
nonzero_gate: 11110000000000
radix_gate: 00000000011111

Starting main loop:
word: 11110000000000

combo: 00000000000000

temp: 00000000000000

orbit_checks[temp>>log2radix]= 00000000000000

passed if statements
temp basis:
00001000110001
00001001100010
00001010100100
00001100101000
rs list:
1 0 0 0 1 1 0 0 0 1 0 0 0 0 
0 1 0 0 0 1 1 0 0 1 0 0 0 0 
0 0 1 0 0 1 0 1 0 1 0 0 0 0 
0 0 0 1 0 1 0 0 1 1 0 0 0 0 
B_aug:
[1 0 0 0 1 1 0 0 0 1 0 0 0 0]
[0 1 0 0 0 1 1 0 0 1 0 0 0 0]
[0 0 1 0 0 1 0 1 0 1 0 0 0 0]
[0 0 0 1 0 1 0 0 1 1 0 0 0 0]
[0 0 0 0 0 0 0 0 0 0 1 1 1 1]
m:
[1 0 0 0 1 1 0 0 0 1 0 0 0 0]
[0 1 0 0 0 1 1 0 0 1 0 0 0 0]
[0 0 1 0 0 1 0 1 0 1 0 0 0 0]
[0 0 0 1 0 1 0 0 1 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (13,14), (12,13), (11,12), ( 6,10), ( 4, 6)( 9,10), (3,4)(8,9), (2,3)(7,8), (1,2)(5,7) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
orbits:
11110000000000
word: 01111111010000

combo: 00000000000001

word: 01110111110000

combo: 00000000000011

word: 11111000100000

combo: 00000000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 1 1 0 0 0 1 0 0 0]
[0 1 0 0 0 0 1 1 0 0 1 0 0 0]
[0 0 1 0 0 0 1 0 1 0 1 0 0 0]
[0 0 0 1 0 0 1 0 0 1 1 0 0 0]
[0 0 0 0 1 0 0 0 0 0 0 1 1 1]
limit on degree (length): 15
ortho basis:
101111000100000
001000001000000
010000010000000
010000100000000

B_can_lab before row reduction:
000001001100001
000000101100010
000000001101100
000000011110000
011110000000000

B_can_lab after row reduction:
000001001100001
000000101100010
000000001101100
000000011110000
011110000000000

word generated as sum over rows of ortho_basis starting at 4: 000000000000000
gate: 000000000011111
k_gate: 000000000001111
nonzero_gate: 100000000000000
radix_gate: 000000000011111

Starting main loop:
word: 000000000000000

combo: 000000000000000

word: 101111000100000

combo: 000000000000001

word: 100111001100000

combo: 000000000000011

word: 001000001000000

combo: 000000000000010

word: 011000011000000

combo: 000000000000110

word: 110111011100000

combo: 000000000000111

temp: 000000000000111

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
001000001100001
001001001000010
111101010100100
110111011100000
001100001001000
rs list:
1 0 0 0 0 1 1 0 0 0 0 0 1 0 0 
0 1 0 0 0 0 1 0 0 1 0 0 1 0 0 
0 0 1 0 0 1 0 1 0 1 0 1 1 1 1 
0 0 0 0 0 1 1 1 0 1 1 1 0 1 1 
0 0 0 1 0 0 1 0 0 0 0 1 1 0 0 
B_aug:
[1 0 0 0 0 1 1 0 0 0 0 0 1 0 0]
[0 1 0 0 0 0 1 0 0 1 0 0 1 0 0]
[0 0 1 0 0 0 1 0 0 0 1 0 1 0 0]
[0 0 0 1 0 0 1 0 0 0 0 1 1 0 0]
[0 0 0 0 1 0 0 1 1 0 0 0 0 1 0]
[0 0 0 0 0 1 1 1 0 1 1 1 0 1 1]
m:
[1 0 0 0 0 1 1 0 0 0 0 0 1 0 0]
[0 1 0 0 0 0 1 0 0 1 0 0 1 0 0]
[0 0 1 0 0 1 0 1 0 1 0 1 1 1 1]
[0 0 0 0 0 1 1 1 0 1 1 1 0 1 1]
[0 0 0 1 0 0 1 0 0 0 0 1 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 8,14), (5,9), ( 4, 7)(12,13), ( 4,12)( 7,13), ( 3, 4)(11,12), ( 2, 3)(10,11), ( 1, 2)( 6,10) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 7, 5, 6, 4, 13, 9, 10, 11, 12, 8, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
110111011100000
111111010100000
100111111100000
110111101100000
101111110100000
111111100100000
word: 111111010100000

combo: 000000000000101

temp: 000000000000101

orbit_checks[temp>>log2radix]= 1010101010100000

word: 010000010000000

combo: 000000000000100

word: 000000110000000

combo: 000000000001100

word: 101111110100000

combo: 000000000001101

temp: 000000000001101

orbit_checks[temp>>log2radix]= 1010101010100000

word: 100111111100000

combo: 000000000001111

temp: 000000000001111

orbit_checks[temp>>log2radix]= 1010101010100000

word: 001000111000000

combo: 000000000001110

word: 011000101000000

combo: 000000000001010

word: 110111101100000

combo: 000000000001011

temp: 000000000001011

orbit_checks[temp>>log2radix]= 1010101010100000

word: 111111100100000

combo: 000000000001001

temp: 000000000001001

orbit_checks[temp>>log2radix]= 1010101010100000

word: 010000100000000

combo: 000000000001000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 1 1 0 0 0 1 0 0 0]
[0 1 0 0 0 0 1 1 0 0 1 0 0 0]
[0 0 1 0 0 0 1 0 1 0 1 0 0 0]
[0 0 0 1 0 0 1 0 0 1 1 0 0 0]
[0 0 0 0 1 0 0 0 0 0 0 1 1 1]
limit on degree (length): 16
ortho basis:
1001111000100000
0001000001000000
0010000010000000
0010000100000000
1100000000000000

B_can_lab before row reduction:
0000001001100001
0000000101100010
0000000001101100
0000000011110000
0011110000000000

B_can_lab after row reduction:
0000001001100001
0000000101100010
0000000001101100
0000000011110000
0011110000000000

word generated as sum over rows of ortho_basis starting at 4: 1100000000000000
gate: 0000000000011111
k_gate: 0000000000001111
nonzero_gate: 1100000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1100000000000000

combo: 0000000000000000

word: 0101111000100000

combo: 0000000000000001

word: 0100111001100000

combo: 0000000000000011

word: 1101000001000000

combo: 0000000000000010

temp: 0000000000000010

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
0010000110010000
1100000000100001
1100001000000010
1100010000000100
1100100000001000
rs list:
0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0 
1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 
0 1 0 0 0 0 0 0 0 1 0 0 0 0 1 1 
0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 1 
0 0 0 1 0 0 0 0 0 0 0 1 0 0 1 1 
B_aug:
[1 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0]
[0 1 0 0 0 0 1 0 0 1 0 0 1 0 0 0]
[0 0 1 0 0 0 1 0 0 0 1 0 1 0 0 0]
[0 0 0 1 0 0 1 0 0 0 0 1 1 0 0 0]
[0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0]
[0 0 0 0 0 0 1 0 0 0 0 0 1 0 1 1]
m:
[0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0]
[1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1]
[0 1 0 0 0 0 0 0 0 1 0 0 0 0 1 1]
[0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 1]
[0 0 0 1 0 0 0 0 0 0 0 1 0 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), ( 9,14), (8,9), ( 7,13), (5,8), ( 4,12), ( 4,15)(12,16), ( 3, 4)(11,12), ( 2, 3)(10,11), ( 1, 2)( 6,10) ] )
Right transversal of automorphism group of B_aug:
[6, 1, 2, 3, 4, 12, 0, 7, 8, 9, 10, 11, 5, 13, 14, 15]
[6, 0, 2, 3, 4, 12, 1, 7, 8, 5, 10, 11, 9, 13, 14, 15]
[6, 0, 1, 3, 4, 12, 2, 7, 8, 5, 9, 11, 10, 13, 14, 15]
[6, 0, 1, 2, 4, 12, 3, 7, 8, 5, 9, 10, 11, 13, 14, 15]
[6, 0, 1, 2, 4, 12, 14, 7, 8, 5, 9, 10, 15, 13, 3, 11]
orbits:
1101000001000000
word: 1111000011000000

combo: 0000000000000110

word: 0110111011100000

combo: 0000000000000111

word: 0111111010100000

combo: 0000000000000101

word: 1110000010000000

combo: 0000000000000100

temp: 0000000000000100

orbit_checks[temp>>log2radix]= 0000000000000100

passed if statements
temp basis:
0001000001100001
0001001001000010
0001010001000100
0001100001001000
1100000100010000
rs list:
1 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 
0 1 0 0 0 0 1 0 0 1 0 0 1 0 0 0 
0 0 1 0 0 0 1 0 0 0 1 0 1 0 0 0 
0 0 0 1 0 0 1 0 0 0 0 1 1 0 0 0 
0 0 0 0 1 0 0 0 1 0 0 0 0 0 1 1 
B_aug:
[1 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0]
[0 1 0 0 0 0 1 0 0 1 0 0 1 0 0 0]
[0 0 1 0 0 0 1 0 0 0 1 0 1 0 0 0]
[0 0 0 1 0 0 1 0 0 0 0 1 1 0 0 0]
[0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0]
[0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1]
m:
[1 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0]
[0 1 0 0 0 0 1 0 0 1 0 0 1 0 0 0]
[0 0 1 0 0 0 1 0 0 0 1 0 1 0 0 0]
[0 0 0 1 0 0 1 0 0 0 0 1 1 0 0 0]
[0 0 0 0 1 0 0 0 1 0 0 0 0 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 7,13), ( 4, 7)(12,13), ( 3, 4)(11,12), ( 2, 3)(10,11), ( 1, 2)( 6,10), (15,16), ( 8,14)(15,16), ( 5, 9)(15,16), ( 5,15, 9,16) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 7, 5, 6, 4, 13, 9, 10, 11, 12, 8, 14, 15]
[0, 1, 2, 3, 7, 5, 6, 14, 13, 9, 10, 11, 12, 15, 4, 8]
orbits:
1110000010000000
1100000110000000
1110000100000000
word: 1100000110000000

combo: 0000000000001100

temp: 0000000000001100

orbit_checks[temp>>log2radix]= 0001000100010100

word: 0101111110100000

combo: 0000000000001101

word: 0100111111100000

combo: 0000000000001111

word: 1101000111000000

combo: 0000000000001110

word: 1111000101000000

combo: 0000000000001010

word: 0110111101100000

combo: 0000000000001011

word: 0111111100100000

combo: 0000000000001001

word: 1110000100000000

combo: 0000000000001000

temp: 0000000000001000

orbit_checks[temp>>log2radix]= 0001000100010100

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 0 0 0 1 1]
[0 1 0 0 0 1 0 0 1 1]
[0 0 1 0 0 0 1 0 1 1]
[0 0 0 1 0 0 0 1 1 1]
limit on degree (length): 15
ortho basis:
100001111010000
000001000100000
100010000000000
100100000000000
101000000000000
110000000000000

B_can_lab before row reduction:
000001001100001
000000101100010
000000001101100
000000011110000

B_can_lab after row reduction:
000001001100001
000000101100010
000000001101100
000000011110000
000000000111000

word generated as sum over rows of ortho_basis starting at 2: 011110000000000
gate: 000000000001111
k_gate: 000000000000011
nonzero_gate: 111110000000000
radix_gate: 000000000011111

Starting main loop:
word: 011110000000000

combo: 000000000000000

word: 111111111010000

combo: 000000000000001

word: 111110111110000

combo: 000000000000011

word: 011111000100000

combo: 000000000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 0 0 0 1 1]
[0 1 0 0 0 1 0 0 1 1]
[0 0 1 0 0 0 1 0 1 1]
[0 0 0 1 0 0 0 1 1 1]
limit on degree (length): 16
ortho basis:
1000001111010000
0000001000100000
1000010000000000
1000100000000000
1001000000000000
1010000000000000
1100000000000000

B_can_lab before row reduction:
0000001001100001
0000000101100010
0000000001101100
0000000011110000

B_can_lab after row reduction:
0000001001100001
0000000101100010
0000000001101100
0000000011110000
0000000000111000

word generated as sum over rows of ortho_basis starting at 2: 1111110000000000
gate: 0000000000001111
k_gate: 0000000000000011
nonzero_gate: 1111110000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1111110000000000

combo: 0000000000000000

word: 0111111111010000

combo: 0000000000000001

word: 0111110111110000

combo: 0000000000000011

word: 1111111000100000

combo: 0000000000000010

temp: 0000000000000010

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1111111000100000
0000001000110001
0000001001100010
0000001010100100
rs list:
0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1 
1 0 0 0 1 1 0 0 0 1 0 0 0 0 0 0 
0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 
0 0 1 0 0 1 0 1 0 1 0 0 0 0 0 0 
B_aug:
[1 0 0 0 1 1 0 0 0 1 0 0 0 0 0 0]
[0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0]
[0 0 1 0 0 1 0 1 0 1 0 0 0 0 0 0]
[0 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0]
[0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1]
m:
[0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1]
[1 0 0 0 1 1 0 0 0 1 0 0 0 0 0 0]
[0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0]
[0 0 1 0 0 1 0 1 0 1 0 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), (12,13), (11,12), ( 6,10), (4,9), ( 3, 6)( 8,10), (2,3)(7,8), (1,2)(5,7) ] )
Right transversal of automorphism group of B_aug:
[3, 1, 2, 0, 8, 5, 6, 7, 4, 9, 10, 11, 12, 13, 14, 15]
[3, 0, 2, 1, 8, 5, 4, 7, 6, 9, 10, 11, 12, 13, 14, 15]
[3, 0, 1, 2, 8, 5, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15]
[3, 0, 1, 5, 8, 2, 4, 6, 9, 7, 10, 11, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111111000100000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 0 0 1 1]
[0 1 0 0 1 0 1 1]
[0 0 1 0 0 1 1 1]
limit on degree (length): 11
ortho basis:
00011101000
00010010000
10100000000
11000000000

B_can_lab before row reduction:
00010110001
00000110110
00001111000

B_can_lab after row reduction:
00010110001
00000110110
00001111000

word generated as sum over rows of ortho_basis starting at 2: 01100000000
gate: 00000000111
k_gate: 00000000011
nonzero_gate: 11100000000
radix_gate: 00000011111

Starting main loop:
word: 01100000000

combo: 00000000000

word: 01111101000

combo: 00000000001

word: 01101111000

combo: 00000000011

word: 01110010000

combo: 00000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 0 0 1 1]
[0 1 0 0 1 0 1 1]
[0 0 1 0 0 1 1 1]
limit on degree (length): 12
ortho basis:
000011101000
000010010000
100100000000
101000000000
110000000000

B_can_lab before row reduction:
000010110001
000000110110
000001111000

B_can_lab after row reduction:
000010110001
000000110110
000001111000

word generated as sum over rows of ortho_basis starting at 2: 111100000000
gate: 000000000111
k_gate: 000000000011
nonzero_gate: 111100000000
radix_gate: 000000011111

Starting main loop:
word: 111100000000

combo: 000000000000

temp: 000000000000

orbit_checks[temp>>log2radix]= 000000000000

passed if statements
temp basis:
111100000000
000010011001
000010110010
rs list:
0 0 0 0 0 0 0 0 1 1 1 1 
1 0 0 1 1 0 0 1 0 0 0 0 
0 1 0 0 1 1 0 1 0 0 0 0 
B_aug:
[1 0 0 1 1 0 0 1 0 0 0 0]
[0 1 0 0 1 1 0 1 0 0 0 0]
[0 0 1 0 1 0 1 1 0 0 0 0]
[0 0 0 0 0 0 0 0 1 1 1 1]
m:
[0 0 0 0 0 0 0 0 1 1 1 1]
[1 0 0 1 1 0 0 1 0 0 0 0]
[0 1 0 0 1 1 0 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,12), (10,11), ( 9,10), (5,8), (3,7), (2,5)(6,8), (1,2)(4,6) ] )
Right transversal of automorphism group of B_aug:
[2, 1, 0, 6, 4, 5, 3, 7, 8, 9, 10, 11]
[2, 0, 1, 6, 4, 3, 5, 7, 8, 9, 10, 11]
[2, 0, 4, 6, 1, 3, 7, 5, 8, 9, 10, 11]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
orbits:
111100000000
word: 111111101000

combo: 000000000001

temp: 000000000001

orbit_checks[temp>>log2radix]= 000000000001

passed if statements
temp basis:
000010011001
111101011010
111111101000
rs list:
1 0 0 1 1 0 0 1 0 0 0 0 
0 1 0 1 1 0 1 0 1 1 1 1 
0 0 0 1 0 1 1 1 1 1 1 1 
B_aug:
[1 0 0 1 1 0 0 1 0 0 0 0]
[0 1 0 0 1 1 0 1 0 0 0 0]
[0 0 1 0 1 0 1 1 0 0 0 0]
[0 0 0 1 0 1 1 1 1 1 1 1]
m:
[1 0 0 1 1 0 0 1 0 0 0 0]
[0 1 0 1 1 0 1 0 1 1 1 1]
[0 0 0 1 0 1 1 1 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,12), (10,11), ( 9,10), (1,2)(4,6), (2,8)(5,6), (2,6)(5,8) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 4, 3, 2, 5, 7, 6, 8, 9, 10, 11]
[0, 1, 6, 3, 7, 5, 2, 4, 8, 9, 10, 11]
[0, 2, 1, 3, 4, 6, 5, 7, 8, 9, 10, 11]
[0, 1, 7, 3, 6, 5, 4, 2, 8, 9, 10, 11]
[0, 2, 5, 3, 7, 6, 1, 4, 8, 9, 10, 11]
[1, 2, 0, 5, 4, 6, 3, 7, 8, 9, 10, 11]
[1, 2, 3, 5, 7, 6, 0, 4, 8, 9, 10, 11]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
orbits:
111111101000
111101111000
word: 111101111000

combo: 000000000011

temp: 000000000011

orbit_checks[temp>>log2radix]= 000000001011

word: 111110010000

combo: 000000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 0 0 1 1]
[0 1 0 0 1 0 1 1]
[0 0 1 0 0 1 1 1]
limit on degree (length): 13
ortho basis:
0000011101000
0000010010000
1000100000000
1001000000000
1010000000000
1100000000000

B_can_lab before row reduction:
0000010110001
0000000110110
0000001111000

B_can_lab after row reduction:
0000010110001
0000000110110
0000001111000

word generated as sum over rows of ortho_basis starting at 2: 0111100000000
gate: 0000000000111
k_gate: 0000000000011
nonzero_gate: 1111100000000
radix_gate: 0000000011111

Starting main loop:
word: 0111100000000

combo: 0000000000000

word: 0111111101000

combo: 0000000000001

word: 0111101111000

combo: 0000000000011

word: 0111110010000

combo: 0000000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 0 0 1 1]
[0 1 0 0 1 0 1 1]
[0 0 1 0 0 1 1 1]
limit on degree (length): 14
ortho basis:
00000011101000
00000010010000
10000100000000
10001000000000
10010000000000
10100000000000
11000000000000

B_can_lab before row reduction:
00000010110001
00000000110110
00000001111000

B_can_lab after row reduction:
00000010110001
00000000110110
00000001111000

word generated as sum over rows of ortho_basis starting at 2: 11111100000000
gate: 00000000000111
k_gate: 00000000000011
nonzero_gate: 11111100000000
radix_gate: 00000000011111

Starting main loop:
word: 11111100000000

combo: 00000000000000

word: 11111111101000

combo: 00000000000001

word: 11111101111000

combo: 00000000000011

word: 11111110010000

combo: 00000000000010

temp: 00000000000010

orbit_checks[temp>>log2radix]= 00000000000000

passed if statements
temp basis:
11111110010000
00000010011001
00000010110010
rs list:
0 0 0 0 1 0 0 1 1 1 1 1 1 1 
1 0 0 1 1 0 0 1 0 0 0 0 0 0 
0 1 0 0 1 1 0 1 0 0 0 0 0 0 
B_aug:
[1 0 0 1 1 0 0 1 0 0 0 0 0 0]
[0 1 0 0 1 1 0 1 0 0 0 0 0 0]
[0 0 1 0 1 0 1 1 0 0 0 0 0 0]
[0 0 0 0 1 0 0 1 1 1 1 1 1 1]
m:
[0 0 0 0 1 0 0 1 1 1 1 1 1 1]
[1 0 0 1 1 0 0 1 0 0 0 0 0 0]
[0 1 0 0 1 1 0 1 0 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (13,14), (12,13), (11,12), (10,11), ( 9,10), (5,8), (3,7), (2,5)(6,8), (1,2)(4,6) ] )
Right transversal of automorphism group of B_aug:
[2, 1, 0, 6, 4, 5, 3, 7, 8, 9, 10, 11, 12, 13]
[2, 0, 1, 6, 4, 3, 5, 7, 8, 9, 10, 11, 12, 13]
[2, 0, 4, 6, 1, 3, 7, 5, 8, 9, 10, 11, 12, 13]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
orbits:
11111110010000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 0 0 1 1]
[0 1 0 0 1 0 1 1]
[0 0 1 0 0 1 1 1]
limit on degree (length): 15
ortho basis:
000000011101000
000000010010000
100000100000000
100001000000000
100010000000000
100100000000000
101000000000000
110000000000000

B_can_lab before row reduction:
000000010110001
000000000110110
000000001111000

B_can_lab after row reduction:
000000010110001
000000000110110
000000001111000

word generated as sum over rows of ortho_basis starting at 2: 011111100000000
gate: 000000000000111
k_gate: 000000000000011
nonzero_gate: 111111100000000
radix_gate: 000000000011111

Starting main loop:
word: 011111100000000

combo: 000000000000000

word: 011111111101000

combo: 000000000000001

word: 011111101111000

combo: 000000000000011

word: 011111110010000

combo: 000000000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 0 0 1 1]
[0 1 0 0 1 0 1 1]
[0 0 1 0 0 1 1 1]
limit on degree (length): 16
ortho basis:
0000000011101000
0000000010010000
1000000100000000
1000001000000000
1000010000000000
1000100000000000
1001000000000000
1010000000000000
1100000000000000

B_can_lab before row reduction:
0000000010110001
0000000000110110
0000000001111000

B_can_lab after row reduction:
0000000010110001
0000000000110110
0000000001111000

word generated as sum over rows of ortho_basis starting at 2: 1111111100000000
gate: 0000000000000111
k_gate: 0000000000000011
nonzero_gate: 1111111100000000
radix_gate: 0000000000011111

Starting main loop:
word: 1111111100000000

combo: 0000000000000000

temp: 0000000000000000

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1111111100000000
0000000010011001
0000000010110010
rs list:
0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
1 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 
0 1 0 0 1 1 0 1 0 0 0 0 0 0 0 0 
B_aug:
[1 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0]
[0 1 0 0 1 1 0 1 0 0 0 0 0 0 0 0]
[0 0 1 0 1 0 1 1 0 0 0 0 0 0 0 0]
[0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1]
m:
[0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1]
[1 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0]
[0 1 0 0 1 1 0 1 0 0 0 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), (12,13), (11,12), (10,11), ( 9,10), (5,8), (3,7), (2,5)(6,8), (1,2)(4,6) ] )
Right transversal of automorphism group of B_aug:
[2, 1, 0, 6, 4, 5, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 0, 1, 6, 4, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 0, 4, 6, 1, 3, 7, 5, 8, 9, 10, 11, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111111100000000
word: 1111111111101000

combo: 0000000000000001

temp: 0000000000000001

orbit_checks[temp>>log2radix]= 0000000000000001

passed if statements
temp basis:
0000000010011001
1111111101011010
1111111111101000
rs list:
1 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 
0 1 0 1 1 0 1 0 1 1 1 1 1 1 1 1 
0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 
B_aug:
[1 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0]
[0 1 0 0 1 1 0 1 0 0 0 0 0 0 0 0]
[0 0 1 0 1 0 1 1 0 0 0 0 0 0 0 0]
[0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1]
m:
[1 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0]
[0 1 0 1 1 0 1 0 1 1 1 1 1 1 1 1]
[0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), (12,13), (11,12), (10,11), ( 9,10), (1,2)(4,6), (2,8)(5,6), (2,6)(5,8) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 4, 3, 2, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15]
[0, 1, 6, 3, 7, 5, 2, 4, 8, 9, 10, 11, 12, 13, 14, 15]
[0, 2, 1, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[0, 1, 7, 3, 6, 5, 4, 2, 8, 9, 10, 11, 12, 13, 14, 15]
[0, 2, 5, 3, 7, 6, 1, 4, 8, 9, 10, 11, 12, 13, 14, 15]
[1, 2, 0, 5, 4, 6, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[1, 2, 3, 5, 7, 6, 0, 4, 8, 9, 10, 11, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111111111101000
1111111101111000
word: 1111111101111000

combo: 0000000000000011

temp: 0000000000000011

orbit_checks[temp>>log2radix]= 0000000000001011

word: 1111111110010000

combo: 0000000000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 0 1 1]
[0 1 0 1 1 1]
limit on degree (length): 9
ortho basis:
100110100
000101000
101000000
110000000

B_can_lab before row reduction:
000011011
000111100

B_can_lab after row reduction:
000011011
000111100

word generated as sum over rows of ortho_basis starting at 2: 011000000
gate: 000000011
k_gate: 000000011
nonzero_gate: 111000000
radix_gate: 000011111

Starting main loop:
word: 011000000

combo: 000000000

word: 111110100

combo: 000000001

word: 111011100

combo: 000000011

word: 011101000

combo: 000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 0 1 1]
[0 1 0 1 1 1]
limit on degree (length): 10
ortho basis:
1000110100
0000101000
1001000000
1010000000
1100000000

B_can_lab before row reduction:
0000011011
0000111100

B_can_lab after row reduction:
0000011011
0000111100

word generated as sum over rows of ortho_basis starting at 2: 1111000000
gate: 0000000011
k_gate: 0000000011
nonzero_gate: 1111000000
radix_gate: 0000011111

Starting main loop:
word: 1111000000

combo: 0000000000

temp: 0000000000

orbit_checks[temp>>log2radix]= 0000000000

passed if statements
temp basis:
1111000000
0000101101
rs list:
0 0 0 0 0 0 1 1 1 1 
1 0 1 1 0 1 0 0 0 0 
B_aug:
[1 0 1 1 0 1 0 0 0 0]
[0 1 0 1 1 1 0 0 0 0]
[0 0 0 0 0 0 1 1 1 1]
m:
[0 0 0 0 0 0 1 1 1 1]
[1 0 1 1 0 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (4,6), (2,5), (1,3), (1,4)(3,6), (8,9), ( 8,10), ( 7, 8,10) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 4, 3, 2, 5, 6, 7, 8, 9]
[1, 3, 4, 0, 5, 2, 6, 7, 8, 9]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
orbits:
1111000000
word: 0111110100

combo: 0000000001

word: 0111011100

combo: 0000000011

word: 1111101000

combo: 0000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 0 1 1]
[0 1 0 1 1 1]
limit on degree (length): 11
ortho basis:
10000110100
00000101000
10001000000
10010000000
10100000000
11000000000

B_can_lab before row reduction:
00000011011
00000111100

B_can_lab after row reduction:
00000011011
00000111100

word generated as sum over rows of ortho_basis starting at 2: 01111000000
gate: 00000000011
k_gate: 00000000011
nonzero_gate: 11111000000
radix_gate: 00000011111

Starting main loop:
word: 01111000000

combo: 00000000000

word: 11111110100

combo: 00000000001

temp: 00000000001

orbit_checks[temp>>log2radix]= 00000000000

passed if statements
temp basis:
11111011001
11111110100
rs list:
1 0 0 1 1 0 1 1 1 1 1 
0 0 1 0 1 1 1 1 1 1 1 
B_aug:
[1 0 1 1 0 1 0 0 0 0 0]
[0 1 0 1 1 1 0 0 0 0 0]
[0 0 1 0 1 1 1 1 1 1 1]
m:
[1 0 0 1 1 0 1 1 1 1 1]
[0 0 1 0 1 1 1 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (10,11), ( 9,10), (8,9), (7,8), (1,6)(3,4), (1,3)(4,6) ] )
Right transversal of automorphism group of B_aug:
[0, 3, 2, 1, 5, 4, 6, 7, 8, 9, 10]
[0, 4, 2, 5, 1, 3, 6, 7, 8, 9, 10]
[1, 0, 4, 3, 2, 5, 6, 7, 8, 9, 10]
[0, 5, 2, 4, 3, 1, 6, 7, 8, 9, 10]
[1, 2, 4, 5, 0, 3, 6, 7, 8, 9, 10]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
orbits:
11111110100
11111011100
word: 11111011100

combo: 00000000011

temp: 00000000011

orbit_checks[temp>>log2radix]= 00000001010

word: 01111101000

combo: 00000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 0 1 1]
[0 1 0 1 1 1]
limit on degree (length): 12
ortho basis:
100000110100
000000101000
100001000000
100010000000
100100000000
101000000000
110000000000

B_can_lab before row reduction:
000000011011
000000111100

B_can_lab after row reduction:
000000011011
000000111100

word generated as sum over rows of ortho_basis starting at 2: 111111000000
gate: 000000000011
k_gate: 000000000011
nonzero_gate: 111111000000
radix_gate: 000000011111

Starting main loop:
word: 111111000000

combo: 000000000000

word: 011111110100

combo: 000000000001

word: 011111011100

combo: 000000000011

word: 111111101000

combo: 000000000010

temp: 000000000010

orbit_checks[temp>>log2radix]= 000000000000

passed if statements
temp basis:
111111101000
000000101101
rs list:
0 0 0 1 0 1 1 1 1 1 1 1 
1 0 1 1 0 1 0 0 0 0 0 0 
B_aug:
[1 0 1 1 0 1 0 0 0 0 0 0]
[0 1 0 1 1 1 0 0 0 0 0 0]
[0 0 0 1 0 1 1 1 1 1 1 1]
m:
[0 0 0 1 0 1 1 1 1 1 1 1]
[1 0 1 1 0 1 0 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,12), (10,11), ( 9,10), (8,9), (7,8), (4,6), (2,5), (1,3), (1,4)(3,6) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 4, 3, 2, 5, 6, 7, 8, 9, 10, 11]
[1, 3, 4, 0, 5, 2, 6, 7, 8, 9, 10, 11]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
orbits:
111111101000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 0 1 1]
[0 1 0 1 1 1]
limit on degree (length): 13
ortho basis:
1000000110100
0000000101000
1000001000000
1000010000000
1000100000000
1001000000000
1010000000000
1100000000000

B_can_lab before row reduction:
0000000011011
0000000111100

B_can_lab after row reduction:
0000000011011
0000000111100

word generated as sum over rows of ortho_basis starting at 2: 0111111000000
gate: 0000000000011
k_gate: 0000000000011
nonzero_gate: 1111111000000
radix_gate: 0000000011111

Starting main loop:
word: 0111111000000

combo: 0000000000000

word: 1111111110100

combo: 0000000000001

word: 1111111011100

combo: 0000000000011

word: 0111111101000

combo: 0000000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 0 1 1]
[0 1 0 1 1 1]
limit on degree (length): 14
ortho basis:
10000000110100
00000000101000
10000001000000
10000010000000
10000100000000
10001000000000
10010000000000
10100000000000
11000000000000

B_can_lab before row reduction:
00000000011011
00000000111100

B_can_lab after row reduction:
00000000011011
00000000111100

word generated as sum over rows of ortho_basis starting at 2: 11111111000000
gate: 00000000000011
k_gate: 00000000000011
nonzero_gate: 11111111000000
radix_gate: 00000000011111

Starting main loop:
word: 11111111000000

combo: 00000000000000

temp: 00000000000000

orbit_checks[temp>>log2radix]= 00000000000000

passed if statements
temp basis:
11111111000000
00000000101101
rs list:
0 0 0 0 0 0 1 1 1 1 1 1 1 1 
1 0 1 1 0 1 0 0 0 0 0 0 0 0 
B_aug:
[1 0 1 1 0 1 0 0 0 0 0 0 0 0]
[0 1 0 1 1 1 0 0 0 0 0 0 0 0]
[0 0 0 0 0 0 1 1 1 1 1 1 1 1]
m:
[0 0 0 0 0 0 1 1 1 1 1 1 1 1]
[1 0 1 1 0 1 0 0 0 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (8,9), ( 8,10), ( 8,11)( 9,10), ( 8,12)( 9,11), ( 8,13)( 9,12)(10,11), ( 8,14)( 9,13)(10,12), ( 7, 8,14)( 9,13)(10,12), ( 4, 6)( 8,14)( 9,13)(10,12), ( 2, 5)( 8,14)( 9,13)(10,12), ( 1, 3)( 8,14)( 9,13)(10,12), ( 1, 4)( 3, 6)( 8,14)( 9,13)(10,12) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 4, 3, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13]
[1, 3, 4, 0, 5, 2, 6, 7, 8, 9, 10, 11, 12, 13]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
orbits:
11111111000000
word: 01111111110100

combo: 00000000000001

word: 01111111011100

combo: 00000000000011

word: 11111111101000

combo: 00000000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 0 1 1]
[0 1 0 1 1 1]
limit on degree (length): 15
ortho basis:
100000000110100
000000000101000
100000001000000
100000010000000
100000100000000
100001000000000
100010000000000
100100000000000
101000000000000
110000000000000

B_can_lab before row reduction:
000000000011011
000000000111100

B_can_lab after row reduction:
000000000011011
000000000111100

word generated as sum over rows of ortho_basis starting at 2: 011111111000000
gate: 000000000000011
k_gate: 000000000000011
nonzero_gate: 111111111000000
radix_gate: 000000000011111

Starting main loop:
word: 011111111000000

combo: 000000000000000

word: 111111111110100

combo: 000000000000001

temp: 000000000000001

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
111111111011001
111111111110100
rs list:
1 0 0 1 1 0 1 1 1 1 1 1 1 1 1 
0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 
B_aug:
[1 0 1 1 0 1 0 0 0 0 0 0 0 0 0]
[0 1 0 1 1 1 0 0 0 0 0 0 0 0 0]
[0 0 1 0 1 1 1 1 1 1 1 1 1 1 1]
m:
[1 0 0 1 1 0 1 1 1 1 1 1 1 1 1]
[0 0 1 0 1 1 1 1 1 1 1 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (14,15), (13,14), (12,13), (11,12), (10,11), ( 9,10), (8,9), (7,8), (1,6)(3,4), (1,3)(4,6) ] )
Right transversal of automorphism group of B_aug:
[0, 3, 2, 1, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14]
[0, 4, 2, 5, 1, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14]
[1, 0, 4, 3, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
[0, 5, 2, 4, 3, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14]
[1, 2, 4, 5, 0, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
111111111110100
111111111011100
word: 111111111011100

combo: 000000000000011

temp: 000000000000011

orbit_checks[temp>>log2radix]= 000000000001010

word: 011111111101000

combo: 000000000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 0 1 1]
[0 1 0 1 1 1]
limit on degree (length): 16
ortho basis:
1000000000110100
0000000000101000
1000000001000000
1000000010000000
1000000100000000
1000001000000000
1000010000000000
1000100000000000
1001000000000000
1010000000000000
1100000000000000

B_can_lab before row reduction:
0000000000011011
0000000000111100

B_can_lab after row reduction:
0000000000011011
0000000000111100

word generated as sum over rows of ortho_basis starting at 2: 1111111111000000
gate: 0000000000000011
k_gate: 0000000000000011
nonzero_gate: 1111111111000000
radix_gate: 0000000000011111

Starting main loop:
word: 1111111111000000

combo: 0000000000000000

word: 0111111111110100

combo: 0000000000000001

word: 0111111111011100

combo: 0000000000000011

word: 1111111111101000

combo: 0000000000000010

temp: 0000000000000010

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1111111111101000
0000000000101101
rs list:
0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 
1 0 1 1 0 1 0 0 0 0 0 0 0 0 0 0 
B_aug:
[1 0 1 1 0 1 0 0 0 0 0 0 0 0 0 0]
[0 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0]
[0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1]
m:
[0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1]
[1 0 1 1 0 1 0 0 0 0 0 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), (12,13), (11,12), (10,11), ( 9,10), (8,9), (7,8), (4,6), (2,5), (1,3), (1,4)(3,6) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 4, 3, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[1, 3, 4, 0, 5, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111111111101000
exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 7
ortho basis:
0001010
0001100
1010000
1100000

B_can_lab before row reduction:
0001111

B_can_lab after row reduction:
0001111
101011001000011

word generated as sum over rows of ortho_basis starting at 2: 0110000
gate: 0000001
k_gate: 0000011
nonzero_gate: 1110000
radix_gate: 0011111

Starting main loop:
word: 0110000

combo: 0000000

word: 0111010

combo: 0000001

word: 0110110

combo: 0000011

word: 0111100

combo: 0000010

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 8
ortho basis:
00001010
00001100
10010000
10100000
11000000

B_can_lab before row reduction:
00001111

B_can_lab after row reduction:
00001111
101011001000011

word generated as sum over rows of ortho_basis starting at 2: 11110000
gate: 00000001
k_gate: 00000011
nonzero_gate: 11110000
radix_gate: 00011111

Starting main loop:
word: 11110000

combo: 00000000

temp: 00000000

orbit_checks[temp>>log2radix]= 00000000

passed if statements
temp basis:
00001111
rs list:
1 1 1 1 0 0 0 0 
B_aug:
[1 1 1 1 0 0 0 0]
[0 0 0 0 1 1 1 1]
m:
[1 1 1 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (7,8), (6,7), (5,6), (3,4), (2,3), (1,2) ] )
Right transversal of automorphism group of B_aug:
[4, 5, 6, 7, 0, 1, 2, 3]
[0, 1, 2, 3, 4, 5, 6, 7]
orbits:
11110000
word: 11111010

combo: 00000001

word: 11110110

combo: 00000011

word: 11111100

combo: 00000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 1 1 0 0 0]
[0 1 0 0 0 1 1 1]
limit on degree (length): 9
ortho basis:
001000100
001001000
010010000
010100000

B_can_lab before row reduction:
011100001
000011110

B_can_lab after row reduction:
011100001
000011110

word generated as sum over rows of ortho_basis starting at 4: 000000000
gate: 000000011
k_gate: 000001111
nonzero_gate: 100000000
radix_gate: 000011111

Starting main loop:
word: 000000000

combo: 000000000

word: 001000100

combo: 000000001

word: 000001100

combo: 000000011

word: 001001000

combo: 000000010

word: 011011000

combo: 000000110

word: 010011100

combo: 000000111

word: 011010100

combo: 000000101

word: 010010000

combo: 000000100

word: 000110000

combo: 000001100

word: 001110100

combo: 000001101

word: 000111100

combo: 000001111

word: 001111000

combo: 000001110

word: 011101000

combo: 000001010

word: 010101100

combo: 000001011

word: 011100100

combo: 000001001

word: 010100000

combo: 000001000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 1 1 0 0 0]
[0 1 0 0 0 1 1 1]
limit on degree (length): 10
ortho basis:
0001000100
0001001000
0010010000
0010100000
1100000000

B_can_lab before row reduction:
0011100001
0000011110

B_can_lab after row reduction:
0011100001
0000011110

word generated as sum over rows of ortho_basis starting at 4: 1100000000
gate: 0000000011
k_gate: 0000001111
nonzero_gate: 1100000000
radix_gate: 0000011111

Starting main loop:
word: 1100000000

combo: 0000000000

word: 1101000100

combo: 0000000001

temp: 0000000001

orbit_checks[temp>>log2radix]= 0000000000

passed if statements
temp basis:
0010110010
1100001001
rs list:
0 1 0 0 1 1 0 1 0 0 
1 0 0 1 0 0 0 0 1 1 
B_aug:
[1 0 1 1 0 0 1 0 0 0]
[0 1 0 0 1 1 0 1 0 0]
[0 0 1 0 0 0 1 0 1 1]
m:
[0 1 0 0 1 1 0 1 0 0]
[1 0 0 1 0 0 0 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,10), ( 3, 7)( 9,10), ( 1, 4)( 9,10), ( 1, 9, 4,10), ( 5, 6)( 9,10), ( 5, 8)( 9,10), ( 2, 5, 8)( 9,10) ] )
Right transversal of automorphism group of B_aug:
[2, 1, 0, 6, 4, 5, 3, 7, 8, 9]
[2, 1, 8, 6, 4, 5, 9, 7, 0, 3]
orbits:
1101000100
1100001100
1101001000
1110010000
1100110000
1110100000
word: 1100001100

combo: 0000000011

temp: 0000000011

orbit_checks[temp>>log2radix]= 1000100011110

word: 1101001000

combo: 0000000010

temp: 0000000010

orbit_checks[temp>>log2radix]= 1000100011110

word: 1111011000

combo: 0000000110

word: 1110011100

combo: 0000000111

word: 1111010100

combo: 0000000101

word: 1110010000

combo: 0000000100

temp: 0000000100

orbit_checks[temp>>log2radix]= 1000100011110

word: 1100110000

combo: 0000001100

temp: 0000001100

orbit_checks[temp>>log2radix]= 1000100011110

word: 1101110100

combo: 0000001101

word: 1100111100

combo: 0000001111

word: 1101111000

combo: 0000001110

word: 1111101000

combo: 0000001010

word: 1110101100

combo: 0000001011

word: 1111100100

combo: 0000001001

word: 1110100000

combo: 0000001000

temp: 0000001000

orbit_checks[temp>>log2radix]= 1000100011110

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 0 0 0 0 1 1]
[0 1 0 0 1 1 0 1 0 0]
[0 0 1 0 0 0 1 0 1 1]
limit on degree (length): 11
ortho basis:
11010001000
00100010000
00100100000
01001000000

B_can_lab before row reduction:
00110110000
00000001111
01111000000

B_can_lab after row reduction:
00000001111
00110110000
01111000000

word generated as sum over rows of ortho_basis starting at 4: 00000000000
gate: 00000000111
k_gate: 00000001111
nonzero_gate: 10000000000
radix_gate: 00000011111

Starting main loop:
word: 00000000000

combo: 00000000000

word: 11010001000

combo: 00000000001

temp: 00000000001

orbit_checks[temp>>log2radix]= 00000000000

passed if statements
temp basis:
00100110010
10011000001
01011000100
rs list:
0 1 0 0 1 1 0 0 1 0 0 
1 0 0 0 0 0 1 1 0 0 1 
0 0 1 0 0 0 1 1 0 1 0 
B_aug:
[1 0 0 1 0 0 1 0 0 1 0]
[0 1 0 0 1 1 0 0 1 0 0]
[0 0 1 0 0 0 1 1 0 1 0]
[0 0 0 1 0 0 0 1 0 1 1]
m:
[0 1 0 0 1 1 0 0 1 0 0]
[1 0 0 0 0 0 1 1 0 0 1]
[0 0 1 0 0 0 1 1 0 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (6,9), (5,6), (2,5), ( 1, 3)(10,11), ( 3,10)( 7, 8), ( 3, 8)( 7,10) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 7, 4, 5, 6, 3, 8, 10, 9]
[0, 1, 2, 9, 4, 5, 6, 10, 8, 3, 7]
[0, 1, 3, 2, 4, 5, 10, 7, 8, 9, 6]
[0, 1, 2, 10, 4, 5, 6, 9, 8, 7, 3]
orbits:
11010001000
10011001000
word: 11110011000

combo: 00000000011

word: 00100010000

combo: 00000000010

word: 00000110000

combo: 00000000110

word: 11010111000

combo: 00000000111

word: 11110101000

combo: 00000000101

word: 00100100000

combo: 00000000100

word: 01101100000

combo: 00000001100

word: 10111101000

combo: 00000001101

word: 10011111000

combo: 00000001111

word: 01001110000

combo: 00000001110

word: 01101010000

combo: 00000001010

word: 10111011000

combo: 00000001011

word: 10011001000

combo: 00000001001

temp: 00000001001

orbit_checks[temp>>log2radix]= 01000000010

word: 01001000000

combo: 00000001000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 1 1 0 0 1]
[0 1 0 0 1 1 0 0 1 0 0]
[0 0 1 0 0 0 1 1 0 1 0]
[0 0 0 1 0 0 0 1 0 1 1]
limit on degree (length): 12
ortho basis:
000100010000
000100100000
111001000000

B_can_lab before row reduction:
010101010000
000000001111
001101100000
011110000000

B_can_lab after row reduction:
000000001111
010101010000
001101100000
011110000000
000000111000

word generated as sum over rows of ortho_basis starting at 3: 000000000000
gate: 000000001111
k_gate: 000000000111
nonzero_gate: 100000000000
radix_gate: 000000011111

Starting main loop:
word: 000000000000

combo: 000000000000

word: 000100010000

combo: 000000000001

word: 000000110000

combo: 000000000011

word: 000100100000

combo: 000000000010

word: 111101100000

combo: 000000000110

word: 111001110000

combo: 000000000111

word: 111101010000

combo: 000000000101

word: 111001000000

combo: 000000000100

temp: 000000000100

orbit_checks[temp>>log2radix]= 000000000000

passed if statements
temp basis:
000100110010
101010000001
110010000100
011010001000
rs list:
0 1 0 0 1 1 0 0 1 0 0 0 
1 0 0 0 0 0 0 1 0 1 0 1 
0 0 1 0 0 0 0 1 0 0 1 1 
0 0 0 1 0 0 0 1 0 1 1 0 
B_aug:
[1 0 0 0 0 0 1 1 0 0 1 0]
[0 1 0 0 1 1 0 0 1 0 0 0]
[0 0 1 0 0 0 1 1 0 1 0 0]
[0 0 0 1 0 0 0 1 0 1 1 0]
[0 0 0 0 0 0 1 0 0 1 1 1]
m:
[0 1 0 0 1 1 0 0 1 0 0 0]
[1 0 0 0 0 0 0 1 0 1 0 1]
[0 0 1 0 0 0 0 1 0 0 1 1]
[0 0 0 1 0 0 0 1 0 1 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (6,9), (5,6), ( 3, 4)(10,12), (2,5), ( 1, 3)(10,11), ( 4,11)( 8,10) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 5, 9, 7, 8, 6, 11, 10]
[0, 1, 2, 3, 4, 5, 10, 7, 8, 11, 6, 9]
[0, 1, 2, 6, 4, 5, 3, 11, 8, 9, 10, 7]
[0, 1, 2, 3, 4, 5, 11, 7, 8, 10, 9, 6]
orbits:
111001000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 0 1 0 1 0 1]
[0 1 0 0 0 1 1 0 1 0 0 0]
[0 0 1 0 0 0 0 1 0 0 1 1]
[0 0 0 1 0 0 0 1 0 1 1 0]
[0 0 0 0 1 0 0 0 0 1 1 1]
limit on degree (length): 13
ortho basis:
0000100100000
0000101000000

B_can_lab before row reduction:
0110010010000
0000000001111
0101010100000
0011011000000
0111100000000

B_can_lab after row reduction:
0000000001111
0110010010000
0101010100000
0011011000000
0111100000000

word generated as sum over rows of ortho_basis starting at 2: 0000000000000
gate: 0000000011111
k_gate: 0000000000011
nonzero_gate: 1000000000000
radix_gate: 0000000011111

Starting main loop:
word: 0000000000000

combo: 0000000000000

word: 0000100100000

combo: 0000000000001

word: 0000001100000

combo: 0000000000011

word: 0000101000000

combo: 0000000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 0 1 0 1 0 1]
[0 1 0 0 0 1 1 0 1 0 0 0]
[0 0 1 0 0 0 0 1 0 0 1 1]
[0 0 0 1 0 0 0 1 0 1 1 0]
[0 0 0 0 1 0 0 0 0 1 1 1]
limit on degree (length): 14
ortho basis:
00000100100000
00000101000000
11000000000000

B_can_lab before row reduction:
00110010010000
00000000001111
00101010100000
00011011000000
00111100000000

B_can_lab after row reduction:
00000000001111
00110010010000
00101010100000
00011011000000
00111100000000

word generated as sum over rows of ortho_basis starting at 2: 11000000000000
gate: 00000000011111
k_gate: 00000000000011
nonzero_gate: 11000000000000
radix_gate: 00000000011111

Starting main loop:
word: 11000000000000

combo: 00000000000000

word: 11000100100000

combo: 00000000000001

temp: 00000000000001

orbit_checks[temp>>log2radix]= 00000000000000

passed if statements
temp basis:
00101010000001
00110010000100
00011010001000
00111000010000
11000001000010
rs list:
1 0 0 0 0 0 0 1 0 1 0 1 0 0 
0 0 1 0 0 0 0 1 0 0 1 1 0 0 
0 0 0 1 0 0 0 1 0 1 1 0 0 0 
0 0 0 0 1 0 0 0 0 1 1 1 0 0 
0 1 0 0 0 0 1 0 0 0 0 0 1 1 
B_aug:
[1 0 0 0 0 0 0 1 0 1 0 1 0 0]
[0 1 0 0 0 1 1 0 1 0 0 0 0 0]
[0 0 1 0 0 0 0 1 0 0 1 1 0 0]
[0 0 0 1 0 0 0 1 0 1 1 0 0 0]
[0 0 0 0 1 0 0 0 0 1 1 1 0 0]
[0 0 0 0 0 1 0 0 1 0 0 0 1 1]
m:
[1 0 0 0 0 0 0 1 0 1 0 1 0 0]
[0 0 1 0 0 0 0 1 0 0 1 1 0 0]
[0 0 0 1 0 0 0 1 0 1 1 0 0 0]
[0 0 0 0 1 0 0 0 0 1 1 1 0 0]
[0 1 0 0 0 0 1 0 0 0 0 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 3, 4)( 5,11), ( 3, 5)( 4,11), ( 3, 5,12)( 4,11,10), ( 3, 5,10, 8)( 4,12), ( 1, 3, 5,11,10, 8)( 4,12), ( 3, 5,10, 8)( 4,12)(13,14), ( 3, 5,10, 8)( 4,12)( 6, 9)(13,14), ( 2, 7)( 3, 5,10, 8)( 4,12)(13,14), ( 2,13, 7,14)( 3, 5,10, 8)( 4,12) ] )
Right transversal of automorphism group of B_aug:
[0, 5, 2, 3, 4, 1, 8, 7, 6, 9, 10, 11, 12, 13]
[0, 5, 2, 3, 4, 12, 8, 7, 13, 9, 10, 11, 1, 6]
orbits:
11000100100000
11000001100000
11000101000000
word: 11000001100000

combo: 00000000000011

temp: 00000000000011

orbit_checks[temp>>log2radix]= 00000000001110

word: 11000101000000

combo: 00000000000010

temp: 00000000000010

orbit_checks[temp>>log2radix]= 00000000001110

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 0 1 0 1 0 1 0 0]
[0 1 0 0 0 0 1 0 0 0 0 0 1 1]
[0 0 1 0 0 0 0 1 0 0 1 1 0 0]
[0 0 0 1 0 0 0 1 0 1 1 0 0 0]
[0 0 0 0 1 0 0 0 0 1 1 1 0 0]
[0 0 0 0 0 1 0 0 1 0 0 0 1 1]
limit on degree (length): 15
ortho basis:
110001001000000
010000010000000

B_can_lab before row reduction:
000000011001001
001101100000000
000000010101010
000000001101100
000000011110000
011110000000000

B_can_lab after row reduction:
000000011001001
000000010101010
000000001101100
000000011110000
001101100000000
011110000000000
000000000100001

word generated as sum over rows of ortho_basis starting at 2: 000000000000000
gate: 000000000111111
k_gate: 000000000000011
nonzero_gate: 100000000000000
radix_gate: 000000000011111

Starting main loop:
word: 000000000000000

combo: 000000000000000

word: 110001001000000

combo: 000000000000001

temp: 000000000000001

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
001010100000001
001100100000100
000110100001000
001110000010000
100001010000010
010001010100000
rs list:
1 0 0 0 0 0 0 0 1 0 1 0 1 0 0 
0 0 1 0 0 0 0 0 1 0 0 1 1 0 0 
0 0 0 1 0 0 0 0 1 0 1 1 0 0 0 
0 0 0 0 1 0 0 0 0 0 1 1 1 0 0 
0 1 0 0 0 0 0 1 0 1 0 0 0 0 1 
0 0 0 0 0 1 0 1 0 1 0 0 0 1 0 
B_aug:
[1 0 0 0 0 0 0 0 1 0 1 0 1 0 0]
[0 1 0 0 0 0 1 1 0 0 0 0 0 1 0]
[0 0 1 0 0 0 0 0 1 0 0 1 1 0 0]
[0 0 0 1 0 0 0 0 1 0 1 1 0 0 0]
[0 0 0 0 1 0 0 0 0 0 1 1 1 0 0]
[0 0 0 0 0 1 0 1 0 1 0 0 0 1 0]
[0 0 0 0 0 0 1 0 0 1 0 0 0 1 1]
m:
[1 0 0 0 0 0 0 0 1 0 1 0 1 0 0]
[0 0 1 0 0 0 0 0 1 0 0 1 1 0 0]
[0 0 0 1 0 0 0 0 1 0 1 1 0 0 0]
[0 0 0 0 1 0 0 0 0 0 1 1 1 0 0]
[0 1 0 0 0 0 0 1 0 1 0 0 0 0 1]
[0 0 0 0 0 1 0 1 0 1 0 0 0 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 5,11)(12,13), ( 5,12)(11,13), ( 4, 5)( 9,13), ( 3, 4)(11,13), ( 2, 6)(14,15), ( 1, 3)(11,12), ( 6,14)( 8,10), ( 6,10)( 8,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 5, 9, 7, 8, 6, 10, 11, 12, 14, 13]
[0, 1, 2, 3, 4, 5, 13, 7, 8, 14, 10, 11, 12, 6, 9]
[0, 1, 2, 3, 4, 6, 5, 14, 8, 9, 10, 11, 12, 13, 7]
[0, 1, 2, 3, 4, 5, 14, 7, 8, 13, 10, 11, 12, 9, 6]
orbits:
110001001000000
100001011000000
word: 100001011000000

combo: 000000000000011

temp: 000000000000011

orbit_checks[temp>>log2radix]= 000000000001010

word: 010000010000000

combo: 000000000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 0 0 1 0 1 0 1 0 0]
[0 1 0 0 0 0 0 1 0 1 0 0 0 0 1]
[0 0 1 0 0 0 0 0 1 0 0 1 1 0 0]
[0 0 0 1 0 0 0 0 1 0 1 1 0 0 0]
[0 0 0 0 1 0 0 0 0 0 1 1 1 0 0]
[0 0 0 0 0 1 0 1 0 1 0 0 0 1 0]
[0 0 0 0 0 0 1 0 0 1 0 0 0 1 1]
limit on degree (length): 16
ortho basis:
1110000010000000

B_can_lab before row reduction:
0000000011001001
0101010100000000
0000000010101010
0000000001101100
0000000011110000
0011011000000000
0111100000000000

B_can_lab after row reduction:
0000000011001001
0000000010101010
0000000001101100
0000000011110000
0101010100000000
0011011000000000
0111100000000000
0000000000000011
0000000000110000

word generated as sum over rows of ortho_basis starting at 1: 0000000000000000
gate: 0000000001111111
k_gate: 0000000000000001
nonzero_gate: 1000000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 0000000000000000

combo: 0000000000000000

word: 1110000010000000

combo: 0000000000000001

temp: 0000000000000001

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
0001010100000001
1010001000000010
1100001000100000
0110001001000000
1110000010000000
0001100100000100
0000110100001000
rs list:
1 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 
0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 1 
0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 1 
0 0 0 0 0 0 1 0 0 1 0 0 0 1 1 0 
0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 
0 0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 
0 0 0 1 0 0 0 0 1 0 1 1 0 0 0 0 
B_aug:
[1 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0]
[0 1 0 0 0 0 0 1 0 1 0 0 0 0 1 0]
[0 0 1 0 0 0 0 0 1 0 0 1 1 0 0 0]
[0 0 0 1 0 0 0 0 1 0 1 1 0 0 0 0]
[0 0 0 0 1 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 0 0 1 0 1 0 1 0 0 0 1 0 0]
[0 0 0 0 0 0 1 0 0 1 0 0 0 1 1 0]
[0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1]
m:
[1 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0]
[0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 1]
[0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 1]
[0 0 0 0 0 0 1 0 0 1 0 0 0 1 1 0]
[0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1]
[0 0 1 0 0 0 0 0 1 0 0 1 1 0 0 0]
[0 0 0 1 0 0 0 0 1 0 1 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 8,14)(15,16), ( 8,15)(14,16), ( 7, 8)(10,16), ( 6, 7)(14,16), ( 3, 4)(11,13), ( 2, 6)(14,15), ( 4,12)( 9,11), ( 4, 9)(11,12), ( 1, 3)(11,12) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 10, 5, 6, 7, 8, 9, 4, 12, 11, 13, 14, 15]
[0, 1, 2, 3, 11, 5, 6, 7, 8, 9, 12, 4, 10, 13, 14, 15]
[0, 1, 2, 4, 3, 5, 6, 7, 12, 9, 10, 11, 8, 13, 14, 15]
[1, 0, 5, 6, 7, 2, 3, 4, 9, 8, 13, 14, 15, 10, 11, 12]
[0, 1, 2, 3, 12, 5, 6, 7, 8, 9, 11, 10, 4, 13, 14, 15]
[1, 0, 5, 6, 13, 2, 3, 4, 9, 8, 7, 15, 14, 10, 11, 12]
[1, 0, 5, 6, 14, 2, 3, 4, 9, 8, 15, 7, 13, 10, 11, 12]
[0, 1, 3, 4, 2, 5, 6, 7, 10, 9, 12, 11, 8, 13, 14, 15]
[1, 0, 5, 7, 6, 2, 3, 4, 15, 8, 13, 14, 9, 10, 11, 12]
[0, 1, 2, 4, 8, 5, 6, 7, 12, 9, 11, 10, 3, 13, 14, 15]
[1, 0, 5, 6, 15, 2, 3, 4, 9, 8, 14, 13, 7, 10, 11, 12]
orbits:
1110000010000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 0 1 0 1 0 1 0 0]
[0 1 0 0 0 0 1 0 0 0 0 0 1 1]
[0 0 1 0 0 0 0 1 0 0 1 1 0 0]
[0 0 0 1 0 0 0 1 0 1 1 0 0 0]
[0 0 0 0 1 0 0 0 0 1 1 1 0 0]
[0 0 0 0 0 1 0 0 1 0 0 0 1 1]
limit on degree (length): 16
ortho basis:
1010001001000000
0010000010000000
1100000000000000

B_can_lab before row reduction:
0000000011001001
0001101100000000
0000000010101010
0000000001101100
0000000011110000
0011110000000000

B_can_lab after row reduction:
0000000011001001
0000000010101010
0000000001101100
0000000011110000
0001101100000000
0011110000000000
0000000001000001

word generated as sum over rows of ortho_basis starting at 2: 1100000000000000
gate: 0000000000111111
k_gate: 0000000000000011
nonzero_gate: 1100000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1100000000000000

combo: 0000000000000000

word: 0110001001000000

combo: 0000000000000001

word: 0100001011000000

combo: 0000000000000011

word: 1110000010000000

combo: 0000000000000010

temp: 0000000000000010

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1100000001000010
1100001000100000
1110000010000000
0001010100000001
0001100100000100
0000110100001000
rs list:
0 1 0 0 0 0 1 0 0 0 0 0 0 0 1 1 
0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 1 
0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 
1 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 
0 0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 
0 0 0 1 0 0 0 0 1 0 1 1 0 0 0 0 
B_aug:
[1 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0]
[0 1 0 0 0 0 1 1 0 0 0 0 0 1 0 0]
[0 0 1 0 0 0 0 0 1 0 0 1 1 0 0 0]
[0 0 0 1 0 0 0 0 1 0 1 1 0 0 0 0]
[0 0 0 0 1 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 0 0 1 0 1 0 1 0 0 0 1 0 0]
[0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1]
m:
[0 1 0 0 0 0 1 0 0 0 0 0 0 0 1 1]
[0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 1]
[0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1]
[1 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0]
[0 0 1 0 0 0 0 0 1 0 0 1 1 0 0 0]
[0 0 0 1 0 0 0 0 1 0 1 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), ( 8,14), ( 8,15)(14,16), ( 6, 8)(10,14), ( 3, 4)(11,13), ( 2, 6)( 7,10), ( 1, 3)(11,12), ( 4,12)( 9,11) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 10, 5, 6, 7, 8, 9, 4, 12, 11, 13, 14, 15]
[0, 1, 2, 3, 11, 5, 6, 7, 8, 9, 12, 4, 10, 13, 14, 15]
[0, 1, 2, 4, 3, 5, 6, 7, 12, 9, 10, 11, 8, 13, 14, 15]
[0, 1, 2, 3, 12, 5, 6, 7, 8, 9, 11, 10, 4, 13, 14, 15]
[0, 1, 3, 4, 2, 5, 6, 7, 10, 9, 12, 11, 8, 13, 14, 15]
[0, 1, 2, 4, 8, 5, 6, 7, 12, 9, 11, 10, 3, 13, 14, 15]
[2, 1, 3, 4, 0, 5, 6, 7, 11, 9, 12, 10, 8, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1110000010000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 0 1 0 1 0 1]
[0 1 0 0 0 1 1 0 1 0 0 0]
[0 0 1 0 0 0 0 1 0 0 1 1]
[0 0 0 1 0 0 0 1 0 1 1 0]
[0 0 0 0 1 0 0 0 0 1 1 1]
limit on degree (length): 15
ortho basis:
000000100100000
000000101000000
101000000000000
110000000000000

B_can_lab before row reduction:
000110010010000
000000000001111
000101010100000
000011011000000
000111100000000

B_can_lab after row reduction:
000000000001111
000110010010000
000101010100000
000011011000000
000111100000000

word generated as sum over rows of ortho_basis starting at 2: 011000000000000
gate: 000000000011111
k_gate: 000000000000011
nonzero_gate: 111000000000000
radix_gate: 000000000011111

Starting main loop:
word: 011000000000000

combo: 000000000000000

word: 011000100100000

combo: 000000000000001

word: 011000001100000

combo: 000000000000011

word: 011000101000000

combo: 000000000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 0 1 0 1 0 1]
[0 1 0 0 0 1 1 0 1 0 0 0]
[0 0 1 0 0 0 0 1 0 0 1 1]
[0 0 0 1 0 0 0 1 0 1 1 0]
[0 0 0 0 1 0 0 0 0 1 1 1]
limit on degree (length): 16
ortho basis:
0000000100100000
0000000101000000
1001000000000000
1010000000000000
1100000000000000

B_can_lab before row reduction:
0000110010010000
0000000000001111
0000101010100000
0000011011000000
0000111100000000

B_can_lab after row reduction:
0000000000001111
0000110010010000
0000101010100000
0000011011000000
0000111100000000

word generated as sum over rows of ortho_basis starting at 2: 1111000000000000
gate: 0000000000011111
k_gate: 0000000000000011
nonzero_gate: 1111000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1111000000000000

combo: 0000000000000000

temp: 0000000000000000

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
0000000101100010
1111000000000000
0000101010000001
0000110010000100
0000011010001000
rs list:
0 1 0 0 0 1 1 0 1 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
1 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 
0 0 1 0 0 0 0 1 0 0 1 1 0 0 0 0 
0 0 0 1 0 0 0 1 0 1 1 0 0 0 0 0 
B_aug:
[1 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0]
[0 1 0 0 0 1 1 0 1 0 0 0 0 0 0 0]
[0 0 1 0 0 0 0 1 0 0 1 1 0 0 0 0]
[0 0 0 1 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1]
m:
[0 1 0 0 0 1 1 0 1 0 0 0 0 0 0 0]
[0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1]
[1 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0]
[0 0 1 0 0 0 0 1 0 0 1 1 0 0 0 0]
[0 0 0 1 0 0 0 1 0 1 1 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), (7,9), (6,7), ( 3, 4)(10,12), (2,6), ( 2,13)( 6,14)( 7,15)( 9,16), ( 1, 3)(10,11), ( 4,11)( 8,10) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 9, 5, 6, 7, 8, 4, 11, 10, 12, 13, 14, 15]
[0, 1, 2, 3, 10, 5, 6, 7, 8, 11, 4, 9, 12, 13, 14, 15]
[0, 1, 2, 4, 3, 5, 6, 11, 8, 9, 10, 7, 12, 13, 14, 15]
[0, 1, 2, 3, 11, 5, 6, 7, 8, 10, 9, 4, 12, 13, 14, 15]
[0, 1, 3, 4, 2, 5, 6, 9, 8, 11, 10, 7, 12, 13, 14, 15]
[0, 1, 2, 4, 7, 5, 6, 11, 8, 10, 9, 3, 12, 13, 14, 15]
[2, 1, 3, 4, 0, 5, 6, 10, 8, 11, 9, 7, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111000000000000
word: 1111000100100000

combo: 0000000000000001

word: 1111000001100000

combo: 0000000000000011

word: 1111000101000000

combo: 0000000000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 1 1 0 0 1]
[0 1 0 0 1 1 0 0 1 0 0]
[0 0 1 0 0 0 1 1 0 1 0]
[0 0 0 1 0 0 0 1 0 1 1]
limit on degree (length): 13
ortho basis:
0000100010000
0000100100000
1011001000000
1100000000000

B_can_lab before row reduction:
0010101010000
0000000001111
0001101100000
0011110000000

B_can_lab after row reduction:
0000000001111
0010101010000
0001101100000
0011110000000
0000000111000

word generated as sum over rows of ortho_basis starting at 3: 1100000000000
gate: 0000000001111
k_gate: 0000000000111
nonzero_gate: 1100000000000
radix_gate: 0000000011111

Starting main loop:
word: 1100000000000

combo: 0000000000000

word: 1100100010000

combo: 0000000000001

temp: 0000000000001

orbit_checks[temp>>log2radix]= 0000000000000

passed if statements
temp basis:
0010011000001
0001011000100
0011010001000
1100000100010
rs list:
1 0 0 0 0 0 1 1 0 0 1 0 0 
0 0 1 0 0 0 1 1 0 1 0 0 0 
0 0 0 1 0 0 0 1 0 1 1 0 0 
0 1 0 0 0 1 0 0 0 0 0 1 1 
B_aug:
[1 0 0 0 0 0 1 1 0 0 1 0 0]
[0 1 0 0 1 1 0 0 1 0 0 0 0]
[0 0 1 0 0 0 1 1 0 1 0 0 0]
[0 0 0 1 0 0 0 1 0 1 1 0 0]
[0 0 0 0 1 0 0 0 1 0 0 1 1]
m:
[1 0 0 0 0 0 1 1 0 0 1 0 0]
[0 0 1 0 0 0 1 1 0 1 0 0 0]
[0 0 0 1 0 0 0 1 0 1 1 0 0]
[0 1 0 0 0 1 0 0 0 0 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 4,11)( 8,10), ( 4,10)( 8,11), ( 3, 7)( 4,11), ( 3,11)( 4, 7), ( 1, 3, 7)( 4,10,11), ( 3, 7)( 4,11)(12,13), ( 3, 7)( 4,11)( 5, 9)(12,13), ( 2, 6)( 3, 7)( 4,11)(12,13), ( 2,12, 6,13)( 3, 7)( 4,11) ] )
Right transversal of automorphism group of B_aug:
[0, 4, 2, 3, 1, 8, 6, 7, 5, 9, 10, 11, 12]
[0, 4, 2, 3, 11, 8, 6, 7, 12, 9, 10, 1, 5]
orbits:
1100100010000
1100000110000
1100100100000
word: 1100000110000

combo: 0000000000011

temp: 0000000000011

orbit_checks[temp>>log2radix]= 0000000001110

word: 1100100100000

combo: 0000000000010

temp: 0000000000010

orbit_checks[temp>>log2radix]= 0000000001110

word: 0111101100000

combo: 0000000000110

word: 0111001110000

combo: 0000000000111

word: 0111101010000

combo: 0000000000101

word: 0111001000000

combo: 0000000000100

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 1 1 0 0 1 0 0]
[0 1 0 0 0 1 0 0 0 0 0 1 1]
[0 0 1 0 0 0 1 1 0 1 0 0 0]
[0 0 0 1 0 0 0 1 0 1 1 0 0]
[0 0 0 0 1 0 0 0 1 0 0 1 1]
limit on degree (length): 14
ortho basis:
11001000100000
10110001000000
01000010000000

B_can_lab before row reduction:
00000001010101
00110110000000
00000000110110
00000001111000
01111000000000

B_can_lab after row reduction:
00000001010101
00000000110110
00000001111000
00110110000000
01111000000000

word generated as sum over rows of ortho_basis starting at 3: 00000000000000
gate: 00000000011111
k_gate: 00000000000111
nonzero_gate: 10000000000000
radix_gate: 00000000011111

Starting main loop:
word: 00000000000000

combo: 00000000000000

word: 11001000100000

combo: 00000000000001

temp: 00000000000001

orbit_checks[temp>>log2radix]= 00000000000000

passed if statements
temp basis:
00100101000001
10001010000010
01001010010000
11001000100000
00010101000100
rs list:
1 0 0 0 0 0 1 0 1 0 0 1 0 0 
0 1 0 0 0 0 0 1 0 1 0 0 0 1 
0 0 0 0 1 0 0 1 0 1 0 0 1 0 
0 0 0 0 0 1 0 0 0 1 0 0 1 1 
0 0 1 0 0 0 1 0 1 0 1 0 0 0 
B_aug:
[1 0 0 0 0 0 1 0 1 0 0 1 0 0]
[0 1 0 0 0 1 0 1 0 0 0 0 1 0]
[0 0 1 0 0 0 1 0 1 0 1 0 0 0]
[0 0 0 1 0 0 0 0 1 0 1 1 0 0]
[0 0 0 0 1 0 0 1 0 1 0 0 1 0]
[0 0 0 0 0 1 0 0 0 1 0 0 1 1]
m:
[1 0 0 0 0 0 1 0 1 0 0 1 0 0]
[0 1 0 0 0 0 0 1 0 1 0 0 0 1]
[0 0 0 0 1 0 0 1 0 1 0 0 1 0]
[0 0 0 0 0 1 0 0 0 1 0 0 1 1]
[0 0 1 0 0 0 1 0 1 0 1 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 6,10)(13,14), ( 6,13)(10,14), ( 5, 6)( 8,14), ( 2, 5)(13,14), ( 3, 9)( 7,11), ( 3, 7)( 9,11), ( 1, 3)(11,12) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 8, 4, 5, 6, 7, 3, 9, 11, 10, 12, 13]
[0, 1, 2, 10, 4, 5, 6, 7, 11, 9, 3, 8, 12, 13]
[0, 1, 3, 2, 4, 5, 11, 7, 8, 9, 10, 6, 12, 13]
[1, 0, 4, 5, 2, 3, 7, 6, 9, 8, 12, 13, 10, 11]
[0, 1, 2, 11, 4, 5, 6, 7, 10, 9, 8, 3, 12, 13]
[1, 0, 4, 9, 2, 3, 7, 6, 5, 8, 13, 12, 10, 11]
[1, 0, 4, 12, 2, 3, 7, 6, 13, 8, 5, 9, 10, 11]
[1, 0, 5, 4, 2, 3, 13, 6, 9, 8, 12, 7, 10, 11]
[0, 1, 3, 6, 4, 5, 11, 7, 10, 9, 8, 2, 12, 13]
[1, 0, 4, 13, 2, 3, 7, 6, 12, 8, 9, 5, 10, 11]
orbits:
11001000100000
10001010100000
word: 01111001100000

combo: 00000000000011

word: 10110001000000

combo: 00000000000010

temp: 00000000000010

orbit_checks[temp>>log2radix]= 00000000100010

passed if statements
temp basis:
10010100000001
10100100000100
00110100001000
10110001000000
01000010100010
rs list:
1 0 0 0 0 0 0 0 1 0 1 0 0 1 
0 0 1 0 0 0 0 0 1 0 0 1 0 1 
0 0 0 1 0 0 0 0 1 0 1 1 0 0 
0 0 0 0 0 0 1 0 0 0 1 1 0 1 
0 1 0 0 0 1 0 1 0 0 0 0 1 0 
B_aug:
[1 0 0 0 0 0 1 0 1 0 0 1 0 0]
[0 1 0 0 0 1 0 1 0 0 0 0 1 0]
[0 0 1 0 0 0 1 0 1 0 1 0 0 0]
[0 0 0 1 0 0 0 0 1 0 1 1 0 0]
[0 0 0 0 1 0 0 1 0 1 0 0 1 0]
[0 0 0 0 0 0 1 0 0 0 1 1 0 1]
m:
[1 0 0 0 0 0 0 0 1 0 1 0 0 1]
[0 0 1 0 0 0 0 0 1 0 0 1 0 1]
[0 0 0 1 0 0 0 0 1 0 1 1 0 0]
[0 0 0 0 0 0 1 0 0 0 1 1 0 1]
[0 1 0 0 0 1 0 1 0 0 0 0 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 3, 4)( 7,12), ( 3, 7)( 4,12), ( 3, 7,14)( 4,12,11), ( 3, 7,11, 9)( 4,14), ( 1, 3, 7,12,11, 9)( 4,14), ( 3, 7,11, 9)( 4,14)( 8,13), ( 3, 7,11, 9)( 4,14)( 5,10), ( 2, 6)( 3, 7,11, 9)( 4,14), ( 2, 8)( 3, 7,11, 9)( 4,14)( 6,13) ] )
Right transversal of automorphism group of B_aug:
[0, 4, 2, 3, 1, 9, 6, 7, 8, 5, 10, 11, 12, 13]
[0, 4, 2, 3, 7, 9, 6, 1, 8, 12, 10, 11, 5, 13]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
orbits:
10110001000000
word: 11110011000000

combo: 00000000000110

word: 00111011100000

combo: 00000000000111

word: 10001010100000

combo: 00000000000101

temp: 00000000000101

orbit_checks[temp>>log2radix]= 00000000100110

word: 01000010000000

combo: 00000000000100

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 1 0 1 0 0 1 0 0]
[0 1 0 0 0 0 0 1 0 1 0 0 0 1]
[0 0 1 0 0 0 1 0 1 0 1 0 0 0]
[0 0 0 1 0 0 0 0 1 0 1 1 0 0]
[0 0 0 0 1 0 0 1 0 1 0 0 1 0]
[0 0 0 0 0 1 0 0 0 1 0 0 1 1]
limit on degree (length): 15
ortho basis:
100110001000000
111000010000000

B_can_lab before row reduction:
010101000000001
000000010101010
001101100000000
011110000000000
000000001101100
000000011110000

B_can_lab after row reduction:
010101000000001
000000010101010
000000001101100
000000011110000
001101100000000
011110000000000
000000000100001

word generated as sum over rows of ortho_basis starting at 2: 000000000000000
gate: 000000000111111
k_gate: 000000000000011
nonzero_gate: 100000000000000
radix_gate: 000000000011111

Starting main loop:
word: 000000000000000

combo: 000000000000000

word: 100110001000000

combo: 000000000000001

temp: 000000000000001

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
100010100000001
100100100000100
000110100001000
100110001000000
010001010000010
001001010010000
rs list:
1 0 0 0 0 0 0 0 1 0 1 0 0 0 1 
0 0 1 0 0 0 0 0 1 0 0 1 0 0 1 
0 0 0 1 0 0 0 0 1 0 1 1 0 0 0 
0 0 0 0 0 0 1 0 0 0 1 1 0 0 1 
0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 
0 0 0 0 1 0 0 1 0 1 0 0 1 0 0 
B_aug:
[1 0 0 0 0 0 1 0 1 0 0 1 0 0 0]
[0 1 0 0 0 0 0 1 0 1 0 0 0 1 0]
[0 0 1 0 0 0 1 0 1 0 1 0 0 0 0]
[0 0 0 1 0 0 0 0 1 0 1 1 0 0 0]
[0 0 0 0 1 0 0 1 0 1 0 0 1 0 0]
[0 0 0 0 0 1 0 0 0 1 0 0 1 1 0]
[0 0 0 0 0 0 1 0 0 0 1 1 0 0 1]
m:
[1 0 0 0 0 0 0 0 1 0 1 0 0 0 1]
[0 0 1 0 0 0 0 0 1 0 0 1 0 0 1]
[0 0 0 1 0 0 0 0 1 0 1 1 0 0 0]
[0 0 0 0 0 0 1 0 0 0 1 1 0 0 1]
[0 1 0 0 0 0 0 1 0 1 0 0 0 1 0]
[0 0 0 0 1 0 0 1 0 1 0 0 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 7,11)(12,15), ( 7,12)(11,15), ( 4, 7)( 9,15), ( 3, 4)(11,15), ( 2, 5)(13,14), ( 1, 3)(11,12), ( 5,13)( 8,10), ( 5,10)( 8,13) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 9, 6, 7, 8, 5, 10, 11, 13, 12, 14]
[0, 1, 2, 3, 4, 12, 6, 7, 8, 13, 10, 11, 5, 9, 14]
[0, 1, 2, 3, 5, 4, 6, 13, 8, 9, 10, 11, 12, 7, 14]
[0, 1, 2, 3, 4, 13, 6, 7, 8, 12, 10, 11, 9, 5, 14]
[0, 4, 2, 3, 5, 1, 6, 12, 8, 9, 10, 11, 13, 7, 14]
[0, 1, 2, 3, 5, 7, 6, 13, 8, 12, 10, 11, 9, 4, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
100110001000000
111000010000000
word: 011110011000000

combo: 000000000000011

word: 111000010000000

combo: 000000000000010

temp: 000000000000010

orbit_checks[temp>>log2radix]= 000000000000110

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 1 0 1 0 0 1 0 0]
[0 1 0 0 0 0 0 1 0 1 0 0 0 1]
[0 0 1 0 0 0 1 0 1 0 1 0 0 0]
[0 0 0 1 0 0 0 0 1 0 1 1 0 0]
[0 0 0 0 1 0 0 1 0 1 0 0 1 0]
[0 0 0 0 0 1 0 0 0 1 0 0 1 1]
limit on degree (length): 16
ortho basis:
1000110001000000
1011000010000000
1100000000000000

B_can_lab before row reduction:
0010101000000001
0000000010101010
0001101100000000
0011110000000000
0000000001101100
0000000011110000

B_can_lab after row reduction:
0010101000000001
0000000010101010
0000000001101100
0000000011110000
0001101100000000
0011110000000000
0000001100000001

word generated as sum over rows of ortho_basis starting at 2: 1100000000000000
gate: 0000000000111111
k_gate: 0000000000000011
nonzero_gate: 1100000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1100000000000000

combo: 0000000000000000

word: 0100110001000000

combo: 0000000000000001

word: 1111110011000000

combo: 0000000000000011

temp: 0000000000000011

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1111110011000000
0000100101000001
0010001010000010
0001001010010000
0011001000100000
0000010101000100
rs list:
0 0 0 0 0 0 1 1 0 0 1 1 1 1 1 1 
1 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 
0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 
0 0 0 0 1 0 0 1 0 1 0 0 1 0 0 0 
0 0 0 0 0 1 0 0 0 1 0 0 1 1 0 0 
0 0 1 0 0 0 1 0 1 0 1 0 0 0 0 0 
B_aug:
[1 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0]
[0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0]
[0 0 1 0 0 0 1 0 1 0 1 0 0 0 0 0]
[0 0 0 1 0 0 0 0 1 0 1 1 0 0 0 0]
[0 0 0 0 1 0 0 1 0 1 0 0 1 0 0 0]
[0 0 0 0 0 1 0 0 0 1 0 0 1 1 0 0]
[0 0 0 0 0 0 1 1 0 0 1 1 1 1 1 1]
m:
[0 0 0 0 0 0 1 1 0 0 1 1 1 1 1 1]
[1 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0]
[0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0]
[0 0 0 0 1 0 0 1 0 1 0 0 1 0 0 0]
[0 0 0 0 0 1 0 0 0 1 0 0 1 1 0 0]
[0 0 1 0 0 0 1 0 1 0 1 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), ( 6,10)(13,14), ( 6,13)(10,14), ( 5, 6)( 8,14), ( 2, 5)(13,14), ( 3, 9)( 7,11), ( 3, 7)( 9,11), ( 1, 3)(11,12) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 8, 4, 5, 6, 7, 3, 9, 11, 10, 12, 13, 14, 15]
[0, 1, 2, 10, 4, 5, 6, 7, 11, 9, 3, 8, 12, 13, 14, 15]
[0, 1, 3, 2, 4, 5, 11, 7, 8, 9, 10, 6, 12, 13, 14, 15]
[1, 0, 4, 5, 2, 3, 7, 6, 9, 8, 12, 13, 10, 11, 14, 15]
[0, 1, 2, 11, 4, 5, 6, 7, 10, 9, 8, 3, 12, 13, 14, 15]
[1, 0, 4, 9, 2, 3, 7, 6, 5, 8, 13, 12, 10, 11, 14, 15]
[1, 0, 4, 12, 2, 3, 7, 6, 13, 8, 5, 9, 10, 11, 14, 15]
[1, 0, 5, 4, 2, 3, 13, 6, 9, 8, 12, 7, 10, 11, 14, 15]
[0, 1, 3, 6, 4, 5, 11, 7, 10, 9, 8, 2, 12, 13, 14, 15]
[1, 0, 4, 13, 2, 3, 7, 6, 12, 8, 9, 5, 10, 11, 14, 15]
[4, 0, 5, 1, 2, 3, 12, 6, 9, 8, 13, 7, 10, 11, 14, 15]
[1, 0, 5, 7, 2, 3, 13, 6, 12, 8, 9, 4, 10, 11, 14, 15]
[2, 1, 3, 0, 4, 5, 10, 7, 8, 9, 11, 6, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111110011000000
word: 0111000010000000

combo: 0000000000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 1 1 0 0 1 0 0]
[0 1 0 0 0 1 0 0 0 0 0 1 1]
[0 0 1 0 0 0 1 1 0 1 0 0 0]
[0 0 0 1 0 0 0 1 0 1 1 0 0]
[0 0 0 0 1 0 0 0 1 0 0 1 1]
limit on degree (length): 15
ortho basis:
101001000100000
100110001000000
001000010000000
110000000000000

B_can_lab before row reduction:
000000001010101
000110110000000
000000000110110
000000001111000
001111000000000

B_can_lab after row reduction:
000000001010101
000000000110110
000000001111000
000110110000000
001111000000000

word generated as sum over rows of ortho_basis starting at 3: 110000000000000
gate: 000000000011111
k_gate: 000000000000111
nonzero_gate: 110000000000000
radix_gate: 000000000011111

Starting main loop:
word: 110000000000000

combo: 000000000000000

word: 011001000100000

combo: 000000000000001

word: 111111001100000

combo: 000000000000011

temp: 000000000000011

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
111011100100001
111101100100100
111111001100000
000110100001000
001000010100010
rs list:
1 0 0 0 0 1 0 0 1 1 1 0 1 1 1 
0 0 1 0 0 1 0 0 1 1 0 1 1 1 1 
0 0 0 0 0 1 1 0 0 1 1 1 1 1 1 
0 0 0 1 0 0 0 0 1 0 1 1 0 0 0 
0 1 0 0 0 1 0 1 0 0 0 0 1 0 0 
B_aug:
[1 0 0 0 0 0 1 0 1 0 0 1 0 0 0]
[0 1 0 0 0 1 0 1 0 0 0 0 1 0 0]
[0 0 1 0 0 0 1 0 1 0 1 0 0 0 0]
[0 0 0 1 0 0 0 0 1 0 1 1 0 0 0]
[0 0 0 0 1 0 0 1 0 1 0 0 1 0 0]
[0 0 0 0 0 1 1 0 0 1 1 1 1 1 1]
m:
[1 0 0 0 0 1 0 0 1 1 1 0 1 1 1]
[0 0 1 0 0 1 0 0 1 1 0 1 1 1 1]
[0 0 0 0 0 1 1 0 0 1 1 1 1 1 1]
[0 0 0 1 0 0 0 0 1 0 1 1 0 0 0]
[0 1 0 0 0 1 0 1 0 0 0 0 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (14,15), ( 4, 9)(11,12), ( 4,11)( 9,12), ( 3, 4)( 7,12), ( 1, 3)(11,12), ( 2,13)( 6, 8), ( 2, 6)( 8,13) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 7, 5, 6, 4, 8, 12, 10, 11, 9, 13, 14]
[0, 1, 2, 3, 9, 5, 6, 12, 8, 4, 10, 11, 7, 13, 14]
[0, 4, 2, 3, 1, 9, 6, 7, 8, 5, 10, 11, 12, 13, 14]
[0, 1, 2, 3, 12, 5, 6, 9, 8, 7, 10, 11, 4, 13, 14]
[0, 4, 2, 3, 5, 9, 6, 12, 8, 1, 10, 11, 7, 13, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
111111001100000
110111011100000
word: 010110001000000

combo: 000000000000010

word: 011110011000000

combo: 000000000000110

word: 110111011100000

combo: 000000000000111

temp: 000000000000111

orbit_checks[temp>>log2radix]= 000000010001000

word: 010001010100000

combo: 000000000000101

word: 111000010000000

combo: 000000000000100

temp: 000000000000100

orbit_checks[temp>>log2radix]= 000000010001000

passed if statements
temp basis:
110000000100010
110001000010000
111000010000000
000100101000001
000010101000100
rs list:
0 1 0 0 0 1 0 0 0 0 0 0 0 1 1 
0 0 0 0 1 0 0 0 0 1 0 0 0 1 1 
0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 
1 0 0 0 0 0 1 0 1 0 0 1 0 0 0 
0 0 1 0 0 0 1 0 1 0 1 0 0 0 0 
B_aug:
[1 0 0 0 0 0 1 0 1 0 0 1 0 0 0]
[0 1 0 0 0 1 0 1 0 0 0 0 1 0 0]
[0 0 1 0 0 0 1 0 1 0 1 0 0 0 0]
[0 0 0 1 0 0 0 0 1 0 1 1 0 0 0]
[0 0 0 0 1 0 0 1 0 1 0 0 1 0 0]
[0 0 0 0 0 0 0 1 0 0 0 0 1 1 1]
m:
[0 1 0 0 0 1 0 0 0 0 0 0 0 1 1]
[0 0 0 0 1 0 0 0 0 1 0 0 0 1 1]
[0 0 0 0 0 0 0 1 0 0 0 0 1 1 1]
[1 0 0 0 0 0 1 0 1 0 0 1 0 0 0]
[0 0 1 0 0 0 1 0 1 0 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (14,15), ( 8,13), ( 8,14)(13,15), ( 5, 8)(10,13), ( 2, 5)( 6,10), ( 1, 3)(11,12), ( 3,11)( 7, 9), ( 3, 9)( 7,11) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 8, 4, 5, 6, 7, 3, 9, 11, 10, 12, 13, 14]
[0, 1, 2, 10, 4, 5, 6, 7, 11, 9, 3, 8, 12, 13, 14]
[0, 1, 3, 2, 4, 5, 11, 7, 8, 9, 10, 6, 12, 13, 14]
[0, 1, 2, 11, 4, 5, 6, 7, 10, 9, 8, 3, 12, 13, 14]
[2, 1, 3, 0, 4, 5, 10, 7, 8, 9, 11, 6, 12, 13, 14]
[0, 1, 3, 6, 4, 5, 11, 7, 10, 9, 8, 2, 12, 13, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
111000010000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 1 1 0 0 1 0 0]
[0 1 0 0 0 1 0 0 0 0 0 1 1]
[0 0 1 0 0 0 1 1 0 1 0 0 0]
[0 0 0 1 0 0 0 1 0 1 1 0 0]
[0 0 0 0 1 0 0 0 1 0 0 1 1]
limit on degree (length): 16
ortho basis:
1001001000100000
1000110001000000
0001000010000000
1010000000000000
1100000000000000

B_can_lab before row reduction:
0000000001010101
0000110110000000
0000000000110110
0000000001111000
0001111000000000

B_can_lab after row reduction:
0000000001010101
0000000000110110
0000000001111000
0000110110000000
0001111000000000

word generated as sum over rows of ortho_basis starting at 3: 0110000000000000
gate: 0000000000011111
k_gate: 0000000000000111
nonzero_gate: 1110000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 0110000000000000

combo: 0000000000000000

word: 1111001000100000

combo: 0000000000000001

word: 0111111001100000

combo: 0000000000000011

word: 1110110001000000

combo: 0000000000000010

word: 1111110011000000

combo: 0000000000000110

temp: 0000000000000110

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1111110011000000
0001000010100010
0001001010010000
0000100101000001
0000010101000100
rs list:
0 0 0 0 0 0 1 1 0 0 1 1 1 1 1 1 
0 1 0 0 0 1 0 1 0 0 0 0 1 0 0 0 
0 0 0 0 1 0 0 1 0 1 0 0 1 0 0 0 
1 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 
0 0 1 0 0 0 1 0 1 0 1 0 0 0 0 0 
B_aug:
[1 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0]
[0 1 0 0 0 1 0 1 0 0 0 0 1 0 0 0]
[0 0 1 0 0 0 1 0 1 0 1 0 0 0 0 0]
[0 0 0 1 0 0 0 0 1 0 1 1 0 0 0 0]
[0 0 0 0 1 0 0 1 0 1 0 0 1 0 0 0]
[0 0 0 0 0 0 1 1 0 0 1 1 1 1 1 1]
m:
[0 0 0 0 0 0 1 1 0 0 1 1 1 1 1 1]
[0 1 0 0 0 1 0 1 0 0 0 0 1 0 0 0]
[0 0 0 0 1 0 0 1 0 1 0 0 1 0 0 0]
[1 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0]
[0 0 1 0 0 0 1 0 1 0 1 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), ( 8,13), ( 5, 8)(10,13), ( 2, 5)( 6,10), ( 1, 3)(11,12), ( 3,11)( 7, 9), ( 3, 9)( 7,11) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 8, 4, 5, 6, 7, 3, 9, 11, 10, 12, 13, 14, 15]
[0, 1, 2, 10, 4, 5, 6, 7, 11, 9, 3, 8, 12, 13, 14, 15]
[0, 1, 3, 2, 4, 5, 11, 7, 8, 9, 10, 6, 12, 13, 14, 15]
[0, 1, 2, 11, 4, 5, 6, 7, 10, 9, 8, 3, 12, 13, 14, 15]
[2, 1, 3, 0, 4, 5, 10, 7, 8, 9, 11, 6, 12, 13, 14, 15]
[0, 1, 3, 6, 4, 5, 11, 7, 10, 9, 8, 2, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111110011000000
word: 0110111011100000

combo: 0000000000000111

word: 1110001010100000

combo: 0000000000000101

word: 0111000010000000

combo: 0000000000000100

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 1 1 0 0 1]
[0 1 0 0 1 1 0 0 1 0 0]
[0 0 1 0 0 0 1 1 0 1 0]
[0 0 0 1 0 0 0 1 0 1 1]
limit on degree (length): 14
ortho basis:
00000100010000
00000100100000
10011001000000
10100000000000
11000000000000

B_can_lab before row reduction:
00010101010000
00000000001111
00001101100000
00011110000000

B_can_lab after row reduction:
00000000001111
00010101010000
00001101100000
00011110000000
00000000111000

word generated as sum over rows of ortho_basis starting at 3: 01100000000000
gate: 00000000001111
k_gate: 00000000000111
nonzero_gate: 11100000000000
radix_gate: 00000000011111

Starting main loop:
word: 01100000000000

combo: 00000000000000

word: 01100100010000

combo: 00000000000001

word: 01100000110000

combo: 00000000000011

word: 01100100100000

combo: 00000000000010

word: 11111101100000

combo: 00000000000110

temp: 00000000000110

orbit_checks[temp>>log2radix]= 00000000000000

passed if statements
temp basis:
11101110100001
11110110100100
11111101100000
00011010001000
rs list:
1 0 0 0 0 1 0 1 1 1 0 1 1 1 
0 0 1 0 0 1 0 1 1 0 1 1 1 1 
0 0 0 0 0 1 1 0 1 1 1 1 1 1 
0 0 0 1 0 0 0 1 0 1 1 0 0 0 
B_aug:
[1 0 0 0 0 0 1 1 0 0 1 0 0 0]
[0 1 0 0 1 1 0 0 1 0 0 0 0 0]
[0 0 1 0 0 0 1 1 0 1 0 0 0 0]
[0 0 0 1 0 0 0 1 0 1 1 0 0 0]
[0 0 0 0 0 1 1 0 1 1 1 1 1 1]
m:
[1 0 0 0 0 1 0 1 1 1 0 1 1 1]
[0 0 1 0 0 1 0 1 1 0 1 1 1 1]
[0 0 0 0 0 1 1 0 1 1 1 1 1 1]
[0 0 0 1 0 0 0 1 0 1 1 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 4,11)( 8,10), ( 4,10)( 8,11), ( 3, 7)( 4,11), ( 3,11)( 4, 7), ( 1, 3, 7)( 4,10,11), ( 3, 7)( 4,11)( 6, 9), ( 2, 5)( 3, 7)( 4,11)( 6, 9), ( 3, 7)( 4,11)( 6, 9)(13,14), ( 3, 7)( 4,11)( 6, 9)(12,13,14) ] )
Right transversal of automorphism group of B_aug:
[0, 5, 2, 3, 8, 1, 6, 7, 4, 9, 10, 11, 12, 13]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
orbits:
11111101100000
11111101010000
11111001110000
word: 11111001110000

combo: 00000000000111

temp: 00000000000111

orbit_checks[temp>>log2radix]= 00000011100000

word: 11111101010000

combo: 00000000000101

temp: 00000000000101

orbit_checks[temp>>log2radix]= 00000011100000

word: 11111001000000

combo: 00000000000100

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 1 1 0 0 1]
[0 1 0 0 1 1 0 0 1 0 0]
[0 0 1 0 0 0 1 1 0 1 0]
[0 0 0 1 0 0 0 1 0 1 1]
limit on degree (length): 15
ortho basis:
000000100010000
000000100100000
100011001000000
100100000000000
101000000000000
110000000000000

B_can_lab before row reduction:
000010101010000
000000000001111
000001101100000
000011110000000

B_can_lab after row reduction:
000000000001111
000010101010000
000001101100000
000011110000000
000000000111000

word generated as sum over rows of ortho_basis starting at 3: 111100000000000
gate: 000000000001111
k_gate: 000000000000111
nonzero_gate: 111100000000000
radix_gate: 000000000011111

Starting main loop:
word: 111100000000000

combo: 000000000000000

temp: 000000000000000

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
000000100110010
111100000000000
000010011000001
000001011000100
rs list:
0 1 0 0 1 1 0 0 1 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 
0 0 1 0 0 0 1 1 0 1 0 0 0 0 0 
B_aug:
[1 0 0 0 0 0 1 1 0 0 1 0 0 0 0]
[0 1 0 0 1 1 0 0 1 0 0 0 0 0 0]
[0 0 1 0 0 0 1 1 0 1 0 0 0 0 0]
[0 0 0 1 0 0 0 1 0 1 1 0 0 0 0]
[0 0 0 0 0 0 0 0 0 0 0 1 1 1 1]
m:
[0 1 0 0 1 1 0 0 1 0 0 0 0 0 0]
[0 0 0 0 0 0 0 0 0 0 0 1 1 1 1]
[1 0 0 0 0 0 1 1 0 0 1 0 0 0 0]
[0 0 1 0 0 0 1 1 0 1 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (14,15), (13,14), (12,13), (6,9), (5,6), (2,5), ( 2,12)( 5,13)( 6,14)( 9,15), ( 1, 3)(10,11), ( 3,10)( 7, 8), ( 3, 8)( 7,10) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 7, 4, 5, 6, 3, 8, 10, 9, 11, 12, 13, 14]
[0, 1, 2, 9, 4, 5, 6, 10, 8, 3, 7, 11, 12, 13, 14]
[0, 1, 3, 2, 4, 5, 10, 7, 8, 9, 6, 11, 12, 13, 14]
[0, 1, 2, 10, 4, 5, 6, 9, 8, 7, 3, 11, 12, 13, 14]
[2, 1, 3, 0, 4, 5, 9, 7, 8, 10, 6, 11, 12, 13, 14]
[0, 1, 3, 6, 4, 5, 10, 9, 8, 7, 2, 11, 12, 13, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
111100000000000
word: 111100100010000

combo: 000000000000001

word: 111100000110000

combo: 000000000000011

word: 111100100100000

combo: 000000000000010

word: 011111101100000

combo: 000000000000110

word: 011111001110000

combo: 000000000000111

word: 011111101010000

combo: 000000000000101

word: 011111001000000

combo: 000000000000100

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 1 1 0 0 1]
[0 1 0 0 1 1 0 0 1 0 0]
[0 0 1 0 0 0 1 1 0 1 0]
[0 0 0 1 0 0 0 1 0 1 1]
limit on degree (length): 16
ortho basis:
0000000100010000
0000000100100000
1000011001000000
1000100000000000
1001000000000000
1010000000000000
1100000000000000

B_can_lab before row reduction:
0000010101010000
0000000000001111
0000001101100000
0000011110000000

B_can_lab after row reduction:
0000000000001111
0000010101010000
0000001101100000
0000011110000000
0000000000111000

word generated as sum over rows of ortho_basis starting at 3: 0111100000000000
gate: 0000000000001111
k_gate: 0000000000000111
nonzero_gate: 1111100000000000
radix_gate: 0000000000011111

Starting main loop:
word: 0111100000000000

combo: 0000000000000000

word: 0111100100010000

combo: 0000000000000001

word: 0111100000110000

combo: 0000000000000011

word: 0111100100100000

combo: 0000000000000010

word: 1111111101100000

combo: 0000000000000110

word: 1111111001110000

combo: 0000000000000111

word: 1111111101010000

combo: 0000000000000101

word: 1111111001000000

combo: 0000000000000100

temp: 0000000000000100

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1111111001000000
0000000100110010
0000010011000001
0000001011000100
rs list:
0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 
0 1 0 0 1 1 0 0 1 0 0 0 0 0 0 0 
1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 
0 0 1 0 0 0 1 1 0 1 0 0 0 0 0 0 
B_aug:
[1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0]
[0 1 0 0 1 1 0 0 1 0 0 0 0 0 0 0]
[0 0 1 0 0 0 1 1 0 1 0 0 0 0 0 0]
[0 0 0 1 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1]
m:
[0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1]
[0 1 0 0 1 1 0 0 1 0 0 0 0 0 0 0]
[1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0]
[0 0 1 0 0 0 1 1 0 1 0 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), (12,13), (6,9), (5,6), (2,5), ( 1, 3)(10,11), ( 3,10)( 7, 8), ( 3, 8)( 7,10) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 7, 4, 5, 6, 3, 8, 10, 9, 11, 12, 13, 14, 15]
[0, 1, 2, 9, 4, 5, 6, 10, 8, 3, 7, 11, 12, 13, 14, 15]
[0, 1, 3, 2, 4, 5, 10, 7, 8, 9, 6, 11, 12, 13, 14, 15]
[0, 1, 2, 10, 4, 5, 6, 9, 8, 7, 3, 11, 12, 13, 14, 15]
[2, 1, 3, 0, 4, 5, 9, 7, 8, 10, 6, 11, 12, 13, 14, 15]
[0, 1, 3, 6, 4, 5, 10, 9, 8, 7, 2, 11, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111111001000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 0 0 0 0 1 1]
[0 1 0 0 1 1 0 1 0 0]
[0 0 1 0 0 0 1 0 1 1]
limit on degree (length): 12
ortho basis:
101010001000
000100010000
000100100000
001001000000
110000000000

B_can_lab before row reduction:
000110110000
000000001111
001111000000

B_can_lab after row reduction:
000000001111
000110110000
001111000000

word generated as sum over rows of ortho_basis starting at 4: 110000000000
gate: 000000000111
k_gate: 000000001111
nonzero_gate: 110000000000
radix_gate: 000000011111

Starting main loop:
word: 110000000000

combo: 000000000000

word: 011010001000

combo: 000000000001

word: 011110011000

combo: 000000000011

word: 110100010000

combo: 000000000010

temp: 000000000010

orbit_checks[temp>>log2radix]= 000000000000

passed if statements
temp basis:
001001001001
110000100010
110100010000
rs list:
1 0 0 1 0 0 1 0 0 1 0 0 
0 1 0 0 0 1 0 0 0 0 1 1 
0 0 0 0 1 0 0 0 1 0 1 1 
B_aug:
[1 0 0 1 0 0 1 0 0 1 0 0]
[0 1 0 0 1 1 0 0 1 0 0 0]
[0 0 1 0 0 0 1 1 0 1 0 0]
[0 0 0 0 1 0 0 0 1 0 1 1]
m:
[1 0 0 1 0 0 1 0 0 1 0 0]
[0 1 0 0 0 1 0 0 0 0 1 1]
[0 0 0 0 1 0 0 0 1 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (5,9), (2,5)(6,9), ( 2, 5,11)( 6, 9,12), ( 2, 5,11)( 3, 8)( 6, 9,12), ( 2, 5,11)( 6, 9,12)( 7,10), ( 1, 4)( 2, 5,11)( 6, 9,12)( 7,10), ( 1, 7, 4,10)( 2, 5,11)( 6, 9,12) ] )
Right transversal of automorphism group of B_aug:
[4, 2, 1, 8, 0, 7, 10, 5, 3, 11, 6, 9]
[1, 2, 4, 5, 0, 7, 10, 8, 3, 11, 6, 9]
[1, 2, 10, 5, 0, 7, 4, 11, 3, 8, 6, 9]
orbits:
110100010000
110000110000
110100100000
word: 110000110000

combo: 000000000110

temp: 000000000110

orbit_checks[temp>>log2radix]= 000001010100

word: 011010111000

combo: 000000000111

word: 011110101000

combo: 000000000101

word: 110100100000

combo: 000000000100

temp: 000000000100

orbit_checks[temp>>log2radix]= 000001010100

word: 111101100000

combo: 000000001100

word: 010111101000

combo: 000000001101

word: 010011111000

combo: 000000001111

word: 111001110000

combo: 000000001110

word: 111101010000

combo: 000000001010

word: 010111011000

combo: 000000001011

word: 010011001000

combo: 000000001001

word: 111001000000

combo: 000000001000

temp: 000000001000

orbit_checks[temp>>log2radix]= 000001010100

passed if statements
temp basis:
000100110010
110000001001
110010000100
rs list:
0 1 0 0 1 1 0 0 1 0 0 0 
1 0 0 1 0 0 0 0 0 0 1 1 
0 0 1 0 0 0 0 1 0 0 1 1 
B_aug:
[1 0 0 1 0 0 1 0 0 1 0 0]
[0 1 0 0 1 1 0 0 1 0 0 0]
[0 0 1 0 0 0 1 1 0 1 0 0]
[0 0 0 0 0 0 1 0 0 1 1 1]
m:
[0 1 0 0 1 1 0 0 1 0 0 0]
[1 0 0 1 0 0 0 0 0 0 1 1]
[0 0 1 0 0 0 0 1 0 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,12), ( 7,10), (6,9), (5,6), (3,8), ( 3,11)( 8,12), (2,5), (1,3)(4,8) ] )
Right transversal of automorphism group of B_aug:
[6, 1, 2, 9, 4, 5, 0, 7, 8, 3, 10, 11]
[6, 1, 0, 9, 4, 5, 2, 3, 8, 7, 10, 11]
[6, 1, 0, 9, 4, 5, 10, 3, 8, 11, 2, 7]
orbits:
111001000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 0 1 0 0 1 0 0]
[0 1 0 0 0 1 0 0 0 0 1 1]
[0 0 1 0 0 0 1 1 0 1 0 0]
[0 0 0 1 0 0 0 0 1 0 1 1]
limit on degree (length): 13
ortho basis:
1010100010000
1101000100000
0010001000000
0100010000000

B_can_lab before row reduction:
0101100000001
0000000110110
0011110000000
0000001111000

B_can_lab after row reduction:
0101100000001
0000000110110
0000001111000
0011110000000
0000000111000

word generated as sum over rows of ortho_basis starting at 4: 0000000000000
gate: 0000000001111
k_gate: 0000000001111
nonzero_gate: 1000000000000
radix_gate: 0000000011111

Starting main loop:
word: 0000000000000

combo: 0000000000000

word: 1010100010000

combo: 0000000000001

temp: 0000000000001

orbit_checks[temp>>log2radix]= 0000000000000

passed if statements
temp basis:
1000101000001
0010101000100
1010100010000
0100010100010
rs list:
1 0 0 0 0 0 1 0 1 0 0 0 1 
0 0 1 0 0 0 1 0 1 0 1 0 0 
0 0 0 0 1 0 0 0 1 0 1 0 1 
0 1 0 0 0 1 0 1 0 0 0 1 0 
B_aug:
[1 0 0 0 1 0 1 0 0 0 1 0 0]
[0 1 0 0 0 1 0 1 0 0 0 1 0]
[0 0 1 0 0 0 1 0 1 0 1 0 0]
[0 0 0 1 0 0 0 1 0 1 0 1 0]
[0 0 0 0 1 0 0 0 1 0 1 0 1]
m:
[1 0 0 0 0 0 1 0 1 0 0 0 1]
[0 0 1 0 0 0 1 0 1 0 1 0 0]
[0 0 0 0 1 0 0 0 1 0 1 0 1]
[0 1 0 0 0 1 0 1 0 0 0 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 5,13)( 9,11), ( 5,11)( 9,13), ( 3, 7)( 5,13), ( 3,13)( 5, 7), ( 1, 3, 7)( 5,11,13), ( 3, 7)( 5,13)( 8,12), ( 3, 7)( 4,10)( 5,13), ( 2, 6)( 3, 7)( 5,13), ( 2, 8)( 3, 7)( 5,13)( 6,12) ] )
Right transversal of automorphism group of B_aug:
[0, 3, 2, 1, 4, 9, 6, 7, 8, 5, 10, 11, 12]
[0, 3, 2, 7, 4, 9, 6, 1, 8, 11, 10, 5, 12]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
orbits:
1010100010000
1000101010000
1101000100000
1001010100000
word: 0111100110000

combo: 0000000000011

word: 1101000100000

combo: 0000000000010

temp: 0000000000010

orbit_checks[temp>>log2radix]= 0010000100110

word: 1111001100000

combo: 0000000000110

word: 0101101110000

combo: 0000000000111

word: 1000101010000

combo: 0000000000101

temp: 0000000000101

orbit_checks[temp>>log2radix]= 0010000100110

word: 0010001000000

combo: 0000000000100

word: 0110011000000

combo: 0000000001100

word: 1100111010000

combo: 0000000001101

word: 0001111110000

combo: 0000000001111

word: 1011011100000

combo: 0000000001110

word: 1001010100000

combo: 0000000001010

temp: 0000000001010

orbit_checks[temp>>log2radix]= 0010000100110

word: 0011110110000

combo: 0000000001011

word: 1110110010000

combo: 0000000001001

word: 0100010000000

combo: 0000000001000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 0 1 0 0 1 0 0]
[0 1 0 0 0 1 0 0 0 0 1 1]
[0 0 1 0 0 0 1 1 0 1 0 0]
[0 0 0 1 0 0 0 0 1 0 1 1]
limit on degree (length): 14
ortho basis:
10010100010000
10101000100000
00010001000000
00100010000000
11000000000000

B_can_lab before row reduction:
00101100000001
00000000110110
00011110000000
00000001111000

B_can_lab after row reduction:
00101100000001
00000000110110
00000001111000
00011110000000
00000000111000

word generated as sum over rows of ortho_basis starting at 4: 11000000000000
gate: 00000000001111
k_gate: 00000000001111
nonzero_gate: 11000000000000
radix_gate: 00000000011111

Starting main loop:
word: 11000000000000

combo: 00000000000000

word: 01010100010000

combo: 00000000000001

word: 11111100110000

combo: 00000000000011

temp: 00000000000011

orbit_checks[temp>>log2radix]= 00000000000000

passed if statements
temp basis:
00010001010001
11011110010010
11111100110000
00101010001000
rs list:
1 0 0 0 1 0 1 0 0 0 1 0 0 0 
0 1 0 0 1 0 0 1 1 1 1 0 1 1 
0 0 0 0 1 1 0 0 1 1 1 1 1 1 
0 0 0 1 0 0 0 1 0 1 0 1 0 0 
B_aug:
[1 0 0 0 1 0 1 0 0 0 1 0 0 0]
[0 1 0 0 0 1 0 1 0 0 0 1 0 0]
[0 0 1 0 0 0 1 0 1 0 1 0 0 0]
[0 0 0 1 0 0 0 1 0 1 0 1 0 0]
[0 0 0 0 1 1 0 0 1 1 1 1 1 1]
m:
[1 0 0 0 1 0 1 0 0 0 1 0 0 0]
[0 1 0 0 1 0 0 1 1 1 1 0 1 1]
[0 0 0 0 1 1 0 0 1 1 1 1 1 1]
[0 0 0 1 0 0 0 1 0 1 0 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (13,14), ( 4, 8)(10,12), ( 4,10)( 8,12), ( 2, 4)( 6,10), ( 1,11)( 5, 7), ( 1, 5)( 7,11) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 6, 3, 4, 5, 2, 7, 10, 9, 8, 11, 12, 13]
[0, 1, 8, 3, 4, 5, 10, 7, 2, 9, 6, 11, 12, 13]
[1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 12, 13]
[0, 1, 10, 3, 4, 5, 8, 7, 6, 9, 2, 11, 12, 13]
[1, 0, 7, 2, 5, 4, 3, 6, 11, 8, 9, 10, 12, 13]
[1, 0, 9, 2, 5, 4, 11, 6, 3, 8, 7, 10, 12, 13]
[3, 0, 1, 2, 9, 4, 7, 6, 5, 8, 11, 10, 12, 13]
[1, 0, 11, 2, 5, 4, 9, 6, 7, 8, 3, 10, 12, 13]
[3, 0, 5, 2, 9, 4, 11, 6, 1, 8, 7, 10, 12, 13]
[2, 1, 0, 3, 8, 5, 6, 7, 4, 9, 10, 11, 12, 13]
[2, 1, 4, 3, 8, 5, 10, 7, 0, 9, 6, 11, 12, 13]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
orbits:
11111100110000
11011110110000
11101101110000
11001111110000
word: 01101000100000

combo: 00000000000010

word: 01111001100000

combo: 00000000000110

word: 11101101110000

combo: 00000000000111

temp: 00000000000111

orbit_checks[temp>>log2radix]= 1000100010001000

word: 01000101010000

combo: 00000000000101

word: 11010001000000

combo: 00000000000100

temp: 00000000000100

orbit_checks[temp>>log2radix]= 1000100010001000

passed if statements
temp basis:
11000000010001
11000100000100
11010001000000
00100010100010
rs list:
1 0 0 0 1 0 0 0 0 0 0 0 1 1 
0 0 1 0 0 0 0 0 1 0 0 0 1 1 
0 0 0 0 0 0 1 0 0 0 1 0 1 1 
0 1 0 0 0 1 0 1 0 0 0 1 0 0 
B_aug:
[1 0 0 0 1 0 1 0 0 0 1 0 0 0]
[0 1 0 0 0 1 0 1 0 0 0 1 0 0]
[0 0 1 0 0 0 1 0 1 0 1 0 0 0]
[0 0 0 1 0 0 0 1 0 1 0 1 0 0]
[0 0 0 0 0 0 1 0 0 0 1 0 1 1]
m:
[1 0 0 0 1 0 0 0 0 0 0 0 1 1]
[0 0 1 0 0 0 0 0 1 0 0 0 1 1]
[0 0 0 0 0 0 1 0 0 0 1 0 1 1]
[0 1 0 0 0 1 0 1 0 0 0 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (13,14), ( 7,11)(13,14), ( 7,13,11,14), ( 3, 7)( 9,11)(13,14), ( 1, 3)( 5, 9)(13,14), ( 8,12)(13,14), ( 4,10)(13,14), ( 2, 6)(13,14), ( 2, 8)( 6,12)(13,14) ] )
Right transversal of automorphism group of B_aug:
[0, 3, 2, 1, 4, 9, 6, 7, 8, 5, 10, 11, 12, 13]
[0, 3, 2, 7, 4, 9, 6, 1, 8, 11, 10, 5, 12, 13]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
orbits:
11010001000000
11100010000000
word: 11110011000000

combo: 00000000001100

word: 01100111010000

combo: 00000000001101

word: 11001111110000

combo: 00000000001111

temp: 00000000001111

orbit_checks[temp>>log2radix]= 1000100110011000

word: 01011011100000

combo: 00000000001110

word: 01001010100000

combo: 00000000001010

word: 11011110110000

combo: 00000000001011

temp: 00000000001011

orbit_checks[temp>>log2radix]= 1000100110011000

word: 01110110010000

combo: 00000000001001

word: 11100010000000

combo: 00000000001000

temp: 00000000001000

orbit_checks[temp>>log2radix]= 1000100110011000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 0 1 0 0 1 0 0]
[0 1 0 0 0 1 0 0 0 0 1 1]
[0 0 1 0 0 0 1 1 0 1 0 0]
[0 0 0 1 0 0 0 0 1 0 1 1]
limit on degree (length): 15
ortho basis:
100010100010000
100101000100000
000010001000000
000100010000000
101000000000000
110000000000000

B_can_lab before row reduction:
000101100000001
000000000110110
000011110000000
000000001111000

B_can_lab after row reduction:
000101100000001
000000000110110
000000001111000
000011110000000
000000000111000

word generated as sum over rows of ortho_basis starting at 4: 011000000000000
gate: 000000000001111
k_gate: 000000000001111
nonzero_gate: 111000000000000
radix_gate: 000000000011111

Starting main loop:
word: 011000000000000

combo: 000000000000000

word: 111010100010000

combo: 000000000000001

word: 011111100110000

combo: 000000000000011

word: 111101000100000

combo: 000000000000010

word: 111111001100000

combo: 000000000000110

temp: 000000000000110

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
111101000110001
111101100100100
111111001100000
000100010100010
rs list:
1 0 0 0 1 1 0 0 0 1 0 1 1 1 1 
0 0 1 0 0 1 0 0 1 1 0 1 1 1 1 
0 0 0 0 0 1 1 0 0 1 1 1 1 1 1 
0 1 0 0 0 1 0 1 0 0 0 1 0 0 0 
B_aug:
[1 0 0 0 1 0 1 0 0 0 1 0 0 0 0]
[0 1 0 0 0 1 0 1 0 0 0 1 0 0 0]
[0 0 1 0 0 0 1 0 1 0 1 0 0 0 0]
[0 0 0 1 0 0 0 1 0 1 0 1 0 0 0]
[0 0 0 0 0 1 1 0 0 1 1 1 1 1 1]
m:
[1 0 0 0 1 1 0 0 0 1 0 1 1 1 1]
[0 0 1 0 0 1 0 0 1 1 0 1 1 1 1]
[0 0 0 0 0 1 1 0 0 1 1 1 1 1 1]
[0 1 0 0 0 1 0 1 0 0 0 1 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (14,15), (13,14), ( 7,11), ( 3, 7)( 9,11), (1,3)(5,9), ( 2,12)( 6, 8), ( 2, 6)( 8,12) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 7, 4, 5, 6, 3, 8, 11, 10, 9, 12, 13, 14]
[0, 1, 2, 9, 4, 5, 6, 11, 8, 3, 10, 7, 12, 13, 14]
[0, 3, 2, 1, 4, 9, 6, 7, 8, 5, 10, 11, 12, 13, 14]
[0, 1, 2, 11, 4, 5, 6, 9, 8, 7, 10, 3, 12, 13, 14]
[0, 3, 2, 5, 4, 9, 6, 11, 8, 1, 10, 7, 12, 13, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
111111001100000
111011011100000
111110110010000
111100111010000
word: 011101101110000

combo: 000000000000111

word: 111000101010000

combo: 000000000000101

word: 011010001000000

combo: 000000000000100

word: 011110011000000

combo: 000000000001100

word: 111100111010000

combo: 000000000001101

temp: 000000000001101

orbit_checks[temp>>log2radix]= 110001001000000

word: 011001111110000

combo: 000000000001111

word: 111011011100000

combo: 000000000001110

temp: 000000000001110

orbit_checks[temp>>log2radix]= 110001001000000

word: 111001010100000

combo: 000000000001010

word: 011011110110000

combo: 000000000001011

word: 111110110010000

combo: 000000000001001

temp: 000000000001001

orbit_checks[temp>>log2radix]= 110001001000000

word: 011100010000000

combo: 000000000001000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 0 1 0 0 1 0 0]
[0 1 0 0 0 1 0 0 0 0 1 1]
[0 0 1 0 0 0 1 1 0 1 0 0]
[0 0 0 1 0 0 0 0 1 0 1 1]
limit on degree (length): 16
ortho basis:
1000010100010000
1000101000100000
0000010001000000
0000100010000000
1001000000000000
1010000000000000
1100000000000000

B_can_lab before row reduction:
0000101100000001
0000000000110110
0000011110000000
0000000001111000

B_can_lab after row reduction:
0000101100000001
0000000000110110
0000000001111000
0000011110000000
0000000000111000

word generated as sum over rows of ortho_basis starting at 4: 1111000000000000
gate: 0000000000001111
k_gate: 0000000000001111
nonzero_gate: 1111000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1111000000000000

combo: 0000000000000000

temp: 0000000000000000

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1111000000000000
0000010001010001
0000100010100010
0000101010001000
rs list:
0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
1 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 
0 1 0 0 0 1 0 1 0 0 0 1 0 0 0 0 
0 0 0 1 0 0 0 1 0 1 0 1 0 0 0 0 
B_aug:
[1 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0]
[0 1 0 0 0 1 0 1 0 0 0 1 0 0 0 0]
[0 0 1 0 0 0 1 0 1 0 1 0 0 0 0 0]
[0 0 0 1 0 0 0 1 0 1 0 1 0 0 0 0]
[0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1]
m:
[0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1]
[1 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0]
[0 1 0 0 0 1 0 1 0 0 0 1 0 0 0 0]
[0 0 0 1 0 0 0 1 0 1 0 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 4,10), ( 2, 4, 6,10), ( 2, 4,12)( 6,10, 8), ( 2, 4,12)( 6,10, 8)( 7,11), ( 2, 4,12)( 3, 9)( 6,10, 8), ( 1, 5)( 2, 4,12)( 3, 9)( 6,10, 8), ( 1, 7)( 2, 4,12)( 3, 9)( 5,11)( 6,10, 8), ( 2, 4,12)( 3, 9)( 6,10, 8)(14,15), ( 2, 4,12)( 3, 9)( 6,10, 8)(14,16), ( 2, 4,12)( 3, 9)( 6,10, 8)(13,14,16) ] )
Right transversal of automorphism group of B_aug:
[3, 2, 1, 0, 9, 8, 7, 6, 5, 4, 11, 10, 12, 13, 14, 15]
[1, 2, 3, 0, 5, 8, 7, 6, 9, 4, 11, 10, 12, 13, 14, 15]
[1, 2, 7, 0, 5, 8, 3, 6, 11, 4, 9, 10, 12, 13, 14, 15]
[2, 1, 0, 3, 8, 5, 6, 7, 4, 9, 10, 11, 12, 13, 14, 15]
[2, 1, 6, 3, 8, 5, 0, 7, 10, 9, 4, 11, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111000000000000
word: 0111010100010000

combo: 0000000000000001

word: 1111111100110000

combo: 0000000000000011

word: 0111101000100000

combo: 0000000000000010

word: 0111111001100000

combo: 0000000000000110

word: 1111101101110000

combo: 0000000000000111

word: 0111000101010000

combo: 0000000000000101

word: 1111010001000000

combo: 0000000000000100

word: 1111110011000000

combo: 0000000000001100

temp: 0000000000001100

orbit_checks[temp>>log2radix]= 0000000000000001

passed if statements
temp basis:
1111110011000000
0000010001010001
0000100010100010
0000101010001000
rs list:
0 0 0 0 0 0 1 1 0 0 1 1 1 1 1 1 
1 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 
0 1 0 0 0 1 0 1 0 0 0 1 0 0 0 0 
0 0 0 1 0 0 0 1 0 1 0 1 0 0 0 0 
B_aug:
[1 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0]
[0 1 0 0 0 1 0 1 0 0 0 1 0 0 0 0]
[0 0 1 0 0 0 1 0 1 0 1 0 0 0 0 0]
[0 0 0 1 0 0 0 1 0 1 0 1 0 0 0 0]
[0 0 0 0 0 0 1 1 0 0 1 1 1 1 1 1]
m:
[0 0 0 0 0 0 1 1 0 0 1 1 1 1 1 1]
[1 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0]
[0 1 0 0 0 1 0 1 0 0 0 1 0 0 0 0]
[0 0 0 1 0 0 0 1 0 1 0 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), ( 8,12), ( 7,11), ( 4, 8)(10,12), (3,9), ( 2, 4)( 6,10), (1,5), ( 1, 7)( 5,11) ] )
Right transversal of automorphism group of B_aug:
[3, 2, 1, 0, 9, 8, 7, 6, 5, 4, 11, 10, 12, 13, 14, 15]
[1, 2, 3, 0, 5, 8, 7, 6, 9, 4, 11, 10, 12, 13, 14, 15]
[1, 2, 7, 0, 5, 8, 3, 6, 11, 4, 9, 10, 12, 13, 14, 15]
[2, 1, 0, 3, 8, 5, 6, 7, 4, 9, 10, 11, 12, 13, 14, 15]
[2, 1, 6, 3, 8, 5, 0, 7, 10, 9, 4, 11, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111110011000000
word: 0111100111010000

combo: 0000000000001101

word: 1111001111110000

combo: 0000000000001111

word: 0111011011100000

combo: 0000000000001110

word: 0111001010100000

combo: 0000000000001010

word: 1111011110110000

combo: 0000000000001011

word: 0111110110010000

combo: 0000000000001001

word: 1111100010000000

combo: 0000000000001000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 0 0 0 0 0 1 1]
[0 1 0 0 0 1 1 0 1 0 0 0]
[0 0 1 0 0 0 0 1 0 0 1 1]
[0 0 0 1 0 0 0 0 0 1 1 1]
limit on degree (length): 13
ortho basis:
0110100010000
0001000100000
0001001000000
0100010000000

B_can_lab before row reduction:
0101100010000
0000000001111
0001101100000
0011110000000

B_can_lab after row reduction:
0000000001111
0101100010000
0001101100000
0011110000000
0000000111000

word generated as sum over rows of ortho_basis starting at 4: 0000000000000
gate: 0000000001111
k_gate: 0000000001111
nonzero_gate: 1000000000000
radix_gate: 0000000011111

Starting main loop:
word: 0000000000000

combo: 0000000000000

word: 0110100010000

combo: 0000000000001

word: 0111100110000

combo: 0000000000011

word: 0001000100000

combo: 0000000000010

word: 0000001100000

combo: 0000000000110

word: 0110101110000

combo: 0000000000111

word: 0111101010000

combo: 0000000000101

word: 0001001000000

combo: 0000000000100

word: 0101011000000

combo: 0000000001100

word: 0011111010000

combo: 0000000001101

word: 0010111110000

combo: 0000000001111

word: 0100011100000

combo: 0000000001110

word: 0101010100000

combo: 0000000001010

word: 0011110110000

combo: 0000000001011

word: 0010110010000

combo: 0000000001001

word: 0100010000000

combo: 0000000001000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 0 0 0 0 0 1 1]
[0 1 0 0 0 1 1 0 1 0 0 0]
[0 0 1 0 0 0 0 1 0 0 1 1]
[0 0 0 1 0 0 0 0 0 1 1 1]
limit on degree (length): 14
ortho basis:
00110100010000
00001000100000
00001001000000
00100010000000
11000000000000

B_can_lab before row reduction:
00101100010000
00000000001111
00001101100000
00011110000000

B_can_lab after row reduction:
00000000001111
00101100010000
00001101100000
00011110000000
00000000111000

word generated as sum over rows of ortho_basis starting at 4: 11000000000000
gate: 00000000001111
k_gate: 00000000001111
nonzero_gate: 11000000000000
radix_gate: 00000000011111

Starting main loop:
word: 11000000000000

combo: 00000000000000

word: 11110100010000

combo: 00000000000001

word: 11111100110000

combo: 00000000000011

temp: 00000000000011

orbit_checks[temp>>log2radix]= 00000000000000

passed if statements
temp basis:
00100010010001
11011010110100
11111100110000
00110010001000
rs list:
1 0 0 0 1 0 0 1 0 0 0 1 0 0 
0 0 1 0 1 1 0 1 0 1 1 0 1 1 
0 0 0 0 1 1 0 0 1 1 1 1 1 1 
0 0 0 1 0 0 0 1 0 0 1 1 0 0 
B_aug:
[1 0 0 0 1 0 0 1 0 0 0 1 0 0]
[0 1 0 0 0 1 1 0 0 1 0 0 0 0]
[0 0 1 0 0 0 0 1 1 0 0 1 0 0]
[0 0 0 1 0 0 0 1 0 0 1 1 0 0]
[0 0 0 0 1 1 0 0 1 1 1 1 1 1]
m:
[1 0 0 0 1 0 0 1 0 0 0 1 0 0]
[0 0 1 0 1 1 0 1 0 1 1 0 1 1]
[0 0 0 0 1 1 0 0 1 1 1 1 1 1]
[0 0 0 1 0 0 0 1 0 0 1 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 4, 8)(11,12), ( 4,11)( 8,12), ( 3, 4)( 9,11), (1,3)(5,9), ( 6,10), (2,7), (13,14) ] )
Right transversal of automorphism group of B_aug:
[0, 5, 2, 3, 4, 1, 9, 7, 8, 6, 10, 11, 12, 13]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
orbits:
11111100110000
11011110110000
11110101110000
11111101010000
11010111110000
11011111010000
word: 11001000100000

combo: 00000000000010

temp: 00000000000010

orbit_checks[temp>>log2radix]= 1010100010101000

passed if statements
temp basis:
00100010010001
00100110000100
00110010001000
11000001000010
rs list:
1 0 0 0 1 0 0 1 0 0 0 1 0 0 
0 0 1 0 0 0 0 1 1 0 0 1 0 0 
0 0 0 1 0 0 0 1 0 0 1 1 0 0 
0 1 0 0 0 0 1 0 0 0 0 0 1 1 
B_aug:
[1 0 0 0 1 0 0 1 0 0 0 1 0 0]
[0 1 0 0 0 1 1 0 0 1 0 0 0 0]
[0 0 1 0 0 0 0 1 1 0 0 1 0 0]
[0 0 0 1 0 0 0 1 0 0 1 1 0 0]
[0 0 0 0 0 1 0 0 0 1 0 0 1 1]
m:
[1 0 0 0 1 0 0 1 0 0 0 1 0 0]
[0 0 1 0 0 0 0 1 1 0 0 1 0 0]
[0 0 0 1 0 0 0 1 0 0 1 1 0 0]
[0 1 0 0 0 0 1 0 0 0 0 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 8,12), ( 4, 8)(11,12), ( 3, 4)( 9,11), (1,3)(5,9), (13,14), ( 6,10)(13,14), ( 2, 7)(13,14), ( 2,13, 7,14) ] )
Right transversal of automorphism group of B_aug:
[0, 5, 2, 3, 4, 1, 9, 7, 8, 6, 10, 11, 12, 13]
[0, 5, 2, 3, 4, 12, 9, 7, 8, 13, 10, 11, 1, 6]
orbits:
11001000100000
11000001100000
11001001000000
word: 11000001100000

combo: 00000000000110

temp: 00000000000110

orbit_checks[temp>>log2radix]= 1010100011111100

word: 11110101110000

combo: 00000000000111

temp: 00000000000111

orbit_checks[temp>>log2radix]= 1010100011111100

word: 11111101010000

combo: 00000000000101

temp: 00000000000101

orbit_checks[temp>>log2radix]= 1010100011111100

word: 11001001000000

combo: 00000000000100

temp: 00000000000100

orbit_checks[temp>>log2radix]= 1010100011111100

word: 11101011000000

combo: 00000000001100

word: 11011111010000

combo: 00000000001101

temp: 00000000001101

orbit_checks[temp>>log2radix]= 1010100011111100

word: 11010111110000

combo: 00000000001111

temp: 00000000001111

orbit_checks[temp>>log2radix]= 1010100011111100

word: 11100011100000

combo: 00000000001110

word: 11101010100000

combo: 00000000001010

word: 11011110110000

combo: 00000000001011

temp: 00000000001011

orbit_checks[temp>>log2radix]= 1010100011111100

word: 11010110010000

combo: 00000000001001

word: 11100010000000

combo: 00000000001000

temp: 00000000001000

orbit_checks[temp>>log2radix]= 1010100011111100

passed if statements
temp basis:
11000000010001
11000100000100
11010000001000
11100010000000
rs list:
1 0 0 0 1 0 0 0 0 0 0 0 1 1 
0 0 1 0 0 0 0 0 1 0 0 0 1 1 
0 0 0 1 0 0 0 0 0 0 1 0 1 1 
0 0 0 0 0 0 0 1 0 0 0 1 1 1 
B_aug:
[1 0 0 0 1 0 0 1 0 0 0 1 0 0]
[0 1 0 0 0 1 1 0 0 1 0 0 0 0]
[0 0 1 0 0 0 0 1 1 0 0 1 0 0]
[0 0 0 1 0 0 0 1 0 0 1 1 0 0]
[0 0 0 0 0 0 0 1 0 0 0 1 1 1]
m:
[1 0 0 0 1 0 0 0 0 0 0 0 1 1]
[0 0 1 0 0 0 0 0 1 0 0 0 1 1]
[0 0 0 1 0 0 0 0 0 0 1 0 1 1]
[0 0 0 0 0 0 0 1 0 0 0 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (13,14), ( 8,12), ( 8,13)(12,14), ( 7,10), (6,7), ( 4, 8)(11,12), ( 3, 4)( 9,11), (2,6), (1,3)(5,9) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
orbits:
11100010000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 1 0 1 0 0 0 1 0 0]
[0 1 0 0 0 0 1 0 0 0 0 0 1 1]
[0 0 1 0 0 0 0 1 1 0 0 1 0 0]
[0 0 0 1 0 0 0 1 0 0 1 1 0 0]
[0 0 0 0 1 0 0 0 0 1 0 0 1 1]
limit on degree (length): 15
ortho basis:
001101000100000
110010001000000
001000010000000
010000100000000

B_can_lab before row reduction:
000000010110001
001101100000000
000000000110110
000000001111000
011110000000000

B_can_lab after row reduction:
000000010110001
000000000110110
000000001111000
001101100000000
011110000000000

word generated as sum over rows of ortho_basis starting at 4: 000000000000000
gate: 000000000011111
k_gate: 000000000001111
nonzero_gate: 100000000000000
radix_gate: 000000000011111

Starting main loop:
word: 000000000000000

combo: 000000000000000

word: 001101000100000

combo: 000000000000001

word: 111111001100000

combo: 000000000000011

temp: 000000000000011

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
001000010100001
110110011100100
111111001100000
001100010001000
010000101000010
rs list:
1 0 0 0 0 1 0 1 0 0 0 0 1 0 0 
0 0 1 0 0 1 1 1 0 0 1 1 0 1 1 
0 0 0 0 0 1 1 0 0 1 1 1 1 1 1 
0 0 0 1 0 0 0 1 0 0 0 1 1 0 0 
0 1 0 0 0 0 1 0 1 0 0 0 0 1 0 
B_aug:
[1 0 0 0 0 1 0 1 0 0 0 0 1 0 0]
[0 1 0 0 0 0 1 0 1 0 0 0 0 1 0]
[0 0 1 0 0 0 0 1 0 1 0 0 1 0 0]
[0 0 0 1 0 0 0 1 0 0 0 1 1 0 0]
[0 0 0 0 1 0 0 0 1 0 1 0 0 1 0]
[0 0 0 0 0 1 1 0 0 1 1 1 1 1 1]
m:
[1 0 0 0 0 1 0 1 0 0 0 0 1 0 0]
[0 0 1 0 0 1 1 1 0 0 1 1 0 1 1]
[0 0 0 0 0 1 1 0 0 1 1 1 1 1 1]
[0 0 0 1 0 0 0 1 0 0 0 1 1 0 0]
[0 1 0 0 0 0 1 0 1 0 0 0 0 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 4, 8)(12,13), ( 4,12)( 8,13), ( 3, 4)(10,12), ( 1, 3)( 6,10), ( 2,14)( 7, 9), ( 2, 7)( 9,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 8, 5, 6, 7, 4, 9, 13, 11, 12, 10, 14]
[0, 1, 2, 3, 10, 5, 6, 7, 13, 9, 4, 11, 12, 8, 14]
[0, 4, 2, 3, 1, 5, 10, 7, 8, 9, 6, 11, 12, 13, 14]
[0, 1, 2, 3, 13, 5, 6, 7, 10, 9, 8, 11, 12, 4, 14]
[0, 4, 2, 3, 6, 5, 10, 7, 13, 9, 1, 11, 12, 8, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
111111001100000
110111011100000
101111101100000
100111111100000
word: 110010001000000

combo: 000000000000010

temp: 000000000000010

orbit_checks[temp>>log2radix]= 1000100010001000

passed if statements
temp basis:
001000010100001
001001010000100
001100010001000
100010100000010
010010100010000
rs list:
1 0 0 0 0 1 0 1 0 0 0 0 1 0 0 
0 0 1 0 0 0 0 1 0 1 0 0 1 0 0 
0 0 0 1 0 0 0 1 0 0 0 1 1 0 0 
0 1 0 0 0 0 0 0 1 0 1 0 0 0 1 
0 0 0 0 1 0 0 0 1 0 1 0 0 1 0 
B_aug:
[1 0 0 0 0 1 0 1 0 0 0 0 1 0 0]
[0 1 0 0 0 0 1 0 1 0 0 0 0 1 0]
[0 0 1 0 0 0 0 1 0 1 0 0 1 0 0]
[0 0 0 1 0 0 0 1 0 0 0 1 1 0 0]
[0 0 0 0 1 0 0 0 1 0 1 0 0 1 0]
[0 0 0 0 0 0 1 0 0 0 1 0 0 1 1]
m:
[1 0 0 0 0 1 0 1 0 0 0 0 1 0 0]
[0 0 1 0 0 0 0 1 0 1 0 0 1 0 0]
[0 0 0 1 0 0 0 1 0 0 0 1 1 0 0]
[0 1 0 0 0 0 0 0 1 0 1 0 0 0 1]
[0 0 0 0 1 0 0 0 1 0 1 0 0 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 8,13), ( 4, 8)(12,13), ( 3, 4)(10,12), ( 2, 5)(14,15), ( 1, 3)( 6,10), ( 5,14)( 9,11), ( 5,11)( 9,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 5, 10, 7, 8, 9, 6, 11, 12, 14, 13]
[0, 1, 2, 3, 4, 5, 13, 7, 8, 9, 14, 11, 12, 6, 10]
[0, 1, 2, 3, 6, 5, 4, 7, 14, 9, 10, 11, 12, 13, 8]
[0, 1, 2, 3, 4, 5, 14, 7, 8, 9, 13, 11, 12, 10, 6]
orbits:
110010001000000
100010101000000
word: 111010011000000

combo: 000000000000110

word: 110111011100000

combo: 000000000000111

temp: 000000000000111

orbit_checks[temp>>log2radix]= 1000110010001100

word: 000101010100000

combo: 000000000000101

word: 001000010000000

combo: 000000000000100

word: 011000110000000

combo: 000000000001100

word: 010101110100000

combo: 000000000001101

word: 100111111100000

combo: 000000000001111

temp: 000000000001111

orbit_checks[temp>>log2radix]= 1000110010001100

word: 101010111000000

combo: 000000000001110

word: 100010101000000

combo: 000000000001010

temp: 000000000001010

orbit_checks[temp>>log2radix]= 1000110010001100

word: 101111101100000

combo: 000000000001011

temp: 000000000001011

orbit_checks[temp>>log2radix]= 1000110010001100

word: 011101100100000

combo: 000000000001001

word: 010000100000000

combo: 000000000001000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 1 1 0 0 0 0 1 0 0]
[0 1 0 0 0 0 0 0 1 0 1 0 0 0 1]
[0 0 1 0 0 0 0 1 0 1 0 0 1 0 0]
[0 0 0 1 0 0 0 1 0 0 0 1 1 0 0]
[0 0 0 0 1 0 0 0 1 0 1 0 0 1 0]
[0 0 0 0 0 1 0 0 0 0 1 0 0 1 1]
limit on degree (length): 16
ortho basis:
0001101001000000
0001000010000000
1110000100000000

B_can_lab before row reduction:
0000000010110001
0101010100000000
0000000000110110
0000000001111000
0011011000000000
0111100000000000

B_can_lab after row reduction:
0000000010110001
0000000000110110
0000000001111000
0101010100000000
0011011000000000
0111100000000000
0000000000100001

word generated as sum over rows of ortho_basis starting at 3: 0000000000000000
gate: 0000000000111111
k_gate: 0000000000000111
nonzero_gate: 1000000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 0000000000000000

combo: 0000000000000000

word: 0001101001000000

combo: 0000000000000001

word: 0000101011000000

combo: 0000000000000011

word: 0001000010000000

combo: 0000000000000010

word: 1111000110000000

combo: 0000000000000110

word: 1110101111000000

combo: 0000000000000111

temp: 0000000000000111

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1010111011000010
1100111011010000
1110101111000000
0110010000100000
0001000011000001
0001001010000100
rs list:
0 1 0 0 0 0 1 1 0 1 1 1 0 1 0 1 
0 0 0 0 1 0 1 1 0 1 1 1 0 0 1 1 
0 0 0 0 0 0 1 1 1 1 0 1 0 1 1 1 
0 0 0 0 0 1 0 0 0 0 1 0 0 1 1 0 
1 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 
0 0 1 0 0 0 0 1 0 1 0 0 1 0 0 0 
B_aug:
[1 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0]
[0 1 0 0 0 0 0 0 1 0 1 0 0 0 1 0]
[0 0 1 0 0 0 0 1 0 1 0 0 1 0 0 0]
[0 0 0 1 0 0 0 1 0 0 0 1 1 0 0 0]
[0 0 0 0 1 0 0 0 1 0 1 0 0 1 0 0]
[0 0 0 0 0 1 0 0 0 0 1 0 0 1 1 0]
[0 0 0 0 0 0 1 1 1 1 0 1 0 1 1 1]
m:
[0 1 0 0 0 0 1 1 0 1 1 1 0 1 0 1]
[0 0 0 0 1 0 1 1 0 1 1 1 0 0 1 1]
[0 0 0 0 0 0 1 1 1 1 0 1 0 1 1 1]
[0 0 0 0 0 1 0 0 0 0 1 0 0 1 1 0]
[1 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0]
[0 0 1 0 0 0 0 1 0 1 0 0 1 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 6,11)(14,15), ( 6,14)(11,15), ( 5, 6)( 9,15), ( 2, 5)(14,15), ( 1, 3)( 7,10), ( 3,13)( 8,10), ( 3,10)( 8,13) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 7, 4, 5, 6, 3, 8, 9, 10, 12, 11, 13, 14, 15]
[0, 1, 2, 11, 4, 5, 6, 12, 8, 9, 10, 3, 7, 13, 14, 15]
[0, 1, 3, 2, 4, 5, 6, 7, 8, 11, 10, 9, 12, 13, 14, 15]
[0, 1, 2, 12, 4, 5, 6, 11, 8, 9, 10, 7, 3, 13, 14, 15]
[0, 1, 3, 9, 4, 5, 6, 12, 8, 11, 10, 2, 7, 13, 14, 15]
[2, 1, 3, 0, 4, 5, 9, 7, 8, 11, 10, 6, 12, 13, 14, 15]
[2, 1, 3, 6, 4, 5, 9, 12, 8, 11, 10, 0, 7, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1110101111000000
1111101101000000
word: 1111101101000000

combo: 0000000000000101

temp: 0000000000000101

orbit_checks[temp>>log2radix]= 0000000010100000

word: 1110000100000000

combo: 0000000000000100

temp: 0000000000000100

orbit_checks[temp>>log2radix]= 0000000010100000

passed if statements
temp basis:
0001000011000001
0001001010000100
0001100010001000
1010010000000010
1100010000010000
0110010000100000
rs list:
1 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 
0 0 1 0 0 0 0 1 0 1 0 0 1 0 0 0 
0 0 0 1 0 0 0 1 0 0 0 1 1 0 0 0 
0 1 0 0 0 0 0 0 0 0 1 0 0 1 0 1 
0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 1 
0 0 0 0 0 1 0 0 0 0 1 0 0 1 1 0 
B_aug:
[1 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0]
[0 1 0 0 0 0 0 0 1 0 1 0 0 0 1 0]
[0 0 1 0 0 0 0 1 0 1 0 0 1 0 0 0]
[0 0 0 1 0 0 0 1 0 0 0 1 1 0 0 0]
[0 0 0 0 1 0 0 0 1 0 1 0 0 1 0 0]
[0 0 0 0 0 1 0 0 0 0 1 0 0 1 1 0]
[0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1]
m:
[1 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0]
[0 0 1 0 0 0 0 1 0 1 0 0 1 0 0 0]
[0 0 0 1 0 0 0 1 0 0 0 1 1 0 0 0]
[0 1 0 0 0 0 0 0 0 0 1 0 0 1 0 1]
[0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 1]
[0 0 0 0 0 1 0 0 0 0 1 0 0 1 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 8,13), ( 5, 6)(14,16), ( 4, 8)(12,13), ( 3, 4)(10,12), ( 2, 5)(14,15), ( 1, 3)( 7,10), ( 6,15)(11,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 5, 6, 7, 13, 9, 10, 11, 12, 8, 15, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 14, 9, 10, 11, 12, 15, 8, 13]
[0, 1, 2, 3, 4, 8, 6, 7, 5, 9, 15, 11, 12, 13, 14, 10]
[0, 1, 2, 3, 4, 5, 6, 7, 15, 9, 10, 11, 12, 14, 13, 8]
orbits:
1110000100000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 1 0 1 0 0 0 1 0 0]
[0 1 0 0 0 0 1 0 0 0 0 0 1 1]
[0 0 1 0 0 0 0 1 1 0 0 1 0 0]
[0 0 0 1 0 0 0 1 0 0 1 1 0 0]
[0 0 0 0 1 0 0 0 0 1 0 0 1 1]
limit on degree (length): 16
ortho basis:
0001101000100000
1010010001000000
0001000010000000
0010000100000000
1100000000000000

B_can_lab before row reduction:
0000000010110001
0001101100000000
0000000000110110
0000000001111000
0011110000000000

B_can_lab after row reduction:
0000000010110001
0000000000110110
0000000001111000
0001101100000000
0011110000000000

word generated as sum over rows of ortho_basis starting at 4: 1100000000000000
gate: 0000000000011111
k_gate: 0000000000001111
nonzero_gate: 1100000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1100000000000000

combo: 0000000000000000

word: 1101101000100000

combo: 0000000000000001

word: 0111111001100000

combo: 0000000000000011

word: 0110010001000000

combo: 0000000000000010

word: 0111010011000000

combo: 0000000000000110

word: 0110111011100000

combo: 0000000000000111

word: 1100101010100000

combo: 0000000000000101

word: 1101000010000000

combo: 0000000000000100

temp: 0000000000000100

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1100000000100001
1100001000000100
1100100000001000
1101000010000000
0010000101000010
rs list:
1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 
0 0 1 0 0 0 0 0 0 1 0 0 0 0 1 1 
0 0 0 1 0 0 0 0 0 0 0 1 0 0 1 1 
0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 1 
0 1 0 0 0 0 1 0 1 0 0 0 0 1 0 0 
B_aug:
[1 0 0 0 0 1 0 1 0 0 0 0 1 0 0 0]
[0 1 0 0 0 0 1 0 1 0 0 0 0 1 0 0]
[0 0 1 0 0 0 0 1 0 1 0 0 1 0 0 0]
[0 0 0 1 0 0 0 1 0 0 0 1 1 0 0 0]
[0 0 0 0 1 0 0 0 1 0 1 0 0 1 0 0]
[0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 1]
m:
[1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1]
[0 0 1 0 0 0 0 0 0 1 0 0 0 0 1 1]
[0 0 0 1 0 0 0 0 0 0 0 1 0 0 1 1]
[0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 1]
[0 1 0 0 0 0 1 0 1 0 0 0 0 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), ( 8,13)(15,16), ( 8,15,13,16), ( 4, 8)(12,13)(15,16), ( 3, 4)(10,12)(15,16), ( 1, 3)( 6,10)(15,16), ( 9,14)(15,16), ( 5,11)(15,16), ( 2, 7)(15,16), ( 2, 9)( 7,14)(15,16) ] )
Right transversal of automorphism group of B_aug:
[0, 4, 2, 3, 1, 5, 10, 7, 8, 9, 6, 11, 12, 13, 14, 15]
[0, 4, 2, 3, 8, 5, 10, 7, 1, 9, 13, 11, 12, 6, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1101000010000000
word: 1111000110000000

combo: 0000000000001100

word: 1110101110100000

combo: 0000000000001101

temp: 0000000000001101

orbit_checks[temp>>log2radix]= 0000000000010000

passed if statements
temp basis:
1100101011100010
1100111010110000
1110101110100000
0001000010100001
0001001010000100
rs list:
0 1 0 0 0 1 1 1 0 1 0 1 0 0 1 1 
0 0 0 0 1 1 0 1 0 1 1 1 0 0 1 1 
0 0 0 0 0 1 0 1 1 1 0 1 0 1 1 1 
1 0 0 0 0 1 0 1 0 0 0 0 1 0 0 0 
0 0 1 0 0 0 0 1 0 1 0 0 1 0 0 0 
B_aug:
[1 0 0 0 0 1 0 1 0 0 0 0 1 0 0 0]
[0 1 0 0 0 0 1 0 1 0 0 0 0 1 0 0]
[0 0 1 0 0 0 0 1 0 1 0 0 1 0 0 0]
[0 0 0 1 0 0 0 1 0 0 0 1 1 0 0 0]
[0 0 0 0 1 0 0 0 1 0 1 0 0 1 0 0]
[0 0 0 0 0 1 0 1 1 1 0 1 0 1 1 1]
m:
[0 1 0 0 0 1 1 1 0 1 0 1 0 0 1 1]
[0 0 0 0 1 1 0 1 0 1 1 1 0 0 1 1]
[0 0 0 0 0 1 0 1 1 1 0 1 0 1 1 1]
[1 0 0 0 0 1 0 1 0 0 0 0 1 0 0 0]
[0 0 1 0 0 0 0 1 0 1 0 0 1 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), ( 9,14), ( 5, 9)(11,14), ( 2, 5)( 7,11), ( 1, 3)( 6,10), ( 3,13)( 8,10), ( 3,10)( 8,13) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 7, 4, 5, 6, 3, 8, 9, 10, 12, 11, 13, 14, 15]
[0, 1, 2, 11, 4, 5, 6, 12, 8, 9, 10, 3, 7, 13, 14, 15]
[0, 1, 3, 2, 4, 5, 6, 7, 8, 11, 10, 9, 12, 13, 14, 15]
[0, 1, 2, 12, 4, 5, 6, 11, 8, 9, 10, 7, 3, 13, 14, 15]
[0, 1, 3, 9, 4, 5, 6, 12, 8, 11, 10, 2, 7, 13, 14, 15]
[2, 1, 3, 0, 4, 9, 6, 7, 8, 11, 10, 5, 12, 13, 14, 15]
[2, 1, 3, 5, 4, 9, 6, 12, 8, 11, 10, 0, 7, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1110101110100000
1111101100100000
word: 0100111111100000

combo: 0000000000001111

word: 0101010111000000

combo: 0000000000001110

word: 0100010101000000

combo: 0000000000001010

word: 0101111101100000

combo: 0000000000001011

word: 1111101100100000

combo: 0000000000001001

temp: 0000000000001001

orbit_checks[temp>>log2radix]= 0010001000010000

word: 1110000100000000

combo: 0000000000001000

temp: 0000000000001000

orbit_checks[temp>>log2radix]= 0010001000010000

passed if statements
temp basis:
0001000010100001
1100000001000010
1100010000010000
1110000100000000
0001001010000100
rs list:
1 0 0 0 0 1 0 1 0 0 0 0 1 0 0 0 
0 1 0 0 0 0 1 0 0 0 0 0 0 0 1 1 
0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 1 
0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 
0 0 1 0 0 0 0 1 0 1 0 0 1 0 0 0 
B_aug:
[1 0 0 0 0 1 0 1 0 0 0 0 1 0 0 0]
[0 1 0 0 0 0 1 0 1 0 0 0 0 1 0 0]
[0 0 1 0 0 0 0 1 0 1 0 0 1 0 0 0]
[0 0 0 1 0 0 0 1 0 0 0 1 1 0 0 0]
[0 0 0 0 1 0 0 0 1 0 1 0 0 1 0 0]
[0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1]
m:
[1 0 0 0 0 1 0 1 0 0 0 0 1 0 0 0]
[0 1 0 0 0 0 1 0 0 0 0 0 0 0 1 1]
[0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 1]
[0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1]
[0 0 1 0 0 0 0 1 0 1 0 0 1 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), ( 9,14), ( 9,15)(14,16), ( 8,13), ( 5, 9)(11,14), ( 4,12), ( 3, 8)(10,13), ( 2, 5)( 7,11), ( 1, 3)( 6,10) ] )
Right transversal of automorphism group of B_aug:
[4, 3, 8, 1, 0, 10, 11, 14, 2, 13, 5, 6, 15, 9, 7, 12]
[1, 3, 8, 4, 0, 6, 11, 14, 2, 13, 5, 10, 15, 9, 7, 12]
[1, 3, 4, 8, 0, 6, 11, 14, 2, 10, 5, 13, 15, 9, 7, 12]
[3, 1, 2, 0, 4, 11, 6, 7, 8, 9, 10, 5, 12, 13, 14, 15]
[1, 3, 4, 14, 0, 6, 11, 8, 2, 10, 5, 15, 13, 9, 7, 12]
orbits:
1110000100000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 0 0 0 0 0 1 1]
[0 1 0 0 0 1 1 0 1 0 0 0]
[0 0 1 0 0 0 0 1 0 0 1 1]
[0 0 0 1 0 0 0 0 0 1 1 1]
limit on degree (length): 15
ortho basis:
000110100010000
000001000100000
000001001000000
000100010000000
101000000000000
110000000000000

B_can_lab before row reduction:
000101100010000
000000000001111
000001101100000
000011110000000

B_can_lab after row reduction:
000000000001111
000101100010000
000001101100000
000011110000000
000000000111000

word generated as sum over rows of ortho_basis starting at 4: 011000000000000
gate: 000000000001111
k_gate: 000000000001111
nonzero_gate: 111000000000000
radix_gate: 000000000011111

Starting main loop:
word: 011000000000000

combo: 000000000000000

word: 011110100010000

combo: 000000000000001

word: 011111100110000

combo: 000000000000011

word: 011001000100000

combo: 000000000000010

word: 011000001100000

combo: 000000000000110

word: 011110101110000

combo: 000000000000111

word: 011111101010000

combo: 000000000000101

word: 011001001000000

combo: 000000000000100

word: 011101011000000

combo: 000000000001100

word: 011011111010000

combo: 000000000001101

word: 011010111110000

combo: 000000000001111

word: 011100011100000

combo: 000000000001110

word: 011101010100000

combo: 000000000001010

word: 011011110110000

combo: 000000000001011

word: 011010110010000

combo: 000000000001001

word: 011100010000000

combo: 000000000001000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 0 0 0 0 0 1 1]
[0 1 0 0 0 1 1 0 1 0 0 0]
[0 0 1 0 0 0 0 1 0 0 1 1]
[0 0 0 1 0 0 0 0 0 1 1 1]
limit on degree (length): 16
ortho basis:
0000110100010000
0000001000100000
0000001001000000
0000100010000000
1001000000000000
1010000000000000
1100000000000000

B_can_lab before row reduction:
0000101100010000
0000000000001111
0000001101100000
0000011110000000

B_can_lab after row reduction:
0000000000001111
0000101100010000
0000001101100000
0000011110000000
0000000000111000

word generated as sum over rows of ortho_basis starting at 4: 1111000000000000
gate: 0000000000001111
k_gate: 0000000000001111
nonzero_gate: 1111000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1111000000000000

combo: 0000000000000000

temp: 0000000000000000

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
0000001001100010
1111000000000000
0000100010010001
0000100110000100
rs list:
0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
1 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 
0 0 1 0 0 0 0 1 1 0 0 1 0 0 0 0 
B_aug:
[1 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0]
[0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0]
[0 0 1 0 0 0 0 1 1 0 0 1 0 0 0 0]
[0 0 0 1 0 0 0 1 0 0 1 1 0 0 0 0]
[0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1]
m:
[0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0]
[0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1]
[1 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0]
[0 0 1 0 0 0 0 1 1 0 0 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), ( 8,12), ( 7,10), (6,7), ( 4,11), ( 3, 8)( 9,12), (2,6), ( 2,13)( 6,14)( 7,15)(10,16), (1,3)(5,9) ] )
Right transversal of automorphism group of B_aug:
[3, 1, 2, 0, 10, 5, 6, 7, 8, 9, 4, 11, 12, 13, 14, 15]
[3, 1, 0, 2, 10, 5, 6, 7, 4, 9, 8, 11, 12, 13, 14, 15]
[3, 1, 0, 7, 10, 5, 6, 2, 4, 9, 11, 8, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111000000000000
word: 1111110100010000

combo: 0000000000000001

temp: 0000000000000001

orbit_checks[temp>>log2radix]= 0000000000000001

passed if statements
temp basis:
0000001001100010
1111110100010000
0000100010010001
0000100110000100
rs list:
0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 1 0 1 1 1 1 1 1 
1 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 
0 0 1 0 0 0 0 1 1 0 0 1 0 0 0 0 
B_aug:
[1 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0]
[0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0]
[0 0 1 0 0 0 0 1 1 0 0 1 0 0 0 0]
[0 0 0 1 0 0 0 1 0 0 1 1 0 0 0 0]
[0 0 0 0 1 0 0 0 1 0 1 1 1 1 1 1]
m:
[0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0]
[0 0 0 0 1 0 0 0 1 0 1 1 1 1 1 1]
[1 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0]
[0 0 1 0 0 0 0 1 1 0 0 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), ( 7,10), (6,7), (2,6), (1,3)(5,9), ( 3,12)( 8, 9), ( 3, 9)( 8,12) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 7, 4, 5, 6, 3, 8, 9, 11, 10, 12, 13, 14, 15]
[0, 1, 2, 10, 4, 5, 6, 11, 8, 9, 3, 7, 12, 13, 14, 15]
[0, 1, 3, 2, 4, 5, 6, 7, 10, 9, 8, 11, 12, 13, 14, 15]
[0, 1, 2, 11, 4, 5, 6, 10, 8, 9, 7, 3, 12, 13, 14, 15]
[0, 1, 3, 8, 4, 5, 6, 11, 10, 9, 2, 7, 12, 13, 14, 15]
[2, 1, 3, 0, 8, 5, 6, 7, 10, 9, 4, 11, 12, 13, 14, 15]
[2, 1, 3, 4, 8, 5, 6, 11, 10, 9, 0, 7, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111110100010000
1111010110010000
word: 1111111100110000

combo: 0000000000000011

word: 1111001000100000

combo: 0000000000000010

word: 1111000001100000

combo: 0000000000000110

word: 1111110101110000

combo: 0000000000000111

word: 1111111101010000

combo: 0000000000000101

word: 1111001001000000

combo: 0000000000000100

word: 1111101011000000

combo: 0000000000001100

temp: 0000000000001100

orbit_checks[temp>>log2radix]= 0000001000000011

passed if statements
temp basis:
1111001001010001
1111001101000100
1111011001001000
1111101011000000
rs list:
1 0 0 0 1 0 1 0 0 1 0 0 1 1 1 1 
0 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 
0 0 0 1 0 0 1 0 0 1 1 0 1 1 1 1 
0 0 0 0 0 0 1 1 0 1 0 1 1 1 1 1 
B_aug:
[1 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0]
[0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0]
[0 0 1 0 0 0 0 1 1 0 0 1 0 0 0 0]
[0 0 0 1 0 0 0 1 0 0 1 1 0 0 0 0]
[0 0 0 0 0 0 1 1 0 1 0 1 1 1 1 1]
m:
[1 0 0 0 1 0 1 0 0 1 0 0 1 1 1 1]
[0 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1]
[0 0 0 1 0 0 1 0 0 1 1 0 1 1 1 1]
[0 0 0 0 0 0 1 1 0 1 0 1 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 8,12), ( 4, 8)(11,12), ( 3, 4)( 9,11), (1,3)(5,9), (14,15), (14,16), (13,14,16), ( 7,10)(14,16), ( 2, 6)( 7,10)(14,16) ] )
Right transversal of automorphism group of B_aug:
[0, 6, 2, 3, 4, 9, 1, 7, 8, 5, 10, 11, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111101011000000
1111101010100000
1111100011100000
word: 1111011111010000

combo: 0000000000001101

word: 1111010111110000

combo: 0000000000001111

word: 1111100011100000

combo: 0000000000001110

temp: 0000000000001110

orbit_checks[temp>>log2radix]= 0101011000000011

word: 1111101010100000

combo: 0000000000001010

temp: 0000000000001010

orbit_checks[temp>>log2radix]= 0101011000000011

word: 1111011110110000

combo: 0000000000001011

word: 1111010110010000

combo: 0000000000001001

temp: 0000000000001001

orbit_checks[temp>>log2radix]= 0101011000000011

word: 1111100010000000

combo: 0000000000001000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 0 0 0 0 1 1]
[0 1 0 0 1 1 0 1 0 0]
[0 0 1 0 0 0 1 0 1 1]
limit on degree (length): 13
ortho basis:
1001010001000
0000100010000
0000100100000
0001001000000
1010000000000
1100000000000

B_can_lab before row reduction:
0000110110000
0000000001111
0001111000000

B_can_lab after row reduction:
0000000001111
0000110110000
0001111000000

word generated as sum over rows of ortho_basis starting at 4: 0110000000000
gate: 0000000000111
k_gate: 0000000001111
nonzero_gate: 1110000000000
radix_gate: 0000000011111

Starting main loop:
word: 0110000000000

combo: 0000000000000

word: 1111010001000

combo: 0000000000001

word: 1111110011000

combo: 0000000000011

temp: 0000000000011

orbit_checks[temp>>log2radix]= 0000000000000

passed if statements
temp basis:
1110111010001
1111110011000
0001011000100
rs list:
1 0 0 0 1 0 1 1 1 0 1 1 1 
0 0 0 1 1 0 0 1 1 1 1 1 1 
0 0 1 0 0 0 1 1 0 1 0 0 0 
B_aug:
[1 0 0 1 0 0 1 0 0 1 0 0 0]
[0 1 0 0 1 1 0 0 1 0 0 0 0]
[0 0 1 0 0 0 1 1 0 1 0 0 0]
[0 0 0 1 1 0 0 1 1 1 1 1 1]
m:
[1 0 0 0 1 0 1 1 1 0 1 1 1]
[0 0 0 1 1 0 0 1 1 1 1 1 1]
[0 0 1 0 0 0 1 1 0 1 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 3, 7)( 8,10), ( 3, 8)( 7,10), (1,3)(4,8), (5,9), (2,6), (12,13), (11,12,13) ] )
Right transversal of automorphism group of B_aug:
[0, 4, 2, 3, 1, 8, 6, 7, 5, 9, 10, 11, 12]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
orbits:
1111110011000
1110111011000
1111010111000
1111110101000
1110011111000
1110111101000
word: 0110100010000

combo: 0000000000010

word: 0110000110000

combo: 0000000000110

word: 1111010111000

combo: 0000000000111

temp: 0000000000111

orbit_checks[temp>>log2radix]= 1010100010101000

word: 1111110101000

combo: 0000000000101

temp: 0000000000101

orbit_checks[temp>>log2radix]= 1010100010101000

word: 0110100100000

combo: 0000000000100

word: 0111101100000

combo: 0000000001100

word: 1110111101000

combo: 0000000001101

temp: 0000000001101

orbit_checks[temp>>log2radix]= 1010100010101000

word: 1110011111000

combo: 0000000001111

temp: 0000000001111

orbit_checks[temp>>log2radix]= 1010100010101000

word: 0111001110000

combo: 0000000001110

word: 0111101010000

combo: 0000000001010

word: 1110111011000

combo: 0000000001011

temp: 0000000001011

orbit_checks[temp>>log2radix]= 1010100010101000

word: 1110011001000

combo: 0000000001001

word: 0111001000000

combo: 0000000001000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 0 0 0 0 1 1]
[0 1 0 0 1 1 0 1 0 0]
[0 0 1 0 0 0 1 0 1 1]
limit on degree (length): 14
ortho basis:
10001010001000
00000100010000
00000100100000
00001001000000
10010000000000
10100000000000
11000000000000

B_can_lab before row reduction:
00000110110000
00000000001111
00001111000000

B_can_lab after row reduction:
00000000001111
00000110110000
00001111000000

word generated as sum over rows of ortho_basis starting at 4: 11110000000000
gate: 00000000000111
k_gate: 00000000001111
nonzero_gate: 11110000000000
radix_gate: 00000000011111

Starting main loop:
word: 11110000000000

combo: 00000000000000

temp: 00000000000000

orbit_checks[temp>>log2radix]= 00000000000000

passed if statements
temp basis:
00000100110010
11110000000000
00001001001001
rs list:
0 1 0 0 1 1 0 0 1 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 1 1 1 1 
1 0 0 1 0 0 1 0 0 1 0 0 0 0 
B_aug:
[1 0 0 1 0 0 1 0 0 1 0 0 0 0]
[0 1 0 0 1 1 0 0 1 0 0 0 0 0]
[0 0 1 0 0 0 1 1 0 1 0 0 0 0]
[0 0 0 0 0 0 0 0 0 0 1 1 1 1]
m:
[0 1 0 0 1 1 0 0 1 0 0 0 0 0]
[0 0 0 0 0 0 0 0 0 0 1 1 1 1]
[1 0 0 1 0 0 1 0 0 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,13), (11,12), (11,13,14), ( 5, 9)(11,13,14), ( 5, 6)(11,13,14), ( 2, 5, 6)(11,13,14), ( 2,11, 6,12, 5,13, 9,14), ( 5, 6)( 7,10)(11,13,14), ( 3, 8)( 5, 6)(11,13,14), ( 1, 4)( 5, 6)(11,13,14), ( 1, 7)( 4,10)( 5, 6)(11,13,14) ] )
Right transversal of automorphism group of B_aug:
[2, 1, 0, 7, 4, 5, 6, 3, 8, 9, 10, 11, 12, 13]
[2, 1, 6, 7, 4, 5, 0, 9, 8, 3, 10, 11, 12, 13]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
orbits:
11110000000000
word: 01111010001000

combo: 00000000000001

word: 01111110011000

combo: 00000000000011

word: 11110100010000

combo: 00000000000010

word: 11110000110000

combo: 00000000000110

word: 01111010111000

combo: 00000000000111

word: 01111110101000

combo: 00000000000101

word: 11110100100000

combo: 00000000000100

word: 11111101100000

combo: 00000000001100

temp: 00000000001100

orbit_checks[temp>>log2radix]= 00000000000001

passed if statements
temp basis:
11110100101001
11110110100100
11111101100000
rs list:
1 0 0 1 0 1 0 0 1 0 1 1 1 1 
0 0 1 0 0 1 0 1 1 0 1 1 1 1 
0 0 0 0 0 1 1 0 1 1 1 1 1 1 
B_aug:
[1 0 0 1 0 0 1 0 0 1 0 0 0 0]
[0 1 0 0 1 1 0 0 1 0 0 0 0 0]
[0 0 1 0 0 0 1 1 0 1 0 0 0 0]
[0 0 0 0 0 1 1 0 1 1 1 1 1 1]
m:
[1 0 0 1 0 1 0 0 1 0 1 1 1 1]
[0 0 1 0 0 1 0 1 1 0 1 1 1 1]
[0 0 0 0 0 1 1 0 1 1 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 7,10), ( 3, 7)( 8,10), (1,3)(4,8), (12,13), (12,14), (11,12,14), ( 6, 9)(12,14), ( 2, 5)( 6, 9)(12,14) ] )
Right transversal of automorphism group of B_aug:
[0, 5, 2, 3, 8, 1, 6, 7, 4, 9, 10, 11, 12, 13]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
orbits:
11111101100000
11111101010000
11111001110000
word: 01110111101000

combo: 00000000001101

word: 01110011111000

combo: 00000000001111

word: 11111001110000

combo: 00000000001110

temp: 00000000001110

orbit_checks[temp>>log2radix]= 101010000000001

word: 11111101010000

combo: 00000000001010

temp: 00000000001010

orbit_checks[temp>>log2radix]= 101010000000001

word: 01110111011000

combo: 00000000001011

word: 01110011001000

combo: 00000000001001

word: 11111001000000

combo: 00000000001000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 0 0 0 0 1 1]
[0 1 0 0 1 1 0 1 0 0]
[0 0 1 0 0 0 1 0 1 1]
limit on degree (length): 15
ortho basis:
100001010001000
000000100010000
000000100100000
000001001000000
100010000000000
100100000000000
101000000000000
110000000000000

B_can_lab before row reduction:
000000110110000
000000000001111
000001111000000

B_can_lab after row reduction:
000000000001111
000000110110000
000001111000000

word generated as sum over rows of ortho_basis starting at 4: 011110000000000
gate: 000000000000111
k_gate: 000000000001111
nonzero_gate: 111110000000000
radix_gate: 000000000011111

Starting main loop:
word: 011110000000000

combo: 000000000000000

word: 111111010001000

combo: 000000000000001

temp: 000000000000001

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
000000100110010
111111010001000
000001001001001
rs list:
0 1 0 0 1 1 0 0 1 0 0 0 0 0 0 
0 0 0 1 0 0 0 1 0 1 1 1 1 1 1 
1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
B_aug:
[1 0 0 1 0 0 1 0 0 1 0 0 0 0 0]
[0 1 0 0 1 1 0 0 1 0 0 0 0 0 0]
[0 0 1 0 0 0 1 1 0 1 0 0 0 0 0]
[0 0 0 1 0 0 0 1 0 1 1 1 1 1 1]
m:
[0 1 0 0 1 1 0 0 1 0 0 0 0 0 0]
[0 0 0 1 0 0 0 1 0 1 1 1 1 1 1]
[1 0 0 1 0 0 1 0 0 1 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (14,15), (13,14), (12,13), (11,12), (6,9), (5,6), (2,5), ( 1,10)( 4, 7), ( 1, 4)( 7,10) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 6, 3, 4, 5, 2, 9, 8, 7, 10, 11, 12, 13, 14]
[0, 1, 7, 3, 4, 5, 9, 2, 8, 6, 10, 11, 12, 13, 14]
[2, 1, 0, 7, 4, 5, 6, 3, 8, 9, 10, 11, 12, 13, 14]
[0, 1, 9, 3, 4, 5, 7, 6, 8, 2, 10, 11, 12, 13, 14]
[2, 1, 3, 7, 4, 5, 9, 0, 8, 6, 10, 11, 12, 13, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
111111010001000
111110011001000
word: 111111110011000

combo: 000000000000011

word: 011110100010000

combo: 000000000000010

word: 011110000110000

combo: 000000000000110

word: 111111010111000

combo: 000000000000111

word: 111111110101000

combo: 000000000000101

word: 011110100100000

combo: 000000000000100

word: 011111101100000

combo: 000000000001100

word: 111110111101000

combo: 000000000001101

word: 111110011111000

combo: 000000000001111

word: 011111001110000

combo: 000000000001110

word: 011111101010000

combo: 000000000001010

word: 111110111011000

combo: 000000000001011

word: 111110011001000

combo: 000000000001001

temp: 000000000001001

orbit_checks[temp>>log2radix]= 000001000000010

word: 011111001000000

combo: 000000000001000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 0 0 0 0 1 1]
[0 1 0 0 1 1 0 1 0 0]
[0 0 1 0 0 0 1 0 1 1]
limit on degree (length): 16
ortho basis:
1000001010001000
0000000100010000
0000000100100000
0000001001000000
1000010000000000
1000100000000000
1001000000000000
1010000000000000
1100000000000000

B_can_lab before row reduction:
0000000110110000
0000000000001111
0000001111000000

B_can_lab after row reduction:
0000000000001111
0000000110110000
0000001111000000

word generated as sum over rows of ortho_basis starting at 4: 1111110000000000
gate: 0000000000000111
k_gate: 0000000000001111
nonzero_gate: 1111110000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1111110000000000

combo: 0000000000000000

word: 0111111010001000

combo: 0000000000000001

word: 0111111110011000

combo: 0000000000000011

word: 1111110100010000

combo: 0000000000000010

temp: 0000000000000010

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1111110000100010
1111110100010000
0000001001001001
rs list:
0 1 0 0 0 1 0 0 0 0 1 1 1 1 1 1 
0 0 0 0 1 0 0 0 1 0 1 1 1 1 1 1 
1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 
B_aug:
[1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0]
[0 1 0 0 1 1 0 0 1 0 0 0 0 0 0 0]
[0 0 1 0 0 0 1 1 0 1 0 0 0 0 0 0]
[0 0 0 0 1 0 0 0 1 0 1 1 1 1 1 1]
m:
[0 1 0 0 0 1 0 0 0 0 1 1 1 1 1 1]
[0 0 0 0 1 0 0 0 1 0 1 1 1 1 1 1]
[1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (12,13), (12,14), (12,15)(13,14), (12,16)(13,15), (11,12,16)(13,15), ( 7,10)(12,16)(13,15), ( 3, 8)(12,16)(13,15), ( 1, 4)(12,16)(13,15), ( 1, 7)( 4,10)(12,16)(13,15), ( 5, 9)(12,16)(13,15), ( 2, 5)( 6, 9)(12,16)(13,15) ] )
Right transversal of automorphism group of B_aug:
[2, 1, 0, 7, 4, 5, 6, 3, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 1, 6, 7, 4, 5, 0, 9, 8, 3, 10, 11, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111110100010000
1111110000110000
1111110100100000
word: 1111110000110000

combo: 0000000000000110

temp: 0000000000000110

orbit_checks[temp>>log2radix]= 0000000001010100

word: 0111111010111000

combo: 0000000000000111

word: 0111111110101000

combo: 0000000000000101

word: 1111110100100000

combo: 0000000000000100

temp: 0000000000000100

orbit_checks[temp>>log2radix]= 0000000001010100

word: 1111111101100000

combo: 0000000000001100

word: 0111110111101000

combo: 0000000000001101

word: 0111110011111000

combo: 0000000000001111

word: 1111111001110000

combo: 0000000000001110

word: 1111111101010000

combo: 0000000000001010

word: 0111110111011000

combo: 0000000000001011

word: 0111110011001000

combo: 0000000000001001

word: 1111111001000000

combo: 0000000000001000

temp: 0000000000001000

orbit_checks[temp>>log2radix]= 0000000001010100

passed if statements
temp basis:
1111111001000000
0000000100110010
0000001001001001
rs list:
0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 
0 1 0 0 1 1 0 0 1 0 0 0 0 0 0 0 
1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 
B_aug:
[1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0]
[0 1 0 0 1 1 0 0 1 0 0 0 0 0 0 0]
[0 0 1 0 0 0 1 1 0 1 0 0 0 0 0 0]
[0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1]
m:
[0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1]
[0 1 0 0 1 1 0 0 1 0 0 0 0 0 0 0]
[1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), (12,13), (11,12), ( 7,10), (6,9), (5,6), (3,8), (2,5), (1,4), ( 1, 7)( 4,10) ] )
Right transversal of automorphism group of B_aug:
[2, 1, 0, 7, 4, 5, 6, 3, 8, 9, 10, 11, 12, 13, 14, 15]
[2, 1, 6, 7, 4, 5, 0, 9, 8, 3, 10, 11, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111111001000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 1 1 0 0 0]
[0 1 0 0 0 1 1 1]
limit on degree (length): 11
ortho basis:
00001000100
00001001000
00010010000
00010100000
10100000000
11000000000

B_can_lab before row reduction:
00011100001
00000011110

B_can_lab after row reduction:
00011100001
00000011110

word generated as sum over rows of ortho_basis starting at 4: 01100000000
gate: 00000000011
k_gate: 00000001111
nonzero_gate: 11100000000
radix_gate: 00000011111

Starting main loop:
word: 01100000000

combo: 00000000000

word: 01101000100

combo: 00000000001

word: 01100001100

combo: 00000000011

word: 01101001000

combo: 00000000010

word: 01111011000

combo: 00000000110

word: 01110011100

combo: 00000000111

word: 01111010100

combo: 00000000101

word: 01110010000

combo: 00000000100

word: 01100110000

combo: 00000001100

word: 01101110100

combo: 00000001101

word: 01100111100

combo: 00000001111

word: 01101111000

combo: 00000001110

word: 01111101000

combo: 00000001010

word: 01110101100

combo: 00000001011

word: 01111100100

combo: 00000001001

word: 01110100000

combo: 00000001000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 1 1 0 0 0]
[0 1 0 0 0 1 1 1]
limit on degree (length): 12
ortho basis:
000001000100
000001001000
000010010000
000010100000
100100000000
101000000000
110000000000

B_can_lab before row reduction:
000011100001
000000011110

B_can_lab after row reduction:
000011100001
000000011110

word generated as sum over rows of ortho_basis starting at 4: 111100000000
gate: 000000000011
k_gate: 000000001111
nonzero_gate: 111100000000
radix_gate: 000000011111

Starting main loop:
word: 111100000000

combo: 000000000000

temp: 000000000000

orbit_checks[temp>>log2radix]= 000000000000

passed if statements
temp basis:
000001001101
000010110010
rs list:
1 0 1 1 0 0 1 0 0 0 0 0 
0 1 0 0 1 1 0 1 0 0 0 0 
B_aug:
[1 0 1 1 0 0 1 0 0 0 0 0]
[0 1 0 0 1 1 0 1 0 0 0 0]
[0 0 0 0 0 0 0 0 1 1 1 1]
m:
[1 0 1 1 0 0 1 0 0 0 0 0]
[0 1 0 0 1 1 0 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,12), (10,11), ( 9,10), (6,8), (5,6), (4,7), (3,4), (2,5), (1,2)(3,5)(4,6)(7,8) ] )
Right transversal of automorphism group of B_aug:
[8, 1, 9, 10, 4, 5, 11, 7, 0, 2, 3, 6]
[8, 0, 9, 10, 2, 3, 11, 6, 1, 4, 5, 7]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
orbits:
111100000000
word: 111101000100

combo: 000000000001

word: 111100001100

combo: 000000000011

word: 111101001000

combo: 000000000010

word: 111111011000

combo: 000000000110

temp: 000000000110

orbit_checks[temp>>log2radix]= 000000000001

passed if statements
temp basis:
000001001101
111101101010
rs list:
1 0 1 1 0 0 1 0 0 0 0 0 
0 1 0 1 0 1 1 0 1 1 1 1 
B_aug:
[1 0 1 1 0 0 1 0 0 0 0 0]
[0 1 0 0 1 1 0 1 0 0 0 0]
[0 0 0 1 1 0 1 1 1 1 1 1]
m:
[1 0 1 1 0 0 1 0 0 0 0 0]
[0 1 0 1 0 1 1 0 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (2,6), (5,8), (4,7)(5,8), (1,3)(5,8), (1,4)(3,7)(5,8), ( 5, 8)(10,11), ( 5, 8)(10,12), ( 5, 8)( 9,10,12) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 5, 4, 3, 2, 7, 6, 8, 9, 10, 11]
[1, 3, 5, 4, 0, 6, 7, 2, 8, 9, 10, 11]
[0, 4, 2, 3, 1, 7, 6, 5, 8, 9, 10, 11]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
orbits:
111111011000
111101111000
111111101000
111111010100
111111100100
111101110100
111110101100
111110011100
111100111100
word: 111110011100

combo: 000000000111

temp: 000000000111

orbit_checks[temp>>log2radix]= 1110111011100001

word: 111111010100

combo: 000000000101

temp: 000000000101

orbit_checks[temp>>log2radix]= 1110111011100001

word: 111110010000

combo: 000000000100

word: 111100110000

combo: 000000001100

word: 111101110100

combo: 000000001101

temp: 000000001101

orbit_checks[temp>>log2radix]= 1110111011100001

word: 111100111100

combo: 000000001111

temp: 000000001111

orbit_checks[temp>>log2radix]= 1110111011100001

word: 111101111000

combo: 000000001110

temp: 000000001110

orbit_checks[temp>>log2radix]= 1110111011100001

word: 111111101000

combo: 000000001010

temp: 000000001010

orbit_checks[temp>>log2radix]= 1110111011100001

word: 111110101100

combo: 000000001011

temp: 000000001011

orbit_checks[temp>>log2radix]= 1110111011100001

word: 111111100100

combo: 000000001001

temp: 000000001001

orbit_checks[temp>>log2radix]= 1110111011100001

word: 111110100000

combo: 000000001000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 1 0 0 1 0 0 0 0]
[0 1 0 0 0 1 1 0 1 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1]
limit on degree (length): 13
ortho basis:
0001000001000
0001000010000
0010000100000
0010001000000
0100010000000
0100100000000

B_can_lab before row reduction:
0111000000001
0000111000010
0000000111100

B_can_lab after row reduction:
0111000000001
0000111000010
0000000111100

word generated as sum over rows of ortho_basis starting at 6: 0000000000000
gate: 0000000000111
k_gate: 0000000111111
nonzero_gate: 1000000000000
radix_gate: 0000000011111

Starting main loop:
word: 0000000000000

combo: 0000000000000

word: 0001000001000

combo: 0000000000001

word: 0000000011000

combo: 0000000000011

word: 0001000010000

combo: 0000000000010

word: 0011000110000

combo: 0000000000110

word: 0010000111000

combo: 0000000000111

word: 0011000101000

combo: 0000000000101

word: 0010000100000

combo: 0000000000100

word: 0000001100000

combo: 0000000001100

word: 0001001101000

combo: 0000000001101

word: 0000001111000

combo: 0000000001111

word: 0001001110000

combo: 0000000001110

word: 0011001010000

combo: 0000000001010

word: 0010001011000

combo: 0000000001011

word: 0011001001000

combo: 0000000001001

word: 0010001000000

combo: 0000000001000

word: 0110011000000

combo: 0000000011000

word: 0111011001000

combo: 0000000011001

word: 0110011011000

combo: 0000000011011

word: 0111011010000

combo: 0000000011010

word: 0101011110000

combo: 0000000011110

word: 0100011111000

combo: 0000000011111

word: 0101011101000

combo: 0000000011101

word: 0100011100000

combo: 0000000011100

word: 0110010100000

combo: 0000000010100

word: 0111010101000

combo: 0000000010101

word: 0110010111000

combo: 0000000010111

word: 0111010110000

combo: 0000000010110

word: 0101010010000

combo: 0000000010010

word: 0100010011000

combo: 0000000010011

word: 0101010001000

combo: 0000000010001

word: 0100010000000

combo: 0000000010000

word: 0000110000000

combo: 0000000110000

word: 0001110001000

combo: 0000000110001

word: 0000110011000

combo: 0000000110011

word: 0001110010000

combo: 0000000110010

word: 0011110110000

combo: 0000000110110

word: 0010110111000

combo: 0000000110111

word: 0011110101000

combo: 0000000110101

word: 0010110100000

combo: 0000000110100

word: 0000111100000

combo: 0000000111100

word: 0001111101000

combo: 0000000111101

word: 0000111111000

combo: 0000000111111

word: 0001111110000

combo: 0000000111110

word: 0011111010000

combo: 0000000111010

word: 0010111011000

combo: 0000000111011

word: 0011111001000

combo: 0000000111001

word: 0010111000000

combo: 0000000111000

word: 0110101000000

combo: 0000000101000

word: 0111101001000

combo: 0000000101001

word: 0110101011000

combo: 0000000101011

word: 0111101010000

combo: 0000000101010

word: 0101101110000

combo: 0000000101110

word: 0100101111000

combo: 0000000101111

word: 0101101101000

combo: 0000000101101

word: 0100101100000

combo: 0000000101100

word: 0110100100000

combo: 0000000100100

word: 0111100101000

combo: 0000000100101

word: 0110100111000

combo: 0000000100111

word: 0111100110000

combo: 0000000100110

word: 0101100010000

combo: 0000000100010

word: 0100100011000

combo: 0000000100011

word: 0101100001000

combo: 0000000100001

word: 0100100000000

combo: 0000000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 1 0 0 1 0 0 0 0]
[0 1 0 0 0 1 1 0 1 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1]
limit on degree (length): 14
ortho basis:
00001000001000
00001000010000
00010000100000
00010001000000
00100010000000
00100100000000
11000000000000

B_can_lab before row reduction:
00111000000001
00000111000010
00000000111100

B_can_lab after row reduction:
00111000000001
00000111000010
00000000111100

word generated as sum over rows of ortho_basis starting at 6: 11000000000000
gate: 00000000000111
k_gate: 00000000111111
nonzero_gate: 11000000000000
radix_gate: 00000000011111

Starting main loop:
word: 11000000000000

combo: 00000000000000

word: 11001000001000

combo: 00000000000001

temp: 00000000000001

orbit_checks[temp>>log2radix]= 00000000000000

passed if statements
temp basis:
00010001100010
00100110000100
11000000010001
rs list:
0 1 0 0 0 1 1 0 0 0 1 0 0 0 
0 0 1 0 0 0 0 1 1 0 0 1 0 0 
1 0 0 0 1 0 0 0 0 0 0 0 1 1 
B_aug:
[1 0 0 1 1 0 0 0 0 1 0 0 0 0]
[0 1 0 0 0 1 1 0 0 0 1 0 0 0]
[0 0 1 0 0 0 0 1 1 0 0 1 0 0]
[0 0 0 1 0 0 0 0 0 1 0 0 1 1]
m:
[0 1 0 0 0 1 1 0 0 0 1 0 0 0]
[0 0 1 0 0 0 0 1 1 0 0 1 0 0]
[1 0 0 0 1 0 0 0 0 0 0 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 8,12), ( 3, 8,12), ( 3, 8,12, 9), ( 3, 8,12, 9)( 6, 7), ( 3, 8,12, 9)( 6, 7,11), ( 2, 3, 6, 9)( 7,12)( 8,11), ( 3, 8,12, 9)( 6, 7,11)(13,14), ( 3, 8,12, 9)( 4,10)( 6, 7,11)(13,14), ( 1, 5)( 3, 8,12, 9)( 6, 7,11)(13,14), ( 1,13, 5,14)( 3, 8,12, 9)( 6, 7,11) ] )
Right transversal of automorphism group of B_aug:
[3, 1, 2, 0, 9, 5, 6, 7, 8, 4, 10, 11, 12, 13]
[3, 1, 2, 12, 9, 5, 6, 7, 8, 13, 10, 11, 0, 4]
orbits:
11001000001000
11000000011000
11001000010000
11010000100000
11000001100000
11010001000000
11100010000000
11000110000000
11100100000000
word: 11000000011000

combo: 00000000000011

temp: 00000000000011

orbit_checks[temp>>log2radix]= 10001000100011110

word: 11001000010000

combo: 00000000000010

temp: 00000000000010

orbit_checks[temp>>log2radix]= 10001000100011110

word: 11011000110000

combo: 00000000000110

word: 11010000111000

combo: 00000000000111

word: 11011000101000

combo: 00000000000101

word: 11010000100000

combo: 00000000000100

temp: 00000000000100

orbit_checks[temp>>log2radix]= 10001000100011110

word: 11000001100000

combo: 00000000001100

temp: 00000000001100

orbit_checks[temp>>log2radix]= 10001000100011110

word: 11001001101000

combo: 00000000001101

word: 11000001111000

combo: 00000000001111

word: 11001001110000

combo: 00000000001110

word: 11011001010000

combo: 00000000001010

word: 11010001011000

combo: 00000000001011

word: 11011001001000

combo: 00000000001001

word: 11010001000000

combo: 00000000001000

temp: 00000000001000

orbit_checks[temp>>log2radix]= 10001000100011110

word: 11110011000000

combo: 00000000011000

word: 11111011001000

combo: 00000000011001

temp: 00000000011001

orbit_checks[temp>>log2radix]= 10001000100011110

passed if statements
temp basis:
00001000011001
00010001100010
11011101001100
rs list:
1 0 0 1 1 0 0 0 0 1 0 0 0 0 
0 1 0 0 0 1 1 0 0 0 1 0 0 0 
0 0 1 1 0 0 1 0 1 1 1 0 1 1 
B_aug:
[1 0 0 1 1 0 0 0 0 1 0 0 0 0]
[0 1 0 0 0 1 1 0 0 0 1 0 0 0]
[0 0 1 0 0 0 0 1 1 0 0 1 0 0]
[0 0 0 1 0 0 1 1 0 1 1 1 1 1]
m:
[1 0 0 1 1 0 0 0 0 1 0 0 0 0]
[0 1 0 0 0 1 1 0 0 0 1 0 0 0]
[0 0 1 1 0 0 1 0 1 1 1 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (2,6), ( 2,11, 6, 7), ( 2,11, 6, 7)( 3, 9), ( 2,11, 6, 7)( 8,12), ( 2,11, 6, 7)( 4,10), ( 1, 2,10, 7)( 4,11, 5, 6), ( 2,11, 6, 7)( 4,10)(13,14) ] )
Right transversal of automorphism group of B_aug:
[2, 1, 0, 7, 8, 5, 6, 3, 4, 11, 10, 9, 12, 13]
[2, 0, 1, 7, 8, 4, 3, 6, 5, 11, 9, 10, 12, 13]
[2, 0, 6, 7, 8, 4, 3, 1, 10, 11, 9, 5, 12, 13]
[2, 1, 3, 7, 8, 5, 6, 0, 9, 11, 10, 4, 12, 13]
[0, 1, 7, 3, 4, 5, 6, 2, 11, 9, 10, 8, 12, 13]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
orbits:
11111011001000
11011111001000
11111101001000
11111010101000
11111100101000
11110011011000
11111011010000
11111010110000
11011110101000
11101101101000
11010111011000
11011111010000
11011110110000
11110101011000
11111101010000
11111100110000
11101011101000
11110010111000
11110100111000
11101011110000
11001111101000
11010110111000
11100101111000
11101101110000
11001111110000
11100011111000
11000111111000
word: 11110011011000

combo: 00000000011011

temp: 00000000011011

orbit_checks[temp>>log2radix]= 11101110111000010001000100011110

word: 11111011010000

combo: 00000000011010

temp: 00000000011010

orbit_checks[temp>>log2radix]= 11101110111000010001000100011110

word: 11101011110000

combo: 00000000011110

temp: 00000000011110

orbit_checks[temp>>log2radix]= 11101110111000010001000100011110

word: 11100011111000

combo: 00000000011111

temp: 00000000011111

orbit_checks[temp>>log2radix]= 11101110111000010001000100011110

word: 11101011101000

combo: 00000000011101

temp: 00000000011101

orbit_checks[temp>>log2radix]= 11101110111000010001000100011110

word: 11100011100000

combo: 00000000011100

word: 11110010100000

combo: 00000000010100

word: 11111010101000

combo: 00000000010101

temp: 00000000010101

orbit_checks[temp>>log2radix]= 11101110111000010001000100011110

word: 11110010111000

combo: 00000000010111

temp: 00000000010111

orbit_checks[temp>>log2radix]= 11101110111000010001000100011110

word: 11111010110000

combo: 00000000010110

temp: 00000000010110

orbit_checks[temp>>log2radix]= 11101110111000010001000100011110

word: 11101010010000

combo: 00000000010010

word: 11100010011000

combo: 00000000010011

word: 11101010001000

combo: 00000000010001

word: 11100010000000

combo: 00000000010000

temp: 00000000010000

orbit_checks[temp>>log2radix]= 11101110111000010001000100011110

word: 11000110000000

combo: 00000000110000

temp: 00000000110000

orbit_checks[temp>>log2radix]= 11101110111000011110111011100001

word: 11001110001000

combo: 00000000110001

word: 11000110011000

combo: 00000000110011

word: 11001110010000

combo: 00000000110010

word: 11011110110000

combo: 00000000110110

temp: 00000000110110

orbit_checks[temp>>log2radix]= 11101110111000011110111011100001

word: 11010110111000

combo: 00000000110111

temp: 00000000110111

orbit_checks[temp>>log2radix]= 11101110111000011110111011100001

word: 11011110101000

combo: 00000000110101

temp: 00000000110101

orbit_checks[temp>>log2radix]= 11101110111000011110111011100001

word: 11010110100000

combo: 00000000110100

word: 11000111100000

combo: 00000000111100

word: 11001111101000

combo: 00000000111101

temp: 00000000111101

orbit_checks[temp>>log2radix]= 11101110111000011110111011100001

word: 11000111111000

combo: 00000000111111

temp: 00000000111111

orbit_checks[temp>>log2radix]= 11101110111000011110111011100001

word: 11001111110000

combo: 00000000111110

temp: 00000000111110

orbit_checks[temp>>log2radix]= 11101110111000011110111011100001

word: 11011111010000

combo: 00000000111010

temp: 00000000111010

orbit_checks[temp>>log2radix]= 11101110111000011110111011100001

word: 11010111011000

combo: 00000000111011

temp: 00000000111011

orbit_checks[temp>>log2radix]= 11101110111000011110111011100001

word: 11011111001000

combo: 00000000111001

temp: 00000000111001

orbit_checks[temp>>log2radix]= 11101110111000011110111011100001

word: 11010111000000

combo: 00000000111000

word: 11110101000000

combo: 00000000101000

word: 11111101001000

combo: 00000000101001

temp: 00000000101001

orbit_checks[temp>>log2radix]= 11101110111000011110111011100001

word: 11110101011000

combo: 00000000101011

temp: 00000000101011

orbit_checks[temp>>log2radix]= 11101110111000011110111011100001

word: 11111101010000

combo: 00000000101010

temp: 00000000101010

orbit_checks[temp>>log2radix]= 11101110111000011110111011100001

word: 11101101110000

combo: 00000000101110

temp: 00000000101110

orbit_checks[temp>>log2radix]= 11101110111000011110111011100001

word: 11100101111000

combo: 00000000101111

temp: 00000000101111

orbit_checks[temp>>log2radix]= 11101110111000011110111011100001

word: 11101101101000

combo: 00000000101101

temp: 00000000101101

orbit_checks[temp>>log2radix]= 11101110111000011110111011100001

word: 11100101100000

combo: 00000000101100

word: 11110100100000

combo: 00000000100100

word: 11111100101000

combo: 00000000100101

temp: 00000000100101

orbit_checks[temp>>log2radix]= 11101110111000011110111011100001

word: 11110100111000

combo: 00000000100111

temp: 00000000100111

orbit_checks[temp>>log2radix]= 11101110111000011110111011100001

word: 11111100110000

combo: 00000000100110

temp: 00000000100110

orbit_checks[temp>>log2radix]= 11101110111000011110111011100001

word: 11101100010000

combo: 00000000100010

word: 11100100011000

combo: 00000000100011

word: 11101100001000

combo: 00000000100001

word: 11100100000000

combo: 00000000100000

temp: 00000000100000

orbit_checks[temp>>log2radix]= 11101110111000011110111011100001

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 0 0 0 0 0 0 0 1 1]
[0 1 0 0 0 1 1 0 0 0 1 0 0 0]
[0 0 1 0 0 0 0 1 1 0 0 1 0 0]
[0 0 0 1 0 0 0 0 0 1 0 0 1 1]
limit on degree (length): 15
ortho basis:
110010000010000
000100000100000
000100001000000
001000010000000
001000100000000
010001000000000

B_can_lab before row reduction:
001101100000000
000000011100001
000000000011110
011110000000000

B_can_lab after row reduction:
000000011100001
000000000011110
001101100000000
011110000000000
000000000111000

word generated as sum over rows of ortho_basis starting at 6: 000000000000000
gate: 000000000001111
k_gate: 000000000111111
nonzero_gate: 100000000000000
radix_gate: 000000000011111

Starting main loop:
word: 000000000000000

combo: 000000000000000

word: 110010000010000

combo: 000000000000001

temp: 000000000000001

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
000100001100010
001000110000100
100011000000001
010011000001000
rs list:
0 1 0 0 0 1 1 0 0 0 0 1 0 0 0 
0 0 1 0 0 0 0 1 1 0 0 0 1 0 0 
1 0 0 0 0 0 0 0 0 1 1 0 0 0 1 
0 0 0 1 0 0 0 0 0 1 1 0 0 1 0 
B_aug:
[1 0 0 0 1 0 0 0 0 1 0 0 0 1 0]
[0 1 0 0 0 1 1 0 0 0 0 1 0 0 0]
[0 0 1 0 0 0 0 1 1 0 0 0 1 0 0]
[0 0 0 1 0 0 0 0 0 1 1 0 0 1 0]
[0 0 0 0 1 0 0 0 0 0 1 0 0 1 1]
m:
[0 1 0 0 0 1 1 0 0 0 0 1 0 0 0]
[0 0 1 0 0 0 0 1 1 0 0 0 1 0 0]
[1 0 0 0 0 0 0 0 0 1 1 0 0 0 1]
[0 0 0 1 0 0 0 0 0 1 1 0 0 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,13), (8,9), ( 7,12), (6,7), (3,8), ( 2, 3)( 6, 8)( 7, 9)(12,13), ( 1, 4)(14,15), ( 4,14)(10,11), ( 4,11)(10,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 10, 5, 6, 7, 8, 9, 4, 11, 12, 14, 13]
[0, 1, 2, 3, 13, 5, 6, 7, 8, 9, 14, 11, 12, 4, 10]
[0, 1, 2, 4, 3, 5, 6, 7, 8, 14, 10, 11, 12, 13, 9]
[0, 1, 2, 3, 14, 5, 6, 7, 8, 9, 13, 11, 12, 10, 4]
orbits:
110010000010000
100011000010000
word: 110110000110000

combo: 000000000000011

word: 000100000100000

combo: 000000000000010

word: 000000001100000

combo: 000000000000110

word: 110010001110000

combo: 000000000000111

word: 110110001010000

combo: 000000000000101

word: 000100001000000

combo: 000000000000100

word: 001100011000000

combo: 000000000001100

word: 111110011010000

combo: 000000000001101

temp: 000000000001101

orbit_checks[temp>>log2radix]= 000000000000010

passed if statements
temp basis:
000100001100010
110110101010100
111110011010000
010001000010001
rs list:
0 1 0 0 0 1 1 0 0 0 0 1 0 0 0 
0 0 1 0 1 0 1 0 1 0 1 1 0 1 1 
0 0 0 0 1 0 1 1 0 0 1 1 1 1 1 
1 0 0 0 1 0 0 0 0 1 0 0 0 1 0 
B_aug:
[1 0 0 0 1 0 0 0 0 1 0 0 0 1 0]
[0 1 0 0 0 1 1 0 0 0 0 1 0 0 0]
[0 0 1 0 0 0 0 1 1 0 0 0 1 0 0]
[0 0 0 1 0 0 0 0 0 1 1 0 0 1 0]
[0 0 0 0 1 0 1 1 0 0 1 1 1 1 1]
m:
[0 1 0 0 0 1 1 0 0 0 0 1 0 0 0]
[0 0 1 0 1 0 1 0 1 0 1 1 0 1 1]
[0 0 0 0 1 0 1 1 0 0 1 1 1 1 1]
[1 0 0 0 1 0 0 0 0 1 0 0 0 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 8,13), ( 7,12), ( 3, 8)( 9,13), ( 2, 3)( 6, 9)( 7, 8)(12,13), ( 1,14)( 5,10), ( 1, 5)(10,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 9, 4, 5, 6, 7, 8, 3, 13, 11, 12, 10, 14]
[0, 1, 2, 10, 4, 5, 6, 7, 8, 13, 3, 11, 12, 9, 14]
[3, 1, 2, 0, 10, 5, 6, 7, 8, 9, 4, 11, 12, 13, 14]
[0, 1, 2, 13, 4, 5, 6, 7, 8, 10, 9, 11, 12, 3, 14]
[3, 1, 2, 4, 10, 5, 6, 7, 8, 13, 0, 11, 12, 9, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
111110011010000
110110111010000
111110101010000
111110010110000
111110100110000
101111011010000
110110110110000
111010101110000
100111111010000
101111101010000
111010011110000
101111010110000
101111100110000
110010111110000
100111110110000
101011101110000
101011011110000
100011111110000
word: 111010011110000

combo: 000000000001111

temp: 000000000001111

orbit_checks[temp>>log2radix]= 10101000101010001010100000000010

word: 001000011100000

combo: 000000000001110

word: 001100010100000

combo: 000000000001010

word: 111110010110000

combo: 000000000001011

temp: 000000000001011

orbit_checks[temp>>log2radix]= 10101000101010001010100000000010

word: 111010010010000

combo: 000000000001001

word: 001000010000000

combo: 000000000001000

word: 000000110000000

combo: 000000000011000

word: 110010110010000

combo: 000000000011001

word: 110110110110000

combo: 000000000011011

temp: 000000000011011

orbit_checks[temp>>log2radix]= 10101000101010001010100000000010

word: 000100110100000

combo: 000000000011010

word: 000000111100000

combo: 000000000011110

word: 110010111110000

combo: 000000000011111

temp: 000000000011111

orbit_checks[temp>>log2radix]= 10101000101010001010100000000010

word: 110110111010000

combo: 000000000011101

temp: 000000000011101

orbit_checks[temp>>log2radix]= 10101000101010001010100000000010

word: 000100111000000

combo: 000000000011100

word: 001100101000000

combo: 000000000010100

word: 111110101010000

combo: 000000000010101

temp: 000000000010101

orbit_checks[temp>>log2radix]= 10101000101010001010100000000010

word: 111010101110000

combo: 000000000010111

temp: 000000000010111

orbit_checks[temp>>log2radix]= 10101000101010001010100000000010

word: 001000101100000

combo: 000000000010110

word: 001100100100000

combo: 000000000010010

word: 111110100110000

combo: 000000000010011

temp: 000000000010011

orbit_checks[temp>>log2radix]= 10101000101010001010100000000010

word: 111010100010000

combo: 000000000010001

word: 001000100000000

combo: 000000000010000

word: 011001100000000

combo: 000000000110000

word: 101011100010000

combo: 000000000110001

word: 101111100110000

combo: 000000000110011

temp: 000000000110011

orbit_checks[temp>>log2radix]= 10101000101010001010100000000010

word: 011101100100000

combo: 000000000110010

word: 011001101100000

combo: 000000000110110

word: 101011101110000

combo: 000000000110111

temp: 000000000110111

orbit_checks[temp>>log2radix]= 10101000101010001010100000000010

word: 101111101010000

combo: 000000000110101

temp: 000000000110101

orbit_checks[temp>>log2radix]= 10101000101010001010100000000010

word: 011101101000000

combo: 000000000110100

word: 010101111000000

combo: 000000000111100

word: 100111111010000

combo: 000000000111101

temp: 000000000111101

orbit_checks[temp>>log2radix]= 10101000101010001010100000000010

word: 100011111110000

combo: 000000000111111

temp: 000000000111111

orbit_checks[temp>>log2radix]= 10101000101010001010100000000010

word: 010001111100000

combo: 000000000111110

word: 010101110100000

combo: 000000000111010

word: 100111110110000

combo: 000000000111011

temp: 000000000111011

orbit_checks[temp>>log2radix]= 10101000101010001010100000000010

word: 100011110010000

combo: 000000000111001

word: 010001110000000

combo: 000000000111000

word: 011001010000000

combo: 000000000101000

word: 101011010010000

combo: 000000000101001

word: 101111010110000

combo: 000000000101011

temp: 000000000101011

orbit_checks[temp>>log2radix]= 10101000101010001010100000000010

word: 011101010100000

combo: 000000000101010

word: 011001011100000

combo: 000000000101110

word: 101011011110000

combo: 000000000101111

temp: 000000000101111

orbit_checks[temp>>log2radix]= 10101000101010001010100000000010

word: 101111011010000

combo: 000000000101101

temp: 000000000101101

orbit_checks[temp>>log2radix]= 10101000101010001010100000000010

word: 011101011000000

combo: 000000000101100

word: 010101001000000

combo: 000000000100100

word: 100111001010000

combo: 000000000100101

word: 100011001110000

combo: 000000000100111

word: 010001001100000

combo: 000000000100110

word: 010101000100000

combo: 000000000100010

word: 100111000110000

combo: 000000000100011

word: 100011000010000

combo: 000000000100001

temp: 000000000100001

orbit_checks[temp>>log2radix]= 10101000101010001010100000000010

word: 010001000000000

combo: 000000000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 0 0 0 1 1 0 0 0 1]
[0 1 0 0 0 1 1 0 0 0 0 1 0 0 0]
[0 0 1 0 0 0 0 1 1 0 0 0 1 0 0]
[0 0 0 1 0 0 0 0 0 1 1 0 0 1 0]
[0 0 0 0 1 0 0 0 0 0 1 0 0 1 1]
limit on degree (length): 16
ortho basis:
0000100000100000
0000100001000000
0001000010000000
0001000100000000
1110001000000000

B_can_lab before row reduction:
0101010100000000
0000000011100001
0000000000011110
0011011000000000
0111100000000000

B_can_lab after row reduction:
0000000011100001
0000000000011110
0101010100000000
0011011000000000
0111100000000000

word generated as sum over rows of ortho_basis starting at 5: 0000000000000000
gate: 0000000000011111
k_gate: 0000000000011111
nonzero_gate: 1000000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 0000000000000000

combo: 0000000000000000

word: 0000100000100000

combo: 0000000000000001

word: 0000000001100000

combo: 0000000000000011

word: 0000100001000000

combo: 0000000000000010

word: 0001100011000000

combo: 0000000000000110

word: 0001000011100000

combo: 0000000000000111

word: 0001100010100000

combo: 0000000000000101

word: 0001000010000000

combo: 0000000000000100

word: 0000000110000000

combo: 0000000000001100

word: 0000100110100000

combo: 0000000000001101

word: 0000000111100000

combo: 0000000000001111

word: 0000100111000000

combo: 0000000000001110

word: 0001100101000000

combo: 0000000000001010

word: 0001000101100000

combo: 0000000000001011

word: 0001100100100000

combo: 0000000000001001

word: 0001000100000000

combo: 0000000000001000

word: 1111001100000000

combo: 0000000000011000

word: 1111101100100000

combo: 0000000000011001

temp: 0000000000011001

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1011110100100001
1101110100101000
1111101100100000
0110010000010000
0000100001100010
rs list:
1 0 0 0 0 1 0 0 1 0 1 1 1 1 0 1 
0 0 0 1 0 1 0 0 1 0 1 1 1 0 1 1 
0 0 0 0 0 1 0 0 1 1 0 1 1 1 1 1 
0 0 0 0 1 0 0 0 0 0 1 0 0 1 1 0 
0 1 0 0 0 1 1 0 0 0 0 1 0 0 0 0 
B_aug:
[1 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0]
[0 1 0 0 0 1 1 0 0 0 0 1 0 0 0 0]
[0 0 1 0 0 0 0 1 1 0 0 0 1 0 0 0]
[0 0 0 1 0 0 0 0 0 1 1 0 0 1 0 0]
[0 0 0 0 1 0 0 0 0 0 1 0 0 1 1 0]
[0 0 0 0 0 1 0 0 1 1 0 1 1 1 1 1]
m:
[1 0 0 0 0 1 0 0 1 0 1 1 1 1 0 1]
[0 0 0 1 0 1 0 0 1 0 1 1 1 0 1 1]
[0 0 0 0 0 1 0 0 1 1 0 1 1 1 1 1]
[0 0 0 0 1 0 0 0 0 0 1 0 0 1 1 0]
[0 1 0 0 0 1 1 0 0 0 0 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,13), ( 6,12), ( 5,11)(14,15), ( 5,14)(11,15), ( 4, 5)(10,15), (3,8), ( 2, 6)( 7,12), ( 1, 4)(14,15) ] )
Right transversal of automorphism group of B_aug:
[0, 2, 1, 3, 4, 8, 7, 6, 5, 9, 10, 12, 11, 13, 14, 15]
[0, 2, 5, 3, 4, 8, 7, 11, 1, 9, 10, 12, 6, 13, 14, 15]
[0, 1, 8, 3, 4, 5, 6, 12, 2, 9, 10, 11, 7, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111101100100000
1111101010100000
1111001101100000
1111101101000000
1111101011000000
1110101110100000
1111001011100000
1110101111000000
1110001111100000
word: 1111001101100000

combo: 0000000000011011

temp: 0000000000011011

orbit_checks[temp>>log2radix]= 11101110111000000000000000000000

word: 1111101101000000

combo: 0000000000011010

temp: 0000000000011010

orbit_checks[temp>>log2radix]= 11101110111000000000000000000000

word: 1110101111000000

combo: 0000000000011110

temp: 0000000000011110

orbit_checks[temp>>log2radix]= 11101110111000000000000000000000

word: 1110001111100000

combo: 0000000000011111

temp: 0000000000011111

orbit_checks[temp>>log2radix]= 11101110111000000000000000000000

word: 1110101110100000

combo: 0000000000011101

temp: 0000000000011101

orbit_checks[temp>>log2radix]= 11101110111000000000000000000000

word: 1110001110000000

combo: 0000000000011100

word: 1111001010000000

combo: 0000000000010100

word: 1111101010100000

combo: 0000000000010101

temp: 0000000000010101

orbit_checks[temp>>log2radix]= 11101110111000000000000000000000

word: 1111001011100000

combo: 0000000000010111

temp: 0000000000010111

orbit_checks[temp>>log2radix]= 11101110111000000000000000000000

word: 1111101011000000

combo: 0000000000010110

temp: 0000000000010110

orbit_checks[temp>>log2radix]= 11101110111000000000000000000000

word: 1110101001000000

combo: 0000000000010010

word: 1110001001100000

combo: 0000000000010011

word: 1110101000100000

combo: 0000000000010001

word: 1110001000000000

combo: 0000000000010000

temp: 0000000000010000

orbit_checks[temp>>log2radix]= 11101110111000000000000000000000

passed if statements
temp basis:
0000100001100010
0001000110000100
1010010000000001
1100010000001000
0110010000010000
rs list:
0 1 0 0 0 1 1 0 0 0 0 1 0 0 0 0 
0 0 1 0 0 0 0 1 1 0 0 0 1 0 0 0 
1 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 
0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 1 
0 0 0 0 1 0 0 0 0 0 1 0 0 1 1 0 
B_aug:
[1 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0]
[0 1 0 0 0 1 1 0 0 0 0 1 0 0 0 0]
[0 0 1 0 0 0 0 1 1 0 0 0 1 0 0 0]
[0 0 0 1 0 0 0 0 0 1 1 0 0 1 0 0]
[0 0 0 0 1 0 0 0 0 0 1 0 0 1 1 0]
[0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1]
m:
[0 1 0 0 0 1 1 0 0 0 0 1 0 0 0 0]
[0 0 1 0 0 0 0 1 1 0 0 0 1 0 0 0]
[1 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1]
[0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 1]
[0 0 0 0 1 0 0 0 0 0 1 0 0 1 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,13), (8,9), ( 7,12), (6,7), ( 4, 5)(14,16), (3,8), ( 2, 3)( 6, 8)( 7, 9)(12,13), ( 1, 4)(14,15), ( 5,15)(11,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 5, 6, 7, 8, 13, 10, 11, 12, 9, 15, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 10, 11, 12, 15, 9, 13]
[0, 1, 2, 3, 9, 5, 6, 7, 8, 4, 15, 11, 12, 13, 14, 10]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 15, 10, 11, 12, 14, 13, 9]
orbits:
1110001000000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 0 0 0 0 0 0 0 1 1]
[0 1 0 0 0 1 1 0 0 0 1 0 0 0]
[0 0 1 0 0 0 0 1 1 0 0 1 0 0]
[0 0 0 1 0 0 0 0 0 1 0 0 1 1]
limit on degree (length): 16
ortho basis:
1010010000010000
0000100000100000
0000100001000000
0001000010000000
0001000100000000
0010001000000000
1100000000000000

B_can_lab before row reduction:
0001101100000000
0000000011100001
0000000000011110
0011110000000000

B_can_lab after row reduction:
0000000011100001
0000000000011110
0001101100000000
0011110000000000
0000000000111000

word generated as sum over rows of ortho_basis starting at 6: 1100000000000000
gate: 0000000000001111
k_gate: 0000000000111111
nonzero_gate: 1100000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1100000000000000

combo: 0000000000000000

word: 0110010000010000

combo: 0000000000000001

word: 0110110000110000

combo: 0000000000000011

word: 1100100000100000

combo: 0000000000000010

temp: 0000000000000010

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
0001000110000100
0010001000010001
1100000001000010
1100100000100000
rs list:
0 0 1 0 0 0 0 1 1 0 0 0 1 0 0 0 
1 0 0 0 1 0 0 0 0 1 0 0 0 1 0 0 
0 1 0 0 0 0 1 0 0 0 0 0 0 0 1 1 
0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 1 
B_aug:
[1 0 0 0 1 0 0 0 0 1 0 0 0 1 0 0]
[0 1 0 0 0 1 1 0 0 0 0 1 0 0 0 0]
[0 0 1 0 0 0 0 1 1 0 0 0 1 0 0 0]
[0 0 0 1 0 0 0 0 0 1 1 0 0 1 0 0]
[0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 1]
m:
[0 0 1 0 0 0 0 1 1 0 0 0 1 0 0 0]
[1 0 0 0 1 0 0 0 0 1 0 0 0 1 0 0]
[0 1 0 0 0 0 1 0 0 0 0 0 0 0 1 1]
[0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 6,12), ( 2, 6)( 7,12), ( 2, 6,15)( 7,12,16), ( 2, 6,15)( 4,11)( 7,12,16), ( 2, 6,15)( 7,12,16)(10,14), ( 1, 5)( 2, 6,15)( 7,12,16)(10,14), ( 1,10, 5,14)( 2, 6,15)( 7,12,16), ( 2, 6,15)( 7,12,16)( 8, 9)(10,14), ( 2, 6,15)( 7,12,16)( 8,13)(10,14), ( 2, 6,15)( 3, 8,13)( 7,12,16)(10,14) ] )
Right transversal of automorphism group of B_aug:
[5, 3, 2, 1, 11, 0, 10, 7, 8, 14, 6, 4, 12, 15, 9, 13]
[1, 3, 2, 5, 6, 0, 10, 7, 8, 14, 11, 4, 12, 15, 9, 13]
[1, 3, 2, 14, 6, 0, 10, 7, 8, 5, 15, 4, 12, 11, 9, 13]
orbits:
1100100000100000
1100000001100000
1100100001000000
1101000010000000
1100000110000000
1101000100000000
word: 1100000001100000

combo: 0000000000000110

temp: 0000000000000110

orbit_checks[temp>>log2radix]= 1000000010000000101010100

word: 0110010001110000

combo: 0000000000000111

word: 0110110001010000

combo: 0000000000000101

word: 1100100001000000

combo: 0000000000000100

temp: 0000000000000100

orbit_checks[temp>>log2radix]= 1000000010000000101010100

word: 1101100011000000

combo: 0000000000001100

word: 0111110011010000

combo: 0000000000001101

word: 0111010011110000

combo: 0000000000001111

word: 1101000011100000

combo: 0000000000001110

word: 1101100010100000

combo: 0000000000001010

word: 0111110010110000

combo: 0000000000001011

word: 0111010010010000

combo: 0000000000001001

word: 1101000010000000

combo: 0000000000001000

temp: 0000000000001000

orbit_checks[temp>>log2radix]= 1000000010000000101010100

word: 1100000110000000

combo: 0000000000011000

temp: 0000000000011000

orbit_checks[temp>>log2radix]= 1000000010000000101010100

word: 0110010110010000

combo: 0000000000011001

word: 0110110110110000

combo: 0000000000011011

word: 1100100110100000

combo: 0000000000011010

word: 1100000111100000

combo: 0000000000011110

word: 0110010111110000

combo: 0000000000011111

word: 0110110111010000

combo: 0000000000011101

word: 1100100111000000

combo: 0000000000011100

word: 1101100101000000

combo: 0000000000010100

word: 0111110101010000

combo: 0000000000010101

word: 0111010101110000

combo: 0000000000010111

word: 1101000101100000

combo: 0000000000010110

word: 1101100100100000

combo: 0000000000010010

word: 0111110100110000

combo: 0000000000010011

word: 0111010100010000

combo: 0000000000010001

word: 1101000100000000

combo: 0000000000010000

temp: 0000000000010000

orbit_checks[temp>>log2radix]= 1000000010000000101010100

word: 1111001100000000

combo: 0000000000110000

word: 0101011100010000

combo: 0000000000110001

word: 0101111100110000

combo: 0000000000110011

word: 1111101100100000

combo: 0000000000110010

temp: 0000000000110010

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1101100100110001
1101110100101000
1111101100100000
0000100001100010
rs list:
1 0 0 0 1 1 0 0 1 0 0 1 1 0 1 1 
0 0 0 1 0 1 0 0 1 0 1 1 1 0 1 1 
0 0 0 0 0 1 0 0 1 1 0 1 1 1 1 1 
0 1 0 0 0 1 1 0 0 0 0 1 0 0 0 0 
B_aug:
[1 0 0 0 1 0 0 0 0 1 0 0 0 1 0 0]
[0 1 0 0 0 1 1 0 0 0 0 1 0 0 0 0]
[0 0 1 0 0 0 0 1 1 0 0 0 1 0 0 0]
[0 0 0 1 0 0 0 0 0 1 1 0 0 1 0 0]
[0 0 0 0 0 1 0 0 1 1 0 1 1 1 1 1]
m:
[1 0 0 0 1 1 0 0 1 0 0 1 1 0 1 1]
[0 0 0 1 0 1 0 0 1 0 1 1 1 0 1 1]
[0 0 0 0 0 1 0 0 1 1 0 1 1 1 1 1]
[0 1 0 0 0 1 1 0 0 0 0 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (3,8), ( 9,13), ( 6,12), ( 2, 6)( 7,12), (10,14), ( 4,10)(11,14), ( 1, 4)( 5,11), (15,16) ] )
Right transversal of automorphism group of B_aug:
[0, 2, 1, 3, 4, 8, 7, 6, 5, 9, 10, 12, 11, 13, 14, 15]
[0, 2, 5, 3, 4, 8, 7, 11, 1, 9, 10, 12, 6, 13, 14, 15]
[0, 1, 8, 3, 4, 5, 6, 12, 2, 9, 10, 11, 7, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111101100100000
1111101010100000
1111001101100000
1111101101000000
1111101011000000
1110101110100000
1111001011100000
1110101111000000
1110001111100000
word: 1111001101100000

combo: 0000000000110110

temp: 0000000000110110

orbit_checks[temp>>log2radix]= 1010100010101000101010000000000

word: 0101011101110000

combo: 0000000000110111

word: 0101111101010000

combo: 0000000000110101

word: 1111101101000000

combo: 0000000000110100

temp: 0000000000110100

orbit_checks[temp>>log2radix]= 1010100010101000101010000000000

word: 1110101111000000

combo: 0000000000111100

temp: 0000000000111100

orbit_checks[temp>>log2radix]= 1010100010101000101010000000000

word: 0100111111010000

combo: 0000000000111101

word: 0100011111110000

combo: 0000000000111111

word: 1110001111100000

combo: 0000000000111110

temp: 0000000000111110

orbit_checks[temp>>log2radix]= 1010100010101000101010000000000

word: 1110101110100000

combo: 0000000000111010

temp: 0000000000111010

orbit_checks[temp>>log2radix]= 1010100010101000101010000000000

word: 0100111110110000

combo: 0000000000111011

word: 0100011110010000

combo: 0000000000111001

word: 1110001110000000

combo: 0000000000111000

word: 1111001010000000

combo: 0000000000101000

word: 0101011010010000

combo: 0000000000101001

word: 0101111010110000

combo: 0000000000101011

word: 1111101010100000

combo: 0000000000101010

temp: 0000000000101010

orbit_checks[temp>>log2radix]= 1010100010101000101010000000000

word: 1111001011100000

combo: 0000000000101110

temp: 0000000000101110

orbit_checks[temp>>log2radix]= 1010100010101000101010000000000

word: 0101011011110000

combo: 0000000000101111

word: 0101111011010000

combo: 0000000000101101

word: 1111101011000000

combo: 0000000000101100

temp: 0000000000101100

orbit_checks[temp>>log2radix]= 1010100010101000101010000000000

word: 1110101001000000

combo: 0000000000100100

word: 0100111001010000

combo: 0000000000100101

word: 0100011001110000

combo: 0000000000100111

word: 1110001001100000

combo: 0000000000100110

word: 1110101000100000

combo: 0000000000100010

word: 0100111000110000

combo: 0000000000100011

word: 0100011000010000

combo: 0000000000100001

word: 1110001000000000

combo: 0000000000100000

temp: 0000000000100000

orbit_checks[temp>>log2radix]= 1010100010101000101010000000000

passed if statements
temp basis:
0000100001100010
0001000110000100
1100000000010001
1100010000001000
rs list:
0 1 0 0 0 1 1 0 0 0 0 1 0 0 0 0 
0 0 1 0 0 0 0 1 1 0 0 0 1 0 0 0 
1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 
0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 1 
B_aug:
[1 0 0 0 1 0 0 0 0 1 0 0 0 1 0 0]
[0 1 0 0 0 1 1 0 0 0 0 1 0 0 0 0]
[0 0 1 0 0 0 0 1 1 0 0 0 1 0 0 0]
[0 0 0 1 0 0 0 0 0 1 1 0 0 1 0 0]
[0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1]
m:
[0 1 0 0 0 1 1 0 0 0 0 1 0 0 0 0]
[0 0 1 0 0 0 0 1 1 0 0 0 1 0 0 0]
[1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1]
[0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (10,14), ( 9,13), (8,9), ( 7,12), (6,7), ( 4,11), ( 4,15)(11,16), (3,8), ( 2, 3)( 6, 8)( 7, 9)(12,13), ( 1, 4)( 5,11) ] )
Right transversal of automorphism group of B_aug:
[9, 1, 2, 3, 13, 5, 6, 7, 8, 0, 10, 11, 12, 4, 14, 15]
[9, 1, 2, 0, 13, 5, 6, 7, 8, 3, 4, 11, 12, 10, 14, 15]
[9, 1, 2, 0, 13, 5, 6, 7, 8, 14, 4, 11, 12, 15, 3, 10]
orbits:
1110001000000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 1 0 0 1 0 0 0 0]
[0 1 0 0 0 1 1 0 1 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1]
limit on degree (length): 15
ortho basis:
000001000001000
000001000010000
000010000100000
000010001000000
000100010000000
000100100000000
101000000000000
110000000000000

B_can_lab before row reduction:
000111000000001
000000111000010
000000000111100

B_can_lab after row reduction:
000111000000001
000000111000010
000000000111100

word generated as sum over rows of ortho_basis starting at 6: 011000000000000
gate: 000000000000111
k_gate: 000000000111111
nonzero_gate: 111000000000000
radix_gate: 000000000011111

Starting main loop:
word: 011000000000000

combo: 000000000000000

word: 011001000001000

combo: 000000000000001

word: 011000000011000

combo: 000000000000011

word: 011001000010000

combo: 000000000000010

word: 011011000110000

combo: 000000000000110

word: 011010000111000

combo: 000000000000111

word: 011011000101000

combo: 000000000000101

word: 011010000100000

combo: 000000000000100

word: 011000001100000

combo: 000000000001100

word: 011001001101000

combo: 000000000001101

word: 011000001111000

combo: 000000000001111

word: 011001001110000

combo: 000000000001110

word: 011011001010000

combo: 000000000001010

word: 011010001011000

combo: 000000000001011

word: 011011001001000

combo: 000000000001001

word: 011010001000000

combo: 000000000001000

word: 011110011000000

combo: 000000000011000

word: 011111011001000

combo: 000000000011001

word: 011110011011000

combo: 000000000011011

word: 011111011010000

combo: 000000000011010

word: 011101011110000

combo: 000000000011110

word: 011100011111000

combo: 000000000011111

word: 011101011101000

combo: 000000000011101

word: 011100011100000

combo: 000000000011100

word: 011110010100000

combo: 000000000010100

word: 011111010101000

combo: 000000000010101

word: 011110010111000

combo: 000000000010111

word: 011111010110000

combo: 000000000010110

word: 011101010010000

combo: 000000000010010

word: 011100010011000

combo: 000000000010011

word: 011101010001000

combo: 000000000010001

word: 011100010000000

combo: 000000000010000

word: 011000110000000

combo: 000000000110000

word: 011001110001000

combo: 000000000110001

word: 011000110011000

combo: 000000000110011

word: 011001110010000

combo: 000000000110010

word: 011011110110000

combo: 000000000110110

word: 011010110111000

combo: 000000000110111

word: 011011110101000

combo: 000000000110101

word: 011010110100000

combo: 000000000110100

word: 011000111100000

combo: 000000000111100

word: 011001111101000

combo: 000000000111101

word: 011000111111000

combo: 000000000111111

word: 011001111110000

combo: 000000000111110

word: 011011111010000

combo: 000000000111010

word: 011010111011000

combo: 000000000111011

word: 011011111001000

combo: 000000000111001

word: 011010111000000

combo: 000000000111000

word: 011110101000000

combo: 000000000101000

word: 011111101001000

combo: 000000000101001

word: 011110101011000

combo: 000000000101011

word: 011111101010000

combo: 000000000101010

word: 011101101110000

combo: 000000000101110

word: 011100101111000

combo: 000000000101111

word: 011101101101000

combo: 000000000101101

word: 011100101100000

combo: 000000000101100

word: 011110100100000

combo: 000000000100100

word: 011111100101000

combo: 000000000100101

word: 011110100111000

combo: 000000000100111

word: 011111100110000

combo: 000000000100110

word: 011101100010000

combo: 000000000100010

word: 011100100011000

combo: 000000000100011

word: 011101100001000

combo: 000000000100001

word: 011100100000000

combo: 000000000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 1 0 0 1 0 0 0 0]
[0 1 0 0 0 1 1 0 1 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1]
limit on degree (length): 16
ortho basis:
0000001000001000
0000001000010000
0000010000100000
0000010001000000
0000100010000000
0000100100000000
1001000000000000
1010000000000000
1100000000000000

B_can_lab before row reduction:
0000111000000001
0000000111000010
0000000000111100

B_can_lab after row reduction:
0000111000000001
0000000111000010
0000000000111100

word generated as sum over rows of ortho_basis starting at 6: 1111000000000000
gate: 0000000000000111
k_gate: 0000000000111111
nonzero_gate: 1111000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1111000000000000

combo: 0000000000000000

temp: 0000000000000000

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
0000001000011001
0000010001100010
0000100110000100
rs list:
1 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0 
0 1 0 0 0 1 1 0 0 0 1 0 0 0 0 0 
0 0 1 0 0 0 0 1 1 0 0 1 0 0 0 0 
B_aug:
[1 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0]
[0 1 0 0 0 1 1 0 0 0 1 0 0 0 0 0]
[0 0 1 0 0 0 0 1 1 0 0 1 0 0 0 0]
[0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1]
m:
[1 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0]
[0 1 0 0 0 1 1 0 0 0 1 0 0 0 0 0]
[0 0 1 0 0 0 0 1 1 0 0 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), ( 9,12), (8,9), ( 7,11), (6,7), ( 5,10), (4,5), (3,8), ( 2, 3)( 6, 8)( 7, 9)(11,12), ( 1, 2)( 4, 6)( 5, 7)(10,11) ] )
Right transversal of automorphism group of B_aug:
[12, 1, 2, 13, 14, 5, 6, 7, 8, 15, 10, 11, 0, 3, 4, 9]
[12, 0, 2, 13, 14, 3, 4, 7, 8, 15, 9, 11, 1, 5, 6, 10]
[12, 0, 1, 13, 14, 3, 4, 5, 6, 15, 9, 10, 2, 7, 8, 11]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111000000000000
word: 1111001000001000

combo: 0000000000000001

word: 1111000000011000

combo: 0000000000000011

word: 1111001000010000

combo: 0000000000000010

word: 1111011000110000

combo: 0000000000000110

temp: 0000000000000110

orbit_checks[temp>>log2radix]= 0000000000000001

passed if statements
temp basis:
0000100110000100
1111011000110000
0000001000011001
rs list:
0 0 1 0 0 0 0 1 1 0 0 1 0 0 0 0 
0 0 0 0 1 1 0 0 0 1 1 0 1 1 1 1 
1 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0 
B_aug:
[1 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0]
[0 1 0 0 0 1 1 0 0 0 1 0 0 0 0 0]
[0 0 1 0 0 0 0 1 1 0 0 1 0 0 0 0]
[0 0 0 0 1 1 0 0 0 1 1 0 1 1 1 1]
m:
[0 0 1 0 0 0 0 1 1 0 0 1 0 0 0 0]
[0 0 0 0 1 1 0 0 0 1 1 0 1 1 1 1]
[1 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (2,7), ( 6,11), ( 5,10)( 6,11), ( 1, 4)( 6,11), ( 1, 5)( 4,10)( 6,11), ( 6,11)(14,15), ( 6,11)(14,16), ( 6,11)(13,14,16), ( 6,11)( 8, 9)(14,16), ( 6,11)( 8,12)(14,16), ( 3, 8,12)( 6,11)(14,16) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 2, 6, 5, 4, 3, 7, 8, 10, 9, 11, 12, 13, 14, 15]
[1, 4, 2, 6, 5, 0, 9, 7, 8, 10, 3, 11, 12, 13, 14, 15]
[0, 5, 2, 3, 4, 1, 10, 7, 8, 9, 6, 11, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111011000110000
1111001001110000
1111011001010000
1111101010010000
1111011000101000
1111011001001000
1111001110010000
1111001001101000
1111010001011000
1111101100010000
1111101010001000
1111110011000000
1111010000111000
1111101100001000
1111001110001000
1111010111000000
1111000001111000
1111100100011000
1111110101000000
1111100010011000
1111110010100000
1111110100100000
1111000110011000
1111010110100000
1111100101100000
1111100011100000
1111000111100000
word: 1111010000111000

combo: 0000000000000111

temp: 0000000000000111

orbit_checks[temp>>log2radix]= 10001000111101110111011100001

word: 1111011000101000

combo: 0000000000000101

temp: 0000000000000101

orbit_checks[temp>>log2radix]= 10001000111101110111011100001

word: 1111010000100000

combo: 0000000000000100

word: 1111000001100000

combo: 0000000000001100

word: 1111001001101000

combo: 0000000000001101

temp: 0000000000001101

orbit_checks[temp>>log2radix]= 10001000111101110111011100001

word: 1111000001111000

combo: 0000000000001111

temp: 0000000000001111

orbit_checks[temp>>log2radix]= 10001000111101110111011100001

word: 1111001001110000

combo: 0000000000001110

temp: 0000000000001110

orbit_checks[temp>>log2radix]= 10001000111101110111011100001

word: 1111011001010000

combo: 0000000000001010

temp: 0000000000001010

orbit_checks[temp>>log2radix]= 10001000111101110111011100001

word: 1111010001011000

combo: 0000000000001011

temp: 0000000000001011

orbit_checks[temp>>log2radix]= 10001000111101110111011100001

word: 1111011001001000

combo: 0000000000001001

temp: 0000000000001001

orbit_checks[temp>>log2radix]= 10001000111101110111011100001

word: 1111010001000000

combo: 0000000000001000

word: 1111110011000000

combo: 0000000000011000

temp: 0000000000011000

orbit_checks[temp>>log2radix]= 10001000111101110111011100001

word: 1111111011001000

combo: 0000000000011001

word: 1111110011011000

combo: 0000000000011011

word: 1111111011010000

combo: 0000000000011010

word: 1111101011110000

combo: 0000000000011110

word: 1111100011111000

combo: 0000000000011111

word: 1111101011101000

combo: 0000000000011101

word: 1111100011100000

combo: 0000000000011100

temp: 0000000000011100

orbit_checks[temp>>log2radix]= 10001000111101110111011100001

word: 1111110010100000

combo: 0000000000010100

temp: 0000000000010100

orbit_checks[temp>>log2radix]= 10001000111101110111011100001

word: 1111111010101000

combo: 0000000000010101

word: 1111110010111000

combo: 0000000000010111

word: 1111111010110000

combo: 0000000000010110

word: 1111101010010000

combo: 0000000000010010

temp: 0000000000010010

orbit_checks[temp>>log2radix]= 10001000111101110111011100001

word: 1111100010011000

combo: 0000000000010011

temp: 0000000000010011

orbit_checks[temp>>log2radix]= 10001000111101110111011100001

word: 1111101010001000

combo: 0000000000010001

temp: 0000000000010001

orbit_checks[temp>>log2radix]= 10001000111101110111011100001

word: 1111100010000000

combo: 0000000000010000

word: 1111000110000000

combo: 0000000000110000

word: 1111001110001000

combo: 0000000000110001

temp: 0000000000110001

orbit_checks[temp>>log2radix]= 10001000111100001000100011110

word: 1111000110011000

combo: 0000000000110011

temp: 0000000000110011

orbit_checks[temp>>log2radix]= 10001000111100001000100011110

word: 1111001110010000

combo: 0000000000110010

temp: 0000000000110010

orbit_checks[temp>>log2radix]= 10001000111100001000100011110

word: 1111011110110000

combo: 0000000000110110

word: 1111010110111000

combo: 0000000000110111

word: 1111011110101000

combo: 0000000000110101

word: 1111010110100000

combo: 0000000000110100

temp: 0000000000110100

orbit_checks[temp>>log2radix]= 10001000111100001000100011110

word: 1111000111100000

combo: 0000000000111100

temp: 0000000000111100

orbit_checks[temp>>log2radix]= 10001000111100001000100011110

word: 1111001111101000

combo: 0000000000111101

word: 1111000111111000

combo: 0000000000111111

word: 1111001111110000

combo: 0000000000111110

word: 1111011111010000

combo: 0000000000111010

word: 1111010111011000

combo: 0000000000111011

word: 1111011111001000

combo: 0000000000111001

word: 1111010111000000

combo: 0000000000111000

temp: 0000000000111000

orbit_checks[temp>>log2radix]= 10001000111100001000100011110

word: 1111110101000000

combo: 0000000000101000

temp: 0000000000101000

orbit_checks[temp>>log2radix]= 10001000111100001000100011110

word: 1111111101001000

combo: 0000000000101001

word: 1111110101011000

combo: 0000000000101011

word: 1111111101010000

combo: 0000000000101010

word: 1111101101110000

combo: 0000000000101110

word: 1111100101111000

combo: 0000000000101111

word: 1111101101101000

combo: 0000000000101101

word: 1111100101100000

combo: 0000000000101100

temp: 0000000000101100

orbit_checks[temp>>log2radix]= 10001000111100001000100011110

word: 1111110100100000

combo: 0000000000100100

temp: 0000000000100100

orbit_checks[temp>>log2radix]= 10001000111100001000100011110

word: 1111111100101000

combo: 0000000000100101

word: 1111110100111000

combo: 0000000000100111

word: 1111111100110000

combo: 0000000000100110

word: 1111101100010000

combo: 0000000000100010

temp: 0000000000100010

orbit_checks[temp>>log2radix]= 10001000111100001000100011110

word: 1111100100011000

combo: 0000000000100011

temp: 0000000000100011

orbit_checks[temp>>log2radix]= 10001000111100001000100011110

word: 1111101100001000

combo: 0000000000100001

temp: 0000000000100001

orbit_checks[temp>>log2radix]= 10001000111100001000100011110

word: 1111100100000000

combo: 0000000000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 1 1 0 0 0]
[0 1 0 0 0 1 1 1]
limit on degree (length): 13
ortho basis:
0000001000100
0000001001000
0000010010000
0000010100000
1000100000000
1001000000000
1010000000000
1100000000000

B_can_lab before row reduction:
0000011100001
0000000011110

B_can_lab after row reduction:
0000011100001
0000000011110

word generated as sum over rows of ortho_basis starting at 4: 0111100000000
gate: 0000000000011
k_gate: 0000000001111
nonzero_gate: 1111100000000
radix_gate: 0000000011111

Starting main loop:
word: 0111100000000

combo: 0000000000000

word: 0111101000100

combo: 0000000000001

word: 0111100001100

combo: 0000000000011

word: 0111101001000

combo: 0000000000010

word: 0111111011000

combo: 0000000000110

word: 0111110011100

combo: 0000000000111

word: 0111111010100

combo: 0000000000101

word: 0111110010000

combo: 0000000000100

word: 0111100110000

combo: 0000000001100

word: 0111101110100

combo: 0000000001101

word: 0111100111100

combo: 0000000001111

word: 0111101111000

combo: 0000000001110

word: 0111111101000

combo: 0000000001010

word: 0111110101100

combo: 0000000001011

word: 0111111100100

combo: 0000000001001

word: 0111110100000

combo: 0000000001000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 1 1 0 0 0]
[0 1 0 0 0 1 1 1]
limit on degree (length): 14
ortho basis:
00000001000100
00000001001000
00000010010000
00000010100000
10000100000000
10001000000000
10010000000000
10100000000000
11000000000000

B_can_lab before row reduction:
00000011100001
00000000011110

B_can_lab after row reduction:
00000011100001
00000000011110

word generated as sum over rows of ortho_basis starting at 4: 11111100000000
gate: 00000000000011
k_gate: 00000000001111
nonzero_gate: 11111100000000
radix_gate: 00000000011111

Starting main loop:
word: 11111100000000

combo: 00000000000000

word: 11111101000100

combo: 00000000000001

temp: 00000000000001

orbit_checks[temp>>log2radix]= 00000000000000

passed if statements
temp basis:
00000010110010
11111101000100
rs list:
0 1 0 0 1 1 0 1 0 0 0 0 0 0 
0 0 1 0 0 0 1 0 1 1 1 1 1 1 
B_aug:
[1 0 1 1 0 0 1 0 0 0 0 0 0 0]
[0 1 0 0 1 1 0 1 0 0 0 0 0 0]
[0 0 1 0 0 0 1 0 1 1 1 1 1 1]
m:
[0 1 0 0 1 1 0 1 0 0 0 0 0 0]
[0 0 1 0 0 0 1 0 1 1 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (10,11), (10,12), (10,13)(11,12), (10,14)(11,13), ( 9,10,14)(11,13), ( 5, 6)(10,14)(11,13), ( 5, 8)(10,14)(11,13), ( 2, 5, 8)(10,14)(11,13), ( 3, 7)( 5, 8)(10,14)(11,13), ( 1, 4)( 5, 8)(10,14)(11,13) ] )
Right transversal of automorphism group of B_aug:
[2, 1, 0, 6, 4, 5, 3, 7, 8, 9, 10, 11, 12, 13]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
orbits:
11111101000100
11111100001100
11111101001000
11111110010000
11111100110000
11111110100000
word: 11111100001100

combo: 00000000000011

temp: 00000000000011

orbit_checks[temp>>log2radix]= 01000100011110

word: 11111101001000

combo: 00000000000010

temp: 00000000000010

orbit_checks[temp>>log2radix]= 01000100011110

word: 11111111011000

combo: 00000000000110

word: 11111110011100

combo: 00000000000111

word: 11111111010100

combo: 00000000000101

word: 11111110010000

combo: 00000000000100

temp: 00000000000100

orbit_checks[temp>>log2radix]= 01000100011110

word: 11111100110000

combo: 00000000001100

temp: 00000000001100

orbit_checks[temp>>log2radix]= 01000100011110

word: 11111101110100

combo: 00000000001101

word: 11111100111100

combo: 00000000001111

word: 11111101111000

combo: 00000000001110

word: 11111111101000

combo: 00000000001010

word: 11111110101100

combo: 00000000001011

word: 11111111100100

combo: 00000000001001

word: 11111110100000

combo: 00000000001000

temp: 00000000001000

orbit_checks[temp>>log2radix]= 01000100011110

exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 1 1 0 0 0]
[0 1 0 0 0 1 1 1]
limit on degree (length): 15
ortho basis:
000000001000100
000000001001000
000000010010000
000000010100000
100000100000000
100001000000000
100010000000000
100100000000000
101000000000000
110000000000000

B_can_lab before row reduction:
000000011100001
000000000011110

B_can_lab after row reduction:
000000011100001
000000000011110

word generated as sum over rows of ortho_basis starting at 4: 011111100000000
gate: 000000000000011
k_gate: 000000000001111
nonzero_gate: 111111100000000
radix_gate: 000000000011111

Starting main loop:
word: 011111100000000

combo: 000000000000000

word: 011111101000100

combo: 000000000000001

word: 011111100001100

combo: 000000000000011

word: 011111101001000

combo: 000000000000010

word: 011111111011000

combo: 000000000000110

word: 011111110011100

combo: 000000000000111

word: 011111111010100

combo: 000000000000101

word: 011111110010000

combo: 000000000000100

word: 011111100110000

combo: 000000000001100

word: 011111101110100

combo: 000000000001101

word: 011111100111100

combo: 000000000001111

word: 011111101111000

combo: 000000000001110

word: 011111111101000

combo: 000000000001010

word: 011111110101100

combo: 000000000001011

word: 011111111100100

combo: 000000000001001

word: 011111110100000

combo: 000000000001000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 1 1 0 0 0]
[0 1 0 0 0 1 1 1]
limit on degree (length): 16
ortho basis:
0000000001000100
0000000001001000
0000000010010000
0000000010100000
1000000100000000
1000001000000000
1000010000000000
1000100000000000
1001000000000000
1010000000000000
1100000000000000

B_can_lab before row reduction:
0000000011100001
0000000000011110

B_can_lab after row reduction:
0000000011100001
0000000000011110

word generated as sum over rows of ortho_basis starting at 4: 1111111100000000
gate: 0000000000000011
k_gate: 0000000000001111
nonzero_gate: 1111111100000000
radix_gate: 0000000000011111

Starting main loop:
word: 1111111100000000

combo: 0000000000000000

temp: 0000000000000000

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1111111100000000
0000000001001101
rs list:
0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
1 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 
B_aug:
[1 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0]
[0 1 0 0 1 1 0 1 0 0 0 0 0 0 0 0]
[0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1]
m:
[0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1]
[1 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), (12,13), (11,12), (10,11), ( 9,10), (6,8), (5,6), (4,7), (3,4), (2,5), (1,3) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 4, 5, 2, 3, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111111100000000
word: 1111111101000100

combo: 0000000000000001

word: 1111111100001100

combo: 0000000000000011

word: 1111111101001000

combo: 0000000000000010

word: 1111111111011000

combo: 0000000000000110

temp: 0000000000000110

orbit_checks[temp>>log2radix]= 0000000000000001

passed if statements
temp basis:
0000000001001101
1111111101101010
rs list:
1 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 
0 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 
B_aug:
[1 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0]
[0 1 0 0 1 1 0 1 0 0 0 0 0 0 0 0]
[0 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1]
m:
[1 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0]
[0 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (10,11), (10,12), (10,13)(11,12), (10,14)(11,13), (10,15)(11,14)(12,13), (10,16)(11,15)(12,14), ( 9,10,16)(11,15)(12,14), ( 2, 6)(10,16)(11,15)(12,14), ( 5, 8)(10,16)(11,15)(12,14), ( 4, 7)( 5, 8)(10,16)(11,15)(12,14), ( 1, 3)( 5, 8)(10,16)(11,15)(12,14), ( 1, 4)( 3, 7)( 5, 8)(10,16)(11,15)(12,14) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 5, 4, 3, 2, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15]
[1, 3, 5, 4, 0, 6, 7, 2, 8, 9, 10, 11, 12, 13, 14, 15]
[0, 4, 2, 3, 1, 7, 6, 5, 8, 9, 10, 11, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111111111011000
1111111101111000
1111111111101000
1111111111010100
1111111111100100
1111111101110100
1111111110101100
1111111110011100
1111111100111100
word: 1111111110011100

combo: 0000000000000111

temp: 0000000000000111

orbit_checks[temp>>log2radix]= 1110111011100001

word: 1111111111010100

combo: 0000000000000101

temp: 0000000000000101

orbit_checks[temp>>log2radix]= 1110111011100001

word: 1111111110010000

combo: 0000000000000100

word: 1111111100110000

combo: 0000000000001100

word: 1111111101110100

combo: 0000000000001101

temp: 0000000000001101

orbit_checks[temp>>log2radix]= 1110111011100001

word: 1111111100111100

combo: 0000000000001111

temp: 0000000000001111

orbit_checks[temp>>log2radix]= 1110111011100001

word: 1111111101111000

combo: 0000000000001110

temp: 0000000000001110

orbit_checks[temp>>log2radix]= 1110111011100001

word: 1111111111101000

combo: 0000000000001010

temp: 0000000000001010

orbit_checks[temp>>log2radix]= 1110111011100001

word: 1111111110101100

combo: 0000000000001011

temp: 0000000000001011

orbit_checks[temp>>log2radix]= 1110111011100001

word: 1111111111100100

combo: 0000000000001001

temp: 0000000000001001

orbit_checks[temp>>log2radix]= 1110111011100001

word: 1111111110100000

combo: 0000000000001000

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 9
ortho basis:
000001010
000001100
100010000
100100000
101000000
110000000

B_can_lab before row reduction:
000001111

B_can_lab after row reduction:
000001111
101011001000011

word generated as sum over rows of ortho_basis starting at 2: 011110000
gate: 000000001
k_gate: 000000011
nonzero_gate: 111110000
radix_gate: 000011111

Starting main loop:
word: 011110000

combo: 000000000

word: 011111010

combo: 000000001

word: 011110110

combo: 000000011

word: 011111100

combo: 000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 10
ortho basis:
0000001010
0000001100
1000010000
1000100000
1001000000
1010000000
1100000000

B_can_lab before row reduction:
0000001111

B_can_lab after row reduction:
0000001111
101011001000011

word generated as sum over rows of ortho_basis starting at 2: 1111110000
gate: 0000000001
k_gate: 0000000011
nonzero_gate: 1111110000
radix_gate: 0000011111

Starting main loop:
word: 1111110000

combo: 0000000000

word: 1111111010

combo: 0000000001

temp: 0000000001

orbit_checks[temp>>log2radix]= 0000000000

passed if statements
temp basis:
1111110101
rs list:
1 0 1 0 1 1 1 1 1 1 
B_aug:
[1 1 1 1 0 0 0 0 0 0]
[0 1 0 1 1 1 1 1 1 1]
m:
[1 0 1 0 1 1 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (6,7), (6,8), (6,9)(7,8), ( 6,10)( 7, 9), ( 5, 6,10)( 7, 9), ( 2, 4)( 6,10)( 7, 9), ( 1, 3)( 6,10)( 7, 9) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 3, 2, 4, 5, 6, 7, 8, 9]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
orbits:
1111111010
1111110110
1111111100
word: 1111110110

combo: 0000000011

temp: 0000000011

orbit_checks[temp>>log2radix]= 0000001110

word: 1111111100

combo: 0000000010

temp: 0000000010

orbit_checks[temp>>log2radix]= 0000001110

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 11
ortho basis:
00000001010
00000001100
10000010000
10000100000
10001000000
10010000000
10100000000
11000000000

B_can_lab before row reduction:
00000001111

B_can_lab after row reduction:
00000001111
101011001000011

word generated as sum over rows of ortho_basis starting at 2: 01111110000
gate: 00000000001
k_gate: 00000000011
nonzero_gate: 11111110000
radix_gate: 00000011111

Starting main loop:
word: 01111110000

combo: 00000000000

word: 01111111010

combo: 00000000001

word: 01111110110

combo: 00000000011

word: 01111111100

combo: 00000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 12
ortho basis:
000000001010
000000001100
100000010000
100000100000
100001000000
100010000000
100100000000
101000000000
110000000000

B_can_lab before row reduction:
000000001111

B_can_lab after row reduction:
000000001111
101011001000011

word generated as sum over rows of ortho_basis starting at 2: 111111110000
gate: 000000000001
k_gate: 000000000011
nonzero_gate: 111111110000
radix_gate: 000000011111

Starting main loop:
word: 111111110000

combo: 000000000000

temp: 000000000000

orbit_checks[temp>>log2radix]= 000000000000

passed if statements
temp basis:
111111110000
rs list:
0 0 0 0 1 1 1 1 1 1 1 1 
B_aug:
[1 1 1 1 0 0 0 0 0 0 0 0]
[0 0 0 0 1 1 1 1 1 1 1 1]
m:
[0 0 0 0 1 1 1 1 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,12), (10,11), ( 9,10), (8,9), (7,8), (6,7), (5,6), (3,4), (2,3), (1,2) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
orbits:
111111110000
word: 111111111010

combo: 000000000001

word: 111111110110

combo: 000000000011

word: 111111111100

combo: 000000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 13
ortho basis:
0000000001010
0000000001100
1000000010000
1000000100000
1000001000000
1000010000000
1000100000000
1001000000000
1010000000000
1100000000000

B_can_lab before row reduction:
0000000001111

B_can_lab after row reduction:
0000000001111
101011001000011

word generated as sum over rows of ortho_basis starting at 2: 0111111110000
gate: 0000000000001
k_gate: 0000000000011
nonzero_gate: 1111111110000
radix_gate: 0000000011111

Starting main loop:
word: 0111111110000

combo: 0000000000000

word: 0111111111010

combo: 0000000000001

word: 0111111110110

combo: 0000000000011

word: 0111111111100

combo: 0000000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 14
ortho basis:
00000000001010
00000000001100
10000000010000
10000000100000
10000001000000
10000010000000
10000100000000
10001000000000
10010000000000
10100000000000
11000000000000

B_can_lab before row reduction:
00000000001111

B_can_lab after row reduction:
00000000001111
101011001000011

word generated as sum over rows of ortho_basis starting at 2: 11111111110000
gate: 00000000000001
k_gate: 00000000000011
nonzero_gate: 11111111110000
radix_gate: 00000000011111

Starting main loop:
word: 11111111110000

combo: 00000000000000

word: 11111111111010

combo: 00000000000001

temp: 00000000000001

orbit_checks[temp>>log2radix]= 00000000000000

passed if statements
temp basis:
11111111110101
rs list:
1 0 1 0 1 1 1 1 1 1 1 1 1 1 
B_aug:
[1 1 1 1 0 0 0 0 0 0 0 0 0 0]
[0 1 0 1 1 1 1 1 1 1 1 1 1 1]
m:
[1 0 1 0 1 1 1 1 1 1 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (6,7), (6,8), (6,9)(7,8), ( 6,10)( 7, 9), ( 6,11)( 7,10)( 8, 9), ( 6,12)( 7,11)( 8,10), ( 6,13)( 7,12)( 8,11)( 9,10), ( 6,14)( 7,13)( 8,12)( 9,11), ( 5, 6,14)( 7,13)( 8,12)( 9,11), ( 2, 4)( 6,14)( 7,13)( 8,12)( 9,11), ( 1, 3)( 6,14)( 7,13)( 8,12)( 9,11) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
orbits:
11111111111010
11111111110110
11111111111100
word: 11111111110110

combo: 00000000000011

temp: 00000000000011

orbit_checks[temp>>log2radix]= 00000000001110

word: 11111111111100

combo: 00000000000010

temp: 00000000000010

orbit_checks[temp>>log2radix]= 00000000001110

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 15
ortho basis:
000000000001010
000000000001100
100000000010000
100000000100000
100000001000000
100000010000000
100000100000000
100001000000000
100010000000000
100100000000000
101000000000000
110000000000000

B_can_lab before row reduction:
000000000001111

B_can_lab after row reduction:
000000000001111
101011001000011

word generated as sum over rows of ortho_basis starting at 2: 011111111110000
gate: 000000000000001
k_gate: 000000000000011
nonzero_gate: 111111111110000
radix_gate: 000000000011111

Starting main loop:
word: 011111111110000

combo: 000000000000000

word: 011111111111010

combo: 000000000000001

word: 011111111110110

combo: 000000000000011

word: 011111111111100

combo: 000000000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 16
ortho basis:
0000000000001010
0000000000001100
1000000000010000
1000000000100000
1000000001000000
1000000010000000
1000000100000000
1000001000000000
1000010000000000
1000100000000000
1001000000000000
1010000000000000
1100000000000000

B_can_lab before row reduction:
0000000000001111

B_can_lab after row reduction:
0000000000001111
0101011001000011

word generated as sum over rows of ortho_basis starting at 2: 1111111111110000
gate: 0000000000000001
k_gate: 0000000000000011
nonzero_gate: 1111111111110000
radix_gate: 0000000000011111

Starting main loop:
word: 1111111111110000

combo: 0000000000000000

temp: 0000000000000000

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1111111111110000
rs list:
0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
B_aug:
[1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0]
[0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1]
m:
[0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), (12,13), (11,12), (10,11), ( 9,10), (8,9), (7,8), (6,7), (5,6), (3,4), (2,3), (1,2) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111111111110000
word: 1111111111111010

combo: 0000000000000001

word: 1111111111110110

combo: 0000000000000011

word: 1111111111111100

combo: 0000000000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1 1 1 1 1]
limit on degree (length): 9
ortho basis:
010000010
010000100
010001000
010010000
010100000
011000000

B_can_lab before row reduction:
011111111

B_can_lab after row reduction:
011111111
101011001000011

word generated as sum over rows of ortho_basis starting at 6: 000000000
gate: 000000001
k_gate: 000111111
nonzero_gate: 100000000
radix_gate: 000011111

Starting main loop:
word: 000000000

combo: 000000000

word: 010000010

combo: 000000001

word: 000000110

combo: 000000011

word: 010000100

combo: 000000010

word: 000001100

combo: 000000110

word: 010001110

combo: 000000111

word: 000001010

combo: 000000101

word: 010001000

combo: 000000100

word: 000011000

combo: 000001100

word: 010011010

combo: 000001101

word: 000011110

combo: 000001111

word: 010011100

combo: 000001110

word: 000010100

combo: 000001010

word: 010010110

combo: 000001011

word: 000010010

combo: 000001001

word: 010010000

combo: 000001000

word: 000110000

combo: 000011000

word: 010110010

combo: 000011001

word: 000110110

combo: 000011011

word: 010110100

combo: 000011010

word: 000111100

combo: 000011110

word: 010111110

combo: 000011111

word: 000111010

combo: 000011101

word: 010111000

combo: 000011100

word: 000101000

combo: 000010100

word: 010101010

combo: 000010101

word: 000101110

combo: 000010111

word: 010101100

combo: 000010110

word: 000100100

combo: 000010010

word: 010100110

combo: 000010011

word: 000100010

combo: 000010001

word: 010100000

combo: 000010000

word: 001100000

combo: 000110000

word: 011100010

combo: 000110001

word: 001100110

combo: 000110011

word: 011100100

combo: 000110010

word: 001101100

combo: 000110110

word: 011101110

combo: 000110111

word: 001101010

combo: 000110101

word: 011101000

combo: 000110100

word: 001111000

combo: 000111100

word: 011111010

combo: 000111101

word: 001111110

combo: 000111111

word: 011111100

combo: 000111110

word: 001110100

combo: 000111010

word: 011110110

combo: 000111011

word: 001110010

combo: 000111001

word: 011110000

combo: 000111000

word: 001010000

combo: 000101000

word: 011010010

combo: 000101001

word: 001010110

combo: 000101011

word: 011010100

combo: 000101010

word: 001011100

combo: 000101110

word: 011011110

combo: 000101111

word: 001011010

combo: 000101101

word: 011011000

combo: 000101100

word: 001001000

combo: 000100100

word: 011001010

combo: 000100101

word: 001001110

combo: 000100111

word: 011001100

combo: 000100110

word: 001000100

combo: 000100010

word: 011000110

combo: 000100011

word: 001000010

combo: 000100001

word: 011000000

combo: 000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1 1 1 1 1]
limit on degree (length): 10
ortho basis:
0010000010
0010000100
0010001000
0010010000
0010100000
0011000000
1100000000

B_can_lab before row reduction:
0011111111

B_can_lab after row reduction:
0011111111
101011001000011

word generated as sum over rows of ortho_basis starting at 6: 1100000000
gate: 0000000001
k_gate: 0000111111
nonzero_gate: 1100000000
radix_gate: 0000011111

Starting main loop:
word: 1100000000

combo: 0000000000

word: 1110000010

combo: 0000000001

temp: 0000000001

orbit_checks[temp>>log2radix]= 0000000000

passed if statements
temp basis:
0011111111
rs list:
1 1 1 1 1 1 1 1 0 0 
B_aug:
[1 1 1 1 1 1 1 1 0 0]
[0 1 0 0 0 0 0 1 1 1]
m:
[1 1 1 1 1 1 1 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (3,4), (3,5), (3,6)(4,5), (3,7)(4,6), (1,3,7)(4,6), ( 3, 7)( 4, 6)( 9,10), ( 2, 8)( 3, 7)( 4, 6)( 9,10) ] )
Right transversal of automorphism group of B_aug:
[0, 8, 2, 3, 4, 5, 6, 9, 1, 7]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
orbits:
1110000010
1101000010
1110000100
1101111110
1100100010
1101000100
1110111110
1110001000
1100010010
1100100100
1111011110
1101001000
1110010000
1100001010
1100010100
1111101110
1100101000
1101010000
1110100000
1100000110
1100001100
1111110110
1100011000
1100110000
1101100000
1111000000
1111111010
1111111100
word: 1100000110

combo: 0000000011

temp: 0000000011

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110000100

combo: 0000000010

temp: 0000000010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1100001100

combo: 0000000110

temp: 0000000110

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110001110

combo: 0000000111

word: 1100001010

combo: 0000000101

temp: 0000000101

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110001000

combo: 0000000100

temp: 0000000100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1100011000

combo: 0000001100

temp: 0000001100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110011010

combo: 0000001101

word: 1100011110

combo: 0000001111

word: 1110011100

combo: 0000001110

word: 1100010100

combo: 0000001010

temp: 0000001010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110010110

combo: 0000001011

word: 1100010010

combo: 0000001001

temp: 0000001001

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110010000

combo: 0000001000

temp: 0000001000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1100110000

combo: 0000011000

temp: 0000011000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110110010

combo: 0000011001

word: 1100110110

combo: 0000011011

word: 1110110100

combo: 0000011010

word: 1100111100

combo: 0000011110

word: 1110111110

combo: 0000011111

temp: 0000011111

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1100111010

combo: 0000011101

word: 1110111000

combo: 0000011100

word: 1100101000

combo: 0000010100

temp: 0000010100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110101010

combo: 0000010101

word: 1100101110

combo: 0000010111

word: 1110101100

combo: 0000010110

word: 1100100100

combo: 0000010010

temp: 0000010010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110100110

combo: 0000010011

word: 1100100010

combo: 0000010001

temp: 0000010001

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110100000

combo: 0000010000

temp: 0000010000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1101100000

combo: 0000110000

temp: 0000110000

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111100010

combo: 0000110001

word: 1101100110

combo: 0000110011

word: 1111100100

combo: 0000110010

word: 1101101100

combo: 0000110110

word: 1111101110

combo: 0000110111

temp: 0000110111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1101101010

combo: 0000110101

word: 1111101000

combo: 0000110100

word: 1101111000

combo: 0000111100

word: 1111111010

combo: 0000111101

temp: 0000111101

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1101111110

combo: 0000111111

temp: 0000111111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111111100

combo: 0000111110

temp: 0000111110

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1101110100

combo: 0000111010

word: 1111110110

combo: 0000111011

temp: 0000111011

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1101110010

combo: 0000111001

word: 1111110000

combo: 0000111000

word: 1101010000

combo: 0000101000

temp: 0000101000

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111010010

combo: 0000101001

word: 1101010110

combo: 0000101011

word: 1111010100

combo: 0000101010

word: 1101011100

combo: 0000101110

word: 1111011110

combo: 0000101111

temp: 0000101111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1101011010

combo: 0000101101

word: 1111011000

combo: 0000101100

word: 1101001000

combo: 0000100100

temp: 0000100100

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111001010

combo: 0000100101

word: 1101001110

combo: 0000100111

word: 1111001100

combo: 0000100110

word: 1101000100

combo: 0000100010

temp: 0000100010

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111000110

combo: 0000100011

word: 1101000010

combo: 0000100001

temp: 0000100001

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111000000

combo: 0000100000

temp: 0000100000

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 1 1 1 1 0 1 1]
[0 1 0 0 0 0 0 1 1 1]
limit on degree (length): 11
ortho basis:
11100000100
11100001000
11100010000
11100100000
11101000000
01010000000

B_can_lab before row reduction:
01111110110
00000001111

B_can_lab after row reduction:
01111111001
01111110110

word generated as sum over rows of ortho_basis starting at 6: 00000000000
gate: 00000000011
k_gate: 00000111111
nonzero_gate: 10000000000
radix_gate: 00000011111

Starting main loop:
word: 00000000000

combo: 00000000000

word: 11100000100

combo: 00000000001

temp: 00000000001

orbit_checks[temp>>log2radix]= 00000000000

passed if statements
temp basis:
11001111011
10111111001
rs list:
1 1 0 1 1 1 1 0 0 1 1 
1 0 0 1 1 1 1 1 1 0 1 
B_aug:
[1 0 1 1 1 1 1 1 0 1 0]
[0 1 0 0 0 0 0 1 1 1 0]
[0 0 1 0 0 0 0 0 1 1 1]
m:
[1 1 0 1 1 1 1 0 0 1 1]
[1 0 0 1 1 1 1 1 1 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (6,7), (5,6), (4,5), (1,4), ( 2,10)( 8, 9), ( 2, 9)( 8,10) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 8, 3, 4, 5, 6, 7, 2, 10, 9]
[0, 1, 9, 3, 4, 5, 6, 7, 10, 2, 8]
[0, 2, 1, 3, 4, 5, 6, 10, 8, 9, 7]
[0, 1, 10, 3, 4, 5, 6, 7, 9, 8, 2]
orbits:
11100000100
11100001000
10111111100
10110000100
11100010000
10110001000
11101111100
11100100000
10110010000
11101000000
10110100000
10111000000
word: 00000001100

combo: 00000000011

word: 11100001000

combo: 00000000010

temp: 00000000010

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 00000011000

combo: 00000000110

word: 11100011100

combo: 00000000111

word: 00000010100

combo: 00000000101

word: 11100010000

combo: 00000000100

temp: 00000000100

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 00000110000

combo: 00000001100

word: 11100110100

combo: 00000001101

word: 00000111100

combo: 00000001111

word: 11100111000

combo: 00000001110

word: 00000101000

combo: 00000001010

word: 11100101100

combo: 00000001011

word: 00000100100

combo: 00000001001

word: 11100100000

combo: 00000001000

temp: 00000001000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 00001100000

combo: 00000011000

word: 11101100100

combo: 00000011001

word: 00001101100

combo: 00000011011

word: 11101101000

combo: 00000011010

word: 00001111000

combo: 00000011110

word: 11101111100

combo: 00000011111

temp: 00000011111

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 00001110100

combo: 00000011101

word: 11101110000

combo: 00000011100

word: 00001010000

combo: 00000010100

word: 11101010100

combo: 00000010101

word: 00001011100

combo: 00000010111

word: 11101011000

combo: 00000010110

word: 00001001000

combo: 00000010010

word: 11101001100

combo: 00000010011

word: 00001000100

combo: 00000010001

word: 11101000000

combo: 00000010000

temp: 00000010000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 10111000000

combo: 00000110000

temp: 00000110000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 01011000100

combo: 00000110001

word: 10111001100

combo: 00000110011

word: 01011001000

combo: 00000110010

word: 10111011000

combo: 00000110110

word: 01011011100

combo: 00000110111

word: 10111010100

combo: 00000110101

word: 01011010000

combo: 00000110100

word: 10111110000

combo: 00000111100

word: 01011110100

combo: 00000111101

word: 10111111100

combo: 00000111111

temp: 00000111111

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 01011111000

combo: 00000111110

word: 10111101000

combo: 00000111010

word: 01011101100

combo: 00000111011

word: 10111100100

combo: 00000111001

word: 01011100000

combo: 00000111000

word: 10110100000

combo: 00000101000

temp: 00000101000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 01010100100

combo: 00000101001

word: 10110101100

combo: 00000101011

word: 01010101000

combo: 00000101010

word: 10110111000

combo: 00000101110

word: 01010111100

combo: 00000101111

word: 10110110100

combo: 00000101101

word: 01010110000

combo: 00000101100

word: 10110010000

combo: 00000100100

temp: 00000100100

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 01010010100

combo: 00000100101

word: 10110011100

combo: 00000100111

word: 01010011000

combo: 00000100110

word: 10110001000

combo: 00000100010

temp: 00000100010

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 01010001100

combo: 00000100011

word: 10110000100

combo: 00000100001

temp: 00000100001

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 01010000000

combo: 00000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 1 1 1 1 1 0 1]
[0 1 0 0 0 0 0 1 1 1 0]
[0 0 1 0 0 0 0 0 1 1 1]
limit on degree (length): 12
ortho basis:
101100001000
101100010000
101100100000
101101000000
111010000000

B_can_lab before row reduction:
011111101010
000000011011
000000111100

B_can_lab after row reduction:
011111110001
011111101010
000000111100

word generated as sum over rows of ortho_basis starting at 5: 000000000000
gate: 000000000111
k_gate: 000000011111
nonzero_gate: 100000000000
radix_gate: 000000011111

Starting main loop:
word: 000000000000

combo: 000000000000

word: 101100001000

combo: 000000000001

temp: 000000000001

orbit_checks[temp>>log2radix]= 000000000000

passed if statements
temp basis:
001110000010
100111110101
111011110001
rs list:
0 1 0 0 0 0 0 1 1 1 0 0 
1 0 1 0 1 1 1 1 1 0 0 1 
1 0 0 0 1 1 1 1 0 1 1 1 
B_aug:
[1 0 0 1 1 1 1 1 1 0 1 0]
[0 1 0 0 0 0 0 1 1 1 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0]
[0 0 0 1 0 0 0 0 1 1 0 1]
m:
[0 1 0 0 0 0 0 1 1 1 0 0]
[1 0 1 0 1 1 1 1 1 0 0 1]
[1 0 0 0 1 1 1 1 0 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (6,7), (5,6), ( 2, 3)( 8,11), (1,5), ( 3,10)( 9,11), ( 3, 9)(10,11) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 8, 4, 5, 6, 7, 3, 11, 10, 9]
[0, 1, 2, 9, 4, 5, 6, 7, 11, 3, 10, 8]
[0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 11, 10]
[0, 1, 2, 11, 4, 5, 6, 7, 9, 8, 10, 3]
orbits:
101100001000
101100010000
111011111000
101100100000
101101000000
word: 000000011000

combo: 000000000011

word: 101100010000

combo: 000000000010

temp: 000000000010

orbit_checks[temp>>log2radix]= 10000000000000000000000100010110

word: 000000110000

combo: 000000000110

word: 101100111000

combo: 000000000111

word: 000000101000

combo: 000000000101

word: 101100100000

combo: 000000000100

temp: 000000000100

orbit_checks[temp>>log2radix]= 10000000000000000000000100010110

word: 000001100000

combo: 000000001100

word: 101101101000

combo: 000000001101

word: 000001111000

combo: 000000001111

word: 101101110000

combo: 000000001110

word: 000001010000

combo: 000000001010

word: 101101011000

combo: 000000001011

word: 000001001000

combo: 000000001001

word: 101101000000

combo: 000000001000

temp: 000000001000

orbit_checks[temp>>log2radix]= 10000000000000000000000100010110

word: 010111000000

combo: 000000011000

word: 111011001000

combo: 000000011001

word: 010111011000

combo: 000000011011

word: 111011010000

combo: 000000011010

word: 010111110000

combo: 000000011110

word: 111011111000

combo: 000000011111

temp: 000000011111

orbit_checks[temp>>log2radix]= 10000000000000000000000100010110

word: 010111101000

combo: 000000011101

word: 111011100000

combo: 000000011100

word: 010110100000

combo: 000000010100

word: 111010101000

combo: 000000010101

word: 010110111000

combo: 000000010111

word: 111010110000

combo: 000000010110

word: 010110010000

combo: 000000010010

word: 111010011000

combo: 000000010011

word: 010110001000

combo: 000000010001

word: 111010000000

combo: 000000010000

temp: 000000010000

orbit_checks[temp>>log2radix]= 10000000000000000000000100010110

passed if statements
temp basis:
101101111001
110100000010
011100000100
rs list:
1 0 0 1 1 1 1 0 1 1 0 1 
0 1 0 0 0 0 0 0 1 0 1 1 
0 0 1 0 0 0 0 0 1 1 1 0 
B_aug:
[1 0 0 1 1 1 1 1 1 0 1 0]
[0 1 0 0 0 0 0 1 1 1 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0]
[0 0 0 0 0 0 0 1 0 1 1 1]
m:
[1 0 0 1 1 1 1 0 1 1 0 1]
[0 1 0 0 0 0 0 0 1 0 1 1]
[0 0 1 0 0 0 0 0 1 1 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (6,7), (5,6), (4,5), ( 2, 3)(10,12), (1,4), ( 3,11)( 9,10), ( 3,10)( 9,11) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 5, 6, 9, 8, 7, 11, 10]
[0, 1, 2, 3, 4, 5, 6, 10, 8, 11, 7, 9]
[0, 1, 7, 3, 4, 5, 6, 2, 11, 9, 10, 8]
[0, 1, 2, 3, 4, 5, 6, 11, 8, 10, 9, 7]
orbits:
111010000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 1 0 1 1 1]
[0 1 0 0 0 0 0 1 1 1 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0]
[0 0 0 1 0 0 0 0 1 1 0 1]
limit on degree (length): 13
ortho basis:
1001100010000
1001100100000
1001101000000
0111010000000

B_can_lab before row reduction:
0111111010100
0000010110001
0000000110110
0000001111000

B_can_lab after row reduction:
0000010110001
0111111100010
0111111010100
0000001111000
0000000111000

word generated as sum over rows of ortho_basis starting at 4: 0000000000000
gate: 0000000001111
k_gate: 0000000001111
nonzero_gate: 1000000000000
radix_gate: 0000000011111

Starting main loop:
word: 0000000000000

combo: 0000000000000

word: 1001100010000

combo: 0000000000001

temp: 0000000000001

orbit_checks[temp>>log2radix]= 0000000000000

passed if statements
temp basis:
0001110000010
0011100000100
1011011101001
1110111100001
rs list:
0 1 0 0 0 0 0 1 1 1 0 0 0 
0 0 1 0 0 0 0 0 1 1 1 0 0 
1 0 0 1 0 1 1 1 0 1 1 0 1 
1 0 0 0 0 1 1 1 1 0 1 1 1 
B_aug:
[1 0 0 0 1 1 1 1 0 1 1 1 0]
[0 1 0 0 0 0 0 1 1 1 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0]
[0 0 0 1 0 0 0 0 1 1 0 1 0]
[0 0 0 0 1 0 0 0 1 1 0 0 1]
m:
[0 1 0 0 0 0 0 1 1 1 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0]
[1 0 0 1 0 1 1 1 0 1 1 0 1]
[1 0 0 0 0 1 1 1 1 0 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (6,7), ( 3, 4)(11,12), ( 2, 3)( 8,11), (1,6), ( 4,10)( 9,12), ( 4, 9)(10,12) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 8, 5, 6, 7, 4, 12, 10, 11, 9]
[0, 1, 2, 3, 9, 5, 6, 7, 12, 4, 10, 11, 8]
[0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 12, 11]
[0, 1, 2, 3, 12, 5, 6, 7, 9, 8, 10, 11, 4]
orbits:
1001100010000
1001100100000
1110111110000
1001101000000
word: 0000000110000

combo: 0000000000011

word: 1001100100000

combo: 0000000000010

temp: 0000000000010

orbit_checks[temp>>log2radix]= 1000000000010110

word: 0000001100000

combo: 0000000000110

word: 1001101110000

combo: 0000000000111

word: 0000001010000

combo: 0000000000101

word: 1001101000000

combo: 0000000000100

temp: 0000000000100

orbit_checks[temp>>log2radix]= 1000000000010110

word: 1110111000000

combo: 0000000001100

word: 0111011010000

combo: 0000000001101

word: 1110111110000

combo: 0000000001111

temp: 0000000001111

orbit_checks[temp>>log2radix]= 1000000000010110

word: 0111011100000

combo: 0000000001110

word: 1110110100000

combo: 0000000001010

word: 0111010110000

combo: 0000000001011

word: 1110110010000

combo: 0000000001001

word: 0111010000000

combo: 0000000001000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 1 1 1 1 0 1 1 1]
[0 1 0 0 0 0 0 1 1 1 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0]
[0 0 0 1 0 0 0 0 1 1 0 1 0]
[0 0 0 0 1 0 0 0 1 1 0 0 1]
limit on degree (length): 14
ortho basis:
10001100100000
10001101000000
11111010000000

B_can_lab before row reduction:
01111110101000
00001001100001
00000101100010
00000001101100
00000011110000

B_can_lab after row reduction:
00001001100001
00000101100010
01111111000100
01111110101000
00000011110000

word generated as sum over rows of ortho_basis starting at 3: 00000000000000
gate: 00000000011111
k_gate: 00000000000111
nonzero_gate: 10000000000000
radix_gate: 00000000011111

Starting main loop:
word: 00000000000000

combo: 00000000000000

word: 10001100100000

combo: 00000000000001

temp: 00000000000001

orbit_checks[temp>>log2radix]= 00000000000000

passed if statements
temp basis:
00001110000010
00011100000100
00101100001000
10110111010001
11111011000001
rs list:
0 1 0 0 0 0 0 1 1 1 0 0 0 0 
0 0 1 0 0 0 0 0 1 1 1 0 0 0 
0 0 0 1 0 0 0 0 1 1 0 1 0 0 
1 0 0 0 1 0 1 1 1 0 1 1 0 1 
1 0 0 0 0 0 1 1 0 1 1 1 1 1 
B_aug:
[1 0 0 0 0 1 1 1 1 0 1 1 1 0]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 1 0 0 0 0 1 1 0 1 0 0]
[0 0 0 0 1 0 0 0 1 1 0 0 1 0]
[0 0 0 0 0 1 0 0 1 1 0 0 0 1]
m:
[0 1 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 1 0 0 0 0 1 1 0 1 0 0]
[1 0 0 0 1 0 1 1 1 0 1 1 0 1]
[1 0 0 0 0 0 1 1 0 1 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 4, 5)(12,13), ( 3, 4)(11,12), ( 2, 3)( 8,11), (1,7), ( 5,10)( 9,13), ( 5, 9)(10,13) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 8, 6, 7, 5, 13, 10, 11, 12, 9]
[0, 1, 2, 3, 4, 9, 6, 7, 13, 5, 10, 11, 12, 8]
[0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 13, 12]
[0, 1, 2, 3, 4, 13, 6, 7, 9, 8, 10, 11, 12, 5]
orbits:
10001100100000
10001101000000
11111011100000
word: 00000001100000

combo: 00000000000011

word: 10001101000000

combo: 00000000000010

temp: 00000000000010

orbit_checks[temp>>log2radix]= 00000010000110

word: 01110111000000

combo: 00000000000110

word: 11111011100000

combo: 00000000000111

temp: 00000000000111

orbit_checks[temp>>log2radix]= 00000010000110

word: 01110110100000

combo: 00000000000101

word: 11111010000000

combo: 00000000000100

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 1 1 0 1 1 1 1 1]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 1 0 0 0 0 1 1 0 1 0 0]
[0 0 0 0 1 0 0 0 1 1 0 0 1 0]
[0 0 0 0 0 1 0 0 1 1 0 0 0 1]
limit on degree (length): 15
ortho basis:
100001101000000
011111010000000

B_can_lab before row reduction:
011111101010000
000100011000001
000010011000010
000001011000100
000000011011000
000000111100000

B_can_lab after row reduction:
000100011000001
000010011000010
000001011000100
011111110001000
011111101010000
000000111100000
000000000100001

word generated as sum over rows of ortho_basis starting at 2: 000000000000000
gate: 000000000111111
k_gate: 000000000000011
nonzero_gate: 100000000000000
radix_gate: 000000000011111

Starting main loop:
word: 000000000000000

combo: 000000000000000

word: 100001101000000

combo: 000000000000001

temp: 000000000000001

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
000001110000010
000011100000100
000101100001000
001001100010000
101111010100001
111110110000001
rs list:
0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 
0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 
0 0 0 1 0 0 0 0 1 1 0 1 0 0 0 
0 0 0 0 1 0 0 0 1 1 0 0 1 0 0 
1 0 0 0 0 1 0 1 0 1 1 1 1 0 1 
1 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
B_aug:
[1 0 0 0 0 0 1 1 0 1 1 1 1 1 0]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 0 0 0 0 1 1 0 1 0 0 0]
[0 0 0 0 1 0 0 0 1 1 0 0 1 0 0]
[0 0 0 0 0 1 0 0 1 1 0 0 0 1 0]
[0 0 0 0 0 0 1 0 1 1 0 0 0 0 1]
m:
[0 1 0 0 0 0 0 1 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 0 0 0 0 1 1 0 1 0 0 0]
[0 0 0 0 1 0 0 0 1 1 0 0 1 0 0]
[1 0 0 0 0 1 0 1 0 1 1 1 1 0 1]
[1 0 0 0 0 0 0 1 1 0 1 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 5, 6)(13,14), ( 4, 5)(12,13), ( 3, 4)(11,12), ( 2, 3)( 8,11), ( 6,10)( 9,14), ( 6, 9)(10,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 5, 8, 7, 6, 14, 10, 11, 12, 13, 9]
[0, 1, 2, 3, 4, 5, 9, 7, 14, 6, 10, 11, 12, 13, 8]
[0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 14, 13]
[0, 1, 2, 3, 4, 5, 14, 7, 9, 8, 10, 11, 12, 13, 6]
orbits:
100001101000000
111110111000000
word: 111110111000000

combo: 000000000000011

temp: 000000000000011

orbit_checks[temp>>log2radix]= 000000000001010

word: 011111010000000

combo: 000000000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 0 1 1 0 1 1 1 1 1]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 0 0 0 0 1 1 0 1 0 0 0]
[0 0 0 0 1 0 0 0 1 1 0 0 1 0 0]
[0 0 0 0 0 1 0 0 1 1 0 0 0 1 0]
[0 0 0 0 0 0 1 0 1 1 0 0 0 0 1]
limit on degree (length): 16
ortho basis:
1111111010000000

B_can_lab before row reduction:
0111111010100000
0010000110000001
0001000110000010
0000100110000100
0000010110001000
0000000110110000
0000001111000000

B_can_lab after row reduction:
0010000110000001
0001000110000010
0000100110000100
0000010110001000
0111111100010000
0111111010100000
0000001111000000

word generated as sum over rows of ortho_basis starting at 1: 0000000000000000
gate: 0000000001111111
k_gate: 0000000000000001
nonzero_gate: 1000000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 0000000000000000

combo: 0000000000000000

word: 1111111010000000

combo: 0000000000000001

temp: 0000000000000001

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1000001100000001
0000001110000010
0000011100000100
0000101100001000
0001001100010000
1101110110100000
1111111010000000
rs list:
1 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 
0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 
0 0 0 1 0 0 0 0 1 1 0 1 0 0 0 0 
0 0 0 0 1 0 0 0 1 1 0 0 1 0 0 0 
0 0 0 0 0 1 0 1 1 0 1 1 1 0 1 1 
0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 
B_aug:
[1 0 0 0 0 0 0 1 1 0 1 1 1 1 1 0]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 0]
[0 0 0 1 0 0 0 0 1 1 0 1 0 0 0 0]
[0 0 0 0 1 0 0 0 1 1 0 0 1 0 0 0]
[0 0 0 0 0 1 0 0 1 1 0 0 0 1 0 0]
[0 0 0 0 0 0 1 0 1 1 0 0 0 0 1 0]
[0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1]
m:
[1 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 0]
[0 0 0 1 0 0 0 0 1 1 0 1 0 0 0 0]
[0 0 0 0 1 0 0 0 1 1 0 0 1 0 0 0]
[0 0 0 0 0 1 0 1 1 0 1 1 1 0 1 1]
[0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 5, 6)(13,14), ( 4, 5)(12,13), ( 3, 4)(11,12), ( 2, 3)( 8,11), ( 1, 2)( 8,16), ( 6,10)( 9,14), ( 6, 9)(10,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 5, 8, 7, 6, 14, 10, 11, 12, 13, 9, 15]
[0, 1, 2, 3, 4, 5, 9, 7, 14, 6, 10, 11, 12, 13, 8, 15]
[0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 14, 13, 15]
[0, 1, 2, 3, 4, 5, 14, 7, 9, 8, 10, 11, 12, 13, 6, 15]
[0, 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 11, 13, 14, 12, 15]
[0, 1, 2, 3, 4, 6, 13, 7, 9, 8, 10, 11, 12, 14, 5, 15]
[0, 1, 2, 4, 5, 6, 3, 7, 8, 9, 10, 12, 13, 14, 11, 15]
[0, 1, 2, 3, 5, 6, 12, 7, 9, 8, 10, 11, 13, 14, 4, 15]
[0, 1, 3, 4, 5, 6, 2, 7, 8, 9, 11, 12, 13, 14, 10, 15]
[0, 1, 2, 4, 5, 6, 11, 7, 9, 8, 10, 12, 13, 14, 3, 15]
[0, 2, 3, 4, 5, 6, 1, 10, 8, 9, 11, 12, 13, 14, 7, 15]
[0, 1, 3, 4, 5, 6, 10, 7, 9, 8, 11, 12, 13, 14, 2, 15]
[1, 2, 3, 4, 5, 6, 0, 10, 8, 9, 11, 12, 13, 14, 15, 7]
[0, 2, 3, 4, 5, 6, 7, 10, 9, 8, 11, 12, 13, 14, 1, 15]
[1, 2, 3, 4, 5, 6, 15, 10, 9, 8, 11, 12, 13, 14, 0, 7]
orbits:
1111111010000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 1 1 0 1 1 1 1 1]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 1 0 0 0 0 1 1 0 1 0 0]
[0 0 0 0 1 0 0 0 1 1 0 0 1 0]
[0 0 0 0 0 1 0 0 1 1 0 0 0 1]
limit on degree (length): 16
ortho basis:
1000001101000000
0011111010000000
1100000000000000

B_can_lab before row reduction:
0011111101010000
0000100011000001
0000010011000010
0000001011000100
0000000011011000
0000000111100000

B_can_lab after row reduction:
0000100011000001
0000010011000010
0000001011000100
0011111110001000
0011111101010000
0000000111100000
0000001000110001

word generated as sum over rows of ortho_basis starting at 2: 1100000000000000
gate: 0000000000111111
k_gate: 0000000000000011
nonzero_gate: 1100000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1100000000000000

combo: 0000000000000000

word: 0100001101000000

combo: 0000000000000001

word: 0111110111000000

combo: 0000000000000011

word: 1111111010000000

combo: 0000000000000010

temp: 0000000000000010

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
0011111011000001
1111111010000000
0000001110000010
0000011100000100
0000101100001000
0001001100010000
rs list:
1 0 0 0 0 0 1 1 0 1 1 1 1 1 0 0 
0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 
0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 
0 0 0 1 0 0 0 0 1 1 0 1 0 0 0 0 
0 0 0 0 1 0 0 0 1 1 0 0 1 0 0 0 
B_aug:
[1 0 0 0 0 0 1 1 0 1 1 1 1 1 0 0]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 0]
[0 0 0 1 0 0 0 0 1 1 0 1 0 0 0 0]
[0 0 0 0 1 0 0 0 1 1 0 0 1 0 0 0]
[0 0 0 0 0 1 0 0 1 1 0 0 0 1 0 0]
[0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1]
m:
[1 0 0 0 0 0 1 1 0 1 1 1 1 1 0 0]
[0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 0]
[0 0 0 1 0 0 0 0 1 1 0 1 0 0 0 0]
[0 0 0 0 1 0 0 0 1 1 0 0 1 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), ( 4, 5)(12,13), ( 3, 4)(11,12), ( 2, 3)( 8,11), (1,7), ( 1,15)( 7,16), ( 5,10)( 9,13), ( 5, 9)(10,13) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 8, 6, 7, 5, 13, 10, 11, 12, 9, 14, 15]
[0, 1, 2, 3, 4, 9, 6, 7, 13, 5, 10, 11, 12, 8, 14, 15]
[0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15]
[0, 1, 2, 3, 4, 13, 6, 7, 9, 8, 10, 11, 12, 5, 14, 15]
[0, 1, 2, 4, 5, 3, 6, 7, 8, 9, 10, 12, 13, 11, 14, 15]
[0, 1, 2, 3, 5, 12, 6, 7, 9, 8, 10, 11, 13, 4, 14, 15]
[0, 1, 3, 4, 5, 2, 6, 7, 8, 9, 11, 12, 13, 10, 14, 15]
[0, 1, 2, 4, 5, 11, 6, 7, 9, 8, 10, 12, 13, 3, 14, 15]
[0, 2, 3, 4, 5, 1, 6, 10, 8, 9, 11, 12, 13, 7, 14, 15]
[0, 1, 3, 4, 5, 10, 6, 7, 9, 8, 11, 12, 13, 2, 14, 15]
[0, 2, 3, 4, 5, 7, 6, 10, 9, 8, 11, 12, 13, 1, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111111010000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 1 1 1 1 0 1 1 1]
[0 1 0 0 0 0 0 1 1 1 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0]
[0 0 0 1 0 0 0 0 1 1 0 1 0]
[0 0 0 0 1 0 0 0 1 1 0 0 1]
limit on degree (length): 15
ortho basis:
100001100100000
100001101000000
101111010000000
110000000000000

B_can_lab before row reduction:
001111110101000
000001001100001
000000101100010
000000001101100
000000011110000

B_can_lab after row reduction:
000001001100001
000000101100010
001111111000100
001111110101000
000000011110000

word generated as sum over rows of ortho_basis starting at 3: 110000000000000
gate: 000000000011111
k_gate: 000000000000111
nonzero_gate: 110000000000000
radix_gate: 000000000011111

Starting main loop:
word: 110000000000000

combo: 000000000000000

word: 010001100100000

combo: 000000000000001

word: 110000001100000

combo: 000000000000011

temp: 000000000000011

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
000001110000010
000011100000100
111011010001001
111110110000001
001001100010000
rs list:
0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 
0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 
1 0 0 1 0 0 0 1 0 1 1 0 1 1 1 
1 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
0 0 0 0 1 0 0 0 1 1 0 0 1 0 0 
B_aug:
[1 0 0 0 0 1 1 1 1 0 1 1 1 0 0]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 0 0 0 0 1 1 0 1 0 0 0]
[0 0 0 0 1 0 0 0 1 1 0 0 1 0 0]
[0 0 0 0 0 1 1 0 0 0 0 0 0 1 1]
m:
[0 1 0 0 0 0 0 1 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0 0]
[1 0 0 1 0 0 0 1 0 1 1 0 1 1 1]
[1 0 0 0 0 0 0 1 1 0 1 1 1 1 1]
[0 0 0 0 1 0 0 0 1 1 0 0 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (14,15), (6,7), ( 5, 9)(10,13), ( 5,10)( 9,13), ( 4, 5)(12,13), ( 3, 4)(11,12), ( 2, 3)( 8,11) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 13, 14, 7, 8, 9, 10, 11, 12, 5, 6]
orbits:
110000001100000
111110110100000
111110111000000
word: 010001101000000

combo: 000000000000010

word: 111110111000000

combo: 000000000000110

temp: 000000000000110

orbit_checks[temp>>log2radix]= 000000001101000

word: 011111011100000

combo: 000000000000111

word: 111110110100000

combo: 000000000000101

temp: 000000000000101

orbit_checks[temp>>log2radix]= 000000001101000

word: 011111010000000

combo: 000000000000100

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 0 1 1 0 1 1 1 1 1]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 0 0 0 0 1 1 0 1 0 0 0]
[0 0 0 0 1 0 0 0 1 1 0 0 1 0 0]
[0 0 0 0 0 1 1 0 0 0 0 0 0 1 1]
limit on degree (length): 16
ortho basis:
0100011001000000
1011110010000000
0100000100000000

B_can_lab before row reduction:
0101101110101000
0000001001100001
0000000101100010
0000000001101100
0000000011110000
0011110000000000

B_can_lab after row reduction:
0000001001100001
0000000101100010
0101101111000100
0101101110101000
0000000011110000
0011110000000000
0000000000100001

word generated as sum over rows of ortho_basis starting at 3: 0000000000000000
gate: 0000000000111111
k_gate: 0000000000000111
nonzero_gate: 1000000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 0000000000000000

combo: 0000000000000000

word: 0100011001000000

combo: 0000000000000001

word: 1111101011000000

combo: 0000000000000011

temp: 0000000000000011

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
0000011010000010
0000111000000100
1110110011001000
1111101011000000
0010011000010000
1000000101000001
rs list:
0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0 
0 0 0 1 0 0 1 1 0 0 1 1 0 1 1 1 
0 0 0 0 0 0 1 1 0 1 0 1 1 1 1 1 
0 0 0 0 1 0 0 0 0 1 1 0 0 1 0 0 
1 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 
B_aug:
[1 0 0 0 0 0 0 1 1 1 0 1 1 1 1 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 0 0 0 0 0 1 1 0 1 0 0 0]
[0 0 0 0 1 0 0 0 0 1 1 0 0 1 0 0]
[0 0 0 0 0 1 1 0 1 0 0 0 0 0 1 0]
[0 0 0 0 0 0 1 1 0 1 0 1 1 1 1 1]
m:
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 0 0 1 1 0 0 1 1 0 1 1 1]
[0 0 0 0 0 0 1 1 0 1 0 1 1 1 1 1]
[0 0 0 0 1 0 0 0 0 1 1 0 0 1 0 0]
[1 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 5,10)(11,14), ( 5,11)(10,14), ( 4, 5)(13,14), ( 3, 4)(12,13), ( 2, 3)( 8,12), ( 1, 9)( 7,16), ( 1, 7)( 9,16) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 6, 5, 7, 14, 9, 10, 11, 12, 13, 8, 15]
[0, 1, 2, 3, 4, 8, 14, 7, 5, 9, 10, 11, 12, 13, 6, 15]
[5, 1, 2, 3, 4, 0, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14]
[0, 1, 2, 3, 4, 14, 8, 7, 6, 9, 10, 11, 12, 13, 5, 15]
[5, 1, 2, 3, 4, 15, 8, 7, 6, 9, 10, 11, 12, 13, 0, 14]
orbits:
1111101011000000
1011101111000000
word: 1011110010000000

combo: 0000000000000010

word: 1111110110000000

combo: 0000000000000110

temp: 0000000000000110

orbit_checks[temp>>log2radix]= 0000000010001000

passed if statements
temp basis:
1011110011100000
1111110110000000
1000011000000001
0000011010000010
0000111000000100
0001011000001000
rs list:
0 0 0 0 0 1 1 1 0 0 1 1 1 1 0 1 
0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 
1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 
0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0 
0 0 0 1 0 0 0 0 0 1 1 0 1 0 0 0 
B_aug:
[1 0 0 0 0 0 0 1 1 1 0 1 1 1 1 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 0 0 0 0 0 1 1 0 1 0 0 0]
[0 0 0 0 1 0 0 0 0 1 1 0 0 1 0 0]
[0 0 0 0 0 1 1 0 1 0 0 0 0 0 1 0]
[0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1]
m:
[0 0 0 0 0 1 1 1 0 0 1 1 1 1 0 1]
[0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1]
[1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 0 0 0 0 0 1 1 0 1 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,15), (6,7), ( 6, 9)( 7,15), ( 3, 4)(12,13), ( 2, 3)( 8,12), ( 1, 2)( 8,16), ( 4,11)(10,13), ( 4,10)(11,13) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 9, 5, 6, 7, 8, 4, 13, 11, 12, 10, 14, 15]
[0, 1, 2, 3, 10, 5, 6, 7, 8, 13, 4, 11, 12, 9, 14, 15]
[0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15]
[0, 1, 2, 3, 13, 5, 6, 7, 8, 10, 9, 11, 12, 4, 14, 15]
[0, 1, 3, 4, 2, 5, 6, 7, 8, 9, 10, 12, 13, 11, 14, 15]
[0, 1, 2, 4, 12, 5, 6, 7, 8, 10, 9, 11, 13, 3, 14, 15]
[0, 2, 3, 4, 1, 5, 6, 11, 8, 9, 10, 12, 13, 7, 14, 15]
[0, 1, 3, 4, 11, 5, 6, 7, 8, 10, 9, 12, 13, 2, 14, 15]
[1, 2, 3, 4, 0, 5, 6, 11, 8, 9, 10, 12, 13, 15, 14, 7]
[0, 2, 3, 4, 7, 5, 6, 11, 8, 10, 9, 12, 13, 1, 14, 15]
[1, 2, 3, 4, 15, 5, 6, 11, 8, 10, 9, 12, 13, 0, 14, 7]
orbits:
1111110110000000
word: 1011101111000000

combo: 0000000000000111

temp: 0000000000000111

orbit_checks[temp>>log2radix]= 0000000011001000

word: 0000011101000000

combo: 0000000000000101

word: 0100000100000000

combo: 0000000000000100

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 1 1 1 1 0 1 1 1]
[0 1 0 0 0 0 0 1 1 1 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0]
[0 0 0 1 0 0 0 0 1 1 0 1 0]
[0 0 0 0 1 0 0 0 1 1 0 0 1]
limit on degree (length): 16
ortho basis:
1000001100100000
1000001101000000
1001111010000000
1010000000000000
1100000000000000

B_can_lab before row reduction:
0001111110101000
0000001001100001
0000000101100010
0000000001101100
0000000011110000

B_can_lab after row reduction:
0000001001100001
0000000101100010
0001111111000100
0001111110101000
0000000011110000

word generated as sum over rows of ortho_basis starting at 3: 0110000000000000
gate: 0000000000011111
k_gate: 0000000000000111
nonzero_gate: 1110000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 0110000000000000

combo: 0000000000000000

word: 1110001100100000

combo: 0000000000000001

word: 0110000001100000

combo: 0000000000000011

word: 1110001101000000

combo: 0000000000000010

word: 0111110111000000

combo: 0000000000000110

word: 1111111011100000

combo: 0000000000000111

word: 0111110110100000

combo: 0000000000000101

word: 1111111010000000

combo: 0000000000000100

temp: 0000000000000100

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
0001110111100001
1111111010000000
0000001110000010
0000011100000100
0000101100001000
rs list:
1 0 0 0 0 1 1 1 1 0 1 1 1 0 0 0 
0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 
0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 
0 0 0 1 0 0 0 0 1 1 0 1 0 0 0 0 
B_aug:
[1 0 0 0 0 1 1 1 1 0 1 1 1 0 0 0]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 0]
[0 0 0 1 0 0 0 0 1 1 0 1 0 0 0 0]
[0 0 0 0 1 0 0 0 1 1 0 0 1 0 0 0]
[0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1]
m:
[1 0 0 0 0 1 1 1 1 0 1 1 1 0 0 0]
[0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 0]
[0 0 0 1 0 0 0 0 1 1 0 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (6,7), ( 3, 4)(11,12), ( 2, 3)( 8,11), (1,6), ( 1,14)( 6,15)( 7,16)( 9,10), ( 4,10)( 9,12) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 8, 5, 6, 7, 4, 12, 10, 11, 9, 13, 14, 15]
[0, 1, 2, 3, 9, 5, 6, 7, 12, 4, 10, 11, 8, 13, 14, 15]
[0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15]
[0, 1, 2, 3, 12, 5, 6, 7, 9, 8, 10, 11, 4, 13, 14, 15]
[0, 1, 3, 4, 2, 5, 6, 7, 8, 9, 11, 12, 10, 13, 14, 15]
[0, 1, 2, 4, 11, 5, 6, 7, 9, 8, 10, 12, 3, 13, 14, 15]
[0, 2, 3, 4, 1, 5, 6, 10, 8, 9, 11, 12, 7, 13, 14, 15]
[0, 1, 3, 4, 10, 5, 6, 7, 9, 8, 11, 12, 2, 13, 14, 15]
[0, 2, 3, 4, 7, 5, 6, 10, 9, 8, 11, 12, 1, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111111010000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 1 0 1 1 1]
[0 1 0 0 0 0 0 1 1 1 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0]
[0 0 0 1 0 0 0 0 1 1 0 1]
limit on degree (length): 14
ortho basis:
10001100010000
10001100100000
10001101000000
00111010000000
11000000000000

B_can_lab before row reduction:
00111111010100
00000010110001
00000000110110
00000001111000

B_can_lab after row reduction:
00000010110001
00111111100010
00111111010100
00000001111000
00000000111000

word generated as sum over rows of ortho_basis starting at 4: 11000000000000
gate: 00000000001111
k_gate: 00000000001111
nonzero_gate: 11000000000000
radix_gate: 00000000011111

Starting main loop:
word: 11000000000000

combo: 00000000000000

word: 01001100010000

combo: 00000000000001

word: 11000000110000

combo: 00000000000011

temp: 00000000000011

orbit_checks[temp>>log2radix]= 00000000000000

passed if statements
temp basis:
00001110000010
11100111000101
11111011000001
00101100001000
rs list:
0 1 0 0 0 0 0 1 1 1 0 0 0 0 
1 0 1 0 0 0 1 1 1 0 0 1 1 1 
1 0 0 0 0 0 1 1 0 1 1 1 1 1 
0 0 0 1 0 0 0 0 1 1 0 1 0 0 
B_aug:
[1 0 0 0 1 1 1 1 0 1 1 1 0 0]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 1 0 0 0 0 1 1 0 1 0 0]
[0 0 0 0 1 1 0 0 0 0 0 0 1 1]
m:
[0 1 0 0 0 0 0 1 1 1 0 0 0 0]
[1 0 1 0 0 0 1 1 1 0 0 1 1 1]
[1 0 0 0 0 0 1 1 0 1 1 1 1 1]
[0 0 0 1 0 0 0 0 1 1 0 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 4, 9)(10,12), ( 4,10)( 9,12), ( 3, 4)(11,12), ( 2, 3)( 8,11), (13,14), ( 5, 6)(13,14), ( 1, 7)(13,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 12, 13, 6, 7, 8, 9, 10, 11, 4, 5]
orbits:
11000000110000
11000001010000
11111011010000
11000001100000
11111010110000
11111011100000
word: 01001100100000

combo: 00000000000010

word: 11000001100000

combo: 00000000000110

temp: 00000000000110

orbit_checks[temp>>log2radix]= 110100001101000

word: 01001101110000

combo: 00000000000111

word: 11000001010000

combo: 00000000000101

temp: 00000000000101

orbit_checks[temp>>log2radix]= 110100001101000

word: 01001101000000

combo: 00000000000100

word: 01110111000000

combo: 00000000001100

word: 11111011010000

combo: 00000000001101

temp: 00000000001101

orbit_checks[temp>>log2radix]= 110100001101000

word: 01110111110000

combo: 00000000001111

word: 11111011100000

combo: 00000000001110

temp: 00000000001110

orbit_checks[temp>>log2radix]= 110100001101000

word: 01110110100000

combo: 00000000001010

word: 11111010110000

combo: 00000000001011

temp: 00000000001011

orbit_checks[temp>>log2radix]= 110100001101000

word: 01110110010000

combo: 00000000001001

word: 11111010000000

combo: 00000000001000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 1 1 0 1 1 1 1 1]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 1 0 0 0 0 1 1 0 1 0 0]
[0 0 0 0 1 1 0 0 0 0 0 0 1 1]
limit on degree (length): 15
ortho basis:
010011000100000
100011001000000
001110010000000
010000100000000

B_can_lab before row reduction:
011011011010100
000000010110001
000000000110110
000000001111000
000111100000000

B_can_lab after row reduction:
000000010110001
011011011100010
011011011010100
000000001111000
000111100000000

word generated as sum over rows of ortho_basis starting at 4: 000000000000000
gate: 000000000011111
k_gate: 000000000001111
nonzero_gate: 100000000000000
radix_gate: 000000000011111

Starting main loop:
word: 000000000000000

combo: 000000000000000

word: 010011000100000

combo: 000000000000001

word: 110000001100000

combo: 000000000000011

temp: 000000000000011

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
000011010000010
011001111000101
011110111000001
001011000001000
100000101010000
rs list:
0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 
1 0 1 0 0 0 1 1 1 1 0 0 1 1 0 
1 0 0 0 0 0 1 1 1 0 1 1 1 1 0 
0 0 0 1 0 0 0 0 0 1 1 0 1 0 0 
0 0 0 0 1 0 1 0 1 0 0 0 0 0 1 
B_aug:
[1 0 0 0 0 0 1 1 1 0 1 1 1 1 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 1 0 0 0 0 0 1 1 0 1 0 0]
[0 0 0 0 1 1 0 0 1 0 0 0 0 1 0]
[0 0 0 0 0 1 1 0 0 0 0 0 0 1 1]
m:
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0]
[1 0 1 0 0 0 1 1 1 1 0 0 1 1 0]
[1 0 0 0 0 0 1 1 1 0 1 1 1 1 0]
[0 0 0 1 0 0 0 0 0 1 1 0 1 0 0]
[0 0 0 0 1 0 1 0 1 0 0 0 0 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 4,10)(11,13), ( 4,11)(10,13), ( 3, 4)(12,13), ( 2, 3)( 8,12), ( 5,15)( 7, 9), ( 5, 9)( 7,15) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 14, 13]
[0, 1, 2, 3, 4, 13, 14, 7, 8, 9, 10, 11, 12, 5, 6]
[0, 1, 2, 3, 5, 4, 6, 7, 13, 9, 10, 11, 12, 8, 14]
[0, 1, 2, 3, 4, 14, 13, 7, 8, 9, 10, 11, 12, 6, 5]
orbits:
110000001100000
100000101100000
101110111100000
111110011100000
word: 100011001000000

combo: 000000000000010

temp: 000000000000010

orbit_checks[temp>>log2radix]= 1000100010001000

passed if statements
temp basis:
000011010000010
000111000000100
110110110001001
111101110000001
100011001000000
rs list:
0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 
0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 
1 0 0 1 0 0 0 1 1 0 1 1 0 1 1 
1 0 0 0 0 0 0 1 1 1 0 1 1 1 1 
0 0 0 0 0 0 1 0 0 1 1 0 0 0 1 
B_aug:
[1 0 0 0 0 0 1 1 1 0 1 1 1 1 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 1 0 0 0 0 0 1 1 0 1 0 0]
[0 0 0 0 1 1 0 0 1 0 0 0 0 1 0]
[0 0 0 0 0 0 1 0 0 1 1 0 0 0 1]
m:
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0]
[1 0 0 1 0 0 0 1 1 0 1 1 0 1 1]
[1 0 0 0 0 0 0 1 1 1 0 1 1 1 1]
[0 0 0 0 0 0 1 0 0 1 1 0 0 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,14), ( 7,10)(11,15), ( 7,11)(10,15), (5,6), ( 4, 7)(13,15), ( 3, 4)(12,13), ( 2, 3)( 8,12) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 8, 13, 6, 7, 4, 9, 10, 11, 12, 5, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
100011001000000
111101111000000
word: 101101011000000

combo: 000000000000110

word: 111110011100000

combo: 000000000000111

temp: 000000000000111

orbit_checks[temp>>log2radix]= 1100100010001100

word: 011101010100000

combo: 000000000000101

word: 001110010000000

combo: 000000000000100

word: 011110110000000

combo: 000000000001100

word: 001101110100000

combo: 000000000001101

word: 101110111100000

combo: 000000000001111

temp: 000000000001111

orbit_checks[temp>>log2radix]= 1100100010001100

word: 111101111000000

combo: 000000000001110

temp: 000000000001110

orbit_checks[temp>>log2radix]= 1100100010001100

word: 110011101000000

combo: 000000000001010

word: 100000101100000

combo: 000000000001011

temp: 000000000001011

orbit_checks[temp>>log2radix]= 1100100010001100

word: 000011100100000

combo: 000000000001001

word: 010000100000000

combo: 000000000001000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 1 1 1 0 1 1 1 1 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 1 0 0 0 0 0 1 1 0 1 0 0]
[0 0 0 0 1 0 1 0 1 0 0 0 0 0 1]
[0 0 0 0 0 1 1 0 0 0 0 0 0 1 1]
limit on degree (length): 16
ortho basis:
0100011001000000
0001110010000000
1110000100000000

B_can_lab before row reduction:
0110101011010100
0000000010110001
0000000000110110
0000000001111000
0001101100000000
0011110000000000

B_can_lab after row reduction:
0000000010110001
0110101011100010
0110101011010100
0000000001111000
0001101100000000
0011110000000000
0000000000100001

word generated as sum over rows of ortho_basis starting at 3: 0000000000000000
gate: 0000000000111111
k_gate: 0000000000000111
nonzero_gate: 1000000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 0000000000000000

combo: 0000000000000000

word: 0100011001000000

combo: 0000000000000001

word: 0101101011000000

combo: 0000000000000011

word: 0001110010000000

combo: 0000000000000010

word: 1111110110000000

combo: 0000000000000110

temp: 0000000000000110

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1100000001000001
0000011010000010
1111001110000100
1111110110000000
0001011000001000
0100000101010000
rs list:
1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 
0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0 
0 0 1 0 0 0 0 1 1 1 0 0 1 1 1 1 
0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 
0 0 0 1 0 0 0 0 0 1 1 0 1 0 0 0 
0 0 0 0 1 0 1 0 1 0 0 0 0 0 1 0 
B_aug:
[1 0 0 0 0 0 1 1 1 0 1 1 1 1 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 0 0 0 0 0 1 1 0 1 0 0 0]
[0 0 0 0 1 0 1 0 1 0 0 0 0 0 1 0]
[0 0 0 0 0 1 1 0 0 0 0 0 0 1 1 0]
[0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1]
m:
[1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 1 1 1 0 0 1 1 1 1]
[0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1]
[0 0 0 1 0 0 0 0 0 1 1 0 1 0 0 0]
[0 0 0 0 1 0 1 0 1 0 0 0 0 0 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 4,10)(11,13), ( 4,11)(10,13), ( 3, 4)(12,13), ( 2, 3)( 8,12), ( 5,15)( 7, 9), ( 5, 9)( 7,15), ( 1, 5)( 9,16) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 14, 13, 15]
[0, 1, 2, 3, 4, 13, 14, 7, 8, 9, 10, 11, 12, 5, 6, 15]
[0, 1, 2, 3, 5, 4, 6, 7, 13, 9, 10, 11, 12, 8, 14, 15]
[1, 0, 4, 5, 2, 3, 9, 15, 11, 6, 14, 8, 13, 12, 10, 7]
[0, 1, 2, 3, 4, 14, 13, 7, 8, 9, 10, 11, 12, 6, 5, 15]
[1, 0, 4, 5, 2, 9, 3, 15, 11, 6, 14, 8, 13, 10, 12, 7]
[0, 1, 2, 3, 5, 8, 14, 7, 13, 9, 10, 11, 12, 4, 6, 15]
[1, 0, 4, 5, 2, 12, 10, 15, 11, 6, 14, 8, 13, 3, 9, 7]
[1, 0, 4, 5, 3, 2, 9, 15, 12, 6, 14, 8, 13, 11, 10, 7]
[1, 0, 4, 5, 2, 10, 12, 15, 11, 6, 14, 8, 13, 9, 3, 7]
[1, 0, 4, 5, 3, 11, 10, 15, 12, 6, 14, 8, 13, 2, 9, 7]
[2, 0, 4, 5, 3, 1, 9, 15, 12, 6, 14, 8, 13, 7, 10, 11]
[2, 0, 4, 5, 3, 7, 10, 15, 12, 6, 14, 8, 13, 1, 9, 11]
[4, 1, 2, 3, 5, 0, 6, 7, 13, 9, 10, 11, 12, 15, 14, 8]
[4, 1, 2, 3, 5, 15, 14, 7, 13, 9, 10, 11, 12, 0, 6, 8]
orbits:
1111110110000000
word: 1011101111000000

combo: 0000000000000111

temp: 0000000000000111

orbit_checks[temp>>log2radix]= 0000000001000000

passed if statements
temp basis:
1000011000000001
0000011010000010
1011010111000100
1011101111000000
0001011000001000
0100000101010000
rs list:
1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 
0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0 
0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 
0 0 0 0 0 0 1 1 1 1 0 1 1 1 0 1 
0 0 0 1 0 0 0 0 0 1 1 0 1 0 0 0 
0 0 0 0 1 0 1 0 1 0 0 0 0 0 1 0 
B_aug:
[1 0 0 0 0 0 1 1 1 0 1 1 1 1 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 0 0 0 0 0 1 1 0 1 0 0 0]
[0 0 0 0 1 0 1 0 1 0 0 0 0 0 1 0]
[0 0 0 0 0 1 1 0 0 0 0 0 0 1 1 0]
[0 0 0 0 0 0 1 1 1 1 0 1 1 1 0 1]
m:
[1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1]
[0 0 0 0 0 0 1 1 1 1 0 1 1 1 0 1]
[0 0 0 1 0 0 0 0 0 1 1 0 1 0 0 0]
[0 0 0 0 1 0 1 0 1 0 0 0 0 0 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 4,10)(11,13), ( 4,11)(10,13), ( 3, 4)(12,13), ( 2, 3)( 8,12), ( 1, 2)( 8,16), ( 5,15)( 7, 9), ( 5, 9)( 7,15) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 14, 13, 15]
[0, 1, 2, 3, 4, 13, 14, 7, 8, 9, 10, 11, 12, 5, 6, 15]
[0, 1, 2, 3, 5, 4, 6, 7, 13, 9, 10, 11, 12, 8, 14, 15]
[0, 1, 2, 3, 4, 14, 13, 7, 8, 9, 10, 11, 12, 6, 5, 15]
[0, 1, 2, 3, 5, 8, 14, 7, 13, 9, 10, 11, 12, 4, 6, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1011101111000000
word: 1010011101000000

combo: 0000000000000101

word: 1110000100000000

combo: 0000000000000100

temp: 0000000000000100

orbit_checks[temp>>log2radix]= 0000000011000000

passed if statements
temp basis:
0111110010010001
1011110010100001
1101110011000001
1110000100000000
0000011010000010
0000111000000100
rs list:
1 0 0 0 1 0 0 1 0 0 1 1 1 1 1 0 
1 0 0 0 0 1 0 1 0 0 1 1 1 1 0 1 
1 0 0 0 0 0 1 1 0 0 1 1 1 0 1 1 
0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 
0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0 
B_aug:
[1 0 0 0 0 0 1 1 1 0 1 1 1 1 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 0 0 0 0 0 1 1 0 1 0 0 0]
[0 0 0 0 1 0 1 0 1 0 0 0 0 0 1 0]
[0 0 0 0 0 1 1 0 0 0 0 0 0 1 1 0]
[0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1]
m:
[1 0 0 0 1 0 0 1 0 0 1 1 1 1 1 0]
[1 0 0 0 0 1 0 1 0 0 1 1 1 1 0 1]
[1 0 0 0 0 0 1 1 0 0 1 1 1 0 1 1]
[0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,14)(15,16), ( 9,15)(14,16), ( 6, 7)(14,15), ( 6, 9)( 7,16), ( 5, 6)(15,16), ( 2, 3)( 8,12), ( 3,11)(10,12), ( 3,10)(11,12) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 9, 4, 5, 6, 7, 8, 3, 12, 11, 10, 13, 14, 15]
[0, 1, 2, 10, 4, 5, 6, 7, 8, 12, 3, 11, 9, 13, 14, 15]
[0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15]
[0, 1, 2, 12, 4, 5, 6, 7, 8, 10, 9, 11, 3, 13, 14, 15]
[0, 2, 3, 1, 4, 5, 6, 11, 8, 9, 10, 12, 7, 13, 14, 15]
[0, 1, 3, 11, 4, 5, 6, 7, 8, 10, 9, 12, 2, 13, 14, 15]
[0, 2, 3, 7, 4, 5, 6, 11, 8, 10, 9, 12, 1, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1110000100000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 1 1 0 1 1 1 1 1]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 1 0 0 0 0 1 1 0 1 0 0]
[0 0 0 0 1 1 0 0 0 0 0 0 1 1]
limit on degree (length): 16
ortho basis:
0010011000100000
1000011001000000
0001110010000000
0010000100000000
1100000000000000

B_can_lab before row reduction:
0011011011010100
0000000010110001
0000000000110110
0000000001111000
0000111100000000

B_can_lab after row reduction:
0000000010110001
0011011011100010
0011011011010100
0000000001111000
0000111100000000

word generated as sum over rows of ortho_basis starting at 4: 1100000000000000
gate: 0000000000011111
k_gate: 0000000000001111
nonzero_gate: 1100000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1100000000000000

combo: 0000000000000000

word: 1110011000100000

combo: 0000000000000001

word: 0110000001100000

combo: 0000000000000011

word: 0100011001000000

combo: 0000000000000010

word: 0101101011000000

combo: 0000000000000110

word: 0111110011100000

combo: 0000000000000111

word: 1111101010100000

combo: 0000000000000101

temp: 0000000000000101

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1100000111100011
1111010010100100
0011110111000001
1101000101101001
1100011101100001
rs list:
1 1 0 0 0 1 1 1 1 0 0 0 0 0 1 1 
0 0 1 0 0 1 0 1 0 0 1 0 1 1 1 1 
1 0 0 0 0 0 1 1 1 0 1 1 1 1 0 0 
1 0 0 1 0 1 1 0 1 0 0 0 1 0 1 1 
1 0 0 0 0 1 1 0 1 1 1 0 0 0 1 1 
B_aug:
[1 0 0 0 0 0 1 1 1 0 1 1 1 1 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 0 0 0 0 0 1 1 0 1 0 0 0]
[0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0]
[0 0 0 0 0 1 0 1 0 1 0 1 1 1 1 1]
m:
[1 1 0 0 0 1 1 1 1 0 0 0 0 0 1 1]
[0 0 1 0 0 1 0 1 0 0 1 0 1 1 1 1]
[1 0 0 0 0 0 1 1 1 0 1 1 1 1 0 0]
[1 0 0 1 0 1 1 0 1 0 0 0 1 0 1 1]
[1 0 0 0 0 1 1 0 1 1 1 0 0 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), ( 4,10)(11,13), ( 4,11)(10,13), ( 3, 4)(12,13), ( 2, 3)( 8,12), (1,7), ( 1,15)( 6, 9)( 7,16)(10,11) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 5, 4, 6, 7, 13, 9, 10, 11, 12, 8, 14, 15]
[0, 1, 2, 3, 8, 13, 6, 7, 4, 9, 10, 11, 12, 5, 14, 15]
[0, 1, 2, 3, 13, 8, 6, 7, 5, 9, 10, 11, 12, 4, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111101010100000
1101101110100000
word: 1101110010000000

combo: 0000000000000100

word: 1111110110000000

combo: 0000000000001100

temp: 0000000000001100

orbit_checks[temp>>log2radix]= 0010000000100000

passed if statements
temp basis:
1100000001000001
1101110010110000
1111110110000000
0000011010000010
0000111000000100
rs list:
1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 
0 0 0 0 1 1 0 1 0 0 1 1 1 0 1 1 
0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 
0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0 
B_aug:
[1 0 0 0 0 0 1 1 1 0 1 1 1 1 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 0 0 0 0 0 1 1 0 1 0 0 0]
[0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0]
[0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1]
m:
[1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1]
[0 0 0 0 1 1 0 1 0 0 1 1 1 0 1 1]
[0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), ( 9,14), (5,6), ( 5, 9)( 6,14), ( 2, 3)( 8,12), ( 1, 5)( 6, 7)( 9,15)(14,16), ( 3,11)(10,12), ( 3,10)(11,12) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 9, 4, 5, 6, 7, 8, 3, 12, 11, 10, 13, 14, 15]
[0, 1, 2, 10, 4, 5, 6, 7, 8, 12, 3, 11, 9, 13, 14, 15]
[0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15]
[0, 1, 2, 12, 4, 5, 6, 7, 8, 10, 9, 11, 3, 13, 14, 15]
[0, 2, 3, 1, 4, 5, 6, 11, 8, 9, 10, 12, 7, 13, 14, 15]
[0, 1, 3, 11, 4, 5, 6, 7, 8, 10, 9, 12, 2, 13, 14, 15]
[0, 2, 3, 7, 4, 5, 6, 11, 8, 10, 9, 12, 1, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111110110000000
word: 1101101110100000

combo: 0000000000001101

temp: 0000000000001101

orbit_checks[temp>>log2radix]= 0011000000100000

word: 0101110111100000

combo: 0000000000001111

word: 0111101111000000

combo: 0000000000001110

word: 0110011101000000

combo: 0000000000001010

word: 0100000101100000

combo: 0000000000001011

word: 1100011100100000

combo: 0000000000001001

word: 1110000100000000

combo: 0000000000001000

temp: 0000000000001000

orbit_checks[temp>>log2radix]= 0011000000100000

passed if statements
temp basis:
0001110011110001
0011110111000001
1101110011000001
0000011010000010
0000111000000100
rs list:
1 0 0 0 1 1 1 1 0 0 1 1 1 0 0 0 
1 0 0 0 0 0 1 1 1 0 1 1 1 1 0 0 
1 0 0 0 0 0 1 1 0 0 1 1 1 0 1 1 
0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0 
B_aug:
[1 0 0 0 0 0 1 1 1 0 1 1 1 1 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 0 0 0 0 0 1 1 0 1 0 0 0]
[0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0]
[0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1]
m:
[1 0 0 0 1 1 1 1 0 0 1 1 1 0 0 0]
[1 0 0 0 0 0 1 1 1 0 1 1 1 1 0 0]
[1 0 0 0 0 0 1 1 0 0 1 1 1 0 1 1]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), ( 9,14), ( 9,15)(14,16), (5,6), ( 5, 9)( 6,14), ( 2, 3)( 8,12), (1,7), ( 3,11)(10,12), ( 3,10)(11,12) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 9, 4, 5, 6, 7, 8, 3, 12, 11, 10, 13, 14, 15]
[0, 1, 2, 10, 4, 5, 6, 7, 8, 12, 3, 11, 9, 13, 14, 15]
[0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15]
[0, 1, 2, 12, 4, 5, 6, 7, 8, 10, 9, 11, 3, 13, 14, 15]
[0, 2, 3, 1, 4, 5, 6, 11, 8, 9, 10, 12, 7, 13, 14, 15]
[0, 1, 3, 11, 4, 5, 6, 7, 8, 10, 9, 12, 2, 13, 14, 15]
[0, 2, 3, 7, 4, 5, 6, 11, 8, 10, 9, 12, 1, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1110000100000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 1 0 1 1 1]
[0 1 0 0 0 0 0 1 1 1 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0]
[0 0 0 1 0 0 0 0 1 1 0 1]
limit on degree (length): 15
ortho basis:
100001100010000
100001100100000
100001101000000
000111010000000
101000000000000
110000000000000

B_can_lab before row reduction:
000111111010100
000000010110001
000000000110110
000000001111000

B_can_lab after row reduction:
000000010110001
000111111100010
000111111010100
000000001111000
000000000111000

word generated as sum over rows of ortho_basis starting at 4: 011000000000000
gate: 000000000001111
k_gate: 000000000001111
nonzero_gate: 111000000000000
radix_gate: 000000000011111

Starting main loop:
word: 011000000000000

combo: 000000000000000

word: 111001100010000

combo: 000000000000001

word: 011000000110000

combo: 000000000000011

word: 111001100100000

combo: 000000000000010

word: 011000001100000

combo: 000000000000110

word: 111001101110000

combo: 000000000000111

temp: 000000000000111

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
111000011110010
111101010000101
000111011110001
111100001111000
rs list:
0 1 0 0 1 1 1 1 0 0 0 0 1 1 1 
1 0 1 0 0 0 0 1 0 1 0 1 1 1 1 
1 0 0 0 1 1 1 1 0 1 1 1 0 0 0 
0 0 0 1 1 1 1 0 0 0 0 1 1 1 1 
B_aug:
[1 0 0 0 1 1 1 1 0 1 1 1 0 0 0]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 0 0 0 0 1 1 0 1 0 0 0]
[0 0 0 0 1 1 1 0 1 1 0 0 1 1 1]
m:
[0 1 0 0 1 1 1 1 0 0 0 0 1 1 1]
[1 0 1 0 0 0 0 1 0 1 0 1 1 1 1]
[1 0 0 0 1 1 1 1 0 1 1 1 0 0 0]
[0 0 0 1 1 1 1 0 0 0 0 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (14,15), (13,14), (6,7), (5,6), ( 3, 4)(11,12), ( 2, 3)( 8,11), ( 4,12)( 5,13)( 6,14)( 7,15) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 12, 13, 14, 7, 9, 8, 10, 11, 4, 5, 6]
[0, 1, 2, 8, 4, 5, 6, 7, 3, 11, 10, 9, 12, 13, 14]
[0, 1, 2, 9, 4, 5, 6, 7, 11, 3, 10, 8, 12, 13, 14]
[0, 1, 3, 8, 4, 5, 6, 7, 2, 10, 11, 9, 12, 13, 14]
[0, 1, 3, 9, 4, 5, 6, 7, 10, 2, 11, 8, 12, 13, 14]
[0, 2, 3, 8, 4, 5, 6, 10, 1, 7, 11, 9, 12, 13, 14]
[0, 2, 3, 9, 4, 5, 6, 10, 7, 1, 11, 8, 12, 13, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
111001101110000
111110110010000
111110110100000
111110111000000
word: 011000001010000

combo: 000000000000101

word: 111001101000000

combo: 000000000000100

word: 111110111000000

combo: 000000000001100

temp: 000000000001100

orbit_checks[temp>>log2radix]= 001011010000000

word: 011111011010000

combo: 000000000001101

word: 111110111110000

combo: 000000000001111

word: 011111011100000

combo: 000000000001110

word: 111110110100000

combo: 000000000001010

temp: 000000000001010

orbit_checks[temp>>log2radix]= 001011010000000

word: 011111010110000

combo: 000000000001011

word: 111110110010000

combo: 000000000001001

temp: 000000000001001

orbit_checks[temp>>log2radix]= 001011010000000

word: 011111010000000

combo: 000000000001000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 1 0 1 1 1]
[0 1 0 0 0 0 0 1 1 1 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0]
[0 0 0 1 0 0 0 0 1 1 0 1]
limit on degree (length): 16
ortho basis:
1000001100010000
1000001100100000
1000001101000000
0000111010000000
1001000000000000
1010000000000000
1100000000000000

B_can_lab before row reduction:
0000111111010100
0000000010110001
0000000000110110
0000000001111000

B_can_lab after row reduction:
0000000010110001
0000111111100010
0000111111010100
0000000001111000
0000000000111000

word generated as sum over rows of ortho_basis starting at 4: 1111000000000000
gate: 0000000000001111
k_gate: 0000000000001111
nonzero_gate: 1111000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1111000000000000

combo: 0000000000000000

temp: 0000000000000000

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1111000000000000
0000111011110001
0000001110000010
0000011100000100
rs list:
0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
1 0 0 0 1 1 1 1 0 1 1 1 0 0 0 0 
0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 
B_aug:
[1 0 0 0 1 1 1 1 0 1 1 1 0 0 0 0]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 0]
[0 0 0 1 0 0 0 0 1 1 0 1 0 0 0 0]
[0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1]
m:
[0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1]
[1 0 0 0 1 1 1 1 0 1 1 1 0 0 0 0]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), (6,7), (5,6), ( 2, 3)( 8,11), (1,5), ( 3,10)( 9,11), ( 3, 9)(10,11) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 8, 4, 5, 6, 7, 3, 11, 10, 9, 12, 13, 14, 15]
[0, 1, 2, 9, 4, 5, 6, 7, 11, 3, 10, 8, 12, 13, 14, 15]
[0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15]
[0, 1, 2, 11, 4, 5, 6, 7, 9, 8, 10, 3, 12, 13, 14, 15]
[0, 2, 3, 1, 4, 5, 6, 10, 8, 9, 11, 7, 12, 13, 14, 15]
[0, 1, 3, 10, 4, 5, 6, 7, 9, 8, 11, 2, 12, 13, 14, 15]
[0, 2, 3, 7, 4, 5, 6, 10, 9, 8, 11, 1, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111000000000000
word: 0111001100010000

combo: 0000000000000001

word: 1111000000110000

combo: 0000000000000011

word: 0111001100100000

combo: 0000000000000010

word: 1111000001100000

combo: 0000000000000110

word: 0111001101110000

combo: 0000000000000111

word: 1111000001010000

combo: 0000000000000101

word: 0111001101000000

combo: 0000000000000100

word: 0111110111000000

combo: 0000000000001100

word: 1111111011010000

combo: 0000000000001101

word: 0111110111110000

combo: 0000000000001111

word: 1111111011100000

combo: 0000000000001110

word: 0111110110100000

combo: 0000000000001010

word: 1111111010110000

combo: 0000000000001011

word: 0111110110010000

combo: 0000000000001001

word: 1111111010000000

combo: 0000000000001000

temp: 0000000000001000

orbit_checks[temp>>log2radix]= 0000000000000001

passed if statements
temp basis:
0000111011110001
1111111010000000
0000001110000010
0000011100000100
rs list:
1 0 0 0 1 1 1 1 0 1 1 1 0 0 0 0 
0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 
0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 
B_aug:
[1 0 0 0 1 1 1 1 0 1 1 1 0 0 0 0]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 0]
[0 0 0 1 0 0 0 0 1 1 0 1 0 0 0 0]
[0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1]
m:
[1 0 0 0 1 1 1 1 0 1 1 1 0 0 0 0]
[0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), (6,7), (5,6), ( 2, 3)( 8,11), (1,5), ( 1,13)( 5,14)( 6,15)( 7,16), ( 3,10)( 9,11), ( 3, 9)(10,11) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 8, 4, 5, 6, 7, 3, 11, 10, 9, 12, 13, 14, 15]
[0, 1, 2, 9, 4, 5, 6, 7, 11, 3, 10, 8, 12, 13, 14, 15]
[0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15]
[0, 1, 2, 11, 4, 5, 6, 7, 9, 8, 10, 3, 12, 13, 14, 15]
[0, 2, 3, 1, 4, 5, 6, 10, 8, 9, 11, 7, 12, 13, 14, 15]
[0, 1, 3, 10, 4, 5, 6, 7, 9, 8, 11, 2, 12, 13, 14, 15]
[0, 2, 3, 7, 4, 5, 6, 10, 9, 8, 11, 1, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111111010000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 1 1 1 0 1]
[0 1 0 0 0 0 0 0 1 0 1 1]
[0 0 1 0 0 0 0 0 1 1 1 0]
[0 0 0 1 0 0 0 0 0 1 1 1]
limit on degree (length): 13
ortho basis:
0101100010000
0101100100000
0101101000000
0101110000000

B_can_lab before row reduction:
0110010011111
0101010100000
0011011000000
0111100000000

B_can_lab after row reduction:
0110010011111
0101010100000
0011011000000
0111100000000
0000000111000

word generated as sum over rows of ortho_basis starting at 4: 0000000000000
gate: 0000000001111
k_gate: 0000000001111
nonzero_gate: 1000000000000
radix_gate: 0000000011111

Starting main loop:
word: 0000000000000

combo: 0000000000000

word: 0101100010000

combo: 0000000000001

word: 0000000110000

combo: 0000000000011

word: 0101100100000

combo: 0000000000010

word: 0000001100000

combo: 0000000000110

word: 0101101110000

combo: 0000000000111

word: 0000001010000

combo: 0000000000101

word: 0101101000000

combo: 0000000000100

word: 0000011000000

combo: 0000000001100

word: 0101111010000

combo: 0000000001101

word: 0000011110000

combo: 0000000001111

word: 0101111100000

combo: 0000000001110

word: 0000010100000

combo: 0000000001010

word: 0101110110000

combo: 0000000001011

word: 0000010010000

combo: 0000000001001

word: 0101110000000

combo: 0000000001000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 1 1 1 0 1]
[0 1 0 0 0 0 0 0 1 0 1 1]
[0 0 1 0 0 0 0 0 1 1 1 0]
[0 0 0 1 0 0 0 0 0 1 1 1]
limit on degree (length): 14
ortho basis:
00101100010000
00101100100000
00101101000000
00101110000000
11000000000000

B_can_lab before row reduction:
00110010011111
00101010100000
00011011000000
00111100000000

B_can_lab after row reduction:
00110010011111
00101010100000
00011011000000
00111100000000
00000000111000

word generated as sum over rows of ortho_basis starting at 4: 11000000000000
gate: 00000000001111
k_gate: 00000000001111
nonzero_gate: 11000000000000
radix_gate: 00000000011111

Starting main loop:
word: 11000000000000

combo: 00000000000000

word: 11101100010000

combo: 00000000000001

word: 11000000110000

combo: 00000000000011

temp: 00000000000011

orbit_checks[temp>>log2radix]= 00000000000000

passed if statements
temp basis:
11011011000011
11110011000101
11101111000001
00111000001000
rs list:
1 1 0 0 0 0 1 1 0 1 1 0 1 1 
1 0 1 0 0 0 1 1 0 0 1 1 1 1 
1 0 0 0 0 0 1 1 1 1 0 1 1 1 
0 0 0 1 0 0 0 0 0 1 1 1 0 0 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0]
[0 1 0 0 0 0 0 0 1 0 1 1 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 1 0 0 0 0 0 1 1 1 0 0]
[0 0 0 0 1 1 0 0 0 0 0 0 1 1]
m:
[1 1 0 0 0 0 1 1 0 1 1 0 1 1]
[1 0 1 0 0 0 1 1 0 0 1 1 1 1]
[1 0 0 0 0 0 1 1 1 1 0 1 1 1]
[0 0 0 1 0 0 0 0 0 1 1 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 4,12)(10,11), ( 4,11)(10,12), ( 3, 9)( 4,12), ( 3,12)( 4, 9), ( 2, 3, 9)( 4,10,12), ( 3, 9)( 4,12)(13,14), ( 3, 9)( 4,12)( 5, 6)(13,14), ( 3, 9)( 4,12)( 7, 8)(13,14), ( 1, 7, 8)( 3, 9)( 4,12)(13,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 12, 13, 6, 7, 8, 9, 10, 11, 4, 5]
orbits:
11000000110000
11000001010000
11101111010000
11000010010000
11000001100000
11101110110000
11101111100000
11000010100000
11101101110000
11000011000000
word: 11101100100000

combo: 00000000000010

word: 11000001100000

combo: 00000000000110

temp: 00000000000110

orbit_checks[temp>>log2radix]= 111111011101000

word: 11101101110000

combo: 00000000000111

temp: 00000000000111

orbit_checks[temp>>log2radix]= 111111011101000

word: 11000001010000

combo: 00000000000101

temp: 00000000000101

orbit_checks[temp>>log2radix]= 111111011101000

word: 11101101000000

combo: 00000000000100

word: 11000011000000

combo: 00000000001100

temp: 00000000001100

orbit_checks[temp>>log2radix]= 111111011101000

word: 11101111010000

combo: 00000000001101

temp: 00000000001101

orbit_checks[temp>>log2radix]= 111111011101000

word: 11000011110000

combo: 00000000001111

word: 11101111100000

combo: 00000000001110

temp: 00000000001110

orbit_checks[temp>>log2radix]= 111111011101000

word: 11000010100000

combo: 00000000001010

temp: 00000000001010

orbit_checks[temp>>log2radix]= 111111011101000

word: 11101110110000

combo: 00000000001011

temp: 00000000001011

orbit_checks[temp>>log2radix]= 111111011101000

word: 11000010010000

combo: 00000000001001

temp: 00000000001001

orbit_checks[temp>>log2radix]= 111111011101000

word: 11101110000000

combo: 00000000001000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 1 1 1 1 0 1 1 1]
[0 1 0 0 0 0 0 0 1 0 1 1 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 1 0 0 0 0 0 1 1 1 0 0]
[0 0 0 0 1 1 0 0 0 0 0 0 1 1]
limit on degree (length): 15
ortho basis:
111011000100000
001011001000000
001011010000000
010000100000000

B_can_lab before row reduction:
001101111100100
000000001010101
000000000110110
000000001111000
011110000000000

B_can_lab after row reduction:
001101110110001
001101111010010
001101111100100
000000001111000
011110000000000

word generated as sum over rows of ortho_basis starting at 4: 000000000000000
gate: 000000000011111
k_gate: 000000000001111
nonzero_gate: 100000000000000
radix_gate: 000000000011111

Starting main loop:
word: 000000000000000

combo: 000000000000000

word: 111011000100000

combo: 000000000000001

word: 110000001100000

combo: 000000000000011

temp: 000000000000011

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
010110111000011
011100111000101
011011111000001
001110000001000
100000101010000
rs list:
1 1 0 0 0 0 1 1 1 0 1 1 0 1 0 
1 0 1 0 0 0 1 1 1 0 0 1 1 1 0 
1 0 0 0 0 0 1 1 1 1 1 0 1 1 0 
0 0 0 1 0 0 0 0 0 0 1 1 1 0 0 
0 0 0 0 1 0 1 0 1 0 0 0 0 0 1 
B_aug:
[1 0 0 0 0 0 1 1 1 1 1 0 1 1 0]
[0 1 0 0 0 0 0 0 0 1 0 1 1 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 1 0 0 0 0 0 0 1 1 1 0 0]
[0 0 0 0 1 1 0 0 1 0 0 0 0 1 0]
[0 0 0 0 0 1 1 0 0 0 0 0 0 1 1]
m:
[1 1 0 0 0 0 1 1 1 0 1 1 0 1 0]
[1 0 1 0 0 0 1 1 1 0 0 1 1 1 0]
[1 0 0 0 0 0 1 1 1 1 1 0 1 1 0]
[0 0 0 1 0 0 0 0 0 0 1 1 1 0 0]
[0 0 0 0 1 0 1 0 1 0 0 0 0 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 4,11)(12,13), ( 4,12)(11,13), ( 3, 4)(10,13), ( 2, 3)(11,13), (1,8), ( 5,15)( 7, 9), ( 5, 9)( 7,15) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 14, 13]
[0, 1, 2, 3, 4, 13, 14, 7, 8, 9, 10, 11, 12, 5, 6]
[0, 1, 2, 3, 5, 4, 6, 7, 13, 9, 10, 11, 12, 8, 14]
[0, 1, 2, 3, 4, 14, 13, 7, 8, 9, 10, 11, 12, 6, 5]
orbits:
110000001100000
100000101100000
110000010100000
101011111100000
100000110100000
111011011100000
word: 001011001000000

combo: 000000000000010

word: 000000011000000

combo: 000000000000110

word: 111011011100000

combo: 000000000000111

temp: 000000000000111

orbit_checks[temp>>log2radix]= 1010100010101000

word: 110000010100000

combo: 000000000000101

temp: 000000000000101

orbit_checks[temp>>log2radix]= 1010100010101000

word: 001011010000000

combo: 000000000000100

word: 011011110000000

combo: 000000000001100

word: 100000110100000

combo: 000000000001101

temp: 000000000001101

orbit_checks[temp>>log2radix]= 1010100010101000

word: 101011111100000

combo: 000000000001111

temp: 000000000001111

orbit_checks[temp>>log2radix]= 1010100010101000

word: 010000111000000

combo: 000000000001110

word: 011011101000000

combo: 000000000001010

word: 100000101100000

combo: 000000000001011

temp: 000000000001011

orbit_checks[temp>>log2radix]= 1010100010101000

word: 101011100100000

combo: 000000000001001

word: 010000100000000

combo: 000000000001000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 1 1 1 1 1 0 1 1 0]
[0 1 0 0 0 0 0 0 0 1 0 1 1 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 1 0 0 0 0 0 0 1 1 1 0 0]
[0 0 0 0 1 0 1 0 1 0 0 0 0 0 1]
[0 0 0 0 0 1 1 0 0 0 0 0 0 1 1]
limit on degree (length): 16
ortho basis:
1101011001000000
0001011010000000
1110000100000000

B_can_lab before row reduction:
0101010111100100
0000000001010101
0000000000110110
0000000001111000
0011011000000000
0111100000000000

B_can_lab after row reduction:
0101010110110001
0101010111010010
0101010111100100
0000000001111000
0011011000000000
0111100000000000
0000001110110001

word generated as sum over rows of ortho_basis starting at 3: 0000000000000000
gate: 0000000000111111
k_gate: 0000000000000111
nonzero_gate: 1000000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 0000000000000000

combo: 0000000000000000

word: 1101011001000000

combo: 0000000000000001

word: 1100000011000000

combo: 0000000000000011

temp: 0000000000000011

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1110110100000011
1111100100000101
1111011100000001
0001110000001000
1000000110010000
1010000010100000
rs list:
1 1 0 0 0 0 0 0 1 0 1 1 0 1 1 1 
1 0 1 0 0 0 0 0 1 0 0 1 1 1 1 1 
1 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 
0 0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 
0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 1 
0 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 
B_aug:
[1 0 0 0 0 0 1 1 1 1 1 0 1 1 0 0]
[0 1 0 0 0 0 0 0 0 1 0 1 1 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 0 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 0 1 0 1 0 1 0 0 0 0 0 1 0]
[0 0 0 0 0 1 1 0 0 0 0 0 0 1 1 0]
[0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 1]
m:
[1 1 0 0 0 0 0 0 1 0 1 1 0 1 1 1]
[1 0 1 0 0 0 0 0 1 0 0 1 1 1 1 1]
[1 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1]
[0 0 0 1 0 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 1]
[0 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 5, 6)( 9,14), ( 4,11)(12,13), ( 4,12)(11,13), ( 3, 4)(10,13), ( 2, 3)(11,13), ( 6,16)( 8,14), ( 6,14)( 8,16) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 15, 14]
[0, 1, 2, 3, 4, 5, 14, 15, 8, 9, 10, 11, 12, 13, 6, 7]
[0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 14, 13, 15]
[0, 1, 2, 3, 4, 5, 15, 14, 8, 9, 10, 11, 12, 13, 7, 6]
orbits:
1100000011000000
1111011110000000
word: 0001011010000000

combo: 0000000000000010

word: 1111011110000000

combo: 0000000000000110

temp: 0000000000000110

orbit_checks[temp>>log2radix]= 0000000001001000

word: 0010000111000000

combo: 0000000000000111

word: 0011011101000000

combo: 0000000000000101

word: 1110000100000000

combo: 0000000000000100

temp: 0000000000000100

orbit_checks[temp>>log2radix]= 0000000001001000

passed if statements
temp basis:
1101011011000001
0001101000000010
1010000001010000
0110000001100000
1110000100000000
0000111000000100
rs list:
1 0 0 0 0 0 1 1 0 1 1 0 1 0 1 1 
0 1 0 0 0 0 0 0 0 1 0 1 1 0 0 0 
0 0 0 0 1 0 1 0 0 0 0 0 0 1 0 1 
0 0 0 0 0 1 1 0 0 0 0 0 0 1 1 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 
0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0 
B_aug:
[1 0 0 0 0 0 1 1 1 1 1 0 1 1 0 0]
[0 1 0 0 0 0 0 0 0 1 0 1 1 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 0 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 0 1 0 1 0 1 0 0 0 0 0 1 0]
[0 0 0 0 0 1 1 0 0 0 0 0 0 1 1 0]
[0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1]
m:
[1 0 0 0 0 0 1 1 0 1 1 0 1 0 1 1]
[0 1 0 0 0 0 0 0 0 1 0 1 1 0 0 0]
[0 0 0 0 1 0 1 0 0 0 0 0 0 1 0 1]
[0 0 0 0 0 1 1 0 0 0 0 0 0 1 1 0]
[0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,14)(15,16), ( 9,15)(14,16), ( 6, 7)(14,15), ( 6, 9)( 7,16), ( 5, 6)(15,16), ( 2, 3)(11,13), (1,8), ( 3,11)(10,12), ( 3,12)(10,11) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 10, 4, 5, 6, 7, 8, 9, 3, 12, 11, 13, 14, 15]
[0, 1, 2, 11, 4, 5, 6, 7, 8, 9, 12, 3, 10, 13, 14, 15]
[0, 1, 3, 2, 4, 5, 6, 7, 8, 12, 10, 11, 9, 13, 14, 15]
[0, 4, 5, 8, 1, 2, 9, 7, 3, 6, 14, 13, 15, 11, 10, 12]
[0, 1, 2, 12, 4, 5, 6, 7, 8, 9, 11, 10, 3, 13, 14, 15]
[0, 4, 5, 14, 1, 2, 9, 7, 3, 6, 8, 15, 13, 11, 10, 12]
[0, 4, 5, 13, 1, 2, 9, 7, 3, 6, 15, 8, 14, 11, 10, 12]
[0, 2, 3, 1, 4, 5, 6, 7, 8, 10, 12, 11, 9, 13, 14, 15]
[0, 4, 8, 5, 1, 2, 9, 7, 3, 15, 14, 13, 6, 11, 10, 12]
[0, 1, 3, 9, 4, 5, 6, 7, 8, 12, 11, 10, 2, 13, 14, 15]
[0, 4, 5, 15, 1, 2, 9, 7, 3, 6, 13, 14, 8, 11, 10, 12]
orbits:
1110000100000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 1 1 1 1 0 1 1 1]
[0 1 0 0 0 0 0 0 1 0 1 1 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 1 0 0 0 0 0 1 1 1 0 0]
[0 0 0 0 1 1 0 0 0 0 0 0 1 1]
limit on degree (length): 16
ortho basis:
1011011000100000
0001011001000000
0001011010000000
0010000100000000
1100000000000000

B_can_lab before row reduction:
0001101111100100
0000000001010101
0000000000110110
0000000001111000
0011110000000000

B_can_lab after row reduction:
0001101110110001
0001101111010010
0001101111100100
0000000001111000
0011110000000000

word generated as sum over rows of ortho_basis starting at 4: 1100000000000000
gate: 0000000000011111
k_gate: 0000000000001111
nonzero_gate: 1100000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1100000000000000

combo: 0000000000000000

word: 0111011000100000

combo: 0000000000000001

word: 0110000001100000

combo: 0000000000000011

word: 1101011001000000

combo: 0000000000000010

word: 1100000011000000

combo: 0000000000000110

temp: 0000000000000110

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1110110100000011
1111100100000101
1111011100000001
0001110000001000
0010000100110000
rs list:
1 1 0 0 0 0 0 0 1 0 1 1 0 1 1 1 
1 0 1 0 0 0 0 0 1 0 0 1 1 1 1 1 
1 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 
0 0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 
0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0 
B_aug:
[1 0 0 0 0 0 1 1 1 1 1 0 1 1 0 0]
[0 1 0 0 0 0 0 0 0 1 0 1 1 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 0 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0]
[0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 1]
m:
[1 1 0 0 0 0 0 0 1 0 1 1 0 1 1 1]
[1 0 1 0 0 0 0 0 1 0 0 1 1 1 1 1]
[1 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1]
[0 0 0 1 0 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), ( 9,14), (7,8), (5,6), ( 5, 9)( 6,14), ( 4,11)(12,13), ( 4,12)(11,13), ( 3, 4)(10,13), ( 2, 3)(11,13) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 6, 7, 4, 5, 14, 9, 10, 11, 12, 15, 8, 13]
[0, 1, 2, 3, 6, 7, 8, 13, 14, 9, 10, 11, 12, 15, 4, 5]
[0, 1, 2, 3, 4, 5, 14, 15, 8, 9, 10, 11, 12, 13, 6, 7]
orbits:
1100000011000000
1111011101000000
1111011110000000
word: 0111011011100000

combo: 0000000000000111

word: 0110000010100000

combo: 0000000000000101

word: 1101011010000000

combo: 0000000000000100

word: 1111011110000000

combo: 0000000000001100

temp: 0000000000001100

orbit_checks[temp>>log2radix]= 0001010001000000

word: 0100000110100000

combo: 0000000000001101

word: 0101011111100000

combo: 0000000000001111

word: 1110000111000000

combo: 0000000000001110

word: 1111011101000000

combo: 0000000000001010

temp: 0000000000001010

orbit_checks[temp>>log2radix]= 0001010001000000

word: 0100000101100000

combo: 0000000000001011

word: 0101011100100000

combo: 0000000000001001

word: 1110000100000000

combo: 0000000000001000

temp: 0000000000001000

orbit_checks[temp>>log2radix]= 0001010001000000

passed if statements
temp basis:
1101011011000001
1100000000110000
1110000100000000
0001101000000010
0000111000000100
rs list:
1 0 0 0 0 0 1 1 0 1 1 0 1 0 1 1 
0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 
0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 
0 1 0 0 0 0 0 0 0 1 0 1 1 0 0 0 
0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0 
B_aug:
[1 0 0 0 0 0 1 1 1 1 1 0 1 1 0 0]
[0 1 0 0 0 0 0 0 0 1 0 1 1 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 0 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0]
[0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1]
m:
[1 0 0 0 0 0 1 1 0 1 1 0 1 0 1 1]
[0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1]
[0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1]
[0 1 0 0 0 0 0 0 0 1 0 1 1 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), ( 9,14), ( 9,15)(14,16), (7,8), (5,6), ( 5, 9)( 6,14), ( 2, 3)(11,13), (1,7), ( 3,12)(10,11), ( 3,11)(10,12) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 10, 4, 5, 6, 7, 8, 9, 3, 12, 11, 13, 14, 15]
[0, 1, 2, 11, 4, 5, 6, 7, 8, 9, 12, 3, 10, 13, 14, 15]
[0, 1, 3, 2, 4, 5, 6, 7, 8, 12, 10, 11, 9, 13, 14, 15]
[0, 1, 2, 12, 4, 5, 6, 7, 8, 9, 11, 10, 3, 13, 14, 15]
[0, 2, 3, 1, 4, 5, 6, 7, 8, 10, 12, 11, 9, 13, 14, 15]
[0, 1, 3, 9, 4, 5, 6, 7, 8, 12, 11, 10, 2, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1110000100000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 1 1 1 0 1]
[0 1 0 0 0 0 0 0 1 0 1 1]
[0 0 1 0 0 0 0 0 1 1 1 0]
[0 0 0 1 0 0 0 0 0 1 1 1]
limit on degree (length): 15
ortho basis:
000101100010000
000101100100000
000101101000000
000101110000000
101000000000000
110000000000000

B_can_lab before row reduction:
000110010011111
000101010100000
000011011000000
000111100000000

B_can_lab after row reduction:
000110010011111
000101010100000
000011011000000
000111100000000
000000000111000

word generated as sum over rows of ortho_basis starting at 4: 011000000000000
gate: 000000000001111
k_gate: 000000000001111
nonzero_gate: 111000000000000
radix_gate: 000000000011111

Starting main loop:
word: 011000000000000

combo: 000000000000000

word: 011101100010000

combo: 000000000000001

word: 011000000110000

combo: 000000000000011

word: 011101100100000

combo: 000000000000010

word: 011000001100000

combo: 000000000000110

word: 011101101110000

combo: 000000000000111

word: 011000001010000

combo: 000000000000101

word: 011101101000000

combo: 000000000000100

word: 011000011000000

combo: 000000000001100

word: 011101111010000

combo: 000000000001101

word: 011000011110000

combo: 000000000001111

word: 011101111100000

combo: 000000000001110

word: 011000010100000

combo: 000000000001010

word: 011101110110000

combo: 000000000001011

word: 011000010010000

combo: 000000000001001

word: 011101110000000

combo: 000000000001000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 1 1 1 0 1]
[0 1 0 0 0 0 0 0 1 0 1 1]
[0 0 1 0 0 0 0 0 1 1 1 0]
[0 0 0 1 0 0 0 0 0 1 1 1]
limit on degree (length): 16
ortho basis:
0000101100010000
0000101100100000
0000101101000000
0000101110000000
1001000000000000
1010000000000000
1100000000000000

B_can_lab before row reduction:
0000110010011111
0000101010100000
0000011011000000
0000111100000000

B_can_lab after row reduction:
0000110010011111
0000101010100000
0000011011000000
0000111100000000
0000000000111000

word generated as sum over rows of ortho_basis starting at 4: 1111000000000000
gate: 0000000000001111
k_gate: 0000000000001111
nonzero_gate: 1111000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1111000000000000

combo: 0000000000000000

temp: 0000000000000000

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
0000101111110001
1111000000000000
0000110100000010
0000011100000100
rs list:
1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
0 1 0 0 0 0 0 0 1 0 1 1 0 0 0 0 
0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 0]
[0 1 0 0 0 0 0 0 1 0 1 1 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 0]
[0 0 0 1 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1]
m:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 0]
[0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1]
[0 1 0 0 0 0 0 0 1 0 1 1 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), (7,8), (6,7), (5,6), ( 2, 3)(10,12), (1,5), ( 3,11)( 9,10), ( 3,10)( 9,11) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 9, 4, 5, 6, 7, 8, 3, 11, 10, 12, 13, 14, 15]
[0, 1, 2, 10, 4, 5, 6, 7, 8, 11, 3, 9, 12, 13, 14, 15]
[0, 1, 3, 2, 4, 5, 6, 7, 11, 9, 10, 8, 12, 13, 14, 15]
[0, 1, 2, 11, 4, 5, 6, 7, 8, 10, 9, 3, 12, 13, 14, 15]
[0, 2, 3, 1, 4, 5, 6, 7, 9, 11, 10, 8, 12, 13, 14, 15]
[0, 1, 3, 8, 4, 5, 6, 7, 11, 10, 9, 2, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111000000000000
word: 1111101100010000

combo: 0000000000000001

temp: 0000000000000001

orbit_checks[temp>>log2radix]= 0000000000000001

passed if statements
temp basis:
1111011000010010
1111110000010100
1111101100010000
0000111000001000
rs list:
0 1 0 0 1 0 0 0 0 1 1 0 1 1 1 1 
0 0 1 0 1 0 0 0 0 0 1 1 1 1 1 1 
0 0 0 0 1 0 0 0 1 1 0 1 1 1 1 1 
0 0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 0]
[0 1 0 0 0 0 0 0 1 0 1 1 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 0]
[0 0 0 1 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 0 1 0 0 0 1 1 0 1 1 1 1 1]
m:
[0 1 0 0 1 0 0 0 0 1 1 0 1 1 1 1]
[0 0 1 0 1 0 0 0 0 0 1 1 1 1 1 1]
[0 0 0 0 1 0 0 0 1 1 0 1 1 1 1 1]
[0 0 0 1 0 0 0 0 0 1 1 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), (7,8), (6,7), ( 4,10)(11,12), ( 4,11)(10,12), ( 3, 4)( 9,12), ( 2, 3)(10,12), (1,6) ] )
Right transversal of automorphism group of B_aug:
[12, 1, 2, 3, 4, 13, 14, 15, 8, 9, 10, 11, 0, 5, 6, 7]
orbits:
1111101100010000
1111101100100000
1111000011110000
1111101101000000
1111101110000000
word: 1111000000110000

combo: 0000000000000011

word: 1111101100100000

combo: 0000000000000010

temp: 0000000000000010

orbit_checks[temp>>log2radix]= 1000000100010111

word: 1111000001100000

combo: 0000000000000110

word: 1111101101110000

combo: 0000000000000111

word: 1111000001010000

combo: 0000000000000101

word: 1111101101000000

combo: 0000000000000100

temp: 0000000000000100

orbit_checks[temp>>log2radix]= 1000000100010111

word: 1111000011000000

combo: 0000000000001100

word: 1111101111010000

combo: 0000000000001101

word: 1111000011110000

combo: 0000000000001111

temp: 0000000000001111

orbit_checks[temp>>log2radix]= 1000000100010111

word: 1111101111100000

combo: 0000000000001110

word: 1111000010100000

combo: 0000000000001010

word: 1111101110110000

combo: 0000000000001011

word: 1111000010010000

combo: 0000000000001001

word: 1111101110000000

combo: 0000000000001000

temp: 0000000000001000

orbit_checks[temp>>log2radix]= 1000000100010111

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 1 1 1 1 1 0 1]
[0 1 0 0 0 0 0 1 1 1 0]
[0 0 1 0 0 0 0 0 1 1 1]
limit on degree (length): 13
ortho basis:
1001100001000
1001100010000
1001100100000
1001101000000
1011010000000
1100000000000

B_can_lab before row reduction:
0011111101010
0000000011011
0000000111100

B_can_lab after row reduction:
0011111110001
0011111101010
0000000111100

word generated as sum over rows of ortho_basis starting at 5: 1100000000000
gate: 0000000000111
k_gate: 0000000011111
nonzero_gate: 1100000000000
radix_gate: 0000000011111

Starting main loop:
word: 1100000000000

combo: 0000000000000

word: 0101100001000

combo: 0000000000001

word: 1100000011000

combo: 0000000000011

temp: 0000000000011

orbit_checks[temp>>log2radix]= 0000000000000

passed if statements
temp basis:
1111001100011
1110111100001
0011100000100
rs list:
1 1 0 0 0 1 1 0 0 1 1 1 1 
1 0 0 0 0 1 1 1 1 0 1 1 1 
0 0 1 0 0 0 0 0 1 1 1 0 0 
B_aug:
[1 0 0 1 1 1 1 1 1 0 1 0 0]
[0 1 0 0 0 0 0 1 1 1 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0]
[0 0 0 1 1 0 0 0 0 0 0 1 1]
m:
[1 1 0 0 0 1 1 0 0 1 1 1 1]
[1 0 0 0 0 1 1 1 1 0 1 1 1]
[0 0 1 0 0 0 0 0 1 1 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 3, 9)(10,11), ( 3,10)( 9,11), ( 2, 3)( 8,11), (12,13), ( 4, 5)(12,13), ( 6, 7)(12,13), ( 1, 6, 7)(12,13) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 11, 12, 5, 6, 7, 8, 9, 10, 3, 4]
orbits:
1100000011000
1100000101000
1110111101000
1100001001000
1100000110000
1110111011000
1110111110000
1100001010000
1110110111000
1100001100000
word: 0101100010000

combo: 0000000000010

word: 1100000110000

combo: 0000000000110

temp: 0000000000110

orbit_checks[temp>>log2radix]= 1101000100000000001011001101000

word: 0101100111000

combo: 0000000000111

word: 1100000101000

combo: 0000000000101

temp: 0000000000101

orbit_checks[temp>>log2radix]= 1101000100000000001011001101000

word: 0101100100000

combo: 0000000000100

word: 1100001100000

combo: 0000000001100

temp: 0000000001100

orbit_checks[temp>>log2radix]= 1101000100000000001011001101000

word: 0101101101000

combo: 0000000001101

word: 1100001111000

combo: 0000000001111

word: 0101101110000

combo: 0000000001110

word: 1100001010000

combo: 0000000001010

temp: 0000000001010

orbit_checks[temp>>log2radix]= 1101000100000000001011001101000

word: 0101101011000

combo: 0000000001011

word: 1100001001000

combo: 0000000001001

temp: 0000000001001

orbit_checks[temp>>log2radix]= 1101000100000000001011001101000

word: 0101101000000

combo: 0000000001000

word: 1110111000000

combo: 0000000011000

word: 0111011001000

combo: 0000000011001

word: 1110111011000

combo: 0000000011011

temp: 0000000011011

orbit_checks[temp>>log2radix]= 1101000100000000001011001101000

word: 0111011010000

combo: 0000000011010

word: 1110111110000

combo: 0000000011110

temp: 0000000011110

orbit_checks[temp>>log2radix]= 1101000100000000001011001101000

word: 0111011111000

combo: 0000000011111

word: 1110111101000

combo: 0000000011101

temp: 0000000011101

orbit_checks[temp>>log2radix]= 1101000100000000001011001101000

word: 0111011100000

combo: 0000000011100

word: 1110110100000

combo: 0000000010100

word: 0111010101000

combo: 0000000010101

word: 1110110111000

combo: 0000000010111

temp: 0000000010111

orbit_checks[temp>>log2radix]= 1101000100000000001011001101000

word: 0111010110000

combo: 0000000010110

word: 1110110010000

combo: 0000000010010

word: 0111010011000

combo: 0000000010011

word: 1110110001000

combo: 0000000010001

word: 0111010000000

combo: 0000000010000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 1 1 1 1 0 1 1 1]
[0 1 0 0 0 0 0 1 1 1 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0]
[0 0 0 1 1 0 0 0 0 0 0 1 1]
limit on degree (length): 14
ortho basis:
01011000010000
10011000100000
10011001000000
10110010000000
01000100000000

B_can_lab before row reduction:
01110110101010
00000000011011
00000000111100
00001111000000

B_can_lab after row reduction:
01110110110001
01110110101010
00000000111100
00001111000000
00000000111000

word generated as sum over rows of ortho_basis starting at 5: 00000000000000
gate: 00000000001111
k_gate: 00000000011111
nonzero_gate: 10000000000000
radix_gate: 00000000011111

Starting main loop:
word: 00000000000000

combo: 00000000000000

word: 01011000010000

combo: 00000000000001

word: 11000000110000

combo: 00000000000011

temp: 00000000000011

orbit_checks[temp>>log2radix]= 00000000000000

passed if statements
temp basis:
00011010000010
11101011001001
01101111100001
11000000110000
rs list:
0 1 0 0 0 0 0 1 0 1 1 0 0 0 
1 0 0 1 0 0 1 1 0 1 0 1 1 1 
1 0 0 0 0 1 1 1 1 1 0 1 1 0 
0 0 0 0 1 1 0 0 0 0 0 0 1 1 
B_aug:
[1 0 0 0 0 1 1 1 1 1 0 1 1 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0]
[0 0 0 1 1 0 0 0 1 0 0 0 1 0]
[0 0 0 0 1 1 0 0 0 0 0 0 1 1]
m:
[0 1 0 0 0 0 0 1 0 1 1 0 0 0]
[1 0 0 1 0 0 1 1 0 1 0 1 1 1]
[1 0 0 0 0 1 1 1 1 1 0 1 1 0]
[0 0 0 0 1 1 0 0 0 0 0 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 5, 6)(13,14), ( 5,13)( 6,14), ( 4, 5)( 9,13), (1,7), ( 2,11)( 8,10), ( 2, 8)(10,11) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 9, 3, 4, 5, 6, 7, 8, 2, 11, 10, 12, 13]
[0, 1, 10, 3, 4, 5, 6, 7, 8, 11, 2, 9, 12, 13]
[0, 2, 1, 3, 4, 5, 6, 11, 8, 9, 10, 7, 12, 13]
[0, 3, 4, 1, 2, 9, 6, 8, 7, 5, 13, 12, 11, 10]
[0, 1, 11, 3, 4, 5, 6, 7, 8, 10, 9, 2, 12, 13]
[0, 3, 5, 1, 2, 9, 6, 8, 7, 4, 12, 13, 11, 10]
[0, 3, 13, 1, 2, 9, 6, 8, 7, 12, 4, 5, 11, 10]
orbits:
11000000110000
10000100110000
11000001010000
10101111110000
10000101010000
11101011110000
word: 10011000100000

combo: 00000000000010

temp: 00000000000010

orbit_checks[temp>>log2radix]= 10000000001010001000000000101000

passed if statements
temp basis:
00011010000010
11001111000101
11110111000001
10011000100000
rs list:
0 1 0 0 0 0 0 1 0 1 1 0 0 0 
1 0 1 0 0 0 1 1 1 1 0 0 1 1 
1 0 0 0 0 0 1 1 1 0 1 1 1 1 
0 0 0 0 0 1 0 0 0 1 1 0 0 1 
B_aug:
[1 0 0 0 0 1 1 1 1 1 0 1 1 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0]
[0 0 0 1 1 0 0 0 1 0 0 0 1 0]
[0 0 0 0 0 1 0 0 0 1 1 0 0 1]
m:
[0 1 0 0 0 0 0 1 0 1 1 0 0 0]
[1 0 1 0 0 0 1 1 1 1 0 0 1 1]
[1 0 0 0 0 0 1 1 1 0 1 1 1 1]
[0 0 0 0 0 1 0 0 0 1 1 0 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 6,10)(11,14), ( 6,11)(10,14), ( 3, 6)(12,14), ( 2, 3)( 8,12), ( 9,13), ( 4, 5)( 9,13), ( 1, 7)( 9,13) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 8, 12, 5, 6, 7, 3, 9, 10, 11, 4, 13]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
orbits:
10011000100000
10011001000000
11110111100000
word: 00000001100000

combo: 00000000000110

word: 01011001110000

combo: 00000000000111

word: 11000001010000

combo: 00000000000101

temp: 00000000000101

orbit_checks[temp>>log2radix]= 11000000001010001000000000111100

word: 10011001000000

combo: 00000000000100

temp: 00000000000100

orbit_checks[temp>>log2radix]= 11000000001010001000000000111100

word: 00101011000000

combo: 00000000001100

word: 01110011010000

combo: 00000000001101

word: 11101011110000

combo: 00000000001111

temp: 00000000001111

orbit_checks[temp>>log2radix]= 11000000001010001000000000111100

word: 10110011100000

combo: 00000000001110

word: 00101010100000

combo: 00000000001010

word: 01110010110000

combo: 00000000001011

word: 11101010010000

combo: 00000000001001

word: 10110010000000

combo: 00000000001000

temp: 00000000001000

orbit_checks[temp>>log2radix]= 11000000001010001000000000111100

passed if statements
temp basis:
01110101100011
11100101100101
11011101100001
10110010000000
rs list:
1 1 0 0 0 1 1 0 1 0 1 1 1 0 
1 0 1 0 0 1 1 0 1 0 0 1 1 1 
1 0 0 0 0 1 1 0 1 1 1 0 1 1 
0 0 0 0 0 0 0 1 0 0 1 1 0 1 
B_aug:
[1 0 0 0 0 1 1 1 1 1 0 1 1 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0]
[0 0 0 1 1 0 0 0 1 0 0 0 1 0]
[0 0 0 0 0 0 0 1 0 0 1 1 0 1]
m:
[1 1 0 0 0 1 1 0 1 0 1 1 1 0]
[1 0 1 0 0 1 1 0 1 0 0 1 1 1]
[1 0 0 0 0 1 1 0 1 1 1 0 1 1]
[0 0 0 0 0 0 0 1 0 0 1 1 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 8,14)(11,12), ( 8,12)(11,14), ( 3,10)( 8,14), ( 3,14)( 8,10), ( 2, 3,10)( 8,11,14), ( 3,10)( 8,14)( 9,13), ( 3,10)( 4, 5)( 8,14)( 9,13), ( 3,10)( 6, 7)( 8,14)( 9,13), ( 1, 6, 7)( 3,10)( 8,14)( 9,13) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 8, 12, 5, 6, 7, 3, 9, 10, 11, 4, 13]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
orbits:
10110010000000
word: 11110110000000

combo: 00000000011000

word: 10101110010000

combo: 00000000011001

word: 00110110110000

combo: 00000000011011

word: 01101110100000

combo: 00000000011010

word: 11110111100000

combo: 00000000011110

temp: 00000000011110

orbit_checks[temp>>log2radix]= 11000000001010001000000100111100

word: 10101111110000

combo: 00000000011111

temp: 00000000011111

orbit_checks[temp>>log2radix]= 11000000001010001000000100111100

word: 00110111010000

combo: 00000000011101

word: 01101111000000

combo: 00000000011100

word: 11011101000000

combo: 00000000010100

word: 10000101010000

combo: 00000000010101

temp: 00000000010101

orbit_checks[temp>>log2radix]= 11000000001010001000000100111100

word: 00011101110000

combo: 00000000010111

word: 01000101100000

combo: 00000000010110

word: 11011100100000

combo: 00000000010010

word: 10000100110000

combo: 00000000010011

temp: 00000000010011

orbit_checks[temp>>log2radix]= 11000000001010001000000100111100

word: 00011100010000

combo: 00000000010001

word: 01000100000000

combo: 00000000010000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 1 1 1 1 1 0 1 1 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0]
[0 0 0 1 0 1 0 0 1 0 0 0 0 1]
[0 0 0 0 1 1 0 0 0 0 0 0 1 1]
limit on degree (length): 15
ortho basis:
010011000100000
100011001000000
100110010000000
111000100000000

B_can_lab before row reduction:
011110101010100
000101100000001
000011110000000
000000000110110
000000001111000

B_can_lab after row reduction:
000101100000001
011110101100010
011110101010100
000000001111000
000011110000000

word generated as sum over rows of ortho_basis starting at 4: 000000000000000
gate: 000000000011111
k_gate: 000000000001111
nonzero_gate: 100000000000000
radix_gate: 000000000011111

Starting main loop:
word: 000000000000000

combo: 000000000000000

word: 010011000100000

combo: 000000000000001

word: 110000001100000

combo: 000000000000011

temp: 000000000000011

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
100000101001000
010101111010001
111101110000001
110000001100000
000011010000010
rs list:
0 0 0 1 0 0 1 0 1 0 0 0 0 0 1 
1 0 0 0 1 0 1 1 1 1 0 1 0 1 0 
1 0 0 0 0 0 0 1 1 1 0 1 1 1 1 
0 0 0 0 0 1 1 0 0 0 0 0 0 1 1 
0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 
B_aug:
[1 0 0 0 0 1 1 1 1 1 0 1 1 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 1 0 1 0 0 1 0 0 0 0 1 0]
[0 0 0 0 1 1 0 0 0 0 0 0 1 1 0]
[0 0 0 0 0 1 1 0 0 0 0 0 0 1 1]
m:
[0 0 0 1 0 0 1 0 1 0 0 0 0 0 1]
[1 0 0 0 1 0 1 1 1 1 0 1 0 1 0]
[1 0 0 0 0 0 0 1 1 1 0 1 1 1 1]
[0 0 0 0 0 1 1 0 0 0 0 0 0 1 1]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 6, 7)(14,15), ( 6,14)( 7,15), ( 5, 6)(13,14), ( 4, 5)( 9,13), ( 2,11)( 8,10), ( 2,10)( 8,11) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 9, 3, 4, 5, 6, 7, 8, 2, 11, 10, 12, 13, 14]
[0, 1, 10, 3, 4, 5, 6, 7, 8, 11, 2, 9, 12, 13, 14]
[0, 2, 1, 3, 4, 5, 6, 11, 8, 9, 10, 7, 12, 13, 14]
[0, 1, 11, 3, 4, 5, 6, 7, 8, 10, 9, 2, 12, 13, 14]
[0, 2, 7, 3, 4, 5, 6, 11, 8, 10, 9, 1, 12, 13, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
110000001100000
100011001000000
111101111000000
101110111100000
word: 100011001000000

combo: 000000000000010

temp: 000000000000010

orbit_checks[temp>>log2radix]= 1100000000001100

word: 000101011000000

combo: 000000000000110

word: 010110011100000

combo: 000000000000111

word: 110101010100000

combo: 000000000000101

word: 100110010000000

combo: 000000000000100

temp: 000000000000100

orbit_checks[temp>>log2radix]= 1100000000001100

passed if statements
temp basis:
001110101100011
101100101100101
101011101100001
100110010000000
010000100101000
rs list:
1 1 0 0 0 1 1 0 1 0 1 1 1 0 0 
1 0 1 0 0 1 1 0 1 0 0 1 1 0 1 
1 0 0 0 0 1 1 0 1 1 1 0 1 0 1 
0 0 0 0 0 0 0 1 0 0 1 1 0 0 1 
0 0 0 1 0 1 0 0 1 0 0 0 0 1 0 
B_aug:
[1 0 0 0 0 1 1 1 1 1 0 1 1 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 1 0 1 0 0 1 0 0 0 0 1 0]
[0 0 0 0 1 1 0 0 0 0 0 0 1 1 0]
[0 0 0 0 0 0 0 1 0 0 1 1 0 0 1]
m:
[1 1 0 0 0 1 1 0 1 0 1 1 1 0 0]
[1 0 1 0 0 1 1 0 1 0 0 1 1 0 1]
[1 0 0 0 0 1 1 0 1 1 1 0 1 0 1]
[0 0 0 0 0 0 0 1 0 0 1 1 0 0 1]
[0 0 0 1 0 1 0 0 1 0 0 0 0 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 8,11)(12,15), ( 8,12)(11,15), ( 3, 8)(10,15), ( 2, 3)(11,15), (1,7), ( 4,14)( 6, 9), ( 4, 9)( 6,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 13, 12, 14]
[0, 1, 2, 3, 12, 13, 6, 7, 8, 9, 10, 11, 4, 5, 14]
[0, 1, 2, 4, 3, 5, 6, 7, 12, 9, 10, 11, 8, 13, 14]
[0, 1, 2, 3, 13, 12, 6, 7, 8, 9, 10, 11, 5, 4, 14]
[0, 1, 2, 4, 8, 13, 6, 7, 12, 9, 10, 11, 3, 5, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
100110010000000
111000100000000
word: 011110110000000

combo: 000000000001100

word: 001101110100000

combo: 000000000001101

word: 101110111100000

combo: 000000000001111

temp: 000000000001111

orbit_checks[temp>>log2radix]= 1100000100011100

word: 111101111000000

combo: 000000000001110

temp: 000000000001110

orbit_checks[temp>>log2radix]= 1100000100011100

word: 011011101000000

combo: 000000000001010

word: 001000101100000

combo: 000000000001011

word: 101011100100000

combo: 000000000001001

word: 111000100000000

combo: 000000000001000

temp: 000000000001000

orbit_checks[temp>>log2radix]= 1100000100011100

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 1 1 1 1 1 0 1 1 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0]
[0 0 0 1 0 1 0 0 1 0 0 0 0 1]
[0 0 0 0 1 1 0 0 0 0 0 0 1 1]
limit on degree (length): 16
ortho basis:
0010011000100000
1000011001000000
1000110010000000
1011000100000000
1100000000000000

B_can_lab before row reduction:
0011110101010100
0000101100000001
0000011110000000
0000000000110110
0000000001111000

B_can_lab after row reduction:
0000101100000001
0011110101100010
0011110101010100
0000000001111000
0000011110000000

word generated as sum over rows of ortho_basis starting at 4: 1100000000000000
gate: 0000000000011111
k_gate: 0000000000001111
nonzero_gate: 1100000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1100000000000000

combo: 0000000000000000

word: 1110011000100000

combo: 0000000000000001

word: 0110000001100000

combo: 0000000000000011

word: 0100011001000000

combo: 0000000000000010

word: 1100101011000000

combo: 0000000000000110

word: 1110110011100000

combo: 0000000000000111

temp: 0000000000000111

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1111011100000001
0001110101100011
0001101111100001
0000111000000100
0010000100101000
rs list:
1 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 
1 1 0 0 0 1 1 0 1 0 1 1 1 0 0 0 
1 0 0 0 0 1 1 1 1 1 0 1 1 0 0 0 
0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0 
0 0 0 1 0 1 0 0 1 0 0 0 0 1 0 0 
B_aug:
[1 0 0 0 0 1 1 1 1 1 0 1 1 0 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 0 1 0 0 1 0 0 0 0 1 0 0]
[0 0 0 0 1 1 0 0 0 0 0 0 1 1 0 0]
[0 0 0 0 0 1 1 1 0 0 1 1 0 1 1 1]
m:
[1 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1]
[1 1 0 0 0 1 1 0 1 0 1 1 1 0 0 0]
[1 0 0 0 0 1 1 1 1 1 0 1 1 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 0 1 0 0 1 0 0 0 0 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), ( 3,10)(11,12), ( 3,11)(10,12), ( 2, 3)( 8,12), ( 4,14)( 6, 9), ( 4, 6)( 9,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15]
[0, 1, 2, 3, 12, 13, 6, 7, 8, 9, 10, 11, 4, 5, 14, 15]
[0, 1, 2, 3, 13, 12, 6, 7, 8, 9, 10, 11, 5, 4, 14, 15]
[0, 1, 2, 4, 3, 5, 6, 7, 12, 9, 10, 11, 8, 13, 14, 15]
[0, 1, 2, 4, 8, 13, 6, 7, 12, 9, 10, 11, 3, 5, 14, 15]
[6, 3, 4, 1, 2, 9, 0, 8, 7, 5, 13, 12, 11, 10, 14, 15]
[6, 3, 4, 1, 9, 2, 0, 8, 7, 5, 13, 12, 10, 11, 14, 15]
[6, 3, 4, 1, 11, 10, 0, 8, 7, 5, 13, 12, 2, 9, 14, 15]
[6, 3, 4, 1, 10, 11, 0, 8, 7, 5, 13, 12, 9, 2, 14, 15]
[6, 3, 4, 2, 1, 9, 0, 8, 11, 5, 13, 12, 7, 10, 14, 15]
[6, 3, 4, 2, 7, 10, 0, 8, 11, 5, 13, 12, 1, 9, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1110110011100000
1111011101000000
word: 0110101010100000

combo: 0000000000000101

word: 0100110010000000

combo: 0000000000000100

word: 1111110110000000

combo: 0000000000001100

temp: 0000000000001100

orbit_checks[temp>>log2radix]= 0000010010000000

passed if statements
temp basis:
0001101111100001
1111110110000000
0000011010000010
0010000100101000
0011000000110000
rs list:
1 0 0 0 0 1 1 1 1 1 0 1 1 0 0 0 
0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 
0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0 
0 0 0 1 0 1 0 0 1 0 0 0 0 1 0 0 
0 0 0 0 1 1 0 0 0 0 0 0 1 1 0 0 
B_aug:
[1 0 0 0 0 1 1 1 1 1 0 1 1 0 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 0 1 0 0 1 0 0 0 0 1 0 0]
[0 0 0 0 1 1 0 0 0 0 0 0 1 1 0 0]
[0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1]
m:
[1 0 0 0 0 1 1 1 1 1 0 1 1 0 0 0]
[0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 0 1 0 1 0 0 1 0 0 0 0 1 0 0]
[0 0 0 0 1 1 0 0 0 0 0 0 1 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), ( 5, 6)(13,14), ( 5,13)( 6,14), ( 4, 5)( 9,13), (1,7), ( 1,15)( 6,14)( 7,16)(10,11), ( 2,11)( 8,10) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 9, 3, 4, 5, 6, 7, 8, 2, 11, 10, 12, 13, 14, 15]
[0, 1, 10, 3, 4, 5, 6, 7, 8, 11, 2, 9, 12, 13, 14, 15]
[0, 2, 1, 3, 4, 5, 6, 11, 8, 9, 10, 7, 12, 13, 14, 15]
[0, 3, 4, 1, 2, 9, 6, 8, 7, 5, 13, 12, 11, 10, 14, 15]
[0, 1, 11, 3, 4, 5, 6, 7, 8, 10, 9, 2, 12, 13, 14, 15]
[0, 3, 5, 1, 2, 9, 6, 8, 7, 4, 12, 13, 11, 10, 14, 15]
[0, 3, 13, 1, 2, 9, 6, 8, 7, 12, 4, 5, 11, 10, 14, 15]
[0, 4, 3, 1, 2, 9, 6, 12, 7, 5, 13, 8, 11, 10, 14, 15]
[0, 3, 12, 1, 2, 9, 6, 8, 7, 13, 5, 4, 11, 10, 14, 15]
[0, 2, 7, 3, 4, 5, 6, 11, 8, 10, 9, 1, 12, 13, 14, 15]
[0, 4, 8, 1, 2, 9, 6, 12, 7, 13, 5, 3, 11, 10, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111110110000000
word: 1101101110100000

combo: 0000000000001101

temp: 0000000000001101

orbit_checks[temp>>log2radix]= 0001010010000000

passed if statements
temp basis:
0001101111100001
1101101110100000
0000011010000010
0010000100101000
0011000000110000
rs list:
1 0 0 0 0 1 1 1 1 1 0 1 1 0 0 0 
0 0 0 0 0 1 0 1 1 1 0 1 1 0 1 1 
0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0 
0 0 0 1 0 1 0 0 1 0 0 0 0 1 0 0 
0 0 0 0 1 1 0 0 0 0 0 0 1 1 0 0 
B_aug:
[1 0 0 0 0 1 1 1 1 1 0 1 1 0 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 0 1 0 0 1 0 0 0 0 1 0 0]
[0 0 0 0 1 1 0 0 0 0 0 0 1 1 0 0]
[0 0 0 0 0 1 0 1 1 1 0 1 1 0 1 1]
m:
[1 0 0 0 0 1 1 1 1 1 0 1 1 0 0 0]
[0 0 0 0 0 1 0 1 1 1 0 1 1 0 1 1]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 0 1 0 1 0 0 1 0 0 0 0 1 0 0]
[0 0 0 0 1 1 0 0 0 0 0 0 1 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), ( 5, 6)(13,14), ( 5,13)( 6,14), ( 4, 5)( 9,13), (1,7), ( 1,15)( 7,16), ( 2,11)( 8,10), ( 2, 8)(10,11) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 9, 3, 4, 5, 6, 7, 8, 2, 11, 10, 12, 13, 14, 15]
[0, 1, 10, 3, 4, 5, 6, 7, 8, 11, 2, 9, 12, 13, 14, 15]
[0, 2, 1, 3, 4, 5, 6, 11, 8, 9, 10, 7, 12, 13, 14, 15]
[0, 3, 4, 1, 2, 9, 6, 8, 7, 5, 13, 12, 11, 10, 14, 15]
[0, 1, 11, 3, 4, 5, 6, 7, 8, 10, 9, 2, 12, 13, 14, 15]
[0, 3, 5, 1, 2, 9, 6, 8, 7, 4, 12, 13, 11, 10, 14, 15]
[0, 3, 13, 1, 2, 9, 6, 8, 7, 12, 4, 5, 11, 10, 14, 15]
[0, 4, 3, 1, 2, 9, 6, 12, 7, 5, 13, 8, 11, 10, 14, 15]
[0, 3, 12, 1, 2, 9, 6, 8, 7, 13, 5, 4, 11, 10, 14, 15]
[0, 2, 7, 3, 4, 5, 6, 11, 8, 10, 9, 1, 12, 13, 14, 15]
[0, 4, 8, 1, 2, 9, 6, 12, 7, 13, 5, 3, 11, 10, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1101101110100000
word: 0101110111100000

combo: 0000000000001111

word: 0111101111000000

combo: 0000000000001110

word: 1111011101000000

combo: 0000000000001010

temp: 0000000000001010

orbit_checks[temp>>log2radix]= 0011010010000000

word: 1101000101100000

combo: 0000000000001011

word: 0101011100100000

combo: 0000000000001001

word: 0111000100000000

combo: 0000000000001000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 1 1 1 1 0 1 1 1]
[0 1 0 0 0 0 0 1 1 1 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0]
[0 0 0 1 1 0 0 0 0 0 0 1 1]
limit on degree (length): 15
ortho basis:
001011000010000
100011000100000
100011001000000
100110010000000
001000100000000
110000000000000

B_can_lab before row reduction:
001110110101010
000000000011011
000000000111100
000001111000000

B_can_lab after row reduction:
001110110110001
001110110101010
000000000111100
000001111000000
000000000111000

word generated as sum over rows of ortho_basis starting at 5: 110000000000000
gate: 000000000001111
k_gate: 000000000011111
nonzero_gate: 110000000000000
radix_gate: 000000000011111

Starting main loop:
word: 110000000000000

combo: 000000000000000

word: 111011000010000

combo: 000000000000001

word: 011000000110000

combo: 000000000000011

word: 010011000100000

combo: 000000000000010

word: 110000001100000

combo: 000000000000110

temp: 000000000000110

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
001000100011000
001101111100001
111101110000001
000011010000010
rs list:
0 0 0 1 1 0 0 0 1 0 0 0 1 0 0 
1 0 0 0 0 1 1 1 1 1 0 1 1 0 0 
1 0 0 0 0 0 0 1 1 1 0 1 1 1 1 
0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 
B_aug:
[1 0 0 0 0 1 1 1 1 1 0 1 1 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 1 1 0 0 0 1 0 0 0 1 0 0]
[0 0 0 0 0 1 1 0 0 0 0 0 0 1 1]
m:
[0 0 0 1 1 0 0 0 1 0 0 0 1 0 0]
[1 0 0 0 0 1 1 1 1 1 0 1 1 0 0]
[1 0 0 0 0 0 0 1 1 1 0 1 1 1 1]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (14,15), ( 9,13), (6,7), ( 6,14)( 7,15), (4,5), ( 4, 6)( 5, 7)( 9,14)(13,15), ( 2,11)( 8,10), ( 2,10)( 8,11) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 9, 3, 4, 5, 6, 7, 8, 2, 11, 10, 12, 13, 14]
[0, 1, 10, 3, 4, 5, 6, 7, 8, 11, 2, 9, 12, 13, 14]
[0, 2, 1, 3, 4, 5, 6, 11, 8, 9, 10, 7, 12, 13, 14]
[0, 1, 11, 3, 4, 5, 6, 7, 8, 10, 9, 2, 12, 13, 14]
[0, 2, 7, 3, 4, 5, 6, 11, 8, 10, 9, 1, 12, 13, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
110000001100000
111101110100000
111101111000000
word: 111011001110000

combo: 000000000000111

temp: 000000000000111

orbit_checks[temp>>log2radix]= 10100000000000000000001000000

passed if statements
temp basis:
110101100010011
001101111100001
111100001110100
111011001110000
rs list:
1 1 0 0 1 0 0 0 1 1 0 1 0 1 1 
1 0 0 0 0 1 1 1 1 1 0 1 1 0 0 
0 0 1 0 1 1 1 0 0 0 0 1 1 1 1 
0 0 0 0 1 1 1 0 0 1 1 0 1 1 1 
B_aug:
[1 0 0 0 0 1 1 1 1 1 0 1 1 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 1 1 0 0 0 1 0 0 0 1 0 0]
[0 0 0 0 1 1 1 0 0 1 1 0 1 1 1]
m:
[1 1 0 0 1 0 0 0 1 1 0 1 0 1 1]
[1 0 0 0 0 1 1 1 1 1 0 1 1 0 0]
[0 0 1 0 1 1 1 0 0 0 0 1 1 1 1]
[0 0 0 0 1 1 1 0 0 1 1 0 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (14,15), (6,7), ( 5,13)( 6,14)( 7,15)(10,11), ( 3,10)(11,12), ( 3,11)(10,12), ( 2, 3)( 8,12) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 4, 3, 5, 6, 7, 12, 9, 10, 11, 8, 13, 14]
[0, 1, 2, 8, 12, 5, 6, 7, 3, 9, 10, 11, 4, 13, 14]
[0, 1, 2, 12, 3, 13, 14, 7, 4, 10, 9, 11, 8, 5, 6]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
111011001110000
110011101110000
110110110110000
111110010110000
110110111010000
111110011010000
word: 011000001010000

combo: 000000000000101

word: 010011001000000

combo: 000000000000100

word: 110101011000000

combo: 000000000001100

word: 111110011010000

combo: 000000000001101

temp: 000000000001101

orbit_checks[temp>>log2radix]= 111100100000000010100011000000

word: 011101011110000

combo: 000000000001111

word: 010110011100000

combo: 000000000001110

word: 110101010100000

combo: 000000000001010

word: 111110010110000

combo: 000000000001011

temp: 000000000001011

orbit_checks[temp>>log2radix]= 111100100000000010100011000000

word: 011101010010000

combo: 000000000001001

word: 010110010000000

combo: 000000000001000

word: 011110110000000

combo: 000000000011000

word: 010101110010000

combo: 000000000011001

word: 110110110110000

combo: 000000000011011

temp: 000000000011011

orbit_checks[temp>>log2radix]= 111100100000000010100011000000

word: 111101110100000

combo: 000000000011010

temp: 000000000011010

orbit_checks[temp>>log2radix]= 111100100000000010100011000000

word: 011110111100000

combo: 000000000011110

word: 010101111110000

combo: 000000000011111

word: 110110111010000

combo: 000000000011101

temp: 000000000011101

orbit_checks[temp>>log2radix]= 111100100000000010100011000000

word: 111101111000000

combo: 000000000011100

temp: 000000000011100

orbit_checks[temp>>log2radix]= 111100100000000010100011000000

word: 011011101000000

combo: 000000000010100

word: 010000101010000

combo: 000000000010101

word: 110011101110000

combo: 000000000010111

temp: 000000000010111

orbit_checks[temp>>log2radix]= 111100100000000010100011000000

word: 111000101100000

combo: 000000000010110

word: 011011100100000

combo: 000000000010010

word: 010000100110000

combo: 000000000010011

word: 110011100010000

combo: 000000000010001

word: 111000100000000

combo: 000000000010000

temp: 000000000010000

orbit_checks[temp>>log2radix]= 111100100000000010100011000000

passed if statements
temp basis:
000101011111001
001101111100001
110101011100001
000011010000010
rs list:
1 0 0 1 1 1 1 1 0 1 0 1 0 0 0 
1 0 0 0 0 1 1 1 1 1 0 1 1 0 0 
1 0 0 0 0 1 1 1 0 1 0 1 0 1 1 
0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 
B_aug:
[1 0 0 0 0 1 1 1 1 1 0 1 1 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 1 1 0 0 0 1 0 0 0 1 0 0]
[0 0 0 0 0 0 0 0 1 0 0 0 1 1 1]
m:
[1 0 0 1 1 1 1 1 0 1 0 1 0 0 0]
[1 0 0 0 0 1 1 1 1 1 0 1 1 0 0]
[1 0 0 0 0 1 1 1 0 1 0 1 0 1 1]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (14,15), ( 9,13), ( 9,14)(13,15), (6,7), (4,5), ( 4, 9)( 5,13), (1,6), ( 2,11)( 8,10), ( 2,10)( 8,11) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 9, 3, 4, 5, 6, 7, 8, 2, 11, 10, 12, 13, 14]
[0, 1, 10, 3, 4, 5, 6, 7, 8, 11, 2, 9, 12, 13, 14]
[0, 2, 1, 3, 4, 5, 6, 11, 8, 9, 10, 7, 12, 13, 14]
[0, 1, 11, 3, 4, 5, 6, 7, 8, 10, 9, 2, 12, 13, 14]
[0, 2, 7, 3, 4, 5, 6, 11, 8, 10, 9, 1, 12, 13, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
111000100000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 1 1 1 1 0 1 1 1]
[0 1 0 0 0 0 0 1 1 1 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0]
[0 0 0 1 1 0 0 0 0 0 0 1 1]
limit on degree (length): 16
ortho basis:
0001011000010000
1000011000100000
1000011001000000
1000110010000000
0001000100000000
1010000000000000
1100000000000000

B_can_lab before row reduction:
0001110110101010
0000000000011011
0000000000111100
0000001111000000

B_can_lab after row reduction:
0001110110110001
0001110110101010
0000000000111100
0000001111000000
0000000000111000

word generated as sum over rows of ortho_basis starting at 5: 0110000000000000
gate: 0000000000001111
k_gate: 0000000000011111
nonzero_gate: 1110000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 0110000000000000

combo: 0000000000000000

word: 0111011000010000

combo: 0000000000000001

word: 1111000000110000

combo: 0000000000000011

word: 1110011000100000

combo: 0000000000000010

word: 0110000001100000

combo: 0000000000000110

word: 0111011001110000

combo: 0000000000000111

word: 1111000001010000

combo: 0000000000000101

word: 1110011001000000

combo: 0000000000000100

word: 0110101011000000

combo: 0000000000001100

word: 0111110011010000

combo: 0000000000001101

word: 1111101011110000

combo: 0000000000001111

word: 1110110011100000

combo: 0000000000001110

temp: 0000000000001110

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1110110011100000
0000101011111001
0001101111100001
0000011010000010
rs list:
0 0 0 0 0 1 1 1 0 0 1 1 0 1 1 1 
1 0 0 1 1 1 1 1 0 1 0 1 0 0 0 0 
1 0 0 0 0 1 1 1 1 1 0 1 1 0 0 0 
0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0 
B_aug:
[1 0 0 0 0 1 1 1 1 1 0 1 1 0 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 1 0 0 0 1 0 0 0 1 0 0 0]
[0 0 0 0 0 1 1 1 0 0 1 1 0 1 1 1]
m:
[0 0 0 0 0 1 1 1 0 0 1 1 0 1 1 1]
[1 0 0 1 1 1 1 1 0 1 0 1 0 0 0 0]
[1 0 0 0 0 1 1 1 1 1 0 1 1 0 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), ( 9,13), (6,7), (4,5), ( 4, 9)( 5,13), ( 2,11)( 8,10), ( 2,10)( 8,11) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 9, 3, 4, 5, 6, 7, 8, 2, 11, 10, 12, 13, 14, 15]
[0, 1, 10, 3, 4, 5, 6, 7, 8, 11, 2, 9, 12, 13, 14, 15]
[0, 2, 1, 3, 4, 5, 6, 11, 8, 9, 10, 7, 12, 13, 14, 15]
[0, 1, 11, 3, 4, 5, 6, 7, 8, 10, 9, 2, 12, 13, 14, 15]
[0, 2, 7, 3, 4, 5, 6, 11, 8, 10, 9, 1, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1110110011100000
1111011100100000
1111011101000000
word: 0110101010100000

combo: 0000000000001010

word: 0111110010110000

combo: 0000000000001011

word: 1111101010010000

combo: 0000000000001001

temp: 0000000000001001

orbit_checks[temp>>log2radix]= 101000100000000000000

passed if statements
temp basis:
0001101111100001
1111101010010000
0000011010000010
0000111000000100
rs list:
1 0 0 0 0 1 1 1 1 1 0 1 1 0 0 0 
0 0 0 0 1 0 0 1 0 1 0 1 1 1 1 1 
0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0 
B_aug:
[1 0 0 0 0 1 1 1 1 1 0 1 1 0 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 1 0 0 0 1 0 0 0 1 0 0 0]
[0 0 0 0 1 0 0 1 0 1 0 1 1 1 1 1]
m:
[1 0 0 0 0 1 1 1 1 1 0 1 1 0 0 0]
[0 0 0 0 1 0 0 1 0 1 0 1 1 1 1 1]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (6,7), ( 3,10)(11,12), ( 3,11)(10,12), ( 2, 3)( 8,12), (1,6), ( 1,14)( 5, 9)( 6,15)( 7,16) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 4, 3, 5, 6, 7, 12, 9, 10, 11, 8, 13, 14, 15]
[13, 1, 2, 8, 3, 14, 15, 7, 12, 9, 10, 11, 4, 0, 5, 6]
[13, 1, 2, 12, 4, 14, 15, 7, 8, 9, 10, 11, 3, 0, 5, 6]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111101010010000
1110101110010000
word: 1110110010000000

combo: 0000000000001000

word: 1111110110000000

combo: 0000000000011000

temp: 0000000000011000

orbit_checks[temp>>log2radix]= 10000101000100001000000000

passed if statements
temp basis:
0001101111100001
1111110110000000
0001000100011000
0000011010000010
rs list:
1 0 0 0 0 1 1 1 1 1 0 1 1 0 0 0 
0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 
0 0 0 1 1 0 0 0 1 0 0 0 1 0 0 0 
0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0 
B_aug:
[1 0 0 0 0 1 1 1 1 1 0 1 1 0 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 1 0 0 0 1 0 0 0 1 0 0 0]
[0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1]
m:
[1 0 0 0 0 1 1 1 1 1 0 1 1 0 0 0]
[0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1]
[0 0 0 1 1 0 0 0 1 0 0 0 1 0 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), ( 9,13), (6,7), (4,5), ( 4, 9)( 5,13), (1,6), ( 1,14)( 6,15)( 7,16)(10,11), ( 2,11)( 8,10) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 9, 3, 4, 5, 6, 7, 8, 2, 11, 10, 12, 13, 14, 15]
[0, 1, 10, 3, 4, 5, 6, 7, 8, 11, 2, 9, 12, 13, 14, 15]
[0, 2, 1, 3, 4, 5, 6, 11, 8, 9, 10, 7, 12, 13, 14, 15]
[0, 1, 11, 3, 4, 5, 6, 7, 8, 10, 9, 2, 12, 13, 14, 15]
[0, 2, 7, 3, 4, 5, 6, 11, 8, 10, 9, 1, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111110110000000
word: 1110101110010000

combo: 0000000000011001

temp: 0000000000011001

orbit_checks[temp>>log2radix]= 11000101000100001000000000

word: 0110110110110000

combo: 0000000000011011

word: 0111101110100000

combo: 0000000000011010

word: 1111110111100000

combo: 0000000000011110

word: 1110101111110000

combo: 0000000000011111

word: 0110110111010000

combo: 0000000000011101

word: 0111101111000000

combo: 0000000000011100

word: 1111011101000000

combo: 0000000000010100

temp: 0000000000010100

orbit_checks[temp>>log2radix]= 11000101000100001000000000

word: 1110000101010000

combo: 0000000000010101

word: 0110011101110000

combo: 0000000000010111

word: 0111000101100000

combo: 0000000000010110

word: 1111011100100000

combo: 0000000000010010

temp: 0000000000010010

orbit_checks[temp>>log2radix]= 11000101000100001000000000

word: 1110000100110000

combo: 0000000000010011

word: 0110011100010000

combo: 0000000000010001

word: 0111000100000000

combo: 0000000000010000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 1 1 1 1 1 0 1]
[0 1 0 0 0 0 0 1 1 1 0]
[0 0 1 0 0 0 0 0 1 1 1]
limit on degree (length): 14
ortho basis:
10001100001000
10001100010000
10001100100000
10001101000000
10011010000000
10100000000000
11000000000000

B_can_lab before row reduction:
00011111101010
00000000011011
00000000111100

B_can_lab after row reduction:
00011111110001
00011111101010
00000000111100

word generated as sum over rows of ortho_basis starting at 5: 01100000000000
gate: 00000000000111
k_gate: 00000000011111
nonzero_gate: 11100000000000
radix_gate: 00000000011111

Starting main loop:
word: 01100000000000

combo: 00000000000000

word: 11101100001000

combo: 00000000000001

word: 01100000011000

combo: 00000000000011

word: 11101100010000

combo: 00000000000010

word: 01100000110000

combo: 00000000000110

word: 11101100111000

combo: 00000000000111

temp: 00000000000111

orbit_checks[temp>>log2radix]= 00000000000000

passed if statements
temp basis:
00011001111011
11111011000001
11110000111100
rs list:
1 1 0 1 1 1 1 0 0 1 1 0 0 0 
1 0 0 0 0 0 1 1 0 1 1 1 1 1 
0 0 1 1 1 1 0 0 0 0 1 1 1 1 
B_aug:
[1 0 0 1 1 1 1 1 1 0 1 0 0 0]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0]
[0 0 0 1 1 1 0 0 1 1 0 1 1 1]
m:
[1 1 0 1 1 1 1 0 0 1 1 0 0 0]
[1 0 0 0 0 0 1 1 0 1 1 1 1 1]
[0 0 1 1 1 1 0 0 0 0 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (13,14), (12,13), (5,6), (4,5), ( 2, 3)( 8,11), (1,7), ( 3,11)( 4,12)( 5,13)( 6,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 11, 12, 13, 6, 7, 9, 8, 10, 3, 4, 5]
[0, 1, 8, 3, 4, 5, 6, 7, 2, 10, 9, 11, 12, 13]
[0, 1, 8, 11, 12, 13, 6, 7, 10, 2, 9, 3, 4, 5]
[0, 2, 8, 3, 4, 5, 6, 10, 1, 7, 9, 11, 12, 13]
[0, 2, 8, 11, 12, 13, 6, 10, 7, 1, 9, 3, 4, 5]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
orbits:
11101100111000
11101101011000
11111011001000
11101101101000
11111010101000
11111011010000
11101101110000
11111010011000
11111010110000
11111011100000
word: 01100000101000

combo: 00000000000101

word: 11101100100000

combo: 00000000000100

word: 01100001100000

combo: 00000000001100

word: 11101101101000

combo: 00000000001101

temp: 00000000001101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 01100001111000

combo: 00000000001111

word: 11101101110000

combo: 00000000001110

temp: 00000000001110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 01100001010000

combo: 00000000001010

word: 11101101011000

combo: 00000000001011

temp: 00000000001011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 01100001001000

combo: 00000000001001

word: 11101101000000

combo: 00000000001000

word: 01110111000000

combo: 00000000011000

word: 11111011001000

combo: 00000000011001

temp: 00000000011001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 01110111011000

combo: 00000000011011

word: 11111011010000

combo: 00000000011010

temp: 00000000011010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 01110111110000

combo: 00000000011110

word: 11111011111000

combo: 00000000011111

word: 01110111101000

combo: 00000000011101

word: 11111011100000

combo: 00000000011100

temp: 00000000011100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 01110110100000

combo: 00000000010100

word: 11111010101000

combo: 00000000010101

temp: 00000000010101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 01110110111000

combo: 00000000010111

word: 11111010110000

combo: 00000000010110

temp: 00000000010110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 01110110010000

combo: 00000000010010

word: 11111010011000

combo: 00000000010011

temp: 00000000010011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 01110110001000

combo: 00000000010001

word: 11111010000000

combo: 00000000010000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 1 1 1 1 1 0 1]
[0 1 0 0 0 0 0 1 1 1 0]
[0 0 1 0 0 0 0 0 1 1 1]
limit on degree (length): 15
ortho basis:
100001100001000
100001100010000
100001100100000
100001101000000
100011010000000
100100000000000
101000000000000
110000000000000

B_can_lab before row reduction:
000011111101010
000000000011011
000000000111100

B_can_lab after row reduction:
000011111110001
000011111101010
000000000111100

word generated as sum over rows of ortho_basis starting at 5: 111100000000000
gate: 000000000000111
k_gate: 000000000011111
nonzero_gate: 111100000000000
radix_gate: 000000000011111

Starting main loop:
word: 111100000000000

combo: 000000000000000

temp: 000000000000000

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
111100000000000
000010111111001
000001110000010
rs list:
0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
1 0 0 1 1 1 1 1 1 0 1 0 0 0 0 
0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 
B_aug:
[1 0 0 1 1 1 1 1 1 0 1 0 0 0 0]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 0 0 0 0 0 0 0 0 1 1 1 1]
m:
[0 0 0 0 0 0 0 0 0 0 0 1 1 1 1]
[1 0 0 1 1 1 1 1 1 0 1 0 0 0 0]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (14,15), (13,14), (12,13), (6,7), (5,6), (4,5), (1,4), ( 2,10)( 8, 9), ( 2, 9)( 8,10) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 8, 3, 4, 5, 6, 7, 2, 10, 9, 11, 12, 13, 14]
[0, 1, 9, 3, 4, 5, 6, 7, 10, 2, 8, 11, 12, 13, 14]
[0, 2, 1, 3, 4, 5, 6, 10, 8, 9, 7, 11, 12, 13, 14]
[0, 1, 10, 3, 4, 5, 6, 7, 9, 8, 2, 11, 12, 13, 14]
[0, 2, 7, 3, 4, 5, 6, 10, 9, 8, 1, 11, 12, 13, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
111100000000000
word: 011101100001000

combo: 000000000000001

word: 111100000011000

combo: 000000000000011

word: 011101100010000

combo: 000000000000010

word: 111100000110000

combo: 000000000000110

word: 011101100111000

combo: 000000000000111

word: 111100000101000

combo: 000000000000101

word: 011101100100000

combo: 000000000000100

word: 111100001100000

combo: 000000000001100

word: 011101101101000

combo: 000000000001101

word: 111100001111000

combo: 000000000001111

temp: 000000000001111

orbit_checks[temp>>log2radix]= 000000000000001

passed if statements
temp basis:
111111000000011
111110110000001
000011100000100
rs list:
1 1 0 0 0 0 0 0 0 1 1 1 1 1 1 
1 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 
B_aug:
[1 0 0 1 1 1 1 1 1 0 1 0 0 0 0]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 1 1 1 0 0 0 0 1 1 1 1]
m:
[1 1 0 0 0 0 0 0 0 1 1 1 1 1 1]
[1 0 0 0 0 0 0 1 1 0 1 1 1 1 1]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (14,15), (13,14), (12,13), (6,7), (5,6), (4,5), ( 3, 9)(10,11), ( 3,10)( 9,11), ( 2, 3)( 8,11) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 11, 12, 13, 14, 7, 8, 9, 10, 3, 4, 5, 6]
orbits:
111100001111000
111110110001000
111110110010000
111110110100000
111110111000000
word: 011101101110000

combo: 000000000001110

word: 111100001010000

combo: 000000000001010

word: 011101101011000

combo: 000000000001011

word: 111100001001000

combo: 000000000001001

word: 011101101000000

combo: 000000000001000

word: 111110111000000

combo: 000000000011000

temp: 000000000011000

orbit_checks[temp>>log2radix]= 1000101101000000000000001

word: 011111011001000

combo: 000000000011001

word: 111110111011000

combo: 000000000011011

word: 011111011010000

combo: 000000000011010

word: 111110111110000

combo: 000000000011110

word: 011111011111000

combo: 000000000011111

word: 111110111101000

combo: 000000000011101

word: 011111011100000

combo: 000000000011100

word: 111110110100000

combo: 000000000010100

temp: 000000000010100

orbit_checks[temp>>log2radix]= 1000101101000000000000001

word: 011111010101000

combo: 000000000010101

word: 111110110111000

combo: 000000000010111

word: 011111010110000

combo: 000000000010110

word: 111110110010000

combo: 000000000010010

temp: 000000000010010

orbit_checks[temp>>log2radix]= 1000101101000000000000001

word: 011111010011000

combo: 000000000010011

word: 111110110001000

combo: 000000000010001

temp: 000000000010001

orbit_checks[temp>>log2radix]= 1000101101000000000000001

word: 011111010000000

combo: 000000000010000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 0 1 1 0 1 1 1 1 1]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 1 1 1 1 0 0 0 0 1 1 1 1]
limit on degree (length): 16
ortho basis:
0101100000010000
0101100000100000
0101100001000000
1011000010000000
0100000100000000
0100001000000000
0100010000000000

B_can_lab before row reduction:
0100011110101010
0000000000011011
0000000000111100
0011111111000000

B_can_lab after row reduction:
0100011110110001
0100011110101010
0000000000111100
0011111111000000
0000000000111000

word generated as sum over rows of ortho_basis starting at 7: 0000000000000000
gate: 0000000000001111
k_gate: 0000000001111111
nonzero_gate: 1000000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 0000000000000000

combo: 0000000000000000

word: 0101100000010000

combo: 0000000000000001

word: 0000000000110000

combo: 0000000000000011

word: 0101100000100000

combo: 0000000000000010

word: 0000000001100000

combo: 0000000000000110

word: 0101100001110000

combo: 0000000000000111

word: 0000000001010000

combo: 0000000000000101

word: 0101100001000000

combo: 0000000000000100

word: 1110100011000000

combo: 0000000000001100

word: 1011000011010000

combo: 0000000000001101

word: 1110100011110000

combo: 0000000000001111

temp: 0000000000001111

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1110100011110000
1010111110001000
0001100010000010
0011100000000100
rs list:
0 0 0 0 1 1 1 1 0 0 0 1 0 1 1 1 
0 0 0 1 0 0 0 1 1 1 1 1 0 1 0 1 
0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 1 1 1 0 0 
B_aug:
[1 0 0 0 0 0 0 1 1 1 1 1 0 1 1 0]
[0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 0]
[0 0 1 0 0 0 0 0 0 0 0 1 1 1 0 0]
[0 0 0 1 1 1 1 0 1 1 1 0 0 0 1 0]
[0 0 0 0 1 1 1 1 0 0 0 1 0 1 1 1]
m:
[0 0 0 0 1 1 1 1 0 0 0 1 0 1 1 1]
[0 0 0 1 0 0 0 1 1 1 1 1 0 1 0 1]
[0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 0]
[0 0 1 0 0 0 0 0 0 0 0 1 1 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (10,11), ( 9,10), (6,7), (5,6), ( 4,15)( 5, 9)( 6,10)( 7,11), ( 3,12)(13,14), ( 3,13)(12,14), ( 2, 3)( 8,14) ] )
Right transversal of automorphism group of B_aug:
[3, 1, 2, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14]
[14, 1, 2, 0, 8, 9, 10, 7, 4, 5, 6, 11, 12, 13, 15, 3]
[15, 1, 2, 3, 8, 9, 10, 7, 4, 5, 6, 11, 12, 13, 14, 0]
orbits:
1110100011110000
1010110011110000
1010111110010000
1110111011000000
1010101011110000
1110101110010000
1110111010100000
1010111110100000
1110110111000000
1010100111110000
1110110110010000
1110111010010000
1110101110100000
1110110110100000
1010111111000000
1110101111000000
word: 1011000011100000

combo: 0000000000001110

word: 1110100010100000

combo: 0000000000001010

word: 1011000010110000

combo: 0000000000001011

word: 1110100010010000

combo: 0000000000001001

word: 1011000010000000

combo: 0000000000001000

temp: 0000000000001000

orbit_checks[temp>>log2radix]= 10000000000000001000000000000000

passed if statements
temp basis:
0111011100000011
1110011100000101
1101111100000001
1011000010000000
rs list:
1 1 0 0 0 0 0 0 1 1 1 0 1 1 1 0 
1 0 1 0 0 0 0 0 1 1 1 0 0 1 1 1 
1 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 
0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 1 
B_aug:
[1 0 0 0 0 0 0 1 1 1 1 1 0 1 1 0]
[0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 0]
[0 0 1 0 0 0 0 0 0 0 0 1 1 1 0 0]
[0 0 0 1 1 1 1 0 1 1 1 0 0 0 1 0]
[0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 1]
m:
[1 1 0 0 0 0 0 0 1 1 1 0 1 1 1 0]
[1 0 1 0 0 0 0 0 1 1 1 0 0 1 1 1]
[1 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1]
[0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,15), (10,11), ( 9,10), ( 8,13)(14,16), ( 8,14)(13,16), (6,7), (5,6), (4,5), ( 3, 8)(12,16), ( 2, 3)(13,16) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 8, 9, 10, 14, 7, 3, 4, 5, 11, 12, 13, 6, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1011000010000000
word: 1111000110000000

combo: 0000000000011000

word: 1010100110010000

combo: 0000000000011001

word: 1111000110110000

combo: 0000000000011011

temp: 0000000000011011

orbit_checks[temp>>log2radix]= 10000000000000001000000100000000

passed if statements
temp basis:
1110100100110010
0110111110000001
1010011000110101
1001111000110001
rs list:
0 1 0 0 1 1 0 0 1 0 0 1 0 1 1 1 
1 0 0 0 0 0 0 1 1 1 1 1 0 1 1 0 
1 0 1 0 1 1 0 0 0 1 1 0 0 1 0 1 
1 0 0 0 1 1 0 0 0 1 1 1 1 0 0 1 
B_aug:
[1 0 0 0 0 0 0 1 1 1 1 1 0 1 1 0]
[0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 0]
[0 0 1 0 0 0 0 0 0 0 0 1 1 1 0 0]
[0 0 0 1 1 1 1 0 1 1 1 0 0 0 1 0]
[0 0 0 0 1 1 0 1 1 0 0 0 1 1 1 1]
m:
[0 1 0 0 1 1 0 0 1 0 0 1 0 1 1 1]
[1 0 0 0 0 0 0 1 1 1 1 1 0 1 1 0]
[1 0 1 0 1 1 0 0 0 1 1 0 0 1 0 1]
[1 0 0 0 1 1 0 0 0 1 1 1 1 0 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,15), (5,6), ( 5, 6)(10,11), ( 4, 7)( 5, 6)(10,11), ( 3,12)( 5, 6)(10,11)(13,14), ( 3,13)( 5, 6)(10,11)(12,14), ( 2, 3)( 5, 6)( 8,14)(10,11), ( 1,16)( 5,11)( 6,10)(12,13) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 4, 3, 6, 5, 7, 9, 8, 14, 11, 12, 13, 10, 15]
[0, 1, 2, 8, 9, 10, 14, 7, 3, 4, 5, 11, 12, 13, 6, 15]
[0, 1, 2, 9, 8, 14, 10, 7, 4, 3, 6, 11, 12, 13, 5, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111000110110000
1011010110110000
1111001010110000
1111000111010000
1011011011010000
1011001110110000
1011011010110000
1011010111010000
1111001011010000
1111010010110000
1111000111100000
1011011011100000
1011001111010000
1111010011010000
1011010111100000
1111001011100000
1011001111100000
1111010011100000
word: 1010100110100000

combo: 0000000000011010

word: 1111000111100000

combo: 0000000000011110

temp: 0000000000011110

orbit_checks[temp>>log2radix]= 11101000000000001000000100000000

word: 1010100111110000

combo: 0000000000011111

temp: 0000000000011111

orbit_checks[temp>>log2radix]= 11101000000000001000000100000000

word: 1111000111010000

combo: 0000000000011101

temp: 0000000000011101

orbit_checks[temp>>log2radix]= 11101000000000001000000100000000

word: 1010100111000000

combo: 0000000000011100

word: 0001100101000000

combo: 0000000000010100

word: 0100000101010000

combo: 0000000000010101

word: 0001100101110000

combo: 0000000000010111

word: 0100000101100000

combo: 0000000000010110

word: 0001100100100000

combo: 0000000000010010

word: 0100000100110000

combo: 0000000000010011

word: 0001100100010000

combo: 0000000000010001

word: 0100000100000000

combo: 0000000000010000

word: 0000001100000000

combo: 0000000000110000

word: 0101101100010000

combo: 0000000000110001

word: 0000001100110000

combo: 0000000000110011

word: 0101101100100000

combo: 0000000000110010

word: 0000001101100000

combo: 0000000000110110

word: 0101101101110000

combo: 0000000000110111

word: 0000001101010000

combo: 0000000000110101

word: 0101101101000000

combo: 0000000000110100

word: 1110101111000000

combo: 0000000000111100

temp: 0000000000111100

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 1011001111010000

combo: 0000000000111101

temp: 0000000000111101

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 1110101111110000

combo: 0000000000111111

word: 1011001111100000

combo: 0000000000111110

temp: 0000000000111110

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 1110101110100000

combo: 0000000000111010

temp: 0000000000111010

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 1011001110110000

combo: 0000000000111011

temp: 0000000000111011

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 1110101110010000

combo: 0000000000111001

temp: 0000000000111001

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 1011001110000000

combo: 0000000000111000

word: 1111001010000000

combo: 0000000000101000

word: 1010101010010000

combo: 0000000000101001

word: 1111001010110000

combo: 0000000000101011

temp: 0000000000101011

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 1010101010100000

combo: 0000000000101010

word: 1111001011100000

combo: 0000000000101110

temp: 0000000000101110

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 1010101011110000

combo: 0000000000101111

temp: 0000000000101111

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 1111001011010000

combo: 0000000000101101

temp: 0000000000101101

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 1010101011000000

combo: 0000000000101100

word: 0001101001000000

combo: 0000000000100100

word: 0100001001010000

combo: 0000000000100101

word: 0001101001110000

combo: 0000000000100111

word: 0100001001100000

combo: 0000000000100110

word: 0001101000100000

combo: 0000000000100010

word: 0100001000110000

combo: 0000000000100011

word: 0001101000010000

combo: 0000000000100001

word: 0100001000000000

combo: 0000000000100000

word: 0000011000000000

combo: 0000000001100000

word: 0101111000010000

combo: 0000000001100001

word: 0000011000110000

combo: 0000000001100011

word: 0101111000100000

combo: 0000000001100010

word: 0000011001100000

combo: 0000000001100110

word: 0101111001110000

combo: 0000000001100111

word: 0000011001010000

combo: 0000000001100101

word: 0101111001000000

combo: 0000000001100100

word: 1110111011000000

combo: 0000000001101100

temp: 0000000001101100

orbit_checks[temp>>log2radix]= 10110000000000111111000000000

word: 1011011011010000

combo: 0000000001101101

temp: 0000000001101101

orbit_checks[temp>>log2radix]= 10110000000000111111000000000

word: 1110111011110000

combo: 0000000001101111

word: 1011011011100000

combo: 0000000001101110

temp: 0000000001101110

orbit_checks[temp>>log2radix]= 10110000000000111111000000000

word: 1110111010100000

combo: 0000000001101010

temp: 0000000001101010

orbit_checks[temp>>log2radix]= 10110000000000111111000000000

word: 1011011010110000

combo: 0000000001101011

temp: 0000000001101011

orbit_checks[temp>>log2radix]= 10110000000000111111000000000

word: 1110111010010000

combo: 0000000001101001

temp: 0000000001101001

orbit_checks[temp>>log2radix]= 10110000000000111111000000000

word: 1011011010000000

combo: 0000000001101000

word: 1111011110000000

combo: 0000000001111000

temp: 0000000001111000

orbit_checks[temp>>log2radix]= 10110000000000111111000000000

passed if statements
temp basis:
1011000011111000
1111011110000000
1001100000000001
0001100010000010
rs list:
0 0 0 1 1 1 1 1 0 0 0 0 1 1 0 1 
0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 0 
B_aug:
[1 0 0 0 0 0 0 1 1 1 1 1 0 1 1 0]
[0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 0]
[0 0 1 0 0 0 0 0 0 0 0 1 1 1 0 0]
[0 0 0 1 1 1 1 0 1 1 1 0 0 0 1 0]
[0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1]
m:
[0 0 0 1 1 1 1 1 0 0 0 0 1 1 0 1]
[0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1]
[1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1]
[0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,15), (10,11), ( 9,10), (6,7), (5,6), (4,5), ( 4, 9)( 5,10)( 6,11)( 7,15), ( 1, 2)( 8,16), ( 2,13)( 8,12), ( 2,12)( 8,13) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 11, 3, 4, 5, 6, 7, 8, 9, 10, 2, 13, 12, 14, 15]
[0, 1, 12, 3, 4, 5, 6, 7, 8, 9, 10, 13, 2, 11, 14, 15]
[0, 2, 1, 3, 4, 5, 6, 13, 8, 9, 10, 11, 12, 7, 14, 15]
[0, 1, 13, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 2, 14, 15]
[1, 2, 0, 3, 4, 5, 6, 13, 8, 9, 10, 11, 12, 15, 14, 7]
[0, 2, 7, 3, 4, 5, 6, 13, 8, 9, 10, 12, 11, 1, 14, 15]
[1, 2, 15, 3, 4, 5, 6, 13, 8, 9, 10, 12, 11, 0, 14, 7]
orbits:
1111011110000000
word: 1010111110010000

combo: 0000000001111001

temp: 0000000001111001

orbit_checks[temp>>log2radix]= 10111000000000111111000000000

word: 1111011110110000

combo: 0000000001111011

word: 1010111110100000

combo: 0000000001111010

temp: 0000000001111010

orbit_checks[temp>>log2radix]= 10111000000000111111000000000

word: 1111011111100000

combo: 0000000001111110

word: 1010111111110000

combo: 0000000001111111

word: 1111011111010000

combo: 0000000001111101

word: 1010111111000000

combo: 0000000001111100

temp: 0000000001111100

orbit_checks[temp>>log2radix]= 10111000000000111111000000000

word: 0001111101000000

combo: 0000000001110100

word: 0100011101010000

combo: 0000000001110101

word: 0001111101110000

combo: 0000000001110111

word: 0100011101100000

combo: 0000000001110110

word: 0001111100100000

combo: 0000000001110010

word: 0100011100110000

combo: 0000000001110011

word: 0001111100010000

combo: 0000000001110001

word: 0100011100000000

combo: 0000000001110000

word: 0000010100000000

combo: 0000000001010000

word: 0101110100010000

combo: 0000000001010001

word: 0000010100110000

combo: 0000000001010011

word: 0101110100100000

combo: 0000000001010010

word: 0000010101100000

combo: 0000000001010110

word: 0101110101110000

combo: 0000000001010111

word: 0000010101010000

combo: 0000000001010101

word: 0101110101000000

combo: 0000000001010100

word: 1110110111000000

combo: 0000000001011100

temp: 0000000001011100

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 1011010111010000

combo: 0000000001011101

temp: 0000000001011101

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 1110110111110000

combo: 0000000001011111

word: 1011010111100000

combo: 0000000001011110

temp: 0000000001011110

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 1110110110100000

combo: 0000000001011010

temp: 0000000001011010

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 1011010110110000

combo: 0000000001011011

temp: 0000000001011011

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 1110110110010000

combo: 0000000001011001

temp: 0000000001011001

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 1011010110000000

combo: 0000000001011000

word: 1111010010000000

combo: 0000000001001000

word: 1010110010010000

combo: 0000000001001001

word: 1111010010110000

combo: 0000000001001011

temp: 0000000001001011

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 1010110010100000

combo: 0000000001001010

word: 1111010011100000

combo: 0000000001001110

temp: 0000000001001110

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 1010110011110000

combo: 0000000001001111

temp: 0000000001001111

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 1111010011010000

combo: 0000000001001101

temp: 0000000001001101

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 1010110011000000

combo: 0000000001001100

word: 0001110001000000

combo: 0000000001000100

word: 0100010001010000

combo: 0000000001000101

word: 0001110001110000

combo: 0000000001000111

word: 0100010001100000

combo: 0000000001000110

word: 0001110000100000

combo: 0000000001000010

word: 0100010000110000

combo: 0000000001000011

word: 0001110000010000

combo: 0000000001000001

word: 0100010000000000

combo: 0000000001000000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 1 1 1 1 1 0 1]
[0 1 0 0 0 0 0 1 1 1 0]
[0 0 1 0 0 0 0 0 1 1 1]
limit on degree (length): 16
ortho basis:
1000001100001000
1000001100010000
1000001100100000
1000001101000000
1000011010000000
1000100000000000
1001000000000000
1010000000000000
1100000000000000

B_can_lab before row reduction:
0000011111101010
0000000000011011
0000000000111100

B_can_lab after row reduction:
0000011111110001
0000011111101010
0000000000111100

word generated as sum over rows of ortho_basis starting at 5: 0111100000000000
gate: 0000000000000111
k_gate: 0000000000011111
nonzero_gate: 1111100000000000
radix_gate: 0000000000011111

Starting main loop:
word: 0111100000000000

combo: 0000000000000000

word: 1111101100001000

combo: 0000000000000001

temp: 0000000000000001

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1111101100001000
0000011001111011
0000010111111001
rs list:
0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 1 
1 1 0 1 1 1 1 0 0 1 1 0 0 0 0 0 
1 0 0 1 1 1 1 1 1 0 1 0 0 0 0 0 
B_aug:
[1 0 0 1 1 1 1 1 1 0 1 0 0 0 0 0]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 0]
[0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 1]
m:
[0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 1]
[1 1 0 1 1 1 1 0 0 1 1 0 0 0 0 0]
[1 0 0 1 1 1 1 1 1 0 1 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), (12,13), (6,7), (5,6), (1,5), ( 2,10)( 8, 9), ( 2, 9)( 8,10) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 8, 3, 4, 5, 6, 7, 2, 10, 9, 11, 12, 13, 14, 15]
[0, 1, 9, 3, 4, 5, 6, 7, 10, 2, 8, 11, 12, 13, 14, 15]
[0, 2, 1, 3, 4, 5, 6, 10, 8, 9, 7, 11, 12, 13, 14, 15]
[0, 1, 10, 3, 4, 5, 6, 7, 9, 8, 2, 11, 12, 13, 14, 15]
[0, 2, 7, 3, 4, 5, 6, 10, 9, 8, 1, 11, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111101100001000
1111101100010000
1111111011111000
1111101100100000
1111101101000000
word: 0111100000011000

combo: 0000000000000011

word: 1111101100010000

combo: 0000000000000010

temp: 0000000000000010

orbit_checks[temp>>log2radix]= 10000000000000000000000100010110

word: 0111100000110000

combo: 0000000000000110

word: 1111101100111000

combo: 0000000000000111

word: 0111100000101000

combo: 0000000000000101

word: 1111101100100000

combo: 0000000000000100

temp: 0000000000000100

orbit_checks[temp>>log2radix]= 10000000000000000000000100010110

word: 0111100001100000

combo: 0000000000001100

word: 1111101101101000

combo: 0000000000001101

word: 0111100001111000

combo: 0000000000001111

word: 1111101101110000

combo: 0000000000001110

word: 0111100001010000

combo: 0000000000001010

word: 1111101101011000

combo: 0000000000001011

word: 0111100001001000

combo: 0000000000001001

word: 1111101101000000

combo: 0000000000001000

temp: 0000000000001000

orbit_checks[temp>>log2radix]= 10000000000000000000000100010110

word: 0111110111000000

combo: 0000000000011000

word: 1111111011001000

combo: 0000000000011001

word: 0111110111011000

combo: 0000000000011011

word: 1111111011010000

combo: 0000000000011010

word: 0111110111110000

combo: 0000000000011110

word: 1111111011111000

combo: 0000000000011111

temp: 0000000000011111

orbit_checks[temp>>log2radix]= 10000000000000000000000100010110

word: 0111110111101000

combo: 0000000000011101

word: 1111111011100000

combo: 0000000000011100

word: 0111110110100000

combo: 0000000000010100

word: 1111111010101000

combo: 0000000000010101

word: 0111110110111000

combo: 0000000000010111

word: 1111111010110000

combo: 0000000000010110

word: 0111110110010000

combo: 0000000000010010

word: 1111111010011000

combo: 0000000000010011

word: 0111110110001000

combo: 0000000000010001

word: 1111111010000000

combo: 0000000000010000

temp: 0000000000010000

orbit_checks[temp>>log2radix]= 10000000000000000000000100010110

passed if statements
temp basis:
1111111010000000
0000010111111001
0000001110000010
rs list:
0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 
1 0 0 1 1 1 1 1 1 0 1 0 0 0 0 0 
0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0 
B_aug:
[1 0 0 1 1 1 1 1 1 0 1 0 0 0 0 0]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 0]
[0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1]
m:
[0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1]
[1 0 0 1 1 1 1 1 1 0 1 0 0 0 0 0]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), (12,13), (6,7), (5,6), (4,5), (1,4), ( 1,12)( 4,13)( 5,14)( 6,15)( 7,16)( 9,10), ( 2, 9)( 8,10) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 8, 3, 4, 5, 6, 7, 2, 10, 9, 11, 12, 13, 14, 15]
[0, 2, 1, 3, 4, 5, 6, 10, 8, 9, 7, 11, 12, 13, 14, 15]
[11, 1, 9, 12, 13, 14, 15, 7, 2, 10, 8, 0, 3, 4, 5, 6]
[11, 1, 10, 12, 13, 14, 15, 7, 8, 9, 2, 0, 3, 4, 5, 6]
[11, 2, 7, 12, 13, 14, 15, 10, 8, 9, 1, 0, 3, 4, 5, 6]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111111010000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 1 1 1 1 0 1 1]
[0 1 0 0 0 0 0 1 1 1]
limit on degree (length): 12
ortho basis:
101100000100
101100001000
101100010000
101100100000
101101000000
001010000000
110000000000

B_can_lab before row reduction:
001111110110
000000001111

B_can_lab after row reduction:
001111111001
001111110110

word generated as sum over rows of ortho_basis starting at 6: 110000000000
gate: 000000000011
k_gate: 000000111111
nonzero_gate: 110000000000
radix_gate: 000000011111

Starting main loop:
word: 110000000000

combo: 000000000000

word: 011100000100

combo: 000000000001

word: 110000001100

combo: 000000000011

temp: 000000000011

orbit_checks[temp>>log2radix]= 000000000000

passed if statements
temp basis:
001110000010
001011111101
rs list:
0 1 0 0 0 0 0 1 1 1 0 0 
1 0 1 1 1 1 1 1 0 1 0 0 
B_aug:
[1 0 1 1 1 1 1 1 0 1 0 0]
[0 1 0 0 0 0 0 1 1 1 0 0]
[0 0 1 1 0 0 0 0 0 0 1 1]
m:
[0 1 0 0 0 0 0 1 1 1 0 0]
[1 0 1 1 1 1 1 1 0 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (3,4), (11,12), ( 8,10), ( 2, 8)( 9,10), (5,6), (5,7), (1,5,7) ] )
Right transversal of automorphism group of B_aug:
[0, 2, 1, 8, 4, 5, 6, 10, 3, 11, 7, 9]
[0, 2, 7, 9, 4, 5, 6, 10, 3, 11, 1, 8]
[0, 1, 10, 11, 4, 5, 6, 7, 8, 9, 2, 3]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
orbits:
110000001100
110000010100
111011110100
110000100100
110000011000
111011101100
111011111000
110001000100
110000101000
111011011100
110001001000
111010111100
110000110000
110001010000
110001100000
word: 011100001000

combo: 000000000010

word: 110000011000

combo: 000000000110

temp: 000000000110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 011100011100

combo: 000000000111

word: 110000010100

combo: 000000000101

temp: 000000000101

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 011100010000

combo: 000000000100

word: 110000110000

combo: 000000001100

temp: 000000001100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 011100110100

combo: 000000001101

word: 110000111100

combo: 000000001111

word: 011100111000

combo: 000000001110

word: 110000101000

combo: 000000001010

temp: 000000001010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 011100101100

combo: 000000001011

word: 110000100100

combo: 000000001001

temp: 000000001001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 011100100000

combo: 000000001000

word: 110001100000

combo: 000000011000

temp: 000000011000

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 011101100100

combo: 000000011001

word: 110001101100

combo: 000000011011

word: 011101101000

combo: 000000011010

word: 110001111000

combo: 000000011110

word: 011101111100

combo: 000000011111

word: 110001110100

combo: 000000011101

word: 011101110000

combo: 000000011100

word: 110001010000

combo: 000000010100

temp: 000000010100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 011101010100

combo: 000000010101

word: 110001011100

combo: 000000010111

word: 011101011000

combo: 000000010110

word: 110001001000

combo: 000000010010

temp: 000000010010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 011101001100

combo: 000000010011

word: 110001000100

combo: 000000010001

temp: 000000010001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 011101000000

combo: 000000010000

word: 010111000000

combo: 000000110000

word: 111011000100

combo: 000000110001

word: 010111001100

combo: 000000110011

word: 111011001000

combo: 000000110010

word: 010111011000

combo: 000000110110

word: 111011011100

combo: 000000110111

temp: 000000110111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 010111010100

combo: 000000110101

word: 111011010000

combo: 000000110100

word: 010111110000

combo: 000000111100

word: 111011110100

combo: 000000111101

temp: 000000111101

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 010111111100

combo: 000000111111

word: 111011111000

combo: 000000111110

temp: 000000111110

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 010111101000

combo: 000000111010

word: 111011101100

combo: 000000111011

temp: 000000111011

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 010111100100

combo: 000000111001

word: 111011100000

combo: 000000111000

word: 010110100000

combo: 000000101000

word: 111010100100

combo: 000000101001

word: 010110101100

combo: 000000101011

word: 111010101000

combo: 000000101010

word: 010110111000

combo: 000000101110

word: 111010111100

combo: 000000101111

temp: 000000101111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 010110110100

combo: 000000101101

word: 111010110000

combo: 000000101100

word: 010110010000

combo: 000000100100

word: 111010010100

combo: 000000100101

word: 010110011100

combo: 000000100111

word: 111010011000

combo: 000000100110

word: 010110001000

combo: 000000100010

word: 111010001100

combo: 000000100011

word: 010110000100

combo: 000000100001

word: 111010000000

combo: 000000100000

temp: 000000100000

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

passed if statements
temp basis:
110001111101
110100000010
rs list:
1 0 1 1 1 1 1 0 0 0 1 1 
0 1 0 0 0 0 0 0 1 0 1 1 
B_aug:
[1 0 1 1 1 1 1 1 0 1 0 0]
[0 1 0 0 0 0 0 1 1 1 0 0]
[0 0 0 0 0 0 0 1 0 1 1 1]
m:
[1 0 1 1 1 1 1 0 0 0 1 1]
[0 1 0 0 0 0 0 0 1 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,12), ( 8,10), (6,7), (5,6), (4,5), (3,4), (2,9), ( 2,11)( 9,12), (1,3) ] )
Right transversal of automorphism group of B_aug:
[0, 7, 2, 3, 4, 5, 6, 1, 9, 8, 10, 11]
[0, 7, 2, 3, 4, 5, 6, 10, 9, 11, 1, 8]
orbits:
111010000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 1 0 1 1 1]
[0 1 0 0 0 0 0 1 1 1 0 0]
[0 0 1 1 0 0 0 0 0 0 1 1]
limit on degree (length): 13
ortho basis:
0111000001000
1011000010000
1011000100000
1011001000000
0010010000000
0100100000000

B_can_lab before row reduction:
0111101101100
0000011100001
0000000011110

B_can_lab after row reduction:
0000011100001
0111101110010
0111101101100

word generated as sum over rows of ortho_basis starting at 6: 0000000000000
gate: 0000000000111
k_gate: 0000000111111
nonzero_gate: 1000000000000
radix_gate: 0000000011111

Starting main loop:
word: 0000000000000

combo: 0000000000000

word: 0111000001000

combo: 0000000000001

word: 1100000011000

combo: 0000000000011

temp: 0000000000011

orbit_checks[temp>>log2radix]= 0000000000000

passed if statements
temp basis:
1110011100101
0110111110001
1100000011000
rs list:
1 0 1 0 0 1 1 1 0 0 1 1 1 
1 0 0 0 1 1 1 1 1 0 1 1 0 
0 0 0 1 1 0 0 0 0 0 0 1 1 
B_aug:
[1 0 0 0 1 1 1 1 1 0 1 1 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0]
[0 0 1 1 0 0 0 0 1 0 0 1 0]
[0 0 0 1 1 0 0 0 0 0 0 1 1]
m:
[1 0 1 0 0 1 1 1 0 0 1 1 1]
[1 0 0 0 1 1 1 1 1 0 1 1 0]
[0 0 0 1 1 0 0 0 0 0 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 4, 5)(12,13), ( 4,12)( 5,13), ( 3, 4)( 9,12), ( 8,11), ( 2,10), (6,7), (1,6,7) ] )
Right transversal of automorphism group of B_aug:
[0, 7, 2, 3, 4, 5, 6, 1, 8, 10, 9, 11, 12]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
orbits:
1100000011000
1000100011000
1011000010000
1100000101000
1010111111000
1001010010000
1000100101000
1110011111000
1011000100000
1101111110000
1100001001000
1001010100000
1111101110000
1000101001000
1011001000000
1001011000000
word: 1011000010000

combo: 0000000000010

temp: 0000000000010

orbit_checks[temp>>log2radix]= 10000001000101000000001100111100

word: 0000000110000

combo: 0000000000110

word: 0111000111000

combo: 0000000000111

word: 1100000101000

combo: 0000000000101

temp: 0000000000101

orbit_checks[temp>>log2radix]= 10000001000101000000001100111100

word: 1011000100000

combo: 0000000000100

temp: 0000000000100

orbit_checks[temp>>log2radix]= 10000001000101000000001100111100

word: 0000001100000

combo: 0000000001100

word: 0111001101000

combo: 0000000001101

word: 1100001111000

combo: 0000000001111

word: 1011001110000

combo: 0000000001110

word: 0000001010000

combo: 0000000001010

word: 0111001011000

combo: 0000000001011

word: 1100001001000

combo: 0000000001001

temp: 0000000001001

orbit_checks[temp>>log2radix]= 10000001000101000000001100111100

word: 1011001000000

combo: 0000000001000

temp: 0000000001000

orbit_checks[temp>>log2radix]= 10000001000101000000001100111100

word: 1001011000000

combo: 0000000011000

temp: 0000000011000

orbit_checks[temp>>log2radix]= 10000001000101000000001100111100

word: 1110011001000

combo: 0000000011001

word: 0101011011000

combo: 0000000011011

word: 0010011010000

combo: 0000000011010

word: 1001011110000

combo: 0000000011110

word: 1110011111000

combo: 0000000011111

temp: 0000000011111

orbit_checks[temp>>log2radix]= 10000001000101000000001100111100

word: 0101011101000

combo: 0000000011101

word: 0010011100000

combo: 0000000011100

word: 1001010100000

combo: 0000000010100

temp: 0000000010100

orbit_checks[temp>>log2radix]= 10000001000101000000001100111100

word: 1110010101000

combo: 0000000010101

word: 0101010111000

combo: 0000000010111

word: 0010010110000

combo: 0000000010110

word: 1001010010000

combo: 0000000010010

temp: 0000000010010

orbit_checks[temp>>log2radix]= 10000001000101000000001100111100

word: 1110010011000

combo: 0000000010011

word: 0101010001000

combo: 0000000010001

word: 0010010000000

combo: 0000000010000

word: 0110110000000

combo: 0000000110000

word: 0001110001000

combo: 0000000110001

word: 1010110011000

combo: 0000000110011

word: 1101110010000

combo: 0000000110010

word: 0110110110000

combo: 0000000110110

word: 0001110111000

combo: 0000000110111

word: 1010110101000

combo: 0000000110101

word: 1101110100000

combo: 0000000110100

word: 0110111100000

combo: 0000000111100

word: 0001111101000

combo: 0000000111101

word: 1010111111000

combo: 0000000111111

temp: 0000000111111

orbit_checks[temp>>log2radix]= 11000000000000000100001000101000

word: 1101111110000

combo: 0000000111110

temp: 0000000111110

orbit_checks[temp>>log2radix]= 11000000000000000100001000101000

word: 0110111010000

combo: 0000000111010

word: 0001111011000

combo: 0000000111011

word: 1010111001000

combo: 0000000111001

word: 1101111000000

combo: 0000000111000

word: 1111101000000

combo: 0000000101000

word: 1000101001000

combo: 0000000101001

temp: 0000000101001

orbit_checks[temp>>log2radix]= 11000000000000000100001000101000

word: 0011101011000

combo: 0000000101011

word: 0100101010000

combo: 0000000101010

word: 1111101110000

combo: 0000000101110

temp: 0000000101110

orbit_checks[temp>>log2radix]= 11000000000000000100001000101000

word: 1000101111000

combo: 0000000101111

word: 0011101101000

combo: 0000000101101

word: 0100101100000

combo: 0000000101100

word: 1111100100000

combo: 0000000100100

word: 1000100101000

combo: 0000000100101

temp: 0000000100101

orbit_checks[temp>>log2radix]= 11000000000000000100001000101000

word: 0011100111000

combo: 0000000100111

word: 0100100110000

combo: 0000000100110

word: 1111100010000

combo: 0000000100010

word: 1000100011000

combo: 0000000100011

temp: 0000000100011

orbit_checks[temp>>log2radix]= 11000000000000000100001000101000

word: 0011100001000

combo: 0000000100001

word: 0100100000000

combo: 0000000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 1 0 1 1 1]
[0 1 0 0 0 0 0 1 1 1 0 0]
[0 0 1 1 0 0 0 0 0 0 1 1]
limit on degree (length): 14
ortho basis:
00111000001000
10011000010000
10011000100000
10011001000000
00010010000000
00100100000000
11000000000000

B_can_lab before row reduction:
00111101101100
00000011100001
00000000011110

B_can_lab after row reduction:
00000011100001
00111101110010
00111101101100

word generated as sum over rows of ortho_basis starting at 6: 11000000000000
gate: 00000000000111
k_gate: 00000000111111
nonzero_gate: 11000000000000
radix_gate: 00000000011111

Starting main loop:
word: 11000000000000

combo: 00000000000000

word: 11111000001000

combo: 00000000000001

word: 01100000011000

combo: 00000000000011

word: 01011000010000

combo: 00000000000010

word: 11000000110000

combo: 00000000000110

temp: 00000000000110

orbit_checks[temp>>log2radix]= 00000000000000

passed if statements
temp basis:
00011010000010
00100100001100
00110111110001
rs list:
0 1 0 0 0 0 0 1 0 1 1 0 0 0 
0 0 1 1 0 0 0 0 1 0 0 1 0 0 
1 0 0 0 1 1 1 1 1 0 1 1 0 0 
B_aug:
[1 0 0 0 1 1 1 1 1 0 1 1 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0]
[0 0 1 1 0 0 0 0 1 0 0 1 0 0]
[0 0 0 0 1 1 0 0 0 0 0 0 1 1]
m:
[0 1 0 0 0 0 0 1 0 1 1 0 0 0]
[0 0 1 1 0 0 0 0 1 0 0 1 0 0]
[1 0 0 0 1 1 1 1 1 0 1 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,12), ( 3, 4)( 9,12), ( 3,12)( 4, 9), ( 3, 4)( 9,12)(13,14), ( 3, 4)( 5, 6)( 9,12)(13,14), ( 3, 4)( 8,11)( 9,12)(13,14), ( 2, 3,10, 4)( 8, 9,11,12)(13,14), ( 1, 7)( 3, 4)( 9,12)(13,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 12, 13, 6, 7, 8, 9, 10, 11, 4, 5]
[0, 1, 4, 5, 2, 3, 6, 7, 12, 9, 10, 13, 8, 11]
[0, 1, 4, 5, 8, 11, 6, 7, 12, 9, 10, 13, 2, 3]
[0, 2, 4, 5, 1, 9, 6, 8, 12, 3, 11, 13, 7, 10]
[0, 2, 4, 5, 7, 10, 6, 8, 12, 3, 11, 13, 1, 9]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
orbits:
11000000110000
11000001010000
11110111010000
11000001100000
11110110110000
11110111100000
word: 11111000111000

combo: 00000000000111

temp: 00000000000111

orbit_checks[temp>>log2radix]= 01010001000000

passed if statements
temp basis:
00011010000010
11011100110100
11001111001001
rs list:
0 1 0 0 0 0 0 1 0 1 1 0 0 0 
0 0 1 0 1 1 0 0 1 1 1 0 1 1 
1 0 0 1 0 0 1 1 1 1 0 0 1 1 
B_aug:
[1 0 0 0 1 1 1 1 1 0 1 1 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0]
[0 0 1 1 0 0 0 0 1 0 0 1 0 0]
[0 0 0 1 1 1 0 0 0 1 1 1 1 1]
m:
[0 1 0 0 0 0 0 1 0 1 1 0 0 0]
[0 0 1 0 1 1 0 0 1 1 1 0 1 1]
[1 0 0 1 0 0 1 1 1 1 0 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (13,14), (5,6), ( 3, 9)( 5,13)( 6,14)(10,11), ( 2,11)( 8,10), ( 1,13)( 4, 9)( 7,14)( 8,10) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 11, 12, 13, 6, 7, 8, 10, 9, 3, 4, 5]
[0, 1, 3, 2, 4, 5, 6, 7, 11, 9, 10, 8, 12, 13]
[0, 2, 1, 9, 4, 5, 6, 8, 7, 3, 11, 10, 12, 13]
[0, 1, 3, 8, 12, 13, 6, 7, 11, 10, 9, 2, 4, 5]
[0, 2, 1, 10, 12, 13, 6, 8, 7, 11, 3, 9, 4, 5]
[0, 2, 9, 1, 4, 5, 6, 8, 10, 3, 11, 7, 12, 13]
[0, 2, 9, 7, 12, 13, 6, 8, 10, 11, 3, 1, 4, 5]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
orbits:
11111000111000
11011100111000
11101010111000
11111001011000
11001111011000
11001110111000
11011101011000
11101011011000
11111001101000
11001111101000
11011101101000
11101011101000
word: 01100000101000

combo: 00000000000101

word: 01011000100000

combo: 00000000000100

word: 11000001100000

combo: 00000000001100

temp: 00000000001100

orbit_checks[temp>>log2radix]= 101000100000000011110011000000

word: 11111001101000

combo: 00000000001101

temp: 00000000001101

orbit_checks[temp>>log2radix]= 101000100000000011110011000000

word: 01100001111000

combo: 00000000001111

word: 01011001110000

combo: 00000000001110

word: 11000001010000

combo: 00000000001010

temp: 00000000001010

orbit_checks[temp>>log2radix]= 101000100000000011110011000000

word: 11111001011000

combo: 00000000001011

temp: 00000000001011

orbit_checks[temp>>log2radix]= 101000100000000011110011000000

word: 01100001001000

combo: 00000000001001

word: 01011001000000

combo: 00000000001000

word: 01001011000000

combo: 00000000011000

word: 01110011001000

combo: 00000000011001

word: 11101011011000

combo: 00000000011011

temp: 00000000011011

orbit_checks[temp>>log2radix]= 101000100000000011110011000000

word: 11010011010000

combo: 00000000011010

word: 01001011110000

combo: 00000000011110

word: 01110011111000

combo: 00000000011111

word: 11101011101000

combo: 00000000011101

temp: 00000000011101

orbit_checks[temp>>log2radix]= 101000100000000011110011000000

word: 11010011100000

combo: 00000000011100

word: 01001010100000

combo: 00000000010100

word: 01110010101000

combo: 00000000010101

word: 11101010111000

combo: 00000000010111

temp: 00000000010111

orbit_checks[temp>>log2radix]= 101000100000000011110011000000

word: 11010010110000

combo: 00000000010110

word: 01001010010000

combo: 00000000010010

word: 01110010011000

combo: 00000000010011

word: 11101010001000

combo: 00000000010001

word: 11010010000000

combo: 00000000010000

temp: 00000000010000

orbit_checks[temp>>log2radix]= 101000100000000011110011000000

passed if statements
temp basis:
00101101110011
00110111110001
11100101110001
rs list:
1 1 0 0 1 1 1 0 1 1 0 1 0 0 
1 0 0 0 1 1 1 1 1 0 1 1 0 0 
1 0 0 0 1 1 1 0 1 0 0 1 1 1 
B_aug:
[1 0 0 0 1 1 1 1 1 0 1 1 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0]
[0 0 1 1 0 0 0 0 1 0 0 1 0 0]
[0 0 0 0 0 0 0 1 0 0 1 0 1 1]
m:
[1 1 0 0 1 1 1 0 1 1 0 1 0 0]
[1 0 0 0 1 1 1 1 1 0 1 1 0 0]
[1 0 0 0 1 1 1 0 1 0 0 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (13,14), ( 8,11)(13,14), ( 8,13,11,14), ( 2, 8)(10,11)(13,14), ( 9,12)(13,14), ( 3, 4)( 9,12)(13,14), ( 5, 6)( 9,12)(13,14), ( 5, 7)( 9,12)(13,14), ( 1, 5, 7)( 9,12)(13,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 8, 11, 4, 5, 6, 7, 2, 9, 10, 3, 12, 13]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
orbits:
11010010000000
11100100000000
word: 11110110000000

combo: 00000000110000

word: 11001110001000

combo: 00000000110001

word: 01010110011000

combo: 00000000110011

word: 01101110010000

combo: 00000000110010

word: 11110110110000

combo: 00000000110110

temp: 00000000110110

orbit_checks[temp>>log2radix]= 111100110000000010100010000001

word: 11001110111000

combo: 00000000110111

temp: 00000000110111

orbit_checks[temp>>log2radix]= 111100110000000010100010000001

word: 01010110101000

combo: 00000000110101

word: 01101110100000

combo: 00000000110100

word: 11110111100000

combo: 00000000111100

temp: 00000000111100

orbit_checks[temp>>log2radix]= 111100110000000010100010000001

word: 11001111101000

combo: 00000000111101

temp: 00000000111101

orbit_checks[temp>>log2radix]= 111100110000000010100010000001

word: 01010111111000

combo: 00000000111111

word: 01101111110000

combo: 00000000111110

word: 11110111010000

combo: 00000000111010

temp: 00000000111010

orbit_checks[temp>>log2radix]= 111100110000000010100010000001

word: 11001111011000

combo: 00000000111011

temp: 00000000111011

orbit_checks[temp>>log2radix]= 111100110000000010100010000001

word: 01010111001000

combo: 00000000111001

word: 01101111000000

combo: 00000000111000

word: 01111101000000

combo: 00000000101000

word: 01000101001000

combo: 00000000101001

word: 11011101011000

combo: 00000000101011

temp: 00000000101011

orbit_checks[temp>>log2radix]= 111100110000000010100010000001

word: 11100101010000

combo: 00000000101010

word: 01111101110000

combo: 00000000101110

word: 01000101111000

combo: 00000000101111

word: 11011101101000

combo: 00000000101101

temp: 00000000101101

orbit_checks[temp>>log2radix]= 111100110000000010100010000001

word: 11100101100000

combo: 00000000101100

word: 01111100100000

combo: 00000000100100

word: 01000100101000

combo: 00000000100101

word: 11011100111000

combo: 00000000100111

temp: 00000000100111

orbit_checks[temp>>log2radix]= 111100110000000010100010000001

word: 11100100110000

combo: 00000000100110

word: 01111100010000

combo: 00000000100010

word: 01000100011000

combo: 00000000100011

word: 11011100001000

combo: 00000000100001

word: 11100100000000

combo: 00000000100000

temp: 00000000100000

orbit_checks[temp>>log2radix]= 111100110000000010100010000001

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 1 1 1 0 1 1 1 1]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0]
[0 0 1 0 1 0 0 0 1 0 0 1 0 0]
[0 0 0 1 0 1 0 0 0 0 0 0 1 1]
limit on degree (length): 15
ortho basis:
001110000010000
010110000100000
100110001000000
000100010000000
001000100000000
010001000000000

B_can_lab before row reduction:
011011011011000
000111000000001
000000111000010
000000000111100

B_can_lab after row reduction:
000111000000001
000000111000010
011011011100100
011011011011000
000000000111000

word generated as sum over rows of ortho_basis starting at 6: 000000000000000
gate: 000000000001111
k_gate: 000000000111111
nonzero_gate: 100000000000000
radix_gate: 000000000011111

Starting main loop:
word: 000000000000000

combo: 000000000000000

word: 001110000010000

combo: 000000000000001

word: 011000000110000

combo: 000000000000011

word: 010110000100000

combo: 000000000000010

word: 110000001100000

combo: 000000000000110

temp: 000000000000110

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
000110010000010
010101011010101
011101111000001
100001001001000
rs list:
0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 
1 0 1 0 1 0 1 1 0 1 0 1 0 1 0 
1 0 0 0 0 0 1 1 1 1 0 1 1 1 0 
0 0 0 1 0 0 1 0 0 1 0 0 0 0 1 
B_aug:
[1 0 0 0 0 0 1 1 1 1 0 1 1 1 0]
[0 1 0 0 0 0 0 1 0 0 1 1 0 0 0]
[0 0 1 0 1 0 0 0 1 0 0 0 1 0 0]
[0 0 0 1 0 1 0 0 0 1 0 0 0 1 0]
[0 0 0 0 0 1 1 0 0 0 0 0 0 1 1]
m:
[0 1 0 0 0 0 0 1 0 0 1 1 0 0 0]
[1 0 1 0 1 0 1 1 0 1 0 1 0 1 0]
[1 0 0 0 0 0 1 1 1 1 0 1 1 1 0]
[0 0 0 1 0 0 1 0 0 1 0 0 0 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,13), ( 8,12), (3,5), ( 3, 9)( 5,13), ( 2, 3)( 5,11)( 8, 9)(12,13), ( 4,15)( 7,10), ( 4,10)( 7,15) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 14, 13]
[0, 1, 2, 3, 4, 13, 14, 7, 8, 9, 10, 11, 12, 5, 6]
[0, 1, 2, 5, 4, 3, 6, 7, 8, 13, 10, 11, 12, 9, 14]
[0, 1, 2, 3, 4, 14, 13, 7, 8, 9, 10, 11, 12, 6, 5]
orbits:
110000001100000
100001001100000
101000001010000
101101111100000
100000101010000
111100111100000
100110001000000
110101111010000
100010011000000
111101011010000
111011111000000
111111101000000
word: 111110001110000

combo: 000000000000111

temp: 000000000000111

orbit_checks[temp>>log2radix]= 1000000001000000001000001110000

passed if statements
temp basis:
000110010000010
001000100010100
101111001011000
100011110110001
rs list:
0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 
0 0 1 0 1 0 0 0 1 0 0 0 1 0 0 
0 0 0 1 1 0 1 0 0 1 1 1 1 0 1 
1 0 0 0 1 1 0 1 1 1 1 0 0 0 1 
B_aug:
[1 0 0 0 0 0 1 1 1 1 0 1 1 1 0]
[0 1 0 0 0 0 0 1 0 0 1 1 0 0 0]
[0 0 1 0 1 0 0 0 1 0 0 0 1 0 0]
[0 0 0 1 0 1 0 0 0 1 0 0 0 1 0]
[0 0 0 0 1 1 1 0 0 0 1 1 1 1 1]
m:
[0 1 0 0 0 0 0 1 0 0 1 1 0 0 0]
[0 0 1 0 1 0 0 0 1 0 0 0 1 0 0]
[0 0 0 1 1 0 1 0 0 1 1 1 1 0 1]
[1 0 0 0 1 1 0 1 1 1 1 0 0 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 2, 3)( 5,11)( 8, 9)(12,13), ( 4,10)( 5,13)( 7,15)(11,12), ( 3,13)( 5, 9), ( 1,15)( 5, 9)( 6,10)( 8,11) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 12, 13, 14, 7, 8, 9, 11, 10, 4, 5, 6]
[0, 1, 2, 5, 4, 3, 6, 7, 8, 13, 10, 11, 12, 9, 14]
[0, 1, 3, 2, 5, 4, 6, 7, 9, 8, 10, 11, 13, 12, 14]
[0, 1, 2, 5, 12, 9, 14, 7, 8, 13, 11, 10, 4, 3, 6]
[0, 1, 3, 2, 13, 12, 14, 7, 9, 8, 11, 10, 5, 4, 6]
[0, 1, 3, 4, 5, 2, 6, 7, 9, 12, 10, 11, 13, 8, 14]
[0, 2, 3, 1, 5, 10, 6, 8, 9, 7, 4, 12, 13, 11, 14]
[0, 1, 3, 4, 13, 8, 14, 7, 9, 12, 11, 10, 5, 2, 6]
[0, 2, 3, 1, 13, 11, 14, 8, 9, 7, 12, 4, 5, 10, 6]
[0, 2, 3, 10, 5, 1, 6, 8, 9, 11, 4, 12, 13, 7, 14]
[0, 2, 3, 10, 13, 7, 14, 8, 9, 11, 12, 4, 5, 1, 6]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
111110001110000
101111001110000
110110101110000
111010011110000
100011111110000
100111101110000
101011011110000
110010111110000
word: 101000001010000

combo: 000000000000101

temp: 000000000000101

orbit_checks[temp>>log2radix]= 11000000101000001001000011110000

word: 100110001000000

combo: 000000000000100

temp: 000000000000100

orbit_checks[temp>>log2radix]= 11000000101000001001000011110000

word: 100010011000000

combo: 000000000001100

temp: 000000000001100

orbit_checks[temp>>log2radix]= 11000000101000001001000011110000

word: 101100011010000

combo: 000000000001101

word: 111010011110000

combo: 000000000001111

temp: 000000000001111

orbit_checks[temp>>log2radix]= 11000000101000001001000011110000

word: 110100011100000

combo: 000000000001110

word: 010010010100000

combo: 000000000001010

word: 011100010110000

combo: 000000000001011

word: 001010010010000

combo: 000000000001001

word: 000100010000000

combo: 000000000001000

word: 001100110000000

combo: 000000000011000

word: 000010110010000

combo: 000000000011001

word: 010100110110000

combo: 000000000011011

word: 011010110100000

combo: 000000000011010

word: 111100111100000

combo: 000000000011110

temp: 000000000011110

orbit_checks[temp>>log2radix]= 11000000101000001001000011110000

word: 110010111110000

combo: 000000000011111

temp: 000000000011111

orbit_checks[temp>>log2radix]= 11000000101000001001000011110000

word: 100100111010000

combo: 000000000011101

word: 101010111000000

combo: 000000000011100

word: 101110101000000

combo: 000000000010100

word: 100000101010000

combo: 000000000010101

temp: 000000000010101

orbit_checks[temp>>log2radix]= 11000000101000001001000011110000

word: 110110101110000

combo: 000000000010111

temp: 000000000010111

orbit_checks[temp>>log2radix]= 11000000101000001001000011110000

word: 111000101100000

combo: 000000000010110

word: 011110100100000

combo: 000000000010010

word: 010000100110000

combo: 000000000010011

word: 000110100010000

combo: 000000000010001

word: 001000100000000

combo: 000000000010000

word: 011001100000000

combo: 000000000110000

word: 010111100010000

combo: 000000000110001

word: 000001100110000

combo: 000000000110011

word: 001111100100000

combo: 000000000110010

word: 101001101100000

combo: 000000000110110

word: 100111101110000

combo: 000000000110111

temp: 000000000110111

orbit_checks[temp>>log2radix]= 11110000100100001010000011000000

word: 110001101010000

combo: 000000000110101

word: 111111101000000

combo: 000000000110100

temp: 000000000110100

orbit_checks[temp>>log2radix]= 11110000100100001010000011000000

word: 111011111000000

combo: 000000000111100

temp: 000000000111100

orbit_checks[temp>>log2radix]= 11110000100100001010000011000000

word: 110101111010000

combo: 000000000111101

temp: 000000000111101

orbit_checks[temp>>log2radix]= 11110000100100001010000011000000

word: 100011111110000

combo: 000000000111111

temp: 000000000111111

orbit_checks[temp>>log2radix]= 11110000100100001010000011000000

word: 101101111100000

combo: 000000000111110

temp: 000000000111110

orbit_checks[temp>>log2radix]= 11110000100100001010000011000000

word: 001011110100000

combo: 000000000111010

word: 000101110110000

combo: 000000000111011

word: 010011110010000

combo: 000000000111001

word: 011101110000000

combo: 000000000111000

word: 010101010000000

combo: 000000000101000

word: 011011010010000

combo: 000000000101001

word: 001101010110000

combo: 000000000101011

word: 000011010100000

combo: 000000000101010

word: 100101011100000

combo: 000000000101110

word: 101011011110000

combo: 000000000101111

temp: 000000000101111

orbit_checks[temp>>log2radix]= 11110000100100001010000011000000

word: 111101011010000

combo: 000000000101101

temp: 000000000101101

orbit_checks[temp>>log2radix]= 11110000100100001010000011000000

word: 110011011000000

combo: 000000000101100

word: 110111001000000

combo: 000000000100100

word: 111001001010000

combo: 000000000100101

word: 101111001110000

combo: 000000000100111

temp: 000000000100111

orbit_checks[temp>>log2radix]= 11110000100100001010000011000000

word: 100001001100000

combo: 000000000100110

temp: 000000000100110

orbit_checks[temp>>log2radix]= 11110000100100001010000011000000

word: 000111000100000

combo: 000000000100010

word: 001001000110000

combo: 000000000100011

word: 011111000010000

combo: 000000000100001

word: 010001000000000

combo: 000000000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 1 1 1 1 0 1 1 1 0]
[0 1 0 0 0 0 0 1 0 0 1 1 0 0 0]
[0 0 1 0 0 1 0 0 1 0 0 0 1 0 0]
[0 0 0 1 0 0 1 0 0 1 0 0 0 0 1]
[0 0 0 0 1 0 1 0 0 0 0 0 0 1 1]
limit on degree (length): 16
ortho basis:
0001110000100000
0100110001000000
0000100010000000
0001000100000000
1110001000000000

B_can_lab before row reduction:
0110101001101100
0000000011100001
0000000000011110
0001101100000000
0011110000000000

B_can_lab after row reduction:
0000000011100001
0110101001110010
0110101001101100
0001101100000000
0011110000000000

word generated as sum over rows of ortho_basis starting at 5: 0000000000000000
gate: 0000000000011111
k_gate: 0000000000011111
nonzero_gate: 1000000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 0000000000000000

combo: 0000000000000000

word: 0001110000100000

combo: 0000000000000001

word: 0101000001100000

combo: 0000000000000011

word: 0100110001000000

combo: 0000000000000010

word: 0100010011000000

combo: 0000000000000110

word: 0101100011100000

combo: 0000000000000111

word: 0001010010100000

combo: 0000000000000101

word: 0000100010000000

combo: 0000000000000100

word: 0001100110000000

combo: 0000000000001100

word: 0000010110100000

combo: 0000000000001101

word: 0100100111100000

combo: 0000000000001111

word: 0101010111000000

combo: 0000000000001110

word: 0101110101000000

combo: 0000000000001010

word: 0100000101100000

combo: 0000000000001011

word: 0000110100100000

combo: 0000000000001001

word: 0001000100000000

combo: 0000000000001000

word: 1111001100000000

combo: 0000000000011000

word: 1110111100100000

combo: 0000000000011001

temp: 0000000000011001

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1010110101101000
0011101111000001
1011010010110001
1101010011100001
0000110010000010
rs list:
0 0 0 1 0 1 1 0 1 0 1 1 0 1 0 1 
1 0 0 0 0 0 1 1 1 1 0 1 1 1 0 0 
1 0 0 0 1 1 0 1 0 0 1 0 1 1 0 1 
1 0 0 0 0 1 1 1 0 0 1 0 1 0 1 1 
0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 0 
B_aug:
[1 0 0 0 0 0 1 1 1 1 0 1 1 1 0 0]
[0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 0]
[0 0 1 0 0 1 0 0 1 0 0 0 1 0 0 0]
[0 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0]
[0 0 0 0 1 0 1 0 0 0 0 0 0 1 1 0]
[0 0 0 0 0 1 0 0 1 1 1 1 0 1 1 1]
m:
[0 0 0 1 0 1 1 0 1 0 1 1 0 1 0 1]
[1 0 0 0 0 0 1 1 1 1 0 1 1 1 0 0]
[1 0 0 0 1 1 0 1 0 0 1 0 1 1 0 1]
[1 0 0 0 0 1 1 1 0 0 1 0 1 0 1 1]
[0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 5, 7)(14,15), ( 5,14)( 7,15), ( 4, 5)(10,14), ( 1,16)( 6,13)( 7,15)( 8,11), ( 2,11)( 8,12) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 5, 3, 4, 2, 6, 7, 12, 9, 10, 11, 8, 13, 14, 15]
[0, 1, 8, 3, 4, 12, 6, 7, 2, 9, 10, 11, 5, 13, 14, 15]
[0, 2, 1, 3, 4, 10, 6, 12, 11, 9, 5, 8, 7, 13, 14, 15]
[0, 1, 12, 3, 4, 8, 6, 7, 5, 9, 10, 11, 2, 13, 14, 15]
[0, 2, 10, 3, 4, 1, 6, 12, 7, 9, 5, 8, 11, 13, 14, 15]
[0, 2, 11, 3, 4, 7, 6, 12, 1, 9, 5, 8, 10, 13, 14, 15]
[0, 2, 7, 3, 4, 11, 6, 12, 10, 9, 5, 8, 1, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1110111100100000
1111111000100000
1110011110100000
1111011010100000
word: 1010001101100000

combo: 0000000000011011

word: 1011111101000000

combo: 0000000000011010

temp: 0000000000011010

orbit_checks[temp>>log2radix]= 100010001000100000000000000000

passed if statements
temp basis:
1010111001100100
1011111101000000
1000010010000001
0100001001001000
0110000001010000
rs list:
0 0 1 0 0 1 1 0 0 1 1 1 0 1 0 1 
0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 
1 0 0 0 0 0 0 1 0 0 1 0 0 0 0 1 
0 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0 
0 0 0 0 1 0 1 0 0 0 0 0 0 1 1 0 
B_aug:
[1 0 0 0 0 0 1 1 1 1 0 1 1 1 0 0]
[0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 0]
[0 0 1 0 0 1 0 0 1 0 0 0 1 0 0 0]
[0 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0]
[0 0 0 0 1 0 1 0 0 0 0 0 0 1 1 0]
[0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1]
m:
[0 0 1 0 0 1 1 0 0 1 1 1 0 1 0 1]
[0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1]
[1 0 0 0 0 0 0 1 0 0 1 0 0 0 0 1]
[0 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0]
[0 0 0 0 1 0 1 0 0 0 0 0 0 1 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,13), ( 5, 7)(14,15), ( 5,14)( 7,15), ( 4, 5)(10,14), (3,6), ( 3, 9)( 6,13), ( 1, 8)(11,16), ( 1,16)( 8,11) ] )
Right transversal of automorphism group of B_aug:
[0, 7, 2, 3, 4, 5, 6, 1, 8, 9, 11, 10, 12, 13, 14, 15]
[0, 10, 2, 3, 4, 5, 6, 11, 8, 9, 1, 7, 12, 13, 14, 15]
[1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 12, 13, 14, 11]
[3, 4, 2, 0, 1, 5, 10, 14, 8, 15, 6, 13, 12, 11, 7, 9]
[0, 11, 2, 3, 4, 5, 6, 10, 8, 9, 7, 1, 12, 13, 14, 15]
[3, 14, 2, 0, 1, 5, 10, 4, 8, 15, 13, 6, 12, 11, 7, 9]
[3, 6, 2, 0, 1, 5, 10, 13, 8, 15, 4, 14, 12, 11, 7, 9]
[4, 3, 2, 0, 1, 5, 10, 14, 8, 15, 6, 9, 12, 11, 7, 13]
[3, 13, 2, 0, 1, 5, 10, 6, 8, 15, 14, 4, 12, 11, 7, 9]
[1, 15, 2, 3, 4, 5, 6, 10, 8, 9, 7, 0, 12, 13, 14, 11]
orbits:
1011111101000000
1011011111000000
1011101011100000
1010101111100000
word: 1011011111000000

combo: 0000000000011110

temp: 0000000000011110

orbit_checks[temp>>log2radix]= 11100110101000100000000000000000

word: 1010101111100000

combo: 0000000000011111

temp: 0000000000011111

orbit_checks[temp>>log2radix]= 11100110101000100000000000000000

word: 1110011110100000

combo: 0000000000011101

temp: 0000000000011101

orbit_checks[temp>>log2radix]= 11100110101000100000000000000000

word: 1111101110000000

combo: 0000000000011100

temp: 0000000000011100

orbit_checks[temp>>log2radix]= 11100110101000100000000000000000

passed if statements
temp basis:
0000110010000010
1110101010100100
1111101110000000
1100000001000001
0100001001001000
rs list:
0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 0 
0 0 1 0 0 1 0 1 0 1 0 1 0 1 1 1 
0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 
0 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0 
B_aug:
[1 0 0 0 0 0 1 1 1 1 0 1 1 1 0 0]
[0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 0]
[0 0 1 0 0 1 0 0 1 0 0 0 1 0 0 0]
[0 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0]
[0 0 0 0 1 0 1 0 0 0 0 0 0 1 1 0]
[0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1]
m:
[0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 0]
[0 0 1 0 0 1 0 1 0 1 0 1 0 1 1 1]
[0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1]
[1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1]
[0 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,13), ( 8,12), (3,6), ( 3, 9)( 6,13), ( 2, 3)( 6,11)( 8, 9)(12,13), ( 1, 4)(10,16), ( 4,15)( 7,10), ( 4,10)( 7,15) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 6, 5, 4, 7, 8, 9, 10, 11, 12, 14, 13, 15]
[0, 1, 2, 3, 13, 5, 14, 7, 8, 9, 10, 11, 12, 4, 6, 15]
[0, 1, 2, 4, 3, 5, 6, 7, 8, 13, 10, 11, 12, 9, 14, 15]
[0, 1, 2, 3, 14, 5, 13, 7, 8, 9, 10, 11, 12, 6, 4, 15]
[0, 1, 2, 4, 9, 5, 14, 7, 8, 13, 10, 11, 12, 3, 6, 15]
[3, 1, 2, 4, 0, 5, 6, 7, 8, 13, 10, 11, 12, 15, 14, 9]
[3, 1, 2, 4, 15, 5, 14, 7, 8, 13, 10, 11, 12, 0, 6, 9]
orbits:
1111101110000000
word: 1110101010000000

combo: 0000000000010100

word: 1111011010100000

combo: 0000000000010101

temp: 0000000000010101

orbit_checks[temp>>log2radix]= 11110110101000100000000000000000

word: 1011101011100000

combo: 0000000000010111

temp: 0000000000010111

orbit_checks[temp>>log2radix]= 11110110101000100000000000000000

word: 1010011011000000

combo: 0000000000010110

word: 1010111001000000

combo: 0000000000010010

word: 1011001001100000

combo: 0000000000010011

word: 1111111000100000

combo: 0000000000010001

temp: 0000000000010001

orbit_checks[temp>>log2radix]= 11110110101000100000000000000000

word: 1110001000000000

combo: 0000000000010000

temp: 0000000000010000

orbit_checks[temp>>log2radix]= 11110110101000100000000000000000

passed if statements
temp basis:
0111100110001001
1011100110010001
1101100111000001
1110001000000000
0000110010000010
rs list:
1 0 0 1 0 0 0 1 1 0 0 1 1 1 1 0 
1 0 0 0 1 0 0 1 1 0 0 1 1 1 0 1 
1 0 0 0 0 0 1 1 1 0 0 1 1 0 1 1 
0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 
0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 0 
B_aug:
[1 0 0 0 0 0 1 1 1 1 0 1 1 1 0 0]
[0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 0]
[0 0 1 0 0 1 0 0 1 0 0 0 1 0 0 0]
[0 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0]
[0 0 0 0 1 0 1 0 0 0 0 0 0 1 1 0]
[0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1]
m:
[1 0 0 1 0 0 0 1 1 0 0 1 1 1 1 0]
[1 0 0 0 1 0 0 1 1 0 0 1 1 1 0 1]
[1 0 0 0 0 0 1 1 1 0 0 1 1 0 1 1]
[0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1]
[0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (10,14)(15,16), (10,15)(14,16), ( 9,13), ( 8,12), ( 5, 7)(14,15), ( 5,10)( 7,16), ( 4, 5)(15,16), (3,6), ( 2, 8)(11,12) ] )
Right transversal of automorphism group of B_aug:
[0, 2, 1, 3, 4, 10, 6, 8, 7, 9, 5, 12, 11, 13, 14, 15]
[0, 2, 7, 3, 4, 11, 6, 8, 1, 9, 5, 12, 10, 13, 14, 15]
[0, 1, 8, 3, 4, 12, 6, 7, 2, 9, 10, 11, 5, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1110001000000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 1 1 1 0 1 1 1 1]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0]
[0 0 1 0 1 0 0 0 1 0 0 1 0 0]
[0 0 0 1 0 1 0 0 0 0 0 0 1 1]
limit on degree (length): 16
ortho basis:
0001110000010000
0010110000100000
1000110001000000
0000100010000000
0001000100000000
0010001000000000
1100000000000000

B_can_lab before row reduction:
0011011011011000
0000111000000001
0000000111000010
0000000000111100

B_can_lab after row reduction:
0000111000000001
0000000111000010
0011011011100100
0011011011011000
0000000000111000

word generated as sum over rows of ortho_basis starting at 6: 1100000000000000
gate: 0000000000001111
k_gate: 0000000000111111
nonzero_gate: 1100000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1100000000000000

combo: 0000000000000000

word: 1101110000010000

combo: 0000000000000001

word: 1111000000110000

combo: 0000000000000011

word: 1110110000100000

combo: 0000000000000010

word: 0110000001100000

combo: 0000000000000110

word: 0111110001110000

combo: 0000000000000111

word: 0101000001010000

combo: 0000000000000101

word: 0100110001000000

combo: 0000000000000100

word: 0100010011000000

combo: 0000000000001100

word: 0101100011010000

combo: 0000000000001101

word: 0111010011110000

combo: 0000000000001111

word: 0110100011100000

combo: 0000000000001110

word: 1110010010100000

combo: 0000000000001010

word: 1111100010110000

combo: 0000000000001011

temp: 0000000000001011

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1111010000110010
1111100010110000
1100001101110001
0001000100010100
rs list:
0 1 0 0 1 1 0 0 0 0 1 0 1 1 1 1 
0 0 0 0 1 1 0 1 0 0 0 1 1 1 1 1 
1 0 0 0 1 1 1 0 1 1 0 0 0 0 1 1 
0 0 1 0 1 0 0 0 1 0 0 0 1 0 0 0 
B_aug:
[1 0 0 0 0 0 1 1 1 1 0 1 1 1 0 0]
[0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 0]
[0 0 1 0 1 0 0 0 1 0 0 0 1 0 0 0]
[0 0 0 1 0 1 0 0 0 1 0 0 0 1 0 0]
[0 0 0 0 1 1 0 1 0 0 0 1 1 1 1 1]
m:
[0 1 0 0 1 1 0 0 0 0 1 0 1 1 1 1]
[0 0 0 0 1 1 0 1 0 0 0 1 1 1 1 1]
[1 0 0 0 1 1 1 0 1 1 0 0 0 0 1 1]
[0 0 1 0 1 0 0 0 1 0 0 0 1 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), ( 8,12), ( 2, 8)(11,12), (1,7), ( 1,15)( 5, 9)( 6,10)( 7,16), ( 3, 5)( 9,13) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 5, 4, 3, 6, 7, 8, 13, 10, 11, 12, 9, 14, 15]
[0, 1, 2, 9, 4, 13, 6, 7, 8, 3, 10, 11, 12, 5, 14, 15]
[0, 1, 3, 2, 5, 4, 6, 7, 9, 8, 10, 11, 13, 12, 14, 15]
[0, 1, 2, 13, 4, 9, 6, 7, 8, 5, 10, 11, 12, 3, 14, 15]
[0, 1, 3, 4, 5, 2, 6, 7, 9, 12, 10, 11, 13, 8, 14, 15]
[0, 1, 3, 8, 5, 12, 6, 7, 9, 2, 10, 11, 13, 4, 14, 15]
[0, 1, 3, 12, 5, 8, 6, 7, 9, 4, 10, 11, 13, 2, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111100010110000
1101101010110000
1110100110110000
1111110100100000
1100101110110000
1101111100100000
1111010110100000
1111111000010000
1101011110100000
1110111100010000
1111011010010000
1110011110010000
word: 1101010010010000

combo: 0000000000001001

word: 1100100010000000

combo: 0000000000001000

temp: 0000000000001000

orbit_checks[temp>>log2radix]= 1100000001000000100000000000

passed if statements
temp basis:
0011011101000011
0011101111000001
1111001101000001
0001000100010100
rs list:
1 1 0 0 0 0 1 0 1 1 1 0 1 1 0 0 
1 0 0 0 0 0 1 1 1 1 0 1 1 1 0 0 
1 0 0 0 0 0 1 0 1 1 0 0 1 1 1 1 
0 0 1 0 1 0 0 0 1 0 0 0 1 0 0 0 
B_aug:
[1 0 0 0 0 0 1 1 1 1 0 1 1 1 0 0]
[0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 0]
[0 0 1 0 1 0 0 0 1 0 0 0 1 0 0 0]
[0 0 0 1 0 1 0 0 0 1 0 0 0 1 0 0]
[0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 1]
m:
[1 1 0 0 0 0 1 0 1 1 1 0 1 1 0 0]
[1 0 0 0 0 0 1 1 1 1 0 1 1 1 0 0]
[1 0 0 0 0 0 1 0 1 1 0 0 1 1 1 1]
[0 0 1 0 1 0 0 0 1 0 0 0 1 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (4,6), (10,14), ( 9,13), ( 3, 5)( 9,13), ( 3, 9, 5,13), ( 9,13)(15,16), ( 8,12)( 9,13)(15,16), ( 8,15,12,16)( 9,13), ( 2, 8)( 9,13)(11,12)(15,16), ( 1, 7)( 9,13)(15,16) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 9, 4, 13, 6, 7, 8, 3, 10, 11, 12, 5, 14, 15]
[0, 1, 3, 2, 5, 4, 6, 7, 9, 8, 10, 11, 13, 12, 14, 15]
[0, 1, 3, 8, 5, 12, 6, 7, 9, 2, 10, 11, 13, 4, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1100100010000000
1101000100000000
1110001000000000
word: 1101100110000000

combo: 0000000000011000

word: 1100010110010000

combo: 0000000000011001

word: 1110100110110000

combo: 0000000000011011

temp: 0000000000011011

orbit_checks[temp>>log2radix]= 1100000001010000100100000000

word: 1111010110100000

combo: 0000000000011010

temp: 0000000000011010

orbit_checks[temp>>log2radix]= 1100000001010000100100000000

word: 0111100111100000

combo: 0000000000011110

word: 0110010111110000

combo: 0000000000011111

word: 0100100111010000

combo: 0000000000011101

word: 0101010111000000

combo: 0000000000011100

word: 0101110101000000

combo: 0000000000010100

word: 0100000101010000

combo: 0000000000010101

word: 0110110101110000

combo: 0000000000010111

word: 0111000101100000

combo: 0000000000010110

word: 1111110100100000

combo: 0000000000010010

temp: 0000000000010010

orbit_checks[temp>>log2radix]= 1100000001010000100100000000

word: 1110000100110000

combo: 0000000000010011

word: 1100110100010000

combo: 0000000000010001

word: 1101000100000000

combo: 0000000000010000

temp: 0000000000010000

orbit_checks[temp>>log2radix]= 1100000001010000100100000000

word: 1111001100000000

combo: 0000000000110000

word: 1110111100010000

combo: 0000000000110001

temp: 0000000000110001

orbit_checks[temp>>log2radix]= 1110000001100000101000000011

word: 1100001100110000

combo: 0000000000110011

word: 1101111100100000

combo: 0000000000110010

temp: 0000000000110010

orbit_checks[temp>>log2radix]= 1110000001100000101000000011

word: 0101001101100000

combo: 0000000000110110

word: 0100111101110000

combo: 0000000000110111

word: 0110001101010000

combo: 0000000000110101

word: 0111111101000000

combo: 0000000000110100

word: 0111011111000000

combo: 0000000000111100

word: 0110101111010000

combo: 0000000000111101

word: 0100011111110000

combo: 0000000000111111

word: 0101101111100000

combo: 0000000000111110

word: 1101011110100000

combo: 0000000000111010

temp: 0000000000111010

orbit_checks[temp>>log2radix]= 1110000001100000101000000011

word: 1100101110110000

combo: 0000000000111011

temp: 0000000000111011

orbit_checks[temp>>log2radix]= 1110000001100000101000000011

word: 1110011110010000

combo: 0000000000111001

temp: 0000000000111001

orbit_checks[temp>>log2radix]= 1110000001100000101000000011

word: 1111101110000000

combo: 0000000000111000

temp: 0000000000111000

orbit_checks[temp>>log2radix]= 1110000001100000101000000011

passed if statements
temp basis:
1100000001000001
0000110010000010
0001000100010100
1101100110101000
rs list:
1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 
0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 0 
0 0 1 0 1 0 0 0 1 0 0 0 1 0 0 0 
0 0 0 1 0 1 0 1 1 0 0 1 1 0 1 1 
B_aug:
[1 0 0 0 0 0 1 1 1 1 0 1 1 1 0 0]
[0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 0]
[0 0 1 0 1 0 0 0 1 0 0 0 1 0 0 0]
[0 0 0 1 0 1 0 0 0 1 0 0 0 1 0 0]
[0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1]
m:
[1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1]
[0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 0]
[0 0 1 0 1 0 0 0 1 0 0 0 1 0 0 0]
[0 0 0 1 0 1 0 1 1 0 0 1 1 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (10,14), ( 9,13), ( 8,12), (4,6), (3,5), ( 3, 9)( 5,13), ( 2, 3)( 5,11)( 8, 9)(12,13), ( 1, 2)( 7,11)( 8,15)(12,16) ] )
Right transversal of automorphism group of B_aug:
[3, 1, 2, 0, 4, 6, 5, 7, 8, 14, 10, 11, 12, 15, 9, 13]
orbits:
1111101110000000
word: 1110101010000000

combo: 0000000000101000

word: 1111011010010000

combo: 0000000000101001

temp: 0000000000101001

orbit_checks[temp>>log2radix]= 1111000001100000101000000011

word: 1101101010110000

combo: 0000000000101011

temp: 0000000000101011

orbit_checks[temp>>log2radix]= 1111000001100000101000000011

word: 1100011010100000

combo: 0000000000101010

word: 0100101011100000

combo: 0000000000101110

word: 0101011011110000

combo: 0000000000101111

word: 0111101011010000

combo: 0000000000101101

word: 0110011011000000

combo: 0000000000101100

word: 0110111001000000

combo: 0000000000100100

word: 0111001001010000

combo: 0000000000100101

word: 0101111001110000

combo: 0000000000100111

word: 0100001001100000

combo: 0000000000100110

word: 1100111000100000

combo: 0000000000100010

word: 1101001000110000

combo: 0000000000100011

word: 1111111000010000

combo: 0000000000100001

temp: 0000000000100001

orbit_checks[temp>>log2radix]= 1111000001100000101000000011

word: 1110001000000000

combo: 0000000000100000

temp: 0000000000100000

orbit_checks[temp>>log2radix]= 1111000001100000101000000011

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 1 0 1 1 1]
[0 1 0 0 0 0 0 1 1 1 0 0]
[0 0 1 1 0 0 0 0 0 0 1 1]
limit on degree (length): 15
ortho basis:
000111000001000
100011000010000
100011000100000
100011001000000
000010010000000
000100100000000
101000000000000
110000000000000

B_can_lab before row reduction:
000111101101100
000000011100001
000000000011110

B_can_lab after row reduction:
000000011100001
000111101110010
000111101101100

word generated as sum over rows of ortho_basis starting at 6: 011000000000000
gate: 000000000000111
k_gate: 000000000111111
nonzero_gate: 111000000000000
radix_gate: 000000000011111

Starting main loop:
word: 011000000000000

combo: 000000000000000

word: 011111000001000

combo: 000000000000001

word: 111100000011000

combo: 000000000000011

word: 111011000010000

combo: 000000000000010

word: 011000000110000

combo: 000000000000110

word: 011111000111000

combo: 000000000000111

word: 111100000101000

combo: 000000000000101

word: 111011000100000

combo: 000000000000100

word: 011000001100000

combo: 000000000001100

word: 011111001101000

combo: 000000000001101

word: 111100001111000

combo: 000000000001111

temp: 000000000001111

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
111001100001011
111010110001001
111100001111000
rs list:
1 1 0 1 0 0 0 0 1 1 0 0 1 1 1 
1 0 0 1 0 0 0 1 1 0 1 0 1 1 1 
0 0 0 1 1 1 1 0 0 0 0 1 1 1 1 
B_aug:
[1 0 0 0 1 1 1 1 1 0 1 1 0 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0]
[0 0 1 1 0 0 0 0 1 0 0 1 0 0 0]
[0 0 0 1 1 1 1 0 0 0 0 1 1 1 1]
m:
[1 1 0 1 0 0 0 0 1 1 0 0 1 1 1]
[1 0 0 1 0 0 0 1 1 0 1 0 1 1 1]
[0 0 0 1 1 1 1 0 0 0 0 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (14,15), (13,14), ( 8,11), (6,7), (5,6), ( 4,12)( 5,13)( 6,14)( 7,15), ( 2, 8)(10,11) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 3, 2, 4, 5, 6, 7, 11, 9, 10, 8, 12, 13, 14]
[0, 1, 11, 2, 12, 13, 14, 7, 3, 9, 10, 8, 4, 5, 6]
[0, 1, 8, 3, 12, 13, 14, 7, 2, 9, 10, 11, 4, 5, 6]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
111100001111000
111000101111000
111011001110000
111010110011000
111001011110000
111110010011000
111101110010000
111010110101000
111111100010000
111110010101000
111101110100000
111010111001000
111111100100000
111110011001000
111101111000000
111111101000000
word: 111011001110000

combo: 000000000001110

temp: 000000000001110

orbit_checks[temp>>log2radix]= 1000010001010001100000000000000

word: 011000001010000

combo: 000000000001010

word: 011111001011000

combo: 000000000001011

word: 111100001001000

combo: 000000000001001

word: 111011001000000

combo: 000000000001000

word: 111001011000000

combo: 000000000011000

word: 111110011001000

combo: 000000000011001

temp: 000000000011001

orbit_checks[temp>>log2radix]= 1000010001010001100000000000000

word: 011101011011000

combo: 000000000011011

word: 011010011010000

combo: 000000000011010

word: 111001011110000

combo: 000000000011110

temp: 000000000011110

orbit_checks[temp>>log2radix]= 1000010001010001100000000000000

word: 111110011111000

combo: 000000000011111

word: 011101011101000

combo: 000000000011101

word: 011010011100000

combo: 000000000011100

word: 111001010100000

combo: 000000000010100

word: 111110010101000

combo: 000000000010101

temp: 000000000010101

orbit_checks[temp>>log2radix]= 1000010001010001100000000000000

word: 011101010111000

combo: 000000000010111

word: 011010010110000

combo: 000000000010110

word: 111001010010000

combo: 000000000010010

word: 111110010011000

combo: 000000000010011

temp: 000000000010011

orbit_checks[temp>>log2radix]= 1000010001010001100000000000000

word: 011101010001000

combo: 000000000010001

word: 011010010000000

combo: 000000000010000

word: 011110110000000

combo: 000000000110000

word: 011001110001000

combo: 000000000110001

word: 111010110011000

combo: 000000000110011

temp: 000000000110011

orbit_checks[temp>>log2radix]= 11001111001000000100010100

word: 111101110010000

combo: 000000000110010

temp: 000000000110010

orbit_checks[temp>>log2radix]= 11001111001000000100010100

word: 011110110110000

combo: 000000000110110

word: 011001110111000

combo: 000000000110111

word: 111010110101000

combo: 000000000110101

temp: 000000000110101

orbit_checks[temp>>log2radix]= 11001111001000000100010100

word: 111101110100000

combo: 000000000110100

temp: 000000000110100

orbit_checks[temp>>log2radix]= 11001111001000000100010100

word: 011110111100000

combo: 000000000111100

word: 011001111101000

combo: 000000000111101

word: 111010111111000

combo: 000000000111111

word: 111101111110000

combo: 000000000111110

word: 011110111010000

combo: 000000000111010

word: 011001111011000

combo: 000000000111011

word: 111010111001000

combo: 000000000111001

temp: 000000000111001

orbit_checks[temp>>log2radix]= 11001111001000000100010100

word: 111101111000000

combo: 000000000111000

temp: 000000000111000

orbit_checks[temp>>log2radix]= 11001111001000000100010100

word: 111111101000000

combo: 000000000101000

temp: 000000000101000

orbit_checks[temp>>log2radix]= 11001111001000000100010100

word: 111000101001000

combo: 000000000101001

word: 011011101011000

combo: 000000000101011

word: 011100101010000

combo: 000000000101010

word: 111111101110000

combo: 000000000101110

word: 111000101111000

combo: 000000000101111

temp: 000000000101111

orbit_checks[temp>>log2radix]= 11001111001000000100010100

word: 011011101101000

combo: 000000000101101

word: 011100101100000

combo: 000000000101100

word: 111111100100000

combo: 000000000100100

temp: 000000000100100

orbit_checks[temp>>log2radix]= 11001111001000000100010100

word: 111000100101000

combo: 000000000100101

word: 011011100111000

combo: 000000000100111

word: 011100100110000

combo: 000000000100110

word: 111111100010000

combo: 000000000100010

temp: 000000000100010

orbit_checks[temp>>log2radix]= 11001111001000000100010100

word: 111000100011000

combo: 000000000100011

word: 011011100001000

combo: 000000000100001

word: 011100100000000

combo: 000000000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 1 0 1 1 1]
[0 1 0 0 0 0 0 1 1 1 0 0]
[0 0 1 1 0 0 0 0 0 0 1 1]
limit on degree (length): 16
ortho basis:
0000111000001000
1000011000010000
1000011000100000
1000011001000000
0000010010000000
0000100100000000
1001000000000000
1010000000000000
1100000000000000

B_can_lab before row reduction:
0000111101101100
0000000011100001
0000000000011110

B_can_lab after row reduction:
0000000011100001
0000111101110010
0000111101101100

word generated as sum over rows of ortho_basis starting at 6: 1111000000000000
gate: 0000000000000111
k_gate: 0000000000111111
nonzero_gate: 1111000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1111000000000000

combo: 0000000000000000

temp: 0000000000000000

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1111000000000000
0000110111110001
0000011010000010
rs list:
0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
1 0 0 0 1 1 1 1 1 0 1 1 0 0 0 0 
0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0 
B_aug:
[1 0 0 0 1 1 1 1 1 0 1 1 0 0 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 1 1 0 0 0 0 1 0 0 1 0 0 0 0]
[0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1]
m:
[0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1]
[1 0 0 0 1 1 1 1 1 0 1 1 0 0 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (3,4), ( 9,12), ( 8,11), ( 2, 8)(10,11), (14,15), (14,16), (13,14,16), ( 5, 6)(14,16), ( 5, 7)(14,16), ( 1, 5, 7)(14,16) ] )
Right transversal of automorphism group of B_aug:
[0, 2, 1, 9, 4, 5, 6, 8, 7, 3, 11, 10, 12, 13, 14, 15]
[0, 2, 7, 10, 4, 5, 6, 8, 1, 3, 11, 9, 12, 13, 14, 15]
[0, 1, 8, 11, 4, 5, 6, 7, 2, 9, 10, 3, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111000000000000
word: 1111111000001000

combo: 0000000000000001

temp: 0000000000000001

orbit_checks[temp>>log2radix]= 0000000000000001

passed if statements
temp basis:
0000110111110001
1111111000001000
0000011010000010
rs list:
1 0 0 0 1 1 1 1 1 0 1 1 0 0 0 0 
0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0 
B_aug:
[1 0 0 0 1 1 1 1 1 0 1 1 0 0 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 1 1 0 0 0 0 1 0 0 1 0 0 0 0]
[0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1]
m:
[1 0 0 0 1 1 1 1 1 0 1 1 0 0 0 0]
[0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), (6,7), (5,6), (1,5), ( 1,13)( 4, 9)( 5,14)( 6,15)( 7,16)( 8,10), ( 2,10)( 8,11) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 3, 2, 4, 5, 6, 7, 11, 9, 10, 8, 12, 13, 14, 15]
[0, 1, 8, 11, 4, 5, 6, 7, 2, 9, 10, 3, 12, 13, 14, 15]
[0, 2, 1, 9, 4, 5, 6, 8, 7, 3, 11, 10, 12, 13, 14, 15]
[0, 1, 11, 8, 4, 5, 6, 7, 3, 9, 10, 2, 12, 13, 14, 15]
[0, 2, 9, 1, 4, 5, 6, 8, 10, 3, 11, 7, 12, 13, 14, 15]
[0, 2, 7, 10, 4, 5, 6, 8, 1, 3, 11, 9, 12, 13, 14, 15]
[0, 2, 10, 7, 4, 5, 6, 8, 9, 3, 11, 1, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111111000001000
1111011100001000
1111101010001000
1111001110001000
word: 0111100000011000

combo: 0000000000000011

word: 0111011000010000

combo: 0000000000000010

word: 1111000000110000

combo: 0000000000000110

word: 1111111000111000

combo: 0000000000000111

word: 0111100000101000

combo: 0000000000000101

word: 0111011000100000

combo: 0000000000000100

word: 1111000001100000

combo: 0000000000001100

word: 1111111001101000

combo: 0000000000001101

word: 0111100001111000

combo: 0000000000001111

word: 0111011001110000

combo: 0000000000001110

word: 1111000001010000

combo: 0000000000001010

word: 1111111001011000

combo: 0000000000001011

word: 0111100001001000

combo: 0000000000001001

word: 0111011001000000

combo: 0000000000001000

word: 0111001011000000

combo: 0000000000011000

word: 0111110011001000

combo: 0000000000011001

word: 1111101011011000

combo: 0000000000011011

word: 1111010011010000

combo: 0000000000011010

temp: 0000000000011010

orbit_checks[temp>>log2radix]= 100000000000000011

passed if statements
temp basis:
1111100100100001
0000101101110011
0000110111110001
rs list:
1 0 0 0 0 1 0 0 1 0 0 1 1 1 1 1 
1 1 0 0 1 1 1 0 1 1 0 1 0 0 0 0 
1 0 0 0 1 1 1 1 1 0 1 1 0 0 0 0 
B_aug:
[1 0 0 0 1 1 1 1 1 0 1 1 0 0 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 1 1 0 0 0 0 1 0 0 1 0 0 0 0]
[0 0 0 0 1 0 1 1 0 0 1 0 1 1 1 1]
m:
[1 0 0 0 0 1 0 0 1 0 0 1 1 1 1 1]
[1 1 0 0 1 1 1 0 1 1 0 1 0 0 0 0]
[1 0 0 0 1 1 1 1 1 0 1 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 2,10), ( 2, 8,10,11), ( 2, 8,10,11)(14,15), ( 2, 8,10,11)(14,16), ( 2, 8,10,11)(13,14,16), ( 2, 8,10,11)( 3, 4)(14,16), ( 2, 8,10,11)( 3, 4)( 9,12)(14,16), ( 2, 8,10,11)( 3, 4)( 5, 7)( 9,12)(14,16), ( 1, 6)( 2, 8,10,11)( 3, 4)( 9,12)(14,16) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 8, 11, 4, 5, 6, 7, 2, 9, 10, 3, 12, 13, 14, 15]
[4, 2, 1, 9, 0, 6, 5, 8, 7, 3, 11, 10, 12, 13, 14, 15]
[4, 2, 7, 10, 0, 6, 5, 8, 1, 3, 11, 9, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111010011010000
1111100101010000
1111010010110000
1111010011100000
1111100100110000
1111100101100000
word: 0111001011110000

combo: 0000000000011110

word: 0111110011111000

combo: 0000000000011111

word: 1111101011101000

combo: 0000000000011101

word: 1111010011100000

combo: 0000000000011100

temp: 0000000000011100

orbit_checks[temp>>log2radix]= 10100010000100000000000000011

word: 0111001010100000

combo: 0000000000010100

word: 0111110010101000

combo: 0000000000010101

word: 1111101010111000

combo: 0000000000010111

word: 1111010010110000

combo: 0000000000010110

temp: 0000000000010110

orbit_checks[temp>>log2radix]= 10100010000100000000000000011

word: 0111001010010000

combo: 0000000000010010

word: 0111110010011000

combo: 0000000000010011

word: 1111101010001000

combo: 0000000000010001

temp: 0000000000010001

orbit_checks[temp>>log2radix]= 10100010000100000000000000011

word: 1111010010000000

combo: 0000000000010000

word: 1111110110000000

combo: 0000000000110000

temp: 0000000000110000

orbit_checks[temp>>log2radix]= 100001010001000010

passed if statements
temp basis:
0000110111110001
1111110110000000
0000011010000010
rs list:
1 0 0 0 1 1 1 1 1 0 1 1 0 0 0 0 
0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 
0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0 
B_aug:
[1 0 0 0 1 1 1 1 1 0 1 1 0 0 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
[0 0 1 1 0 0 0 0 1 0 0 1 0 0 0 0]
[0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1]
m:
[1 0 0 0 1 1 1 1 1 0 1 1 0 0 0 0]
[0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1]
[0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), ( 9,12), ( 8,11), (6,7), (5,6), (3,4), ( 2, 8)(10,11), (1,5), ( 1,13)( 5,14)( 6,15)( 7,16) ] )
Right transversal of automorphism group of B_aug:
[0, 2, 1, 9, 4, 5, 6, 8, 7, 3, 11, 10, 12, 13, 14, 15]
[0, 2, 7, 10, 4, 5, 6, 8, 1, 3, 11, 9, 12, 13, 14, 15]
[0, 1, 8, 11, 4, 5, 6, 7, 2, 9, 10, 3, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111110110000000
word: 1111001110001000

combo: 0000000000110001

temp: 0000000000110001

orbit_checks[temp>>log2radix]= 110001010001000010

word: 0111010110011000

combo: 0000000000110011

word: 0111101110010000

combo: 0000000000110010

word: 1111110110110000

combo: 0000000000110110

word: 1111001110111000

combo: 0000000000110111

word: 0111010110101000

combo: 0000000000110101

word: 0111101110100000

combo: 0000000000110100

word: 1111110111100000

combo: 0000000000111100

word: 1111001111101000

combo: 0000000000111101

word: 0111010111111000

combo: 0000000000111111

word: 0111101111110000

combo: 0000000000111110

word: 1111110111010000

combo: 0000000000111010

word: 1111001111011000

combo: 0000000000111011

word: 0111010111001000

combo: 0000000000111001

word: 0111101111000000

combo: 0000000000111000

word: 0111111101000000

combo: 0000000000101000

word: 0111000101001000

combo: 0000000000101001

word: 1111011101011000

combo: 0000000000101011

word: 1111100101010000

combo: 0000000000101010

temp: 0000000000101010

orbit_checks[temp>>log2radix]= 110001010001000010

word: 0111111101110000

combo: 0000000000101110

word: 0111000101111000

combo: 0000000000101111

word: 1111011101101000

combo: 0000000000101101

word: 1111100101100000

combo: 0000000000101100

temp: 0000000000101100

orbit_checks[temp>>log2radix]= 110001010001000010

word: 0111111100100000

combo: 0000000000100100

word: 0111000100101000

combo: 0000000000100101

word: 1111011100111000

combo: 0000000000100111

word: 1111100100110000

combo: 0000000000100110

temp: 0000000000100110

orbit_checks[temp>>log2radix]= 110001010001000010

word: 0111111100010000

combo: 0000000000100010

word: 0111000100011000

combo: 0000000000100011

word: 1111011100001000

combo: 0000000000100001

temp: 0000000000100001

orbit_checks[temp>>log2radix]= 110001010001000010

word: 1111100100000000

combo: 0000000000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 1 1 1 1 0 0 1 1]
[0 1 0 0 0 0 0 0 1 0 1 1]
[0 0 1 0 0 0 0 0 0 1 1 1]
limit on degree (length): 13
ortho basis:
0111000001000
0111000010000
0111000100000
0111001000000
0111010000000
0100100000000

B_can_lab before row reduction:
0011000111111
0011011000000
0111100000000

B_can_lab after row reduction:
0011000111111
0011011000000
0111100000000

word generated as sum over rows of ortho_basis starting at 6: 0000000000000
gate: 0000000000111
k_gate: 0000000111111
nonzero_gate: 1000000000000
radix_gate: 0000000011111

Starting main loop:
word: 0000000000000

combo: 0000000000000

word: 0111000001000

combo: 0000000000001

word: 0000000011000

combo: 0000000000011

word: 0111000010000

combo: 0000000000010

word: 0000000110000

combo: 0000000000110

word: 0111000111000

combo: 0000000000111

word: 0000000101000

combo: 0000000000101

word: 0111000100000

combo: 0000000000100

word: 0000001100000

combo: 0000000001100

word: 0111001101000

combo: 0000000001101

word: 0000001111000

combo: 0000000001111

word: 0111001110000

combo: 0000000001110

word: 0000001010000

combo: 0000000001010

word: 0111001011000

combo: 0000000001011

word: 0000001001000

combo: 0000000001001

word: 0111001000000

combo: 0000000001000

word: 0000011000000

combo: 0000000011000

word: 0111011001000

combo: 0000000011001

word: 0000011011000

combo: 0000000011011

word: 0111011010000

combo: 0000000011010

word: 0000011110000

combo: 0000000011110

word: 0111011111000

combo: 0000000011111

word: 0000011101000

combo: 0000000011101

word: 0111011100000

combo: 0000000011100

word: 0000010100000

combo: 0000000010100

word: 0111010101000

combo: 0000000010101

word: 0000010111000

combo: 0000000010111

word: 0111010110000

combo: 0000000010110

word: 0000010010000

combo: 0000000010010

word: 0111010011000

combo: 0000000010011

word: 0000010001000

combo: 0000000010001

word: 0111010000000

combo: 0000000010000

word: 0011110000000

combo: 0000000110000

word: 0100110001000

combo: 0000000110001

word: 0011110011000

combo: 0000000110011

word: 0100110010000

combo: 0000000110010

word: 0011110110000

combo: 0000000110110

word: 0100110111000

combo: 0000000110111

word: 0011110101000

combo: 0000000110101

word: 0100110100000

combo: 0000000110100

word: 0011111100000

combo: 0000000111100

word: 0100111101000

combo: 0000000111101

word: 0011111111000

combo: 0000000111111

word: 0100111110000

combo: 0000000111110

word: 0011111010000

combo: 0000000111010

word: 0100111011000

combo: 0000000111011

word: 0011111001000

combo: 0000000111001

word: 0100111000000

combo: 0000000111000

word: 0011101000000

combo: 0000000101000

word: 0100101001000

combo: 0000000101001

word: 0011101011000

combo: 0000000101011

word: 0100101010000

combo: 0000000101010

word: 0011101110000

combo: 0000000101110

word: 0100101111000

combo: 0000000101111

word: 0011101101000

combo: 0000000101101

word: 0100101100000

combo: 0000000101100

word: 0011100100000

combo: 0000000100100

word: 0100100101000

combo: 0000000100101

word: 0011100111000

combo: 0000000100111

word: 0100100110000

combo: 0000000100110

word: 0011100010000

combo: 0000000100010

word: 0100100011000

combo: 0000000100011

word: 0011100001000

combo: 0000000100001

word: 0100100000000

combo: 0000000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 1 1 1 1 0 0 1 1]
[0 1 0 0 0 0 0 0 1 0 1 1]
[0 0 1 0 0 0 0 0 0 1 1 1]
limit on degree (length): 14
ortho basis:
00111000001000
00111000010000
00111000100000
00111001000000
00111010000000
00100100000000
11000000000000

B_can_lab before row reduction:
00011000111111
00011011000000
00111100000000

B_can_lab after row reduction:
00011000111111
00011011000000
00111100000000

word generated as sum over rows of ortho_basis starting at 6: 11000000000000
gate: 00000000000111
k_gate: 00000000111111
nonzero_gate: 11000000000000
radix_gate: 00000000011111

Starting main loop:
word: 11000000000000

combo: 00000000000000

word: 11111000001000

combo: 00000000000001

word: 11000000011000

combo: 00000000000011

temp: 00000000000011

orbit_checks[temp>>log2radix]= 00000000000000

passed if statements
temp basis:
11001011100011
11010011100101
11100111100001
rs list:
1 1 0 0 0 1 1 1 0 1 0 0 1 1 
1 0 1 0 0 1 1 1 0 0 1 0 1 1 
1 0 0 0 0 1 1 1 1 0 0 1 1 1 
B_aug:
[1 0 0 1 1 1 1 1 1 0 0 1 0 0]
[0 1 0 0 0 0 0 0 1 1 0 1 0 0]
[0 0 1 0 0 0 0 0 1 0 1 1 0 0]
[0 0 0 1 1 0 0 0 0 0 0 0 1 1]
m:
[1 1 0 0 0 1 1 1 0 1 0 0 1 1]
[1 0 1 0 0 1 1 1 0 0 1 0 1 1]
[1 0 0 0 0 1 1 1 1 0 0 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,12), ( 3, 9)(11,12), ( 2, 3)(10,11), (13,14), ( 4, 5)(13,14), ( 6, 7)(13,14), ( 6, 8)(13,14), ( 1, 6, 8)(13,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 12, 13, 5, 6, 7, 8, 9, 10, 11, 3, 4]
orbits:
11000000011000
11000000101000
11100111101000
11000001001000
11000000110000
11100111011000
11100111110000
11000010001000
11000001010000
11100110111000
11000010010000
11100101111000
11000001100000
11000010100000
11000011000000
word: 11111000010000

combo: 00000000000010

word: 11000000110000

combo: 00000000000110

temp: 00000000000110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 11111000111000

combo: 00000000000111

temp: 00000000000111

orbit_checks[temp>>log2radix]= 1000101100001011001101000

passed if statements
temp basis:
11110011000011
11111000111000
00010011111101
rs list:
1 1 0 0 0 0 1 1 0 0 1 1 1 1 
0 0 0 1 1 1 0 0 0 1 1 1 1 1 
1 0 1 1 1 1 1 1 0 0 1 0 0 0 
B_aug:
[1 0 0 1 1 1 1 1 1 0 0 1 0 0]
[0 1 0 0 0 0 0 0 1 1 0 1 0 0]
[0 0 1 0 0 0 0 0 1 0 1 1 0 0]
[0 0 0 1 1 1 0 0 0 1 1 1 1 1]
m:
[1 1 0 0 0 0 1 1 0 0 1 1 1 1]
[0 0 0 1 1 1 0 0 0 1 1 1 1 1]
[1 0 1 1 1 1 1 1 0 0 1 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (13,14), (7,8), (5,6), (4,5), ( 2, 3)(10,11), (1,7), ( 1, 4)( 3,11)( 5, 7)( 6, 8) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 8, 3, 4, 5, 6, 7, 2, 9, 11, 10, 12, 13]
[3, 1, 2, 0, 6, 7, 4, 5, 11, 9, 10, 8, 12, 13]
[0, 2, 8, 3, 4, 5, 6, 7, 1, 10, 11, 9, 12, 13]
[3, 1, 8, 0, 6, 7, 4, 5, 10, 9, 11, 2, 12, 13]
[3, 2, 8, 0, 6, 7, 4, 5, 9, 10, 11, 1, 12, 13]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
orbits:
11111000111000
11011100111000
11111001011000
11011111001000
11011101011000
11111011001000
11111010011000
11111001101000
11011110101000
11011111010000
11011110011000
11011101101000
11111010101000
11111011010000
11111001110000
11011110110000
11011111100000
11011101110000
11111010110000
11111011100000
word: 11000000101000

combo: 00000000000101

temp: 00000000000101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11111000100000

combo: 00000000000100

word: 11000001100000

combo: 00000000001100

temp: 00000000001100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11111001101000

combo: 00000000001101

temp: 00000000001101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11000001111000

combo: 00000000001111

word: 11111001110000

combo: 00000000001110

temp: 00000000001110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11000001010000

combo: 00000000001010

temp: 00000000001010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11111001011000

combo: 00000000001011

temp: 00000000001011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11000001001000

combo: 00000000001001

temp: 00000000001001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11111001000000

combo: 00000000001000

word: 11000011000000

combo: 00000000011000

temp: 00000000011000

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11111011001000

combo: 00000000011001

temp: 00000000011001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11000011011000

combo: 00000000011011

word: 11111011010000

combo: 00000000011010

temp: 00000000011010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11000011110000

combo: 00000000011110

word: 11111011111000

combo: 00000000011111

word: 11000011101000

combo: 00000000011101

word: 11111011100000

combo: 00000000011100

temp: 00000000011100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11000010100000

combo: 00000000010100

temp: 00000000010100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11111010101000

combo: 00000000010101

temp: 00000000010101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11000010111000

combo: 00000000010111

word: 11111010110000

combo: 00000000010110

temp: 00000000010110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11000010010000

combo: 00000000010010

temp: 00000000010010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11111010011000

combo: 00000000010011

temp: 00000000010011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11000010001000

combo: 00000000010001

temp: 00000000010001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11111010000000

combo: 00000000010000

word: 11011110000000

combo: 00000000110000

word: 11100110001000

combo: 00000000110001

word: 11011110011000

combo: 00000000110011

temp: 00000000110011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11100110010000

combo: 00000000110010

word: 11011110110000

combo: 00000000110110

temp: 00000000110110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11100110111000

combo: 00000000110111

temp: 00000000110111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11011110101000

combo: 00000000110101

temp: 00000000110101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11100110100000

combo: 00000000110100

word: 11011111100000

combo: 00000000111100

temp: 00000000111100

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11100111101000

combo: 00000000111101

temp: 00000000111101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11011111111000

combo: 00000000111111

word: 11100111110000

combo: 00000000111110

temp: 00000000111110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11011111010000

combo: 00000000111010

temp: 00000000111010

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11100111011000

combo: 00000000111011

temp: 00000000111011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11011111001000

combo: 00000000111001

temp: 00000000111001

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11100111000000

combo: 00000000111000

word: 11011101000000

combo: 00000000101000

word: 11100101001000

combo: 00000000101001

word: 11011101011000

combo: 00000000101011

temp: 00000000101011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11100101010000

combo: 00000000101010

word: 11011101110000

combo: 00000000101110

temp: 00000000101110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11100101111000

combo: 00000000101111

temp: 00000000101111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11011101101000

combo: 00000000101101

temp: 00000000101101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11100101100000

combo: 00000000101100

word: 11011100100000

combo: 00000000100100

word: 11100100101000

combo: 00000000100101

word: 11011100111000

combo: 00000000100111

temp: 00000000100111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11100100110000

combo: 00000000100110

word: 11011100010000

combo: 00000000100010

word: 11100100011000

combo: 00000000100011

word: 11011100001000

combo: 00000000100001

word: 11100100000000

combo: 00000000100000

temp: 00000000100000

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

passed if statements
temp basis:
11000011111001
11001000000010
11010000000100
rs list:
1 0 0 1 1 1 1 1 0 0 0 0 1 1 
0 1 0 0 0 0 0 0 0 1 0 0 1 1 
0 0 1 0 0 0 0 0 0 0 1 0 1 1 
B_aug:
[1 0 0 1 1 1 1 1 1 0 0 1 0 0]
[0 1 0 0 0 0 0 0 1 1 0 1 0 0]
[0 0 1 0 0 0 0 0 1 0 1 1 0 0]
[0 0 0 0 0 0 0 0 1 0 0 1 1 1]
m:
[1 0 0 1 1 1 1 1 0 0 0 0 1 1]
[0 1 0 0 0 0 0 0 0 1 0 0 1 1]
[0 0 1 0 0 0 0 0 0 0 1 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (13,14), ( 9,12), (7,8), (6,7), (5,6), (4,5), ( 3,11), ( 3,13)(11,14), ( 2, 3)(10,11), (1,4) ] )
Right transversal of automorphism group of B_aug:
[0, 8, 2, 3, 4, 5, 6, 7, 1, 11, 10, 9, 12, 13]
[0, 8, 1, 3, 4, 5, 6, 7, 2, 11, 9, 10, 12, 13]
[0, 8, 1, 3, 4, 5, 6, 7, 12, 11, 9, 13, 2, 10]
orbits:
11100100000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 1 1 1 1 0 0 1 1 1]
[0 1 0 0 0 0 0 0 1 1 0 1 0 0]
[0 0 1 0 0 0 0 0 1 0 1 1 0 0]
[0 0 0 1 1 0 0 0 0 0 0 0 1 1]
limit on degree (length): 15
ortho basis:
111110000010000
001110000100000
001110001000000
001110010000000
001000100000000
010001000000000

B_can_lab before row reduction:
001101111011000
000000000011011
000000000111100
011110000000000

B_can_lab after row reduction:
001101111000011
001101111100100
001101111011000
011110000000000
000000000111000

word generated as sum over rows of ortho_basis starting at 6: 000000000000000
gate: 000000000001111
k_gate: 000000000111111
nonzero_gate: 100000000000000
radix_gate: 000000000011111

Starting main loop:
word: 000000000000000

combo: 000000000000000

word: 111110000010000

combo: 000000000000001

word: 110000000110000

combo: 000000000000011

temp: 000000000000011

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
010011011100011
010101011100101
011001111100001
100001000101000
rs list:
1 1 0 0 0 1 1 1 0 1 1 0 0 1 0 
1 0 1 0 0 1 1 1 0 1 0 1 0 1 0 
1 0 0 0 0 1 1 1 1 1 0 0 1 1 0 
0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 
B_aug:
[1 0 0 0 0 1 1 1 1 1 0 0 1 1 0]
[0 1 0 0 0 0 0 0 1 0 1 0 1 0 0]
[0 0 1 0 0 0 0 0 1 0 0 1 1 0 0]
[0 0 0 1 1 0 0 0 0 1 0 0 0 1 0]
[0 0 0 0 1 1 0 0 0 0 0 0 0 1 1]
m:
[1 1 0 0 0 1 1 1 0 1 1 0 0 1 0]
[1 0 1 0 0 1 1 1 0 1 0 1 0 1 0]
[1 0 0 0 0 1 1 1 1 1 0 0 1 1 0]
[0 0 0 1 0 1 0 0 0 1 0 0 0 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,13), (7,8), ( 3, 9)(12,13), ( 2, 3)(11,12), (1,7), ( 4,15)( 6,10), ( 4,10)( 6,15) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 14, 13]
[0, 1, 2, 3, 13, 14, 6, 7, 8, 9, 10, 11, 12, 4, 5]
[0, 1, 2, 4, 3, 5, 6, 7, 8, 13, 10, 11, 12, 9, 14]
[0, 1, 2, 3, 14, 13, 6, 7, 8, 9, 10, 11, 12, 5, 4]
orbits:
110000000110000
100001000110000
110000001010000
101001111110000
100001001010000
111000111110000
110000010010000
100001010010000
word: 001110000100000

combo: 000000000000010

word: 000000001100000

combo: 000000000000110

word: 111110001110000

combo: 000000000000111

temp: 000000000000111

orbit_checks[temp>>log2radix]= 10000000000000000000001000101000

passed if statements
temp basis:
110100101110010
100111110010001
010101011100101
011001111100001
rs list:
0 1 0 0 1 1 1 0 1 0 0 1 0 1 1 
1 0 0 0 1 0 0 1 1 1 1 1 0 0 1 
1 0 1 0 0 1 1 1 0 1 0 1 0 1 0 
1 0 0 0 0 1 1 1 1 1 0 0 1 1 0 
B_aug:
[1 0 0 0 0 1 1 1 1 1 0 0 1 1 0]
[0 1 0 0 0 0 0 0 1 0 1 0 1 0 0]
[0 0 1 0 0 0 0 0 1 0 0 1 1 0 0]
[0 0 0 1 1 0 0 0 0 1 0 0 0 1 0]
[0 0 0 0 1 1 1 0 0 0 1 1 1 1 1]
m:
[0 1 0 0 1 1 1 0 1 0 0 1 0 1 1]
[1 0 0 0 1 0 0 1 1 1 1 1 0 0 1]
[1 0 1 0 0 1 1 1 0 1 0 1 0 1 0]
[1 0 0 0 0 1 1 1 1 1 0 0 1 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (6,7), ( 3, 9)(12,13), ( 3,12)( 9,13), ( 2, 3)(11,12), ( 1, 6)( 7, 8)( 9,13)(10,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 4, 3, 5, 6, 7, 8, 13, 10, 11, 12, 9, 14]
[0, 1, 2, 9, 13, 5, 6, 7, 8, 3, 10, 11, 12, 4, 14]
[0, 1, 2, 13, 9, 5, 6, 7, 8, 4, 10, 11, 12, 3, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
111110001110000
110110101110000
101111001110000
111110010110000
100111110110000
100111101110000
110110110110000
101111010110000
111110011010000
100111111010000
110110111010000
101111011010000
word: 110000001010000

combo: 000000000000101

temp: 000000000000101

orbit_checks[temp>>log2radix]= 10101000100000000010101010101000

word: 001110001000000

combo: 000000000000100

word: 000000011000000

combo: 000000000001100

word: 111110011010000

combo: 000000000001101

temp: 000000000001101

orbit_checks[temp>>log2radix]= 10101000100000000010101010101000

word: 110000011110000

combo: 000000000001111

word: 001110011100000

combo: 000000000001110

word: 000000010100000

combo: 000000000001010

word: 111110010110000

combo: 000000000001011

temp: 000000000001011

orbit_checks[temp>>log2radix]= 10101000100000000010101010101000

word: 110000010010000

combo: 000000000001001

temp: 000000000001001

orbit_checks[temp>>log2radix]= 10101000100000000010101010101000

word: 001110010000000

combo: 000000000001000

word: 000110110000000

combo: 000000000011000

word: 111000110010000

combo: 000000000011001

word: 110110110110000

combo: 000000000011011

temp: 000000000011011

orbit_checks[temp>>log2radix]= 10101000100000000010101010101000

word: 001000110100000

combo: 000000000011010

word: 000110111100000

combo: 000000000011110

word: 111000111110000

combo: 000000000011111

temp: 000000000011111

orbit_checks[temp>>log2radix]= 10101000100000000010101010101000

word: 110110111010000

combo: 000000000011101

temp: 000000000011101

orbit_checks[temp>>log2radix]= 10101000100000000010101010101000

word: 001000111000000

combo: 000000000011100

word: 000110101000000

combo: 000000000010100

word: 111000101010000

combo: 000000000010101

word: 110110101110000

combo: 000000000010111

temp: 000000000010111

orbit_checks[temp>>log2radix]= 10101000100000000010101010101000

word: 001000101100000

combo: 000000000010110

word: 000110100100000

combo: 000000000010010

word: 111000100110000

combo: 000000000010011

word: 110110100010000

combo: 000000000010001

word: 001000100000000

combo: 000000000010000

word: 011001100000000

combo: 000000000110000

word: 100111100010000

combo: 000000000110001

word: 101001100110000

combo: 000000000110011

word: 010111100100000

combo: 000000000110010

word: 011001101100000

combo: 000000000110110

word: 100111101110000

combo: 000000000110111

temp: 000000000110111

orbit_checks[temp>>log2radix]= 10101000100000000010101010101000

word: 101001101010000

combo: 000000000110101

word: 010111101000000

combo: 000000000110100

word: 011001111000000

combo: 000000000111100

word: 100111111010000

combo: 000000000111101

temp: 000000000111101

orbit_checks[temp>>log2radix]= 10101000100000000010101010101000

word: 101001111110000

combo: 000000000111111

temp: 000000000111111

orbit_checks[temp>>log2radix]= 10101000100000000010101010101000

word: 010111111100000

combo: 000000000111110

word: 011001110100000

combo: 000000000111010

word: 100111110110000

combo: 000000000111011

temp: 000000000111011

orbit_checks[temp>>log2radix]= 10101000100000000010101010101000

word: 101001110010000

combo: 000000000111001

word: 010111110000000

combo: 000000000111000

word: 011111010000000

combo: 000000000101000

word: 100001010010000

combo: 000000000101001

temp: 000000000101001

orbit_checks[temp>>log2radix]= 10101000100000000010101010101000

word: 101111010110000

combo: 000000000101011

temp: 000000000101011

orbit_checks[temp>>log2radix]= 10101000100000000010101010101000

word: 010001010100000

combo: 000000000101010

word: 011111011100000

combo: 000000000101110

word: 100001011110000

combo: 000000000101111

word: 101111011010000

combo: 000000000101101

temp: 000000000101101

orbit_checks[temp>>log2radix]= 10101000100000000010101010101000

word: 010001011000000

combo: 000000000101100

word: 011111001000000

combo: 000000000100100

word: 100001001010000

combo: 000000000100101

temp: 000000000100101

orbit_checks[temp>>log2radix]= 10101000100000000010101010101000

word: 101111001110000

combo: 000000000100111

temp: 000000000100111

orbit_checks[temp>>log2radix]= 10101000100000000010101010101000

word: 010001001100000

combo: 000000000100110

word: 011111000100000

combo: 000000000100010

word: 100001000110000

combo: 000000000100011

temp: 000000000100011

orbit_checks[temp>>log2radix]= 10101000100000000010101010101000

word: 101111000010000

combo: 000000000100001

word: 010001000000000

combo: 000000000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 1 1 1 1 1 0 0 1 1 0]
[0 1 0 0 0 0 0 0 1 0 1 0 1 0 0]
[0 0 1 0 0 0 0 0 1 0 0 1 1 0 0]
[0 0 0 1 0 1 0 0 0 1 0 0 0 0 1]
[0 0 0 0 1 1 0 0 0 0 0 0 0 1 1]
limit on degree (length): 16
ortho basis:
1101110000100000
0001110001000000
0001110010000000
0001000100000000
1110001000000000

B_can_lab before row reduction:
0101010111011000
0000000000011011
0000000000111100
0011011000000000
0111100000000000

B_can_lab after row reduction:
0101010111000011
0101010111100100
0101010111011000
0011011000000000
0111100000000000

word generated as sum over rows of ortho_basis starting at 5: 0000000000000000
gate: 0000000000011111
k_gate: 0000000000011111
nonzero_gate: 1000000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 0000000000000000

combo: 0000000000000000

word: 1101110000100000

combo: 0000000000000001

word: 1100000001100000

combo: 0000000000000011

temp: 0000000000000011

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1110011010000011
1110101010000101
1111001110000001
1000001001001000
1010000001010000
rs list:
1 1 0 0 0 0 0 1 0 1 1 0 0 1 1 1 
1 0 1 0 0 0 0 1 0 1 0 1 0 1 1 1 
1 0 0 0 0 0 0 1 1 1 0 0 1 1 1 1 
0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 1 
0 0 0 0 1 0 1 0 0 0 0 0 0 1 0 1 
B_aug:
[1 0 0 0 0 1 1 1 1 1 0 0 1 1 0 0]
[0 1 0 0 0 0 0 0 1 0 1 0 1 0 0 0]
[0 0 1 0 0 0 0 0 1 0 0 1 1 0 0 0]
[0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0]
[0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0]
[0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1]
m:
[1 1 0 0 0 0 0 1 0 1 1 0 0 1 1 1]
[1 0 1 0 0 0 0 1 0 1 0 1 0 1 1 1]
[1 0 0 0 0 0 0 1 1 1 0 0 1 1 1 1]
[0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 1]
[0 0 0 0 1 0 1 0 0 0 0 0 0 1 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,13), ( 4, 5)(10,14), ( 3, 9)(12,13), ( 2, 3)(11,12), (1,8), ( 5,16)( 7,14), ( 5,14)( 7,16) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 15, 14]
[0, 1, 2, 3, 4, 14, 15, 7, 8, 9, 10, 11, 12, 13, 5, 6]
[0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15]
[0, 1, 2, 3, 4, 15, 14, 7, 8, 9, 10, 11, 12, 13, 6, 5]
orbits:
1100000001100000
1100000010100000
1111001111000000
word: 0001110001000000

combo: 0000000000000010

word: 0000000011000000

combo: 0000000000000110

word: 1101110011100000

combo: 0000000000000111

temp: 0000000000000111

orbit_checks[temp>>log2radix]= 1000000000000000000000000101000

passed if statements
temp basis:
0011001111100001
1111101000000011
1110111100000001
0001100100000100
0100001000101000
rs list:
1 0 0 0 0 1 1 1 1 1 0 0 1 1 0 0 
1 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
1 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 
0 0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 
0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 
B_aug:
[1 0 0 0 0 1 1 1 1 1 0 0 1 1 0 0]
[0 1 0 0 0 0 0 0 1 0 1 0 1 0 0 0]
[0 0 1 0 0 0 0 0 1 0 0 1 1 0 0 0]
[0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0]
[0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0]
[0 0 0 0 0 1 1 1 0 0 1 1 1 0 1 1]
m:
[1 0 0 0 0 1 1 1 1 1 0 0 1 1 0 0]
[1 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1]
[1 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1]
[0 0 1 0 0 0 0 0 1 0 0 1 1 0 0 0]
[0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (7,8), ( 3, 9)(12,13), ( 3,12)( 9,13), ( 2, 3)(11,12), ( 4, 6)(10,15), ( 4,10)( 6,15) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15]
[0, 1, 2, 3, 13, 14, 6, 7, 8, 9, 10, 11, 12, 4, 5, 15]
[0, 1, 2, 3, 14, 13, 6, 7, 8, 9, 10, 11, 12, 5, 4, 15]
[0, 1, 2, 4, 3, 5, 6, 7, 8, 13, 10, 11, 12, 9, 14, 15]
[0, 1, 2, 4, 9, 14, 6, 7, 8, 13, 10, 11, 12, 3, 5, 15]
[15, 3, 4, 1, 2, 12, 6, 7, 14, 10, 9, 13, 5, 11, 8, 0]
[15, 3, 4, 1, 12, 2, 6, 7, 14, 10, 9, 13, 5, 8, 11, 0]
[15, 3, 4, 1, 11, 8, 6, 7, 14, 10, 9, 13, 5, 2, 12, 0]
[15, 3, 4, 1, 8, 11, 6, 7, 14, 10, 9, 13, 5, 12, 2, 0]
[15, 3, 4, 2, 1, 12, 6, 7, 14, 11, 9, 13, 5, 10, 8, 0]
[15, 3, 4, 2, 10, 8, 6, 7, 14, 11, 9, 13, 5, 1, 12, 0]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1101110011100000
1100110111100000
1110111101000000
1111111001000000
1110111110000000
1111111010000000
word: 1100000010100000

combo: 0000000000000101

temp: 0000000000000101

orbit_checks[temp>>log2radix]= 1010100000101001000000010101000

word: 0001110010000000

combo: 0000000000000100

word: 0000110110000000

combo: 0000000000001100

word: 1101000110100000

combo: 0000000000001101

word: 1100110111100000

combo: 0000000000001111

temp: 0000000000001111

orbit_checks[temp>>log2radix]= 1010100000101001000000010101000

word: 0001000111000000

combo: 0000000000001110

word: 0000110101000000

combo: 0000000000001010

word: 1101000101100000

combo: 0000000000001011

word: 1100110100100000

combo: 0000000000001001

word: 0001000100000000

combo: 0000000000001000

word: 1111001100000000

combo: 0000000000011000

word: 0010111100100000

combo: 0000000000011001

word: 0011001101100000

combo: 0000000000011011

word: 1110111101000000

combo: 0000000000011010

temp: 0000000000011010

orbit_checks[temp>>log2radix]= 1010100000101001000000010101000

word: 1111001111000000

combo: 0000000000011110

temp: 0000000000011110

orbit_checks[temp>>log2radix]= 1010100000101001000000010101000

word: 0010111111100000

combo: 0000000000011111

word: 0011001110100000

combo: 0000000000011101

word: 1110111110000000

combo: 0000000000011100

temp: 0000000000011100

orbit_checks[temp>>log2radix]= 1010100000101001000000010101000

word: 1111111010000000

combo: 0000000000010100

temp: 0000000000010100

orbit_checks[temp>>log2radix]= 1010100000101001000000010101000

word: 0010001010100000

combo: 0000000000010101

word: 0011111011100000

combo: 0000000000010111

word: 1110001011000000

combo: 0000000000010110

word: 1111111001000000

combo: 0000000000010010

temp: 0000000000010010

orbit_checks[temp>>log2radix]= 1010100000101001000000010101000

word: 0010001001100000

combo: 0000000000010011

word: 0011111000100000

combo: 0000000000010001

word: 1110001000000000

combo: 0000000000010000

temp: 0000000000010000

orbit_checks[temp>>log2radix]= 1010100000101001000000010101000

passed if statements
temp basis:
1101000111100001
0001010100000010
0001100100000100
1010000000101000
0110000000110000
rs list:
1 0 0 0 0 1 1 1 1 0 0 0 1 0 1 1 
0 1 0 0 0 0 0 0 1 0 1 0 1 0 0 0 
0 0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 
0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 1 
0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 
B_aug:
[1 0 0 0 0 1 1 1 1 1 0 0 1 1 0 0]
[0 1 0 0 0 0 0 0 1 0 1 0 1 0 0 0]
[0 0 1 0 0 0 0 0 1 0 0 1 1 0 0 0]
[0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0]
[0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0]
[0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1]
m:
[1 0 0 0 0 1 1 1 1 0 0 0 1 0 1 1]
[0 1 0 0 0 0 0 0 1 0 1 0 1 0 0 0]
[0 0 1 0 0 0 0 0 1 0 0 1 1 0 0 0]
[0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 1]
[0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,13), (7,8), ( 5, 6)(14,15), ( 4, 5)(15,16), ( 3, 9)(12,13), ( 2, 3)(11,12), (1,7), ( 5,14)( 6,15) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 5, 6, 7, 8, 13, 10, 11, 12, 9, 15, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 10, 11, 12, 15, 9, 13]
[0, 1, 2, 3, 9, 15, 6, 7, 8, 4, 10, 11, 12, 13, 14, 5]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 15, 10, 11, 12, 14, 13, 9]
orbits:
1110001000000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 1 1 1 1 0 0 1 1 1]
[0 1 0 0 0 0 0 0 1 1 0 1 0 0]
[0 0 1 0 0 0 0 0 1 0 1 1 0 0]
[0 0 0 1 1 0 0 0 0 0 0 0 1 1]
limit on degree (length): 16
ortho basis:
1011110000010000
0001110000100000
0001110001000000
0001110010000000
0001000100000000
0010001000000000
1100000000000000

B_can_lab before row reduction:
0001101111011000
0000000000011011
0000000000111100
0011110000000000

B_can_lab after row reduction:
0001101111000011
0001101111100100
0001101111011000
0011110000000000
0000000000111000

word generated as sum over rows of ortho_basis starting at 6: 1100000000000000
gate: 0000000000001111
k_gate: 0000000000111111
nonzero_gate: 1100000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1100000000000000

combo: 0000000000000000

word: 0111110000010000

combo: 0000000000000001

word: 0110000000110000

combo: 0000000000000011

word: 1101110000100000

combo: 0000000000000010

word: 1100000001100000

combo: 0000000000000110

temp: 0000000000000110

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1110011010000011
1110101010000101
1111001110000001
0010001000011000
rs list:
1 1 0 0 0 0 0 1 0 1 1 0 0 1 1 1 
1 0 1 0 0 0 0 1 0 1 0 1 0 1 1 1 
1 0 0 0 0 0 0 1 1 1 0 0 1 1 1 1 
0 0 0 1 1 0 0 0 0 1 0 0 0 1 0 0 
B_aug:
[1 0 0 0 0 1 1 1 1 1 0 0 1 1 0 0]
[0 1 0 0 0 0 0 0 1 0 1 0 1 0 0 0]
[0 0 1 0 0 0 0 0 1 0 0 1 1 0 0 0]
[0 0 0 1 1 0 0 0 0 1 0 0 0 1 0 0]
[0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1]
m:
[1 1 0 0 0 0 0 1 0 1 1 0 0 1 1 1]
[1 0 1 0 0 0 0 1 0 1 0 1 0 1 1 1]
[1 0 0 0 0 0 0 1 1 1 0 0 1 1 1 1]
[0 0 0 1 1 0 0 0 0 1 0 0 0 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), ( 6, 7)(15,16), (10,14)(15,16), ( 4, 5)(10,14)(15,16), ( 4,10, 5,14)(15,16), ( 9,13)(10,14)(15,16), ( 3, 9)(10,14)(12,13)(15,16), ( 2, 3)(10,14)(11,12)(15,16), ( 1, 8)(10,14)(15,16) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 14, 15, 7, 8, 9, 10, 11, 12, 13, 5, 6]
orbits:
1100000001100000
1100000010100000
1111001110100000
1100000011000000
1111001101100000
1111001111000000
word: 0111110001110000

combo: 0000000000000111

word: 0110000001010000

combo: 0000000000000101

word: 1101110001000000

combo: 0000000000000100

word: 1100000011000000

combo: 0000000000001100

temp: 0000000000001100

orbit_checks[temp>>log2radix]= 0001010001000000

word: 0111110011010000

combo: 0000000000001101

word: 0110000011110000

combo: 0000000000001111

word: 1101110011100000

combo: 0000000000001110

temp: 0000000000001110

orbit_checks[temp>>log2radix]= 0001010001000000

passed if statements
temp basis:
1101110011100000
1100110100011001
1110111100000001
0001010100000010
rs list:
0 0 0 0 0 1 1 1 0 0 1 1 1 0 1 1 
1 0 0 1 1 0 0 0 1 0 1 1 0 0 1 1 
1 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 
0 1 0 0 0 0 0 0 1 0 1 0 1 0 0 0 
B_aug:
[1 0 0 0 0 1 1 1 1 1 0 0 1 1 0 0]
[0 1 0 0 0 0 0 0 1 0 1 0 1 0 0 0]
[0 0 1 0 0 0 0 0 1 0 0 1 1 0 0 0]
[0 0 0 1 1 0 0 0 0 1 0 0 0 1 0 0]
[0 0 0 0 0 1 1 1 0 0 1 1 1 0 1 1]
m:
[0 0 0 0 0 1 1 1 0 0 1 1 1 0 1 1]
[1 0 0 1 1 0 0 0 1 0 1 1 0 0 1 1]
[1 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1]
[0 1 0 0 0 0 0 0 1 0 1 0 1 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (10,14), (7,8), (6,7), (4,5), ( 4,10)( 5,14), ( 2,13)( 9,11), ( 2,11)( 9,13) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 8, 3, 4, 5, 6, 7, 2, 9, 10, 12, 11, 13, 14, 15]
[0, 1, 11, 3, 4, 5, 6, 7, 12, 9, 10, 2, 8, 13, 14, 15]
[0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15]
[0, 1, 12, 3, 4, 5, 6, 7, 11, 9, 10, 8, 2, 13, 14, 15]
[0, 2, 10, 3, 4, 5, 6, 7, 12, 9, 11, 1, 8, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1101110011100000
1100110111100000
1110111100100000
1111111000100000
1110111101000000
1111111001000000
1110111110000000
1111111010000000
word: 1100000010100000

combo: 0000000000001010

temp: 0000000000001010

orbit_checks[temp>>log2radix]= 1000000000000000101010001000000

word: 0111110010110000

combo: 0000000000001011

word: 0110000010010000

combo: 0000000000001001

word: 1101110010000000

combo: 0000000000001000

word: 1100110110000000

combo: 0000000000011000

word: 0111000110010000

combo: 0000000000011001

word: 0110110110110000

combo: 0000000000011011

word: 1101000110100000

combo: 0000000000011010

word: 1100110111100000

combo: 0000000000011110

temp: 0000000000011110

orbit_checks[temp>>log2radix]= 1000000000000000101010001000000

word: 0111000111110000

combo: 0000000000011111

word: 0110110111010000

combo: 0000000000011101

word: 1101000111000000

combo: 0000000000011100

word: 1100110101000000

combo: 0000000000010100

word: 0111000101010000

combo: 0000000000010101

word: 0110110101110000

combo: 0000000000010111

word: 1101000101100000

combo: 0000000000010110

word: 1100110100100000

combo: 0000000000010010

word: 0111000100110000

combo: 0000000000010011

word: 0110110100010000

combo: 0000000000010001

word: 1101000100000000

combo: 0000000000010000

temp: 0000000000010000

orbit_checks[temp>>log2radix]= 1000000000000000101010001000000

passed if statements
temp basis:
0010011011100011
0010101011100101
0011001111100001
1110001011100001
rs list:
1 1 0 0 0 1 1 1 0 1 1 0 0 1 0 0 
1 0 1 0 0 1 1 1 0 1 0 1 0 1 0 0 
1 0 0 0 0 1 1 1 1 1 0 0 1 1 0 0 
1 0 0 0 0 1 1 1 0 1 0 0 0 1 1 1 
B_aug:
[1 0 0 0 0 1 1 1 1 1 0 0 1 1 0 0]
[0 1 0 0 0 0 0 0 1 0 1 0 1 0 0 0]
[0 0 1 0 0 0 0 0 1 0 0 1 1 0 0 0]
[0 0 0 1 1 0 0 0 0 1 0 0 0 1 0 0]
[0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 1]
m:
[1 1 0 0 0 1 1 1 0 1 1 0 0 1 0 0]
[1 0 1 0 0 1 1 1 0 1 0 1 0 1 0 0]
[1 0 0 0 0 1 1 1 1 1 0 0 1 1 0 0]
[1 0 0 0 0 1 1 1 0 1 0 0 0 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), ( 9,13)(15,16), ( 9,15,13,16), ( 3, 9)(12,13)(15,16), ( 2, 3)(11,12)(15,16), (10,14)(15,16), ( 4, 5)(10,14)(15,16), ( 6, 7)(10,14)(15,16), ( 6, 8)(10,14)(15,16), ( 1, 6, 8)(10,14)(15,16) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 9, 13, 5, 6, 7, 8, 3, 10, 11, 12, 4, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1101000100000000
word: 1111001100000000

combo: 0000000000110000

word: 0100111100010000

combo: 0000000000110001

word: 0101001100110000

combo: 0000000000110011

word: 1110111100100000

combo: 0000000000110010

temp: 0000000000110010

orbit_checks[temp>>log2radix]= 10101010101000000000100010100

word: 1111001101100000

combo: 0000000000110110

temp: 0000000000110110

orbit_checks[temp>>log2radix]= 10101010101000000000100010100

word: 0100111101110000

combo: 0000000000110111

word: 0101001101010000

combo: 0000000000110101

word: 1110111101000000

combo: 0000000000110100

temp: 0000000000110100

orbit_checks[temp>>log2radix]= 10101010101000000000100010100

word: 1111001111000000

combo: 0000000000111100

temp: 0000000000111100

orbit_checks[temp>>log2radix]= 10101010101000000000100010100

word: 0100111111010000

combo: 0000000000111101

word: 0101001111110000

combo: 0000000000111111

word: 1110111111100000

combo: 0000000000111110

word: 1111001110100000

combo: 0000000000111010

temp: 0000000000111010

orbit_checks[temp>>log2radix]= 10101010101000000000100010100

word: 0100111110110000

combo: 0000000000111011

word: 0101001110010000

combo: 0000000000111001

word: 1110111110000000

combo: 0000000000111000

temp: 0000000000111000

orbit_checks[temp>>log2radix]= 10101010101000000000100010100

word: 1111111010000000

combo: 0000000000101000

temp: 0000000000101000

orbit_checks[temp>>log2radix]= 10101010101000000000100010100

word: 0100001010010000

combo: 0000000000101001

word: 0101111010110000

combo: 0000000000101011

word: 1110001010100000

combo: 0000000000101010

word: 1111111011100000

combo: 0000000000101110

word: 0100001011110000

combo: 0000000000101111

word: 0101111011010000

combo: 0000000000101101

word: 1110001011000000

combo: 0000000000101100

word: 1111111001000000

combo: 0000000000100100

temp: 0000000000100100

orbit_checks[temp>>log2radix]= 10101010101000000000100010100

word: 0100001001010000

combo: 0000000000100101

word: 0101111001110000

combo: 0000000000100111

word: 1110001001100000

combo: 0000000000100110

word: 1111111000100000

combo: 0000000000100010

temp: 0000000000100010

orbit_checks[temp>>log2radix]= 10101010101000000000100010100

word: 0100001000110000

combo: 0000000000100011

word: 0101111000010000

combo: 0000000000100001

word: 1110001000000000

combo: 0000000000100000

temp: 0000000000100000

orbit_checks[temp>>log2radix]= 10101010101000000000100010100

passed if statements
temp basis:
1101000111100001
0001010100000010
1100000000011000
1110001000000000
rs list:
1 0 0 0 0 1 1 1 1 0 0 0 1 0 1 1 
0 1 0 0 0 0 0 0 1 0 1 0 1 0 0 0 
0 0 0 1 1 0 0 0 0 0 0 0 0 0 1 1 
0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 
B_aug:
[1 0 0 0 0 1 1 1 1 1 0 0 1 1 0 0]
[0 1 0 0 0 0 0 0 1 0 1 0 1 0 0 0]
[0 0 1 0 0 0 0 0 1 0 0 1 1 0 0 0]
[0 0 0 1 1 0 0 0 0 1 0 0 0 1 0 0]
[0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1]
m:
[1 0 0 0 0 1 1 1 1 0 0 0 1 0 1 1]
[0 1 0 0 0 0 0 0 1 0 1 0 1 0 0 0]
[0 0 0 1 1 0 0 0 0 0 0 0 0 0 1 1]
[0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (10,14), (10,15)(14,16), ( 9,13), (7,8), (6,7), (4,5), ( 4,10)( 5,14), ( 3,12), ( 2, 9)(11,13), (1,6) ] )
Right transversal of automorphism group of B_aug:
[0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15]
[0, 9, 3, 2, 11, 5, 6, 7, 14, 1, 13, 4, 15, 10, 8, 12]
[0, 2, 8, 3, 4, 5, 6, 7, 1, 9, 11, 12, 10, 13, 14, 15]
[0, 3, 9, 2, 11, 5, 6, 7, 14, 1, 4, 13, 15, 10, 8, 12]
[0, 3, 14, 2, 11, 5, 6, 7, 9, 1, 4, 15, 13, 10, 8, 12]
orbits:
1110001000000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 1 1 0 0 0 1 1]
[0 1 0 0 0 0 0 0 0 1 0 0 1 1]
[0 0 1 0 0 0 0 0 0 0 1 0 1 1]
[0 0 0 1 0 0 0 0 0 0 0 1 1 1]
limit on degree (length): 15
ortho basis:
111110000010000
111110000100000
111110001000000
111110010000000
111110100000000
010001000000000

B_can_lab before row reduction:
000110000111111
010110001000000
000110110000000
001111000000000

B_can_lab after row reduction:
000110000111111
010110001000000
000110110000000
001111000000000
000000000111000

word generated as sum over rows of ortho_basis starting at 6: 000000000000000
gate: 000000000001111
k_gate: 000000000111111
nonzero_gate: 100000000000000
radix_gate: 000000000011111

Starting main loop:
word: 000000000000000

combo: 000000000000000

word: 111110000010000

combo: 000000000000001

word: 000000000110000

combo: 000000000000011

word: 111110000100000

combo: 000000000000010

word: 000000001100000

combo: 000000000000110

word: 111110001110000

combo: 000000000000111

temp: 000000000000111

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
000010111110011
101011001110100
101111110000001
001000111111001
rs list:
1 1 0 0 1 1 1 1 1 0 1 0 0 0 0 
0 0 1 0 1 1 1 0 0 1 1 0 1 0 1 
1 0 0 0 0 0 0 1 1 1 1 1 1 0 1 
1 0 0 1 1 1 1 1 1 0 0 0 1 0 0 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 0 0 1 0]
[0 1 0 0 0 0 0 0 0 1 1 0 0 1 0]
[0 0 1 0 0 0 0 0 0 1 0 1 0 1 0]
[0 0 0 1 0 0 0 0 0 1 0 0 1 1 0]
[0 0 0 0 1 1 1 0 0 0 1 1 1 1 1]
m:
[1 1 0 0 1 1 1 1 1 0 1 0 0 0 0]
[0 0 1 0 1 1 1 0 0 1 1 0 1 0 1]
[1 0 0 0 0 0 0 1 1 1 1 1 1 0 1]
[1 0 0 1 1 1 1 1 1 0 0 0 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (8,9), (6,7), (5,6), ( 3, 4)(12,13), ( 2, 3)(11,12), ( 3,13)( 4,12), ( 1, 5)( 4,13)( 6, 8)( 7, 9) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 9, 4, 5, 6, 7, 8, 3, 10, 11, 13, 12, 14]
[0, 1, 2, 12, 4, 5, 6, 7, 8, 13, 10, 11, 3, 9, 14]
[0, 1, 2, 13, 4, 5, 6, 7, 8, 12, 10, 11, 9, 3, 14]
[0, 1, 12, 9, 4, 5, 6, 7, 8, 11, 10, 3, 13, 2, 14]
[0, 1, 12, 13, 4, 5, 6, 7, 8, 2, 10, 3, 9, 11, 14]
[0, 2, 12, 9, 4, 5, 6, 7, 8, 10, 11, 3, 13, 1, 14]
[0, 2, 12, 13, 4, 5, 6, 7, 8, 1, 11, 3, 9, 10, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
111110001110000
101111001110000
111110010110000
101111110010000
101111010110000
111110110010000
111110100110000
111110011010000
101111101010000
101111110100000
101111100110000
101111011010000
111110101010000
111110110100000
111110011100000
101111101100000
101111111000000
101111011100000
111110101100000
111110111000000
word: 000000001010000

combo: 000000000000101

word: 111110001000000

combo: 000000000000100

word: 000000011000000

combo: 000000000001100

word: 111110011010000

combo: 000000000001101

temp: 000000000001101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000000011110000

combo: 000000000001111

word: 111110011100000

combo: 000000000001110

temp: 000000000001110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000000010100000

combo: 000000000001010

word: 111110010110000

combo: 000000000001011

temp: 000000000001011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000000010010000

combo: 000000000001001

word: 111110010000000

combo: 000000000001000

word: 000000110000000

combo: 000000000011000

word: 111110110010000

combo: 000000000011001

temp: 000000000011001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000000110110000

combo: 000000000011011

word: 111110110100000

combo: 000000000011010

temp: 000000000011010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000000111100000

combo: 000000000011110

word: 111110111110000

combo: 000000000011111

word: 000000111010000

combo: 000000000011101

word: 111110111000000

combo: 000000000011100

temp: 000000000011100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000000101000000

combo: 000000000010100

word: 111110101010000

combo: 000000000010101

temp: 000000000010101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000000101110000

combo: 000000000010111

word: 111110101100000

combo: 000000000010110

temp: 000000000010110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000000100100000

combo: 000000000010010

word: 111110100110000

combo: 000000000010011

temp: 000000000010011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000000100010000

combo: 000000000010001

word: 111110100000000

combo: 000000000010000

word: 101111100000000

combo: 000000000110000

word: 010001100010000

combo: 000000000110001

word: 101111100110000

combo: 000000000110011

temp: 000000000110011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010001100100000

combo: 000000000110010

word: 101111101100000

combo: 000000000110110

temp: 000000000110110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010001101110000

combo: 000000000110111

word: 101111101010000

combo: 000000000110101

temp: 000000000110101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010001101000000

combo: 000000000110100

word: 101111111000000

combo: 000000000111100

temp: 000000000111100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010001111010000

combo: 000000000111101

word: 101111111110000

combo: 000000000111111

word: 010001111100000

combo: 000000000111110

word: 101111110100000

combo: 000000000111010

temp: 000000000111010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010001110110000

combo: 000000000111011

word: 101111110010000

combo: 000000000111001

temp: 000000000111001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010001110000000

combo: 000000000111000

word: 101111010000000

combo: 000000000101000

word: 010001010010000

combo: 000000000101001

word: 101111010110000

combo: 000000000101011

temp: 000000000101011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010001010100000

combo: 000000000101010

word: 101111011100000

combo: 000000000101110

temp: 000000000101110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010001011110000

combo: 000000000101111

word: 101111011010000

combo: 000000000101101

temp: 000000000101101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010001011000000

combo: 000000000101100

word: 101111001000000

combo: 000000000100100

word: 010001001010000

combo: 000000000100101

word: 101111001110000

combo: 000000000100111

temp: 000000000100111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010001001100000

combo: 000000000100110

word: 101111000100000

combo: 000000000100010

word: 010001000110000

combo: 000000000100011

word: 101111000010000

combo: 000000000100001

word: 010001000000000

combo: 000000000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 1 1 0 0 0 1 1]
[0 1 0 0 0 0 0 0 0 1 0 0 1 1]
[0 0 1 0 0 0 0 0 0 0 1 0 1 1]
[0 0 0 1 0 0 0 0 0 0 0 1 1 1]
limit on degree (length): 16
ortho basis:
1011110000010000
1011110000100000
1011110001000000
1011110010000000
1011110100000000
0010001000000000
1100000000000000

B_can_lab before row reduction:
0000110000111111
0010110001000000
0000110110000000
0001111000000000

B_can_lab after row reduction:
0000110000111111
0010110001000000
0000110110000000
0001111000000000
0000000000111000

word generated as sum over rows of ortho_basis starting at 6: 1100000000000000
gate: 0000000000001111
k_gate: 0000000000111111
nonzero_gate: 1100000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1100000000000000

combo: 0000000000000000

word: 0111110000010000

combo: 0000000000000001

word: 1100000000110000

combo: 0000000000000011

temp: 0000000000000011

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1100010111000011
1100100111000101
1101000111001001
1110001111000001
rs list:
1 1 0 0 0 0 1 1 1 0 1 0 0 0 1 1 
1 0 1 0 0 0 1 1 1 0 0 1 0 0 1 1 
1 0 0 1 0 0 1 1 1 0 0 0 1 0 1 1 
1 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 0 0 1 0 0]
[0 1 0 0 0 0 0 0 0 1 1 0 0 1 0 0]
[0 0 1 0 0 0 0 0 0 1 0 1 0 1 0 0]
[0 0 0 1 0 0 0 0 0 1 0 0 1 1 0 0]
[0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1]
m:
[1 1 0 0 0 0 1 1 1 0 1 0 0 0 1 1]
[1 0 1 0 0 0 1 1 1 0 0 1 0 0 1 1]
[1 0 0 1 0 0 1 1 1 0 0 0 1 0 1 1]
[1 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (10,14), ( 4,10)(13,14), ( 3, 4)(12,13), ( 2, 3)(11,12), (15,16), ( 5, 6)(15,16), ( 7, 8)(15,16), ( 7, 9)(15,16), ( 1, 7, 9)(15,16) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 14, 15, 6, 7, 8, 9, 10, 11, 12, 13, 4, 5]
orbits:
1100000000110000
1100000001010000
1110001111010000
1100000010010000
1100000001100000
1110001110110000
1110001111100000
1100000100010000
1100000010100000
1110001101110000
1100000100100000
1110001011110000
1100000011000000
1100000101000000
1100000110000000
word: 0111110000100000

combo: 0000000000000010

word: 1100000001100000

combo: 0000000000000110

temp: 0000000000000110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111110001110000

combo: 0000000000000111

word: 1100000001010000

combo: 0000000000000101

temp: 0000000000000101

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111110001000000

combo: 0000000000000100

word: 1100000011000000

combo: 0000000000001100

temp: 0000000000001100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111110011010000

combo: 0000000000001101

word: 1100000011110000

combo: 0000000000001111

word: 0111110011100000

combo: 0000000000001110

word: 1100000010100000

combo: 0000000000001010

temp: 0000000000001010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111110010110000

combo: 0000000000001011

word: 1100000010010000

combo: 0000000000001001

temp: 0000000000001001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111110010000000

combo: 0000000000001000

word: 1100000110000000

combo: 0000000000011000

temp: 0000000000011000

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111110110010000

combo: 0000000000011001

word: 1100000110110000

combo: 0000000000011011

word: 0111110110100000

combo: 0000000000011010

word: 1100000111100000

combo: 0000000000011110

word: 0111110111110000

combo: 0000000000011111

word: 1100000111010000

combo: 0000000000011101

word: 0111110111000000

combo: 0000000000011100

word: 1100000101000000

combo: 0000000000010100

temp: 0000000000010100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111110101010000

combo: 0000000000010101

word: 1100000101110000

combo: 0000000000010111

word: 0111110101100000

combo: 0000000000010110

word: 1100000100100000

combo: 0000000000010010

temp: 0000000000010010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111110100110000

combo: 0000000000010011

word: 1100000100010000

combo: 0000000000010001

temp: 0000000000010001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111110100000000

combo: 0000000000010000

word: 0101111100000000

combo: 0000000000110000

word: 1110001100010000

combo: 0000000000110001

word: 0101111100110000

combo: 0000000000110011

word: 1110001100100000

combo: 0000000000110010

word: 0101111101100000

combo: 0000000000110110

word: 1110001101110000

combo: 0000000000110111

temp: 0000000000110111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 0101111101010000

combo: 0000000000110101

word: 1110001101000000

combo: 0000000000110100

word: 0101111111000000

combo: 0000000000111100

word: 1110001111010000

combo: 0000000000111101

temp: 0000000000111101

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 0101111111110000

combo: 0000000000111111

word: 1110001111100000

combo: 0000000000111110

temp: 0000000000111110

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 0101111110100000

combo: 0000000000111010

word: 1110001110110000

combo: 0000000000111011

temp: 0000000000111011

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 0101111110010000

combo: 0000000000111001

word: 1110001110000000

combo: 0000000000111000

word: 0101111010000000

combo: 0000000000101000

word: 1110001010010000

combo: 0000000000101001

word: 0101111010110000

combo: 0000000000101011

word: 1110001010100000

combo: 0000000000101010

word: 0101111011100000

combo: 0000000000101110

word: 1110001011110000

combo: 0000000000101111

temp: 0000000000101111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 0101111011010000

combo: 0000000000101101

word: 1110001011000000

combo: 0000000000101100

word: 0101111001000000

combo: 0000000000100100

word: 1110001001010000

combo: 0000000000100101

word: 0101111001110000

combo: 0000000000100111

word: 1110001001100000

combo: 0000000000100110

word: 0101111000100000

combo: 0000000000100010

word: 1110001000110000

combo: 0000000000100011

word: 0101111000010000

combo: 0000000000100001

word: 1110001000000000

combo: 0000000000100000

temp: 0000000000100000

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

passed if statements
temp basis:
1100000111110001
1100010000000010
1100100000000100
1101000000001000
rs list:
1 0 0 0 1 1 1 1 1 0 0 0 0 0 1 1 
0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 1 
0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 1 
0 0 0 1 0 0 0 0 0 0 0 0 1 0 1 1 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 0 0 1 0 0]
[0 1 0 0 0 0 0 0 0 1 1 0 0 1 0 0]
[0 0 1 0 0 0 0 0 0 1 0 1 0 1 0 0]
[0 0 0 1 0 0 0 0 0 1 0 0 1 1 0 0]
[0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1]
m:
[1 0 0 0 1 1 1 1 1 0 0 0 0 0 1 1]
[0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 1]
[0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 1]
[0 0 0 1 0 0 0 0 0 0 0 0 1 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (10,14), (8,9), (7,8), (6,7), (5,6), ( 4,13), ( 4,15)(13,16), ( 3, 4)(12,13), ( 2, 3)(11,12), (1,5) ] )
Right transversal of automorphism group of B_aug:
[0, 9, 2, 3, 4, 5, 6, 7, 8, 1, 13, 11, 12, 10, 14, 15]
[0, 9, 1, 3, 4, 5, 6, 7, 8, 2, 13, 10, 12, 11, 14, 15]
[0, 9, 1, 2, 4, 5, 6, 7, 8, 3, 13, 10, 11, 12, 14, 15]
[0, 9, 1, 2, 4, 5, 6, 7, 8, 14, 13, 10, 11, 15, 3, 12]
orbits:
1110001000000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 1 1 1 1 0 0 1 1]
[0 1 0 0 0 0 0 0 1 0 1 1]
[0 0 1 0 0 0 0 0 0 1 1 1]
limit on degree (length): 15
ortho basis:
000111000001000
000111000010000
000111000100000
000111001000000
000111010000000
000100100000000
101000000000000
110000000000000

B_can_lab before row reduction:
000011000111111
000011011000000
000111100000000

B_can_lab after row reduction:
000011000111111
000011011000000
000111100000000

word generated as sum over rows of ortho_basis starting at 6: 011000000000000
gate: 000000000000111
k_gate: 000000000111111
nonzero_gate: 111000000000000
radix_gate: 000000000011111

Starting main loop:
word: 011000000000000

combo: 000000000000000

word: 011111000001000

combo: 000000000000001

word: 011000000011000

combo: 000000000000011

word: 011111000010000

combo: 000000000000010

word: 011000000110000

combo: 000000000000110

word: 011111000111000

combo: 000000000000111

word: 011000000101000

combo: 000000000000101

word: 011111000100000

combo: 000000000000100

word: 011000001100000

combo: 000000000001100

word: 011111001101000

combo: 000000000001101

word: 011000001111000

combo: 000000000001111

word: 011111001110000

combo: 000000000001110

word: 011000001010000

combo: 000000000001010

word: 011111001011000

combo: 000000000001011

word: 011000001001000

combo: 000000000001001

word: 011111001000000

combo: 000000000001000

word: 011000011000000

combo: 000000000011000

word: 011111011001000

combo: 000000000011001

word: 011000011011000

combo: 000000000011011

word: 011111011010000

combo: 000000000011010

word: 011000011110000

combo: 000000000011110

word: 011111011111000

combo: 000000000011111

word: 011000011101000

combo: 000000000011101

word: 011111011100000

combo: 000000000011100

word: 011000010100000

combo: 000000000010100

word: 011111010101000

combo: 000000000010101

word: 011000010111000

combo: 000000000010111

word: 011111010110000

combo: 000000000010110

word: 011000010010000

combo: 000000000010010

word: 011111010011000

combo: 000000000010011

word: 011000010001000

combo: 000000000010001

word: 011111010000000

combo: 000000000010000

word: 011011110000000

combo: 000000000110000

word: 011100110001000

combo: 000000000110001

word: 011011110011000

combo: 000000000110011

word: 011100110010000

combo: 000000000110010

word: 011011110110000

combo: 000000000110110

word: 011100110111000

combo: 000000000110111

word: 011011110101000

combo: 000000000110101

word: 011100110100000

combo: 000000000110100

word: 011011111100000

combo: 000000000111100

word: 011100111101000

combo: 000000000111101

word: 011011111111000

combo: 000000000111111

word: 011100111110000

combo: 000000000111110

word: 011011111010000

combo: 000000000111010

word: 011100111011000

combo: 000000000111011

word: 011011111001000

combo: 000000000111001

word: 011100111000000

combo: 000000000111000

word: 011011101000000

combo: 000000000101000

word: 011100101001000

combo: 000000000101001

word: 011011101011000

combo: 000000000101011

word: 011100101010000

combo: 000000000101010

word: 011011101110000

combo: 000000000101110

word: 011100101111000

combo: 000000000101111

word: 011011101101000

combo: 000000000101101

word: 011100101100000

combo: 000000000101100

word: 011011100100000

combo: 000000000100100

word: 011100100101000

combo: 000000000100101

word: 011011100111000

combo: 000000000100111

word: 011100100110000

combo: 000000000100110

word: 011011100010000

combo: 000000000100010

word: 011100100011000

combo: 000000000100011

word: 011011100001000

combo: 000000000100001

word: 011100100000000

combo: 000000000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 1 1 1 1 0 0 1 1]
[0 1 0 0 0 0 0 0 1 0 1 1]
[0 0 1 0 0 0 0 0 0 1 1 1]
limit on degree (length): 16
ortho basis:
0000111000001000
0000111000010000
0000111000100000
0000111001000000
0000111010000000
0000100100000000
1001000000000000
1010000000000000
1100000000000000

B_can_lab before row reduction:
0000011000111111
0000011011000000
0000111100000000

B_can_lab after row reduction:
0000011000111111
0000011011000000
0000111100000000

word generated as sum over rows of ortho_basis starting at 6: 1111000000000000
gate: 0000000000000111
k_gate: 0000000000111111
nonzero_gate: 1111000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1111000000000000

combo: 0000000000000000

temp: 0000000000000000

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
0000100111111001
1111000000000000
0000101100000010
rs list:
1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
0 1 0 0 0 0 0 0 1 1 0 1 0 0 0 0 
B_aug:
[1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 0]
[0 1 0 0 0 0 0 0 1 1 0 1 0 0 0 0]
[0 0 1 0 0 0 0 0 1 0 1 1 0 0 0 0]
[0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1]
m:
[1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 0]
[0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1]
[0 1 0 0 0 0 0 0 1 1 0 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), ( 9,12), (7,8), (6,7), (5,6), (4,5), ( 3,11), ( 2, 9)(10,12), (1,4) ] )
Right transversal of automorphism group of B_aug:
[0, 2, 1, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15]
[0, 2, 8, 3, 4, 5, 6, 7, 1, 10, 11, 9, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111000000000000
word: 1111111000001000

combo: 0000000000000001

temp: 0000000000000001

orbit_checks[temp>>log2radix]= 0000000000000001

passed if statements
temp basis:
0000100111111001
1111010100001010
1111111000001000
rs list:
1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 0 
0 1 0 1 0 0 0 0 1 0 1 0 1 1 1 1 
0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
B_aug:
[1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 0]
[0 1 0 0 0 0 0 0 1 1 0 1 0 0 0 0]
[0 0 1 0 0 0 0 0 1 0 1 1 0 0 0 0]
[0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1]
m:
[1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 0]
[0 1 0 1 0 0 0 0 1 0 1 0 1 1 1 1]
[0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), (7,8), (6,7), (5,6), (1,5), ( 2,12)( 9,10), ( 2,10)( 9,12) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 8, 3, 4, 5, 6, 7, 2, 9, 11, 10, 12, 13, 14, 15]
[0, 1, 10, 3, 4, 5, 6, 7, 11, 9, 2, 8, 12, 13, 14, 15]
[0, 2, 1, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15]
[0, 1, 11, 3, 4, 5, 6, 7, 10, 9, 8, 2, 12, 13, 14, 15]
[0, 2, 9, 3, 4, 5, 6, 7, 11, 10, 1, 8, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111111000001000
1111011100001000
1111111000010000
1111011111111000
1111011100010000
1111111011111000
1111111000100000
1111011100100000
1111111001000000
1111011101000000
1111111010000000
1111011110000000
word: 1111000000011000

combo: 0000000000000011

word: 1111111000010000

combo: 0000000000000010

temp: 0000000000000010

orbit_checks[temp>>log2radix]= 10000000000000010000000100010111

word: 1111000000110000

combo: 0000000000000110

word: 1111111000111000

combo: 0000000000000111

word: 1111000000101000

combo: 0000000000000101

word: 1111111000100000

combo: 0000000000000100

temp: 0000000000000100

orbit_checks[temp>>log2radix]= 10000000000000010000000100010111

word: 1111000001100000

combo: 0000000000001100

word: 1111111001101000

combo: 0000000000001101

word: 1111000001111000

combo: 0000000000001111

temp: 0000000000001111

orbit_checks[temp>>log2radix]= 10000000000000010000000100010111

passed if statements
temp basis:
1111001010000011
1111010010000101
1111100110000001
rs list:
1 1 0 0 0 0 0 1 0 1 0 0 1 1 1 1 
1 0 1 0 0 0 0 1 0 0 1 0 1 1 1 1 
1 0 0 0 0 0 0 1 1 0 0 1 1 1 1 1 
B_aug:
[1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 0]
[0 1 0 0 0 0 0 0 1 1 0 1 0 0 0 0]
[0 0 1 0 0 0 0 0 1 0 1 1 0 0 0 0]
[0 0 0 1 1 1 1 0 0 0 0 0 1 1 1 1]
m:
[1 1 0 0 0 0 0 1 0 1 0 0 1 1 1 1]
[1 0 1 0 0 0 0 1 0 0 1 0 1 1 1 1]
[1 0 0 0 0 0 0 1 1 0 0 1 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (13,15), (13,14), (13,15,16), ( 5, 7)(13,15,16), ( 5, 6)(13,15,16), ( 4, 5, 6)(13,15,16), ( 5, 6)( 9,12)(13,15,16), ( 3, 9)( 5, 6)(11,12)(13,15,16), ( 2, 3)( 5, 6)(10,11)(13,15,16), ( 1, 8)( 5, 6)(13,15,16) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 12, 13, 14, 15, 7, 8, 9, 10, 11, 3, 4, 5, 6]
orbits:
1111000001111000
1111000010111000
1111100110001000
1111000011011000
1111100101001000
1111100110010000
1111000011101000
1111100100101000
1111100101010000
1111100110100000
1111000011110000
1111100100011000
1111100100110000
1111100101100000
1111100111000000
word: 1111111001110000

combo: 0000000000001110

word: 1111000001010000

combo: 0000000000001010

word: 1111111001011000

combo: 0000000000001011

word: 1111000001001000

combo: 0000000000001001

word: 1111111001000000

combo: 0000000000001000

temp: 0000000000001000

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111000011000000

combo: 0000000000011000

word: 1111111011001000

combo: 0000000000011001

word: 1111000011011000

combo: 0000000000011011

temp: 0000000000011011

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111111011010000

combo: 0000000000011010

word: 1111000011110000

combo: 0000000000011110

temp: 0000000000011110

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111111011111000

combo: 0000000000011111

temp: 0000000000011111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111000011101000

combo: 0000000000011101

temp: 0000000000011101

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111111011100000

combo: 0000000000011100

word: 1111000010100000

combo: 0000000000010100

word: 1111111010101000

combo: 0000000000010101

word: 1111000010111000

combo: 0000000000010111

temp: 0000000000010111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111111010110000

combo: 0000000000010110

word: 1111000010010000

combo: 0000000000010010

word: 1111111010011000

combo: 0000000000010011

word: 1111000010001000

combo: 0000000000010001

word: 1111111010000000

combo: 0000000000010000

temp: 0000000000010000

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111011110000000

combo: 0000000000110000

temp: 0000000000110000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111100110001000

combo: 0000000000110001

temp: 0000000000110001

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111011110011000

combo: 0000000000110011

word: 1111100110010000

combo: 0000000000110010

temp: 0000000000110010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111011110110000

combo: 0000000000110110

word: 1111100110111000

combo: 0000000000110111

word: 1111011110101000

combo: 0000000000110101

word: 1111100110100000

combo: 0000000000110100

temp: 0000000000110100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111011111100000

combo: 0000000000111100

word: 1111100111101000

combo: 0000000000111101

word: 1111011111111000

combo: 0000000000111111

temp: 0000000000111111

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111100111110000

combo: 0000000000111110

word: 1111011111010000

combo: 0000000000111010

word: 1111100111011000

combo: 0000000000111011

word: 1111011111001000

combo: 0000000000111001

word: 1111100111000000

combo: 0000000000111000

temp: 0000000000111000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111011101000000

combo: 0000000000101000

temp: 0000000000101000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111100101001000

combo: 0000000000101001

temp: 0000000000101001

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111011101011000

combo: 0000000000101011

word: 1111100101010000

combo: 0000000000101010

temp: 0000000000101010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111011101110000

combo: 0000000000101110

word: 1111100101111000

combo: 0000000000101111

word: 1111011101101000

combo: 0000000000101101

word: 1111100101100000

combo: 0000000000101100

temp: 0000000000101100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111011100100000

combo: 0000000000100100

temp: 0000000000100100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111100100101000

combo: 0000000000100101

temp: 0000000000100101

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111011100111000

combo: 0000000000100111

word: 1111100100110000

combo: 0000000000100110

temp: 0000000000100110

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111011100010000

combo: 0000000000100010

temp: 0000000000100010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111100100011000

combo: 0000000000100011

temp: 0000000000100011

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111011100001000

combo: 0000000000100001

temp: 0000000000100001

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111100100000000

combo: 0000000000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 1 1 1 1 0 1 1]
[0 1 0 0 0 0 0 1 1 1]
limit on degree (length): 13
ortho basis:
1001100000100
1001100001000
1001100010000
1001100100000
1001101000000
0001010000000
1010000000000
1100000000000

B_can_lab before row reduction:
0001111110110
0000000001111

B_can_lab after row reduction:
0001111111001
0001111110110

word generated as sum over rows of ortho_basis starting at 6: 0110000000000
gate: 0000000000011
k_gate: 0000000111111
nonzero_gate: 1110000000000
radix_gate: 0000000011111

Starting main loop:
word: 0110000000000

combo: 0000000000000

word: 1111100000100

combo: 0000000000001

word: 0110000001100

combo: 0000000000011

word: 1111100001000

combo: 0000000000010

word: 0110000011000

combo: 0000000000110

word: 1111100011100

combo: 0000000000111

temp: 0000000000111

orbit_checks[temp>>log2radix]= 0000000000000

passed if statements
temp basis:
1111001100011
0001011111101
rs list:
1 1 0 0 0 1 1 0 0 1 1 1 1 
1 0 1 1 1 1 1 1 0 1 0 0 0 
B_aug:
[1 0 1 1 1 1 1 1 0 1 0 0 0]
[0 1 0 0 0 0 0 1 1 1 0 0 0]
[0 0 1 1 1 0 0 0 1 1 1 1 1]
m:
[1 1 0 0 0 1 1 0 0 1 1 1 1]
[1 0 1 1 1 1 1 1 0 1 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (12,13), (11,12), (6,7), (4,5), (3,4), ( 2, 8)( 3,11)( 4,12)( 5,13), (1,6), ( 1, 3)( 4, 6)( 5, 7)( 8,10) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 10, 11, 12, 5, 6, 7, 9, 8, 2, 3, 4]
[10, 1, 2, 3, 4, 11, 12, 8, 7, 9, 0, 5, 6]
[2, 7, 10, 11, 12, 3, 4, 8, 1, 9, 0, 5, 6]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
orbits:
1111100011100
1111100101100
1110111100100
1110110011100
1111101001100
1111100110100
1110111010100
1110110101100
1110111101000
1111101100100
1111101010100
1110110110100
1110111001100
1111100111000
1110111011000
1110111110000
1111101101000
1111101011000
1110110111000
1111101110000
word: 0110000010100

combo: 0000000000101

word: 1111100010000

combo: 0000000000100

word: 0110000110000

combo: 0000000001100

word: 1111100110100

combo: 0000000001101

temp: 0000000001101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0110000111100

combo: 0000000001111

word: 1111100111000

combo: 0000000001110

temp: 0000000001110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0110000101000

combo: 0000000001010

word: 1111100101100

combo: 0000000001011

temp: 0000000001011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0110000100100

combo: 0000000001001

word: 1111100100000

combo: 0000000001000

word: 0110001100000

combo: 0000000011000

word: 1111101100100

combo: 0000000011001

temp: 0000000011001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0110001101100

combo: 0000000011011

word: 1111101101000

combo: 0000000011010

temp: 0000000011010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0110001111000

combo: 0000000011110

word: 1111101111100

combo: 0000000011111

word: 0110001110100

combo: 0000000011101

word: 1111101110000

combo: 0000000011100

temp: 0000000011100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0110001010000

combo: 0000000010100

word: 1111101010100

combo: 0000000010101

temp: 0000000010101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0110001011100

combo: 0000000010111

word: 1111101011000

combo: 0000000010110

temp: 0000000010110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0110001001000

combo: 0000000010010

word: 1111101001100

combo: 0000000010011

temp: 0000000010011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0110001000100

combo: 0000000010001

word: 1111101000000

combo: 0000000010000

word: 1110111000000

combo: 0000000110000

word: 0111011000100

combo: 0000000110001

word: 1110111001100

combo: 0000000110011

temp: 0000000110011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0111011001000

combo: 0000000110010

word: 1110111011000

combo: 0000000110110

temp: 0000000110110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0111011011100

combo: 0000000110111

word: 1110111010100

combo: 0000000110101

temp: 0000000110101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0111011010000

combo: 0000000110100

word: 1110111110000

combo: 0000000111100

temp: 0000000111100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0111011110100

combo: 0000000111101

word: 1110111111100

combo: 0000000111111

word: 0111011111000

combo: 0000000111110

word: 1110111101000

combo: 0000000111010

temp: 0000000111010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0111011101100

combo: 0000000111011

word: 1110111100100

combo: 0000000111001

temp: 0000000111001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0111011100000

combo: 0000000111000

word: 1110110100000

combo: 0000000101000

word: 0111010100100

combo: 0000000101001

word: 1110110101100

combo: 0000000101011

temp: 0000000101011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0111010101000

combo: 0000000101010

word: 1110110111000

combo: 0000000101110

temp: 0000000101110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0111010111100

combo: 0000000101111

word: 1110110110100

combo: 0000000101101

temp: 0000000101101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0111010110000

combo: 0000000101100

word: 1110110010000

combo: 0000000100100

word: 0111010010100

combo: 0000000100101

word: 1110110011100

combo: 0000000100111

temp: 0000000100111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0111010011000

combo: 0000000100110

word: 1110110001000

combo: 0000000100010

word: 0111010001100

combo: 0000000100011

word: 1110110000100

combo: 0000000100001

word: 0111010000000

combo: 0000000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 1 1 1 1 0 1 1]
[0 1 0 0 0 0 0 1 1 1]
limit on degree (length): 14
ortho basis:
10001100000100
10001100001000
10001100010000
10001100100000
10001101000000
00001010000000
10010000000000
10100000000000
11000000000000

B_can_lab before row reduction:
00001111110110
00000000001111

B_can_lab after row reduction:
00001111111001
00001111110110

word generated as sum over rows of ortho_basis starting at 6: 11110000000000
gate: 00000000000011
k_gate: 00000000111111
nonzero_gate: 11110000000000
radix_gate: 00000000011111

Starting main loop:
word: 11110000000000

combo: 00000000000000

temp: 00000000000000

orbit_checks[temp>>log2radix]= 00000000000000

passed if statements
temp basis:
11110000000000
00001011111101
rs list:
0 0 0 0 0 0 0 0 0 0 1 1 1 1 
1 0 1 1 1 1 1 1 0 1 0 0 0 0 
B_aug:
[1 0 1 1 1 1 1 1 0 1 0 0 0 0]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 0 0 0 0 0 0 0 0 1 1 1 1]
m:
[0 0 0 0 0 0 0 0 0 0 1 1 1 1]
[1 0 1 1 1 1 1 1 0 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (3,4), (3,5), (3,6)(4,5), (3,7)(4,6), (1,3,7)(4,6), ( 3, 7)( 4, 6)(12,13), ( 3, 7)( 4, 6)(12,14), ( 3, 7)( 4, 6)(11,12,14), ( 3, 7)( 4, 6)( 8,10)(12,14), ( 2, 9)( 3, 7)( 4, 6)(12,14) ] )
Right transversal of automorphism group of B_aug:
[0, 7, 2, 3, 4, 5, 6, 1, 9, 8, 10, 11, 12, 13]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
orbits:
11110000000000
word: 01111100000100

combo: 00000000000001

word: 11110000001100

combo: 00000000000011

word: 01111100001000

combo: 00000000000010

word: 11110000011000

combo: 00000000000110

word: 01111100011100

combo: 00000000000111

word: 11110000010100

combo: 00000000000101

word: 01111100010000

combo: 00000000000100

word: 11110000110000

combo: 00000000001100

word: 01111100110100

combo: 00000000001101

word: 11110000111100

combo: 00000000001111

temp: 00000000001111

orbit_checks[temp>>log2radix]= 00000000000001

passed if statements
temp basis:
11110101000011
11111011000001
rs list:
1 1 0 0 0 0 1 0 1 0 1 1 1 1 
1 0 0 0 0 0 1 1 0 1 1 1 1 1 
B_aug:
[1 0 1 1 1 1 1 1 0 1 0 0 0 0]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 1 1 1 1 0 0 0 0 1 1 1 1]
m:
[1 1 0 0 0 0 1 0 1 0 1 1 1 1]
[1 0 0 0 0 0 1 1 0 1 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,13), (11,12), (11,13,14), ( 4, 6)(11,13,14), ( 4, 5)(11,13,14), ( 3, 4, 5)(11,13,14), ( 4, 5)( 8,10)(11,13,14), ( 2, 8)( 4, 5)( 9,10)(11,13,14), ( 1, 7)( 4, 5)(11,13,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 10, 11, 12, 13, 6, 7, 8, 9, 2, 3, 4, 5]
orbits:
11110000111100
11110001011100
11111011000100
11110001101100
11111010100100
11111011001000
11110001110100
11111010010100
11111010101000
11111011010000
11110001111000
11111010001100
11111010011000
11111010110000
11111011100000
word: 01111100111000

combo: 00000000001110

word: 11110000101000

combo: 00000000001010

word: 01111100101100

combo: 00000000001011

word: 11110000100100

combo: 00000000001001

word: 01111100100000

combo: 00000000001000

word: 11110001100000

combo: 00000000011000

word: 01111101100100

combo: 00000000011001

word: 11110001101100

combo: 00000000011011

temp: 00000000011011

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 01111101101000

combo: 00000000011010

word: 11110001111000

combo: 00000000011110

temp: 00000000011110

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 01111101111100

combo: 00000000011111

word: 11110001110100

combo: 00000000011101

temp: 00000000011101

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 01111101110000

combo: 00000000011100

word: 11110001010000

combo: 00000000010100

word: 01111101010100

combo: 00000000010101

word: 11110001011100

combo: 00000000010111

temp: 00000000010111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 01111101011000

combo: 00000000010110

word: 11110001001000

combo: 00000000010010

word: 01111101001100

combo: 00000000010011

word: 11110001000100

combo: 00000000010001

word: 01111101000000

combo: 00000000010000

word: 01110111000000

combo: 00000000110000

word: 11111011000100

combo: 00000000110001

temp: 00000000110001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 01110111001100

combo: 00000000110011

word: 11111011001000

combo: 00000000110010

temp: 00000000110010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 01110111011000

combo: 00000000110110

word: 11111011011100

combo: 00000000110111

word: 01110111010100

combo: 00000000110101

word: 11111011010000

combo: 00000000110100

temp: 00000000110100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 01110111110000

combo: 00000000111100

word: 11111011110100

combo: 00000000111101

word: 01110111111100

combo: 00000000111111

word: 11111011111000

combo: 00000000111110

word: 01110111101000

combo: 00000000111010

word: 11111011101100

combo: 00000000111011

word: 01110111100100

combo: 00000000111001

word: 11111011100000

combo: 00000000111000

temp: 00000000111000

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 01110110100000

combo: 00000000101000

word: 11111010100100

combo: 00000000101001

temp: 00000000101001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 01110110101100

combo: 00000000101011

word: 11111010101000

combo: 00000000101010

temp: 00000000101010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 01110110111000

combo: 00000000101110

word: 11111010111100

combo: 00000000101111

word: 01110110110100

combo: 00000000101101

word: 11111010110000

combo: 00000000101100

temp: 00000000101100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 01110110010000

combo: 00000000100100

word: 11111010010100

combo: 00000000100101

temp: 00000000100101

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 01110110011100

combo: 00000000100111

word: 11111010011000

combo: 00000000100110

temp: 00000000100110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 01110110001000

combo: 00000000100010

word: 11111010001100

combo: 00000000100011

temp: 00000000100011

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 01110110000100

combo: 00000000100001

word: 11111010000000

combo: 00000000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 1 1 0 1 1 1 1 1]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 1 1 1 1 0 0 0 0 1 1 1 1]
limit on degree (length): 15
ortho basis:
011100000001000
011100000010000
011100000100000
101100001000000
001000010000000
010000100000000
010001000000000
010010000000000

B_can_lab before row reduction:
011000111100110
000000000001111
000111111110000

B_can_lab after row reduction:
011000111101001
011000111100110
000111111110000

word generated as sum over rows of ortho_basis starting at 8: 000000000000000
gate: 000000000000111
k_gate: 000000011111111
nonzero_gate: 100000000000000
radix_gate: 000000000011111

Starting main loop:
word: 000000000000000

combo: 000000000000000

word: 011100000001000

combo: 000000000000001

word: 000000000011000

combo: 000000000000011

word: 011100000010000

combo: 000000000000010

word: 000000000110000

combo: 000000000000110

word: 011100000111000

combo: 000000000000111

word: 000000000101000

combo: 000000000000101

word: 011100000100000

combo: 000000000000100

word: 110000001100000

combo: 000000000001100

temp: 000000000001100

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
010111101000011
011011111000001
100011101011100
rs list:
1 1 0 0 0 0 1 0 1 1 1 1 0 1 0 
1 0 0 0 0 0 1 1 1 1 1 0 1 1 0 
0 0 1 1 1 0 1 0 1 1 1 0 0 0 1 
B_aug:
[1 0 0 0 0 0 1 1 1 1 1 0 1 1 0]
[0 1 0 0 0 0 0 1 0 0 0 1 1 0 0]
[0 0 1 1 1 1 0 0 1 1 1 0 0 1 0]
[0 0 0 0 0 1 1 0 0 0 0 0 0 1 1]
m:
[1 1 0 0 0 0 1 0 1 1 1 1 0 1 0]
[1 0 0 0 0 0 1 1 1 1 1 0 1 1 0]
[0 0 1 1 1 0 1 0 1 1 1 0 0 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (10,11), ( 9,10), ( 8,13), (4,5), (3,4), ( 3, 9)( 4,10)( 5,11)( 7,15), ( 2, 8)(12,13) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 14, 13]
[0, 1, 8, 9, 10, 14, 5, 7, 2, 3, 4, 11, 12, 6, 13]
orbits:
110000001100000
100010001100000
110000001010000
101011111100000
100001001100000
100010001010000
111001111100000
110000001001000
101011111010000
100000101100000
100001001010000
111010111100000
100010001001000
111001111010000
100011101111000
101011111001000
100000101010000
111011011100000
100001001001000
111010111010000
110001101111000
111001111001000
111000011111000
100000101001000
111011011010000
110010101111000
111010111001000
101010011111000
110011001111000
111011011001000
101001011111000
101000111111000
word: 101100001101000

combo: 000000000001101

word: 110000001111000

combo: 000000000001111

word: 101100001110000

combo: 000000000001110

word: 110000001010000

combo: 000000000001010

temp: 000000000001010

orbit_checks[temp>>log2radix]= 10000000000000000001011000000000

word: 101100001011000

combo: 000000000001011

word: 110000001001000

combo: 000000000001001

temp: 000000000001001

orbit_checks[temp>>log2radix]= 10000000000000000001011000000000

word: 101100001000000

combo: 000000000001000

temp: 000000000001000

orbit_checks[temp>>log2radix]= 10000000000000000001011000000000

passed if statements
temp basis:
111011100000011
110111110000001
101100001000000
rs list:
1 1 0 0 0 0 0 0 1 1 1 0 1 1 1 
1 0 0 0 0 0 0 1 1 1 1 1 0 1 1 
0 0 0 0 0 0 1 0 0 0 0 1 1 0 1 
B_aug:
[1 0 0 0 0 0 1 1 1 1 1 0 1 1 0]
[0 1 0 0 0 0 0 1 0 0 0 1 1 0 0]
[0 0 1 1 1 1 0 0 1 1 1 0 0 1 0]
[0 0 0 0 0 0 1 0 0 0 0 1 1 0 1]
m:
[1 1 0 0 0 0 0 0 1 1 1 0 1 1 1]
[1 0 0 0 0 0 0 1 1 1 1 1 0 1 1]
[0 0 0 0 0 0 1 0 0 0 0 1 1 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,14), (10,11), ( 9,10), ( 7,12)(13,15), ( 7,13)(12,15), (5,6), (4,5), (3,4), ( 2, 7)( 8,15) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 8, 9, 10, 13, 6, 7, 2, 3, 4, 11, 12, 5, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
101100001000000
100100011000000
110111111000000
111111101000000
word: 100100011000000

combo: 000000000011000

temp: 000000000011000

orbit_checks[temp>>log2radix]= 10000001000000000001011100000000

word: 111000011001000

combo: 000000000011001

word: 100100011011000

combo: 000000000011011

word: 111000011010000

combo: 000000000011010

word: 100100011110000

combo: 000000000011110

word: 111000011111000

combo: 000000000011111

temp: 000000000011111

orbit_checks[temp>>log2radix]= 10000001000000000001011100000000

word: 100100011101000

combo: 000000000011101

word: 111000011100000

combo: 000000000011100

word: 010100010100000

combo: 000000000010100

word: 001000010101000

combo: 000000000010101

word: 010100010111000

combo: 000000000010111

word: 001000010110000

combo: 000000000010110

word: 010100010010000

combo: 000000000010010

word: 001000010011000

combo: 000000000010011

word: 010100010001000

combo: 000000000010001

word: 001000010000000

combo: 000000000010000

word: 011000110000000

combo: 000000000110000

word: 000100110001000

combo: 000000000110001

word: 011000110011000

combo: 000000000110011

word: 000100110010000

combo: 000000000110010

word: 011000110110000

combo: 000000000110110

word: 000100110111000

combo: 000000000110111

word: 011000110101000

combo: 000000000110101

word: 000100110100000

combo: 000000000110100

word: 101000111100000

combo: 000000000111100

word: 110100111101000

combo: 000000000111101

temp: 000000000111101

orbit_checks[temp>>log2radix]= 10000000000000000001011000000000

passed if statements
temp basis:
111000101101010
101111000101001
011011111000001
rs list:
0 1 0 1 0 1 1 0 1 0 0 0 1 1 1 
1 0 0 1 0 1 0 0 0 1 1 1 1 0 1 
1 0 0 0 0 0 1 1 1 1 1 0 1 1 0 
B_aug:
[1 0 0 0 0 0 1 1 1 1 1 0 1 1 0]
[0 1 0 0 0 0 0 1 0 0 0 1 1 0 0]
[0 0 1 1 1 1 0 0 1 1 1 0 0 1 0]
[0 0 0 1 0 1 1 1 1 0 0 1 0 1 1]
m:
[0 1 0 1 0 1 1 0 1 0 0 0 1 1 1]
[1 0 0 1 0 1 0 0 0 1 1 1 1 0 1]
[1 0 0 0 0 0 1 1 1 1 1 0 1 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,14), (4,6), ( 4, 6)(10,11), ( 3, 5)( 4, 6)(10,11), ( 2, 8)( 4, 6)(10,11)(12,13), ( 2,12)( 4, 6)( 8,13)(10,11), ( 4,14, 6, 9)( 7,15)( 8,12)(10,11), ( 1, 7,15)( 4,11, 9)( 6,10,14)( 8,12,13) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 3, 2, 5, 4, 6, 7, 9, 8, 13, 11, 12, 10, 14]
[0, 1, 8, 9, 13, 10, 6, 7, 2, 3, 5, 11, 12, 4, 14]
[0, 1, 9, 8, 10, 13, 6, 7, 3, 2, 4, 11, 12, 5, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
110100111101000
100110111101000
110101011101000
110100111011000
110100111110000
100111011011000
100110111011000
111100101101000
101111001101000
100101111101000
100111011101000
100110111110000
110101011011000
101110101101000
111101001101000
110110011101000
110101011110000
111100101011000
101111001011000
100101111011000
111100101110000
101111001110000
101110101011000
111101001011000
100101111110000
110110011011000
101101101101000
111110001101000
100111011110000
101110101110000
111101001110000
110110011110000
101101101011000
111110001011000
101101101110000
111110001110000
word: 101000111111000

combo: 000000000111111

temp: 000000000111111

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 110100111110000

combo: 000000000111110

temp: 000000000111110

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 101000111010000

combo: 000000000111010

word: 110100111011000

combo: 000000000111011

temp: 000000000111011

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 101000111001000

combo: 000000000111001

word: 110100111000000

combo: 000000000111000

word: 111100101000000

combo: 000000000101000

word: 100000101001000

combo: 000000000101001

temp: 000000000101001

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 111100101011000

combo: 000000000101011

temp: 000000000101011

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 100000101010000

combo: 000000000101010

temp: 000000000101010

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 111100101110000

combo: 000000000101110

temp: 000000000101110

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 100000101111000

combo: 000000000101111

word: 111100101101000

combo: 000000000101101

temp: 000000000101101

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 100000101100000

combo: 000000000101100

temp: 000000000101100

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 001100100100000

combo: 000000000100100

word: 010000100101000

combo: 000000000100101

word: 001100100111000

combo: 000000000100111

word: 010000100110000

combo: 000000000100110

word: 001100100010000

combo: 000000000100010

word: 010000100011000

combo: 000000000100011

word: 001100100001000

combo: 000000000100001

word: 010000100000000

combo: 000000000100000

word: 000001100000000

combo: 000000001100000

word: 011101100001000

combo: 000000001100001

word: 000001100011000

combo: 000000001100011

word: 011101100010000

combo: 000000001100010

word: 000001100110000

combo: 000000001100110

word: 011101100111000

combo: 000000001100111

word: 000001100101000

combo: 000000001100101

word: 011101100100000

combo: 000000001100100

word: 110001101100000

combo: 000000001101100

word: 101101101101000

combo: 000000001101101

temp: 000000001101101

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 110001101111000

combo: 000000001101111

temp: 000000001101111

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 101101101110000

combo: 000000001101110

temp: 000000001101110

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 110001101010000

combo: 000000001101010

word: 101101101011000

combo: 000000001101011

temp: 000000001101011

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 110001101001000

combo: 000000001101001

word: 101101101000000

combo: 000000001101000

word: 100101111000000

combo: 000000001111000

word: 111001111001000

combo: 000000001111001

temp: 000000001111001

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 100101111011000

combo: 000000001111011

temp: 000000001111011

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 111001111010000

combo: 000000001111010

temp: 000000001111010

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 100101111110000

combo: 000000001111110

temp: 000000001111110

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 111001111111000

combo: 000000001111111

word: 100101111101000

combo: 000000001111101

temp: 000000001111101

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 111001111100000

combo: 000000001111100

temp: 000000001111100

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 010101110100000

combo: 000000001110100

word: 001001110101000

combo: 000000001110101

word: 010101110111000

combo: 000000001110111

word: 001001110110000

combo: 000000001110110

word: 010101110010000

combo: 000000001110010

word: 001001110011000

combo: 000000001110011

word: 010101110001000

combo: 000000001110001

word: 001001110000000

combo: 000000001110000

word: 011001010000000

combo: 000000001010000

word: 000101010001000

combo: 000000001010001

word: 011001010011000

combo: 000000001010011

word: 000101010010000

combo: 000000001010010

word: 011001010110000

combo: 000000001010110

word: 000101010111000

combo: 000000001010111

word: 011001010101000

combo: 000000001010101

word: 000101010100000

combo: 000000001010100

word: 101001011100000

combo: 000000001011100

word: 110101011101000

combo: 000000001011101

temp: 000000001011101

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 101001011111000

combo: 000000001011111

temp: 000000001011111

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 110101011110000

combo: 000000001011110

temp: 000000001011110

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 101001011010000

combo: 000000001011010

word: 110101011011000

combo: 000000001011011

temp: 000000001011011

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 101001011001000

combo: 000000001011001

word: 110101011000000

combo: 000000001011000

word: 111101001000000

combo: 000000001001000

word: 100001001001000

combo: 000000001001001

temp: 000000001001001

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 111101001011000

combo: 000000001001011

temp: 000000001001011

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 100001001010000

combo: 000000001001010

temp: 000000001001010

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 111101001110000

combo: 000000001001110

temp: 000000001001110

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 100001001111000

combo: 000000001001111

word: 111101001101000

combo: 000000001001101

temp: 000000001001101

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 100001001100000

combo: 000000001001100

temp: 000000001001100

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 001101000100000

combo: 000000001000100

word: 010001000101000

combo: 000000001000101

word: 001101000111000

combo: 000000001000111

word: 010001000110000

combo: 000000001000110

word: 001101000010000

combo: 000000001000010

word: 010001000011000

combo: 000000001000011

word: 001101000001000

combo: 000000001000001

word: 010001000000000

combo: 000000001000000

word: 000011000000000

combo: 000000011000000

word: 011111000001000

combo: 000000011000001

word: 000011000011000

combo: 000000011000011

word: 011111000010000

combo: 000000011000010

word: 000011000110000

combo: 000000011000110

word: 011111000111000

combo: 000000011000111

word: 000011000101000

combo: 000000011000101

word: 011111000100000

combo: 000000011000100

word: 110011001100000

combo: 000000011001100

word: 101111001101000

combo: 000000011001101

temp: 000000011001101

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 110011001111000

combo: 000000011001111

temp: 000000011001111

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 101111001110000

combo: 000000011001110

temp: 000000011001110

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 110011001010000

combo: 000000011001010

word: 101111001011000

combo: 000000011001011

temp: 000000011001011

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 110011001001000

combo: 000000011001001

word: 101111001000000

combo: 000000011001000

word: 100111011000000

combo: 000000011011000

word: 111011011001000

combo: 000000011011001

temp: 000000011011001

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 100111011011000

combo: 000000011011011

temp: 000000011011011

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 111011011010000

combo: 000000011011010

temp: 000000011011010

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 100111011110000

combo: 000000011011110

temp: 000000011011110

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 111011011111000

combo: 000000011011111

word: 100111011101000

combo: 000000011011101

temp: 000000011011101

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 111011011100000

combo: 000000011011100

temp: 000000011011100

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 010111010100000

combo: 000000011010100

word: 001011010101000

combo: 000000011010101

word: 010111010111000

combo: 000000011010111

word: 001011010110000

combo: 000000011010110

word: 010111010010000

combo: 000000011010010

word: 001011010011000

combo: 000000011010011

word: 010111010001000

combo: 000000011010001

word: 001011010000000

combo: 000000011010000

word: 011011110000000

combo: 000000011110000

word: 000111110001000

combo: 000000011110001

word: 011011110011000

combo: 000000011110011

word: 000111110010000

combo: 000000011110010

word: 011011110110000

combo: 000000011110110

word: 000111110111000

combo: 000000011110111

word: 011011110101000

combo: 000000011110101

word: 000111110100000

combo: 000000011110100

word: 101011111100000

combo: 000000011111100

temp: 000000011111100

orbit_checks[temp>>log2radix]= 10111000000001000000100000000

word: 110111111101000

combo: 000000011111101

word: 101011111111000

combo: 000000011111111

word: 110111111110000

combo: 000000011111110

word: 101011111010000

combo: 000000011111010

temp: 000000011111010

orbit_checks[temp>>log2radix]= 10111000000001000000100000000

word: 110111111011000

combo: 000000011111011

word: 101011111001000

combo: 000000011111001

temp: 000000011111001

orbit_checks[temp>>log2radix]= 10111000000001000000100000000

word: 110111111000000

combo: 000000011111000

temp: 000000011111000

orbit_checks[temp>>log2radix]= 10111000000001000000100000000

word: 111111101000000

combo: 000000011101000

temp: 000000011101000

orbit_checks[temp>>log2radix]= 10111000000001000000100000000

word: 100011101001000

combo: 000000011101001

word: 111111101011000

combo: 000000011101011

word: 100011101010000

combo: 000000011101010

word: 111111101110000

combo: 000000011101110

word: 100011101111000

combo: 000000011101111

temp: 000000011101111

orbit_checks[temp>>log2radix]= 10111000000001000000100000000

word: 111111101101000

combo: 000000011101101

word: 100011101100000

combo: 000000011101100

word: 001111100100000

combo: 000000011100100

word: 010011100101000

combo: 000000011100101

word: 001111100111000

combo: 000000011100111

word: 010011100110000

combo: 000000011100110

word: 001111100010000

combo: 000000011100010

word: 010011100011000

combo: 000000011100011

word: 001111100001000

combo: 000000011100001

word: 010011100000000

combo: 000000011100000

word: 000010100000000

combo: 000000010100000

word: 011110100001000

combo: 000000010100001

word: 000010100011000

combo: 000000010100011

word: 011110100010000

combo: 000000010100010

word: 000010100110000

combo: 000000010100110

word: 011110100111000

combo: 000000010100111

word: 000010100101000

combo: 000000010100101

word: 011110100100000

combo: 000000010100100

word: 110010101100000

combo: 000000010101100

word: 101110101101000

combo: 000000010101101

temp: 000000010101101

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 110010101111000

combo: 000000010101111

temp: 000000010101111

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 101110101110000

combo: 000000010101110

temp: 000000010101110

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 110010101010000

combo: 000000010101010

word: 101110101011000

combo: 000000010101011

temp: 000000010101011

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 110010101001000

combo: 000000010101001

word: 101110101000000

combo: 000000010101000

word: 100110111000000

combo: 000000010111000

word: 111010111001000

combo: 000000010111001

temp: 000000010111001

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 100110111011000

combo: 000000010111011

temp: 000000010111011

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 111010111010000

combo: 000000010111010

temp: 000000010111010

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 100110111110000

combo: 000000010111110

temp: 000000010111110

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 111010111111000

combo: 000000010111111

word: 100110111101000

combo: 000000010111101

temp: 000000010111101

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 111010111100000

combo: 000000010111100

temp: 000000010111100

orbit_checks[temp>>log2radix]= 1111110000000001110100000000000

word: 010110110100000

combo: 000000010110100

word: 001010110101000

combo: 000000010110101

word: 010110110111000

combo: 000000010110111

word: 001010110110000

combo: 000000010110110

word: 010110110010000

combo: 000000010110010

word: 001010110011000

combo: 000000010110011

word: 010110110001000

combo: 000000010110001

word: 001010110000000

combo: 000000010110000

word: 011010010000000

combo: 000000010010000

word: 000110010001000

combo: 000000010010001

word: 011010010011000

combo: 000000010010011

word: 000110010010000

combo: 000000010010010

word: 011010010110000

combo: 000000010010110

word: 000110010111000

combo: 000000010010111

word: 011010010101000

combo: 000000010010101

word: 000110010100000

combo: 000000010010100

word: 101010011100000

combo: 000000010011100

word: 110110011101000

combo: 000000010011101

temp: 000000010011101

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 101010011111000

combo: 000000010011111

temp: 000000010011111

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 110110011110000

combo: 000000010011110

temp: 000000010011110

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 101010011010000

combo: 000000010011010

word: 110110011011000

combo: 000000010011011

temp: 000000010011011

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 101010011001000

combo: 000000010011001

word: 110110011000000

combo: 000000010011000

word: 111110001000000

combo: 000000010001000

word: 100010001001000

combo: 000000010001001

temp: 000000010001001

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 111110001011000

combo: 000000010001011

temp: 000000010001011

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 100010001010000

combo: 000000010001010

temp: 000000010001010

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 111110001110000

combo: 000000010001110

temp: 000000010001110

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 100010001111000

combo: 000000010001111

word: 111110001101000

combo: 000000010001101

temp: 000000010001101

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 100010001100000

combo: 000000010001100

temp: 000000010001100

orbit_checks[temp>>log2radix]= 11101000000000000111111000000000

word: 001110000100000

combo: 000000010000100

word: 010010000101000

combo: 000000010000101

word: 001110000111000

combo: 000000010000111

word: 010010000110000

combo: 000000010000110

word: 001110000010000

combo: 000000010000010

word: 010010000011000

combo: 000000010000011

word: 001110000001000

combo: 000000010000001

word: 010010000000000

combo: 000000010000000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 1 1 1 1 1 0 1 1 0]
[0 1 0 0 0 0 0 1 0 0 0 1 1 0 0]
[0 0 1 0 1 1 1 0 1 1 1 0 0 0 1]
[0 0 0 1 0 0 1 0 0 0 0 0 0 1 1]
limit on degree (length): 16
ortho basis:
1111100000010000
1111100000100000
0101100001000000
0001000010000000
1110000100000000
1110001000000000
1110010000000000

B_can_lab before row reduction:
0110101110000110
0000000000001111
0001101111110000
0011110000000000

B_can_lab after row reduction:
0110101110001001
0110101110000110
0001101111110000
0011110000000000
0000000000111000

word generated as sum over rows of ortho_basis starting at 7: 0000000000000000
gate: 0000000000001111
k_gate: 0000000001111111
nonzero_gate: 1000000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 0000000000000000

combo: 0000000000000000

word: 1111100000010000

combo: 0000000000000001

word: 0000000000110000

combo: 0000000000000011

word: 1111100000100000

combo: 0000000000000010

word: 1010000001100000

combo: 0000000000000110

temp: 0000000000000110

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1110011100010100
1100100001010111
1101000011010101
0110000001001000
rs list:
0 0 1 0 1 0 0 0 1 1 1 0 0 1 1 1 
1 1 1 0 1 0 1 0 0 0 0 1 0 0 1 1 
1 0 1 0 1 0 1 1 0 0 0 0 1 0 1 1 
0 0 0 1 0 0 1 0 0 0 0 0 0 1 1 0 
B_aug:
[1 0 0 0 0 0 1 1 1 1 1 0 1 1 0 0]
[0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 0]
[0 0 1 0 1 1 1 0 1 1 1 0 0 0 1 0]
[0 0 0 1 0 0 1 0 0 0 0 0 0 1 1 0]
[0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 1]
m:
[0 0 1 0 1 0 0 0 1 1 1 0 0 1 1 1]
[1 1 1 0 1 0 1 0 0 0 0 1 0 0 1 1]
[1 0 1 0 1 0 1 1 0 0 0 0 1 0 1 1]
[0 0 0 1 0 0 1 0 0 0 0 0 0 1 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (10,11), ( 9,10), ( 8,13), (3,5), ( 2, 8)(12,13), ( 4,14)( 7,15), ( 4, 7)(14,15) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 15, 14, 13]
[0, 1, 2, 3, 4, 13, 15, 7, 8, 9, 10, 11, 12, 5, 14, 6]
[0, 1, 2, 5, 4, 3, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14]
[0, 1, 2, 3, 4, 15, 13, 7, 8, 9, 10, 11, 12, 6, 14, 5]
orbits:
1010000001100000
1010000001010000
1110010000000000
1110011100110000
1110001000000000
1110000100000000
word: 0101100001110000

combo: 0000000000000111

word: 1010000001010000

combo: 0000000000000101

temp: 0000000000000101

orbit_checks[temp>>log2radix]= 10000000001100000

word: 0101100001000000

combo: 0000000000000100

word: 0100100011000000

combo: 0000000000001100

word: 1011000011010000

combo: 0000000000001101

word: 0100100011110000

combo: 0000000000001111

word: 1011000011100000

combo: 0000000000001110

word: 1110100010100000

combo: 0000000000001010

word: 0001000010110000

combo: 0000000000001011

word: 1110100010010000

combo: 0000000000001001

word: 0001000010000000

combo: 0000000000001000

word: 1111000110000000

combo: 0000000000011000

word: 0000100110010000

combo: 0000000000011001

word: 1111000110110000

combo: 0000000000011011

temp: 0000000000011011

orbit_checks[temp>>log2radix]= 10000000001100000

passed if statements
temp basis:
1010111001000110
1011011011000100
0100011101110100
1000000100000101
rs list:
0 1 1 0 0 0 1 0 0 1 1 1 0 1 0 1 
0 0 1 0 0 0 1 1 0 1 1 0 1 1 0 1 
0 0 1 0 1 1 1 0 1 1 1 0 0 0 1 0 
1 0 1 0 0 0 0 0 1 0 0 0 0 0 0 1 
B_aug:
[1 0 0 0 0 0 1 1 1 1 1 0 1 1 0 0]
[0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 0]
[0 0 1 0 1 1 1 0 1 1 1 0 0 0 1 0]
[0 0 0 1 0 0 1 0 0 0 0 0 0 1 1 0]
[0 0 0 0 1 1 0 1 1 0 0 0 1 1 1 1]
m:
[0 1 1 0 0 0 1 0 0 1 1 1 0 1 0 1]
[0 0 1 0 0 0 1 1 0 1 1 0 1 1 0 1]
[0 0 1 0 1 1 1 0 1 1 1 0 0 0 1 0]
[1 0 1 0 0 0 0 0 1 0 0 0 0 0 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (10,11), ( 8,13), (5,6), ( 3, 9)( 5,10)( 6,11)( 7,15), ( 2, 8)(12,13), ( 1, 3)( 9,16) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 6, 4, 5, 3, 7, 8, 9, 10, 11, 12, 14, 13, 15]
[0, 1, 2, 13, 4, 5, 14, 7, 8, 9, 10, 11, 12, 3, 6, 15]
[3, 1, 6, 0, 4, 5, 2, 7, 14, 9, 10, 11, 12, 15, 8, 13]
[0, 1, 2, 14, 4, 5, 13, 7, 8, 9, 10, 11, 12, 6, 3, 15]
[3, 1, 6, 2, 4, 5, 0, 7, 14, 9, 10, 11, 12, 8, 15, 13]
[3, 1, 6, 15, 4, 5, 8, 7, 14, 9, 10, 11, 12, 0, 2, 13]
orbits:
1111000110110000
1111001010110000
1011011011010000
1111010010110000
1011010111010000
1011011011100000
1011001111010000
1011010111100000
1011001111100000
word: 0000100110100000

combo: 0000000000011010

word: 0101000111100000

combo: 0000000000011110

word: 1010100111110000

combo: 0000000000011111

temp: 0000000000011111

orbit_checks[temp>>log2radix]= 1000000000010000000001100000

passed if statements
temp basis:
1010100111110000
0011011111000001
1011100100001101
1101100101000101
rs list:
0 0 0 0 1 1 1 1 1 0 0 1 0 1 0 1 
1 0 0 0 0 0 1 1 1 1 1 0 1 1 0 0 
1 0 1 1 0 0 0 0 1 0 0 1 1 1 0 1 
1 0 1 0 0 0 1 0 1 0 0 1 1 0 1 1 
B_aug:
[1 0 0 0 0 0 1 1 1 1 1 0 1 1 0 0]
[0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 0]
[0 0 1 0 1 1 1 0 1 1 1 0 0 0 1 0]
[0 0 0 1 0 0 1 0 0 0 0 0 0 1 1 0]
[0 0 0 0 1 1 1 1 1 0 0 1 0 1 0 1]
m:
[0 0 0 0 1 1 1 1 1 0 0 1 0 1 0 1]
[1 0 0 0 0 0 1 1 1 1 1 0 1 1 0 0]
[1 0 1 1 0 0 0 0 1 0 0 1 1 1 0 1]
[1 0 1 0 0 0 1 0 1 0 0 1 1 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (10,11), (5,6), ( 4, 7)(14,15), ( 4,14)( 7,15), ( 3, 9)( 5,10)( 6,11)( 7,15), ( 1,16)( 5,10)( 6,11)(12,13) ] )
Right transversal of automorphism group of B_aug:
[0, 7, 2, 3, 4, 5, 6, 1, 8, 9, 10, 12, 11, 13, 14, 15]
[0, 11, 2, 3, 4, 5, 6, 12, 8, 9, 10, 1, 7, 13, 14, 15]
[2, 3, 0, 1, 4, 5, 11, 13, 15, 9, 10, 6, 14, 7, 12, 8]
[0, 12, 2, 3, 4, 5, 6, 11, 8, 9, 10, 7, 1, 13, 14, 15]
[2, 13, 0, 1, 4, 5, 11, 3, 15, 9, 10, 14, 6, 7, 12, 8]
[2, 6, 0, 1, 4, 5, 11, 14, 15, 9, 10, 3, 13, 7, 12, 8]
[8, 14, 15, 1, 4, 5, 12, 6, 0, 9, 10, 3, 13, 7, 11, 2]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1010100111110000
1010101011110000
1110111010010000
1011100101110000
1010110011110000
1110110110010000
1011101001110000
1110111010100000
1111111000010000
1110101110010000
1011110001110000
1110110110100000
1111110100010000
1111111000100000
1110101110100000
1111101100010000
1111110100100000
1111101100100000
word: 0101000111010000

combo: 0000000000011101

word: 1010100111000000

combo: 0000000000011100

word: 1011100101000000

combo: 0000000000010100

word: 0100000101010000

combo: 0000000000010101

word: 1011100101110000

combo: 0000000000010111

temp: 0000000000010111

orbit_checks[temp>>log2radix]= 10001000100000010000000001100000

word: 0100000101100000

combo: 0000000000010110

word: 0001100100100000

combo: 0000000000010010

word: 1110000100110000

combo: 0000000000010011

word: 0001100100010000

combo: 0000000000010001

word: 1110000100000000

combo: 0000000000010000

temp: 0000000000010000

orbit_checks[temp>>log2radix]= 10001000100000010000000001100000

word: 0000001100000000

combo: 0000000000110000

word: 1111101100010000

combo: 0000000000110001

temp: 0000000000110001

orbit_checks[temp>>log2radix]= 1100110000001101000100010000001

word: 0000001100110000

combo: 0000000000110011

word: 1111101100100000

combo: 0000000000110010

temp: 0000000000110010

orbit_checks[temp>>log2radix]= 1100110000001101000100010000001

word: 1010001101100000

combo: 0000000000110110

word: 0101101101110000

combo: 0000000000110111

word: 1010001101010000

combo: 0000000000110101

word: 0101101101000000

combo: 0000000000110100

word: 0100101111000000

combo: 0000000000111100

word: 1011001111010000

combo: 0000000000111101

temp: 0000000000111101

orbit_checks[temp>>log2radix]= 1100110000001101000100010000001

word: 0100101111110000

combo: 0000000000111111

word: 1011001111100000

combo: 0000000000111110

temp: 0000000000111110

orbit_checks[temp>>log2radix]= 1100110000001101000100010000001

word: 1110101110100000

combo: 0000000000111010

temp: 0000000000111010

orbit_checks[temp>>log2radix]= 1100110000001101000100010000001

word: 0001001110110000

combo: 0000000000111011

word: 1110101110010000

combo: 0000000000111001

temp: 0000000000111001

orbit_checks[temp>>log2radix]= 1100110000001101000100010000001

word: 0001001110000000

combo: 0000000000111000

word: 1111001010000000

combo: 0000000000101000

word: 0000101010010000

combo: 0000000000101001

word: 1111001010110000

combo: 0000000000101011

temp: 0000000000101011

orbit_checks[temp>>log2radix]= 1100110000001101000100010000001

word: 0000101010100000

combo: 0000000000101010

word: 0101001011100000

combo: 0000000000101110

word: 1010101011110000

combo: 0000000000101111

temp: 0000000000101111

orbit_checks[temp>>log2radix]= 1100110000001101000100010000001

word: 0101001011010000

combo: 0000000000101101

word: 1010101011000000

combo: 0000000000101100

word: 1011101001000000

combo: 0000000000100100

word: 0100001001010000

combo: 0000000000100101

word: 1011101001110000

combo: 0000000000100111

temp: 0000000000100111

orbit_checks[temp>>log2radix]= 1100110000001101000100010000001

word: 0100001001100000

combo: 0000000000100110

word: 0001101000100000

combo: 0000000000100010

word: 1110001000110000

combo: 0000000000100011

word: 0001101000010000

combo: 0000000000100001

word: 1110001000000000

combo: 0000000000100000

temp: 0000000000100000

orbit_checks[temp>>log2radix]= 1100110000001101000100010000001

word: 0000011000000000

combo: 0000000001100000

word: 1111111000010000

combo: 0000000001100001

temp: 0000000001100001

orbit_checks[temp>>log2radix]= 10000110011000000110

word: 0000011000110000

combo: 0000000001100011

word: 1111111000100000

combo: 0000000001100010

temp: 0000000001100010

orbit_checks[temp>>log2radix]= 10000110011000000110

word: 1010011001100000

combo: 0000000001100110

word: 0101111001110000

combo: 0000000001100111

word: 1010011001010000

combo: 0000000001100101

word: 0101111001000000

combo: 0000000001100100

word: 0100111011000000

combo: 0000000001101100

word: 1011011011010000

combo: 0000000001101101

temp: 0000000001101101

orbit_checks[temp>>log2radix]= 10000110011000000110

word: 0100111011110000

combo: 0000000001101111

word: 1011011011100000

combo: 0000000001101110

temp: 0000000001101110

orbit_checks[temp>>log2radix]= 10000110011000000110

word: 1110111010100000

combo: 0000000001101010

temp: 0000000001101010

orbit_checks[temp>>log2radix]= 10000110011000000110

word: 0001011010110000

combo: 0000000001101011

word: 1110111010010000

combo: 0000000001101001

temp: 0000000001101001

orbit_checks[temp>>log2radix]= 10000110011000000110

word: 0001011010000000

combo: 0000000001101000

word: 1111011110000000

combo: 0000000001111000

temp: 0000000001111000

orbit_checks[temp>>log2radix]= 10000110011000000110

passed if statements
temp basis:
1011000011110100
1111011110000000
0001100010000010
1100000001000001
rs list:
0 0 1 0 1 1 1 1 0 0 0 0 1 1 0 1 
0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 0 
1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 
B_aug:
[1 0 0 0 0 0 1 1 1 1 1 0 1 1 0 0]
[0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 0]
[0 0 1 0 1 1 1 0 1 1 1 0 0 0 1 0]
[0 0 0 1 0 0 1 0 0 0 0 0 0 1 1 0]
[0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1]
m:
[0 0 1 0 1 1 1 1 0 0 0 0 1 1 0 1]
[0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1]
[0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 0]
[1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (10,11), ( 9,10), ( 8,13), (5,6), (3,5), ( 3, 9)( 5,10)( 6,11)( 7,15), ( 2, 8)(12,13), ( 1,15)( 7,16) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 6, 4, 5, 3, 7, 8, 9, 10, 11, 12, 14, 13, 15]
[0, 1, 2, 13, 4, 5, 14, 7, 8, 9, 10, 11, 12, 3, 6, 15]
[3, 1, 2, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 14, 13]
[0, 1, 2, 14, 4, 5, 13, 7, 8, 9, 10, 11, 12, 6, 3, 15]
[3, 1, 2, 15, 4, 5, 14, 7, 8, 9, 10, 11, 12, 0, 6, 13]
orbits:
1111011110000000
word: 0000111110010000

combo: 0000000001111001

word: 1111011110110000

combo: 0000000001111011

word: 0000111110100000

combo: 0000000001111010

word: 0101011111100000

combo: 0000000001111110

word: 1010111111110000

combo: 0000000001111111

word: 0101011111010000

combo: 0000000001111101

word: 1010111111000000

combo: 0000000001111100

temp: 0000000001111100

orbit_checks[temp>>log2radix]= 1000010000110011000000110

passed if statements
temp basis:
1110100010110100
1010111111000000
1001100000000001
0001100010000010
rs list:
0 0 1 0 1 1 0 1 0 0 0 1 0 1 1 1 
0 0 0 0 0 0 1 1 1 1 1 1 0 1 0 1 
1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 0 
B_aug:
[1 0 0 0 0 0 1 1 1 1 1 0 1 1 0 0]
[0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 0]
[0 0 1 0 1 1 1 0 1 1 1 0 0 0 1 0]
[0 0 0 1 0 0 1 0 0 0 0 0 0 1 1 0]
[0 0 0 0 0 0 1 1 1 1 1 1 0 1 0 1]
m:
[0 0 1 0 1 1 0 1 0 0 0 1 0 1 1 1]
[0 0 0 0 0 0 1 1 1 1 1 1 0 1 0 1]
[1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1]
[0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (10,11), ( 9,10), (5,6), (3,5), ( 3, 9)( 5,10)( 6,11)( 7,15), ( 2, 8)(12,13), ( 2,12)( 8,13), ( 1, 2)( 8,16) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 6, 4, 5, 3, 7, 8, 9, 10, 11, 12, 14, 13, 15]
[0, 1, 8, 14, 9, 10, 3, 7, 2, 4, 5, 11, 12, 6, 13, 15]
[0, 1, 8, 13, 9, 10, 6, 7, 2, 4, 5, 11, 12, 3, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1010111111000000
1011111101000000
word: 1011111101000000

combo: 0000000001110100

temp: 0000000001110100

orbit_checks[temp>>log2radix]= 10001000110000110011000000110

word: 0100011101010000

combo: 0000000001110101

word: 1011111101110000

combo: 0000000001110111

word: 0100011101100000

combo: 0000000001110110

word: 0001111100100000

combo: 0000000001110010

word: 1110011100110000

combo: 0000000001110011

temp: 0000000001110011

orbit_checks[temp>>log2radix]= 10001000110000110011000000110

word: 0001111100010000

combo: 0000000001110001

word: 1110011100000000

combo: 0000000001110000

word: 0000010100000000

combo: 0000000001010000

word: 1111110100010000

combo: 0000000001010001

temp: 0000000001010001

orbit_checks[temp>>log2radix]= 1100110000001101000100010000001

word: 0000010100110000

combo: 0000000001010011

word: 1111110100100000

combo: 0000000001010010

temp: 0000000001010010

orbit_checks[temp>>log2radix]= 1100110000001101000100010000001

word: 1010010101100000

combo: 0000000001010110

word: 0101110101110000

combo: 0000000001010111

word: 1010010101010000

combo: 0000000001010101

word: 0101110101000000

combo: 0000000001010100

word: 0100110111000000

combo: 0000000001011100

word: 1011010111010000

combo: 0000000001011101

temp: 0000000001011101

orbit_checks[temp>>log2radix]= 1100110000001101000100010000001

word: 0100110111110000

combo: 0000000001011111

word: 1011010111100000

combo: 0000000001011110

temp: 0000000001011110

orbit_checks[temp>>log2radix]= 1100110000001101000100010000001

word: 1110110110100000

combo: 0000000001011010

temp: 0000000001011010

orbit_checks[temp>>log2radix]= 1100110000001101000100010000001

word: 0001010110110000

combo: 0000000001011011

word: 1110110110010000

combo: 0000000001011001

temp: 0000000001011001

orbit_checks[temp>>log2radix]= 1100110000001101000100010000001

word: 0001010110000000

combo: 0000000001011000

word: 1111010010000000

combo: 0000000001001000

word: 0000110010010000

combo: 0000000001001001

word: 1111010010110000

combo: 0000000001001011

temp: 0000000001001011

orbit_checks[temp>>log2radix]= 1100110000001101000100010000001

word: 0000110010100000

combo: 0000000001001010

word: 0101010011100000

combo: 0000000001001110

word: 1010110011110000

combo: 0000000001001111

temp: 0000000001001111

orbit_checks[temp>>log2radix]= 1100110000001101000100010000001

word: 0101010011010000

combo: 0000000001001101

word: 1010110011000000

combo: 0000000001001100

word: 1011110001000000

combo: 0000000001000100

word: 0100010001010000

combo: 0000000001000101

word: 1011110001110000

combo: 0000000001000111

temp: 0000000001000111

orbit_checks[temp>>log2radix]= 1100110000001101000100010000001

word: 0100010001100000

combo: 0000000001000110

word: 0001110000100000

combo: 0000000001000010

word: 1110010000110000

combo: 0000000001000011

word: 0001110000010000

combo: 0000000001000001

word: 1110010000000000

combo: 0000000001000000

temp: 0000000001000000

orbit_checks[temp>>log2radix]= 1100110000001101000100010000001

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 0 1 1 0 1 1 1 1 1]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0]
[0 0 1 1 1 1 0 0 0 0 1 1 1 1]
limit on degree (length): 16
ortho basis:
0011100000001000
0011100000010000
0011100000100000
1001100001000000
0001000010000000
0010000100000000
0010001000000000
0010010000000000
1100000000000000

B_can_lab before row reduction:
0011000111100110
0000000000001111
0000111111110000

B_can_lab after row reduction:
0011000111101001
0011000111100110
0000111111110000

word generated as sum over rows of ortho_basis starting at 8: 1100000000000000
gate: 0000000000000111
k_gate: 0000000011111111
nonzero_gate: 1100000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1100000000000000

combo: 0000000000000000

word: 1111100000001000

combo: 0000000000000001

word: 1100000000011000

combo: 0000000000000011

temp: 0000000000000011

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
0011011111000001
0001000011111101
1101000011100101
rs list:
1 0 0 0 0 0 1 1 1 1 1 0 1 1 0 0 
1 0 1 1 1 1 1 1 0 0 0 0 1 0 0 0 
1 0 1 0 0 1 1 1 0 0 0 0 1 0 1 1 
B_aug:
[1 0 0 0 0 0 1 1 1 1 1 0 1 1 0 0]
[0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 0]
[0 0 1 1 1 1 0 0 1 1 1 0 0 1 0 0]
[0 0 0 1 1 0 0 0 0 0 0 0 0 0 1 1]
m:
[1 0 0 0 0 0 1 1 1 1 1 0 1 1 0 0]
[1 0 1 1 1 1 1 1 0 0 0 0 1 0 0 0]
[1 0 1 0 0 1 1 1 0 0 0 0 1 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 2,12), ( 8,13), ( 8,13)(10,11), ( 8,13)(10,14), ( 8,13)( 9,10,14), ( 4, 5)( 8,13)(10,14), ( 4,16)( 5,15)( 8,13)(10,14), ( 3, 6)( 4,16)( 5,15)( 8,13)(10,14), ( 1, 7)( 4,16)( 5,15)( 8,13)(10,14) ] )
Right transversal of automorphism group of B_aug:
[0, 7, 2, 3, 4, 5, 6, 1, 8, 9, 10, 12, 11, 13, 14, 15]
[2, 3, 0, 1, 11, 6, 5, 14, 8, 9, 10, 4, 15, 13, 7, 12]
[2, 14, 0, 1, 11, 6, 5, 3, 8, 9, 10, 15, 4, 13, 7, 12]
orbits:
1100000000011000
1100000000101000
1110011100101000
1100011000000000
1100000000110000
1110011100011000
1110001000000000
1110011100110000
1100010100000000
1110010000000000
1110000100000000
1100001100000000
word: 1111100000010000

combo: 0000000000000010

word: 1100000000110000

combo: 0000000000000110

temp: 0000000000000110

orbit_checks[temp>>log2radix]= 0000000001101000

word: 1111100000111000

combo: 0000000000000111

temp: 0000000000000111

orbit_checks[temp>>log2radix]= 0000000001101000

passed if statements
temp basis:
1111100000111000
1101111100000100
1111000001000111
rs list:
0 0 0 1 1 1 0 0 0 0 0 1 1 1 1 1 
0 0 1 0 0 0 0 0 1 1 1 1 1 0 1 1 
1 1 1 0 0 0 1 0 0 0 0 0 1 1 1 1 
B_aug:
[1 0 0 0 0 0 1 1 1 1 1 0 1 1 0 0]
[0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 0]
[0 0 1 1 1 1 0 0 1 1 1 0 0 1 0 0]
[0 0 0 1 1 1 0 0 0 0 0 1 1 1 1 1]
m:
[0 0 0 1 1 1 0 0 0 0 0 1 1 1 1 1]
[0 0 1 0 0 0 0 0 1 1 1 1 1 0 1 1]
[1 1 1 0 0 0 1 0 0 0 0 0 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (10,11), ( 9,10), (5,6), (4,5), ( 3,14)( 4, 9)( 5,10)( 6,11), (1,7), ( 1,15)( 2,13)( 4, 9)( 5,10)( 6,11)( 7,16) ] )
Right transversal of automorphism group of B_aug:
[0, 7, 2, 3, 4, 5, 6, 1, 8, 9, 10, 12, 11, 13, 14, 15]
[14, 1, 2, 8, 9, 10, 15, 11, 3, 4, 5, 7, 12, 13, 0, 6]
[14, 7, 2, 8, 9, 10, 15, 12, 3, 4, 5, 1, 11, 13, 0, 6]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111100000111000
1101110000111000
1101111100001000
1111111000100000
1110100010111000
1101101000111000
1111101100001000
1111111000010000
1100110010111000
1101111100010000
1111110100100000
1100111110001000
1110111010100000
1101100100111000
1111110100001000
1111111000001000
1100101010111000
1111101100010000
1111110100010000
1110101110001000
1110111010010000
1101111100100000
1111101100100000
1100111110010000
1110110110100000
1100100110111000
1110110110001000
1110111010001000
1110101110010000
1110110110010000
1100111110100000
1110101110100000
word: 1100000000101000

combo: 0000000000000101

temp: 0000000000000101

orbit_checks[temp>>log2radix]= 100000000000000011101000

word: 1111100000100000

combo: 0000000000000100

word: 0110000001100000

combo: 0000000000001100

word: 0101100001101000

combo: 0000000000001101

word: 0110000001111000

combo: 0000000000001111

word: 0101100001110000

combo: 0000000000001110

word: 0110000001010000

combo: 0000000000001010

word: 0101100001011000

combo: 0000000000001011

word: 0110000001001000

combo: 0000000000001001

word: 0101100001000000

combo: 0000000000001000

word: 0100100011000000

combo: 0000000000011000

word: 0111000011001000

combo: 0000000000011001

word: 0100100011011000

combo: 0000000000011011

word: 0111000011010000

combo: 0000000000011010

word: 0100100011110000

combo: 0000000000011110

word: 0111000011111000

combo: 0000000000011111

word: 0100100011101000

combo: 0000000000011101

word: 0111000011100000

combo: 0000000000011100

word: 1110100010100000

combo: 0000000000010100

word: 1101000010101000

combo: 0000000000010101

word: 1110100010111000

combo: 0000000000010111

temp: 0000000000010111

orbit_checks[temp>>log2radix]= 100000000000000011101000

word: 1101000010110000

combo: 0000000000010110

word: 1110100010010000

combo: 0000000000010010

word: 1101000010011000

combo: 0000000000010011

word: 1110100010001000

combo: 0000000000010001

word: 1101000010000000

combo: 0000000000010000

temp: 0000000000010000

orbit_checks[temp>>log2radix]= 100000000000000011101000

passed if statements
temp basis:
0010111101000011
0011011111000001
1110011101000001
rs list:
1 1 0 0 0 0 1 0 1 1 1 1 0 1 0 0 
1 0 0 0 0 0 1 1 1 1 1 0 1 1 0 0 
1 0 0 0 0 0 1 0 1 1 1 0 0 1 1 1 
B_aug:
[1 0 0 0 0 0 1 1 1 1 1 0 1 1 0 0]
[0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 0]
[0 0 1 1 1 1 0 0 1 1 1 0 0 1 0 0]
[0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 1]
m:
[1 1 0 0 0 0 1 0 1 1 1 1 0 1 0 0]
[1 0 0 0 0 0 1 1 1 1 1 0 1 1 0 0]
[1 0 0 0 0 0 1 0 1 1 1 0 0 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,11), ( 9,10), ( 9,11,14), ( 4, 6)( 9,11,14), ( 4, 5)( 9,11,14), ( 3, 4, 5)( 9,11,14), ( 4, 5)( 9,11,14)(15,16), ( 4, 5)( 8,13)( 9,11,14)(15,16), ( 4, 5)( 8,15,13,16)( 9,11,14), ( 2, 8)( 4, 5)( 9,11,14)(12,13)(15,16), ( 1, 7)( 4, 5)( 9,11,14)(15,16) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 8, 9, 10, 13, 6, 7, 2, 3, 4, 11, 12, 5, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1101000010000000
word: 1111000110000000

combo: 0000000000110000

word: 1100100110001000

combo: 0000000000110001

word: 1111000110011000

combo: 0000000000110011

temp: 0000000000110011

orbit_checks[temp>>log2radix]= 100000000000000010000001

passed if statements
temp basis:
1110100100011010
1111000110011000
1100011001011001
rs list:
0 1 0 1 1 0 0 0 1 0 0 1 0 1 1 1 
0 0 0 1 1 0 0 1 1 0 0 0 1 1 1 1 
1 0 0 1 1 0 1 0 0 1 1 0 0 0 1 1 
B_aug:
[1 0 0 0 0 0 1 1 1 1 1 0 1 1 0 0]
[0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 0]
[0 0 1 1 1 1 0 0 1 1 1 0 0 1 0 0]
[0 0 0 1 1 0 0 1 1 0 0 0 1 1 1 1]
m:
[0 1 0 1 1 0 0 0 1 0 0 1 0 1 1 1]
[0 0 0 1 1 0 0 1 1 0 0 0 1 1 1 1]
[1 0 0 1 1 0 1 0 0 1 1 0 0 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (10,11), ( 4, 5)(10,11), ( 3, 6)( 4, 5)(10,11), ( 3, 6)( 4, 5)( 9,14)(10,11), ( 3, 6)( 4, 5)(10,11)(15,16), ( 1, 4, 7, 5)( 3, 6)(10,16,11,15), ( 1,10, 7,11)( 3, 6)( 4,16, 5,15), ( 3, 6)( 4, 5)( 8,13)(10,11), ( 2, 8)( 3, 6)( 4, 5)(10,11)(12,13) ] )
Right transversal of automorphism group of B_aug:
[2, 1, 0, 3, 4, 6, 5, 7, 14, 9, 10, 11, 12, 15, 8, 13]
[2, 1, 3, 0, 6, 4, 5, 7, 9, 14, 15, 11, 12, 10, 8, 13]
[2, 1, 14, 9, 10, 15, 5, 7, 0, 3, 4, 11, 12, 6, 8, 13]
orbits:
1111000110011000
1101010110011000
1111001010011000
1111000110101000
1101011010101000
1101001110011000
1101011010011000
1101010110101000
1111001010101000
1111010010011000
1111000110110000
1101011010110000
1101001110101000
1111010010101000
1101010110110000
1111001010110000
1101001110110000
1111010010110000
word: 1100100110010000

combo: 0000000000110010

word: 1111000110110000

combo: 0000000000110110

temp: 0000000000110110

orbit_checks[temp>>log2radix]= 111010000000000010000001

word: 1100100110111000

combo: 0000000000110111

temp: 0000000000110111

orbit_checks[temp>>log2radix]= 111010000000000010000001

word: 1111000110101000

combo: 0000000000110101

temp: 0000000000110101

orbit_checks[temp>>log2radix]= 111010000000000010000001

word: 1100100110100000

combo: 0000000000110100

word: 0101000111100000

combo: 0000000000111100

word: 0110100111101000

combo: 0000000000111101

word: 0101000111111000

combo: 0000000000111111

word: 0110100111110000

combo: 0000000000111110

word: 0101000111010000

combo: 0000000000111010

word: 0110100111011000

combo: 0000000000111011

word: 0101000111001000

combo: 0000000000111001

word: 0110100111000000

combo: 0000000000111000

word: 0111100101000000

combo: 0000000000101000

word: 0100000101001000

combo: 0000000000101001

word: 0111100101011000

combo: 0000000000101011

word: 0100000101010000

combo: 0000000000101010

word: 0111100101110000

combo: 0000000000101110

word: 0100000101111000

combo: 0000000000101111

word: 0111100101101000

combo: 0000000000101101

word: 0100000101100000

combo: 0000000000101100

word: 1101100100100000

combo: 0000000000100100

word: 1110000100101000

combo: 0000000000100101

word: 1101100100111000

combo: 0000000000100111

temp: 0000000000100111

orbit_checks[temp>>log2radix]= 111010000000000010000001

word: 1110000100110000

combo: 0000000000100110

word: 1101100100010000

combo: 0000000000100010

word: 1110000100011000

combo: 0000000000100011

word: 1101100100001000

combo: 0000000000100001

word: 1110000100000000

combo: 0000000000100000

temp: 0000000000100000

orbit_checks[temp>>log2radix]= 111010000000000010000001

word: 1100001100000000

combo: 0000000001100000

temp: 0000000001100000

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 1111101100001000

combo: 0000000001100001

temp: 0000000001100001

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 1100001100011000

combo: 0000000001100011

word: 1111101100010000

combo: 0000000001100010

temp: 0000000001100010

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 1100001100110000

combo: 0000000001100110

word: 1111101100111000

combo: 0000000001100111

word: 1100001100101000

combo: 0000000001100101

word: 1111101100100000

combo: 0000000001100100

temp: 0000000001100100

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 0110001101100000

combo: 0000000001101100

word: 0101101101101000

combo: 0000000001101101

word: 0110001101111000

combo: 0000000001101111

word: 0101101101110000

combo: 0000000001101110

word: 0110001101010000

combo: 0000000001101010

word: 0101101101011000

combo: 0000000001101011

word: 0110001101001000

combo: 0000000001101001

word: 0101101101000000

combo: 0000000001101000

word: 0100101111000000

combo: 0000000001111000

word: 0111001111001000

combo: 0000000001111001

word: 0100101111011000

combo: 0000000001111011

word: 0111001111010000

combo: 0000000001111010

word: 0100101111110000

combo: 0000000001111110

word: 0111001111111000

combo: 0000000001111111

word: 0100101111101000

combo: 0000000001111101

word: 0111001111100000

combo: 0000000001111100

word: 1110101110100000

combo: 0000000001110100

temp: 0000000001110100

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 1101001110101000

combo: 0000000001110101

temp: 0000000001110101

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 1110101110111000

combo: 0000000001110111

word: 1101001110110000

combo: 0000000001110110

temp: 0000000001110110

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 1110101110010000

combo: 0000000001110010

temp: 0000000001110010

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 1101001110011000

combo: 0000000001110011

temp: 0000000001110011

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 1110101110001000

combo: 0000000001110001

temp: 0000000001110001

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 1101001110000000

combo: 0000000001110000

word: 1111001010000000

combo: 0000000001010000

word: 1100101010001000

combo: 0000000001010001

word: 1111001010011000

combo: 0000000001010011

temp: 0000000001010011

orbit_checks[temp>>log2radix]= 111010000000000010000001

word: 1100101010010000

combo: 0000000001010010

word: 1111001010110000

combo: 0000000001010110

temp: 0000000001010110

orbit_checks[temp>>log2radix]= 111010000000000010000001

word: 1100101010111000

combo: 0000000001010111

temp: 0000000001010111

orbit_checks[temp>>log2radix]= 111010000000000010000001

word: 1111001010101000

combo: 0000000001010101

temp: 0000000001010101

orbit_checks[temp>>log2radix]= 111010000000000010000001

word: 1100101010100000

combo: 0000000001010100

word: 0101001011100000

combo: 0000000001011100

word: 0110101011101000

combo: 0000000001011101

word: 0101001011111000

combo: 0000000001011111

word: 0110101011110000

combo: 0000000001011110

word: 0101001011010000

combo: 0000000001011010

word: 0110101011011000

combo: 0000000001011011

word: 0101001011001000

combo: 0000000001011001

word: 0110101011000000

combo: 0000000001011000

word: 0111101001000000

combo: 0000000001001000

word: 0100001001001000

combo: 0000000001001001

word: 0111101001011000

combo: 0000000001001011

word: 0100001001010000

combo: 0000000001001010

word: 0111101001110000

combo: 0000000001001110

word: 0100001001111000

combo: 0000000001001111

word: 0111101001101000

combo: 0000000001001101

word: 0100001001100000

combo: 0000000001001100

word: 1101101000100000

combo: 0000000001000100

word: 1110001000101000

combo: 0000000001000101

word: 1101101000111000

combo: 0000000001000111

temp: 0000000001000111

orbit_checks[temp>>log2radix]= 111010000000000010000001

word: 1110001000110000

combo: 0000000001000110

word: 1101101000010000

combo: 0000000001000010

word: 1110001000011000

combo: 0000000001000011

word: 1101101000001000

combo: 0000000001000001

word: 1110001000000000

combo: 0000000001000000

temp: 0000000001000000

orbit_checks[temp>>log2radix]= 111010000000000010000001

word: 1100011000000000

combo: 0000000011000000

temp: 0000000011000000

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 1111111000001000

combo: 0000000011000001

temp: 0000000011000001

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 1100011000011000

combo: 0000000011000011

word: 1111111000010000

combo: 0000000011000010

temp: 0000000011000010

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 1100011000110000

combo: 0000000011000110

word: 1111111000111000

combo: 0000000011000111

word: 1100011000101000

combo: 0000000011000101

word: 1111111000100000

combo: 0000000011000100

temp: 0000000011000100

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 0110011001100000

combo: 0000000011001100

word: 0101111001101000

combo: 0000000011001101

word: 0110011001111000

combo: 0000000011001111

word: 0101111001110000

combo: 0000000011001110

word: 0110011001010000

combo: 0000000011001010

word: 0101111001011000

combo: 0000000011001011

word: 0110011001001000

combo: 0000000011001001

word: 0101111001000000

combo: 0000000011001000

word: 0100111011000000

combo: 0000000011011000

word: 0111011011001000

combo: 0000000011011001

word: 0100111011011000

combo: 0000000011011011

word: 0111011011010000

combo: 0000000011011010

word: 0100111011110000

combo: 0000000011011110

word: 0111011011111000

combo: 0000000011011111

word: 0100111011101000

combo: 0000000011011101

word: 0111011011100000

combo: 0000000011011100

word: 1110111010100000

combo: 0000000011010100

temp: 0000000011010100

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 1101011010101000

combo: 0000000011010101

temp: 0000000011010101

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 1110111010111000

combo: 0000000011010111

word: 1101011010110000

combo: 0000000011010110

temp: 0000000011010110

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 1110111010010000

combo: 0000000011010010

temp: 0000000011010010

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 1101011010011000

combo: 0000000011010011

temp: 0000000011010011

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 1110111010001000

combo: 0000000011010001

temp: 0000000011010001

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 1101011010000000

combo: 0000000011010000

word: 1111011110000000

combo: 0000000011110000

temp: 0000000011110000

orbit_checks[temp>>log2radix]= 101100000000001111110

passed if statements
temp basis:
1101000010111100
1111011110000000
1100000001000001
rs list:
0 0 1 1 1 1 0 1 0 0 0 0 1 0 1 1 
0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 
B_aug:
[1 0 0 0 0 0 1 1 1 1 1 0 1 1 0 0]
[0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 0]
[0 0 1 1 1 1 0 0 1 1 1 0 0 1 0 0]
[0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1]
m:
[0 0 1 1 1 1 0 1 0 0 0 0 1 0 1 1]
[0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1]
[1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (11,14), (10,11), ( 9,10), ( 8,13), (5,6), (4,5), (3,4), ( 3, 9)( 4,10)( 5,11)( 6,14), ( 2,12), (1,7), ( 1,15)( 7,16) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 2, 3, 4, 5, 11, 14, 8, 9, 10, 6, 15, 13, 7, 12]
[1, 14, 2, 3, 4, 5, 11, 0, 8, 9, 10, 15, 6, 13, 7, 12]
orbits:
1111011110000000
word: 1100111110001000

combo: 0000000011110001

temp: 0000000011110001

orbit_checks[temp>>log2radix]= 101110000000001111110

word: 1111011110011000

combo: 0000000011110011

word: 1100111110010000

combo: 0000000011110010

temp: 0000000011110010

orbit_checks[temp>>log2radix]= 101110000000001111110

word: 1111011110110000

combo: 0000000011110110

word: 1100111110111000

combo: 0000000011110111

word: 1111011110101000

combo: 0000000011110101

word: 1100111110100000

combo: 0000000011110100

temp: 0000000011110100

orbit_checks[temp>>log2radix]= 101110000000001111110

word: 0101011111100000

combo: 0000000011111100

word: 0110111111101000

combo: 0000000011111101

word: 0101011111111000

combo: 0000000011111111

word: 0110111111110000

combo: 0000000011111110

word: 0101011111010000

combo: 0000000011111010

word: 0110111111011000

combo: 0000000011111011

word: 0101011111001000

combo: 0000000011111001

word: 0110111111000000

combo: 0000000011111000

word: 0111111101000000

combo: 0000000011101000

word: 0100011101001000

combo: 0000000011101001

word: 0111111101011000

combo: 0000000011101011

word: 0100011101010000

combo: 0000000011101010

word: 0111111101110000

combo: 0000000011101110

word: 0100011101111000

combo: 0000000011101111

word: 0111111101101000

combo: 0000000011101101

word: 0100011101100000

combo: 0000000011101100

word: 1101111100100000

combo: 0000000011100100

temp: 0000000011100100

orbit_checks[temp>>log2radix]= 101110000000001111110

word: 1110011100101000

combo: 0000000011100101

temp: 0000000011100101

orbit_checks[temp>>log2radix]= 101110000000001111110

word: 1101111100111000

combo: 0000000011100111

word: 1110011100110000

combo: 0000000011100110

temp: 0000000011100110

orbit_checks[temp>>log2radix]= 101110000000001111110

word: 1101111100010000

combo: 0000000011100010

temp: 0000000011100010

orbit_checks[temp>>log2radix]= 101110000000001111110

word: 1110011100011000

combo: 0000000011100011

temp: 0000000011100011

orbit_checks[temp>>log2radix]= 101110000000001111110

word: 1101111100001000

combo: 0000000011100001

temp: 0000000011100001

orbit_checks[temp>>log2radix]= 101110000000001111110

word: 1110011100000000

combo: 0000000011100000

word: 1100010100000000

combo: 0000000010100000

temp: 0000000010100000

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 1111110100001000

combo: 0000000010100001

temp: 0000000010100001

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 1100010100011000

combo: 0000000010100011

word: 1111110100010000

combo: 0000000010100010

temp: 0000000010100010

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 1100010100110000

combo: 0000000010100110

word: 1111110100111000

combo: 0000000010100111

word: 1100010100101000

combo: 0000000010100101

word: 1111110100100000

combo: 0000000010100100

temp: 0000000010100100

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 0110010101100000

combo: 0000000010101100

word: 0101110101101000

combo: 0000000010101101

word: 0110010101111000

combo: 0000000010101111

word: 0101110101110000

combo: 0000000010101110

word: 0110010101010000

combo: 0000000010101010

word: 0101110101011000

combo: 0000000010101011

word: 0110010101001000

combo: 0000000010101001

word: 0101110101000000

combo: 0000000010101000

word: 0100110111000000

combo: 0000000010111000

word: 0111010111001000

combo: 0000000010111001

word: 0100110111011000

combo: 0000000010111011

word: 0111010111010000

combo: 0000000010111010

word: 0100110111110000

combo: 0000000010111110

word: 0111010111111000

combo: 0000000010111111

word: 0100110111101000

combo: 0000000010111101

word: 0111010111100000

combo: 0000000010111100

word: 1110110110100000

combo: 0000000010110100

temp: 0000000010110100

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 1101010110101000

combo: 0000000010110101

temp: 0000000010110101

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 1110110110111000

combo: 0000000010110111

word: 1101010110110000

combo: 0000000010110110

temp: 0000000010110110

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 1110110110010000

combo: 0000000010110010

temp: 0000000010110010

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 1101010110011000

combo: 0000000010110011

temp: 0000000010110011

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 1110110110001000

combo: 0000000010110001

temp: 0000000010110001

orbit_checks[temp>>log2radix]= 11111100000000000010111

word: 1101010110000000

combo: 0000000010110000

word: 1111010010000000

combo: 0000000010010000

word: 1100110010001000

combo: 0000000010010001

word: 1111010010011000

combo: 0000000010010011

temp: 0000000010010011

orbit_checks[temp>>log2radix]= 111010000000000010000001

word: 1100110010010000

combo: 0000000010010010

word: 1111010010110000

combo: 0000000010010110

temp: 0000000010010110

orbit_checks[temp>>log2radix]= 111010000000000010000001

word: 1100110010111000

combo: 0000000010010111

temp: 0000000010010111

orbit_checks[temp>>log2radix]= 111010000000000010000001

word: 1111010010101000

combo: 0000000010010101

temp: 0000000010010101

orbit_checks[temp>>log2radix]= 111010000000000010000001

word: 1100110010100000

combo: 0000000010010100

word: 0101010011100000

combo: 0000000010011100

word: 0110110011101000

combo: 0000000010011101

word: 0101010011111000

combo: 0000000010011111

word: 0110110011110000

combo: 0000000010011110

word: 0101010011010000

combo: 0000000010011010

word: 0110110011011000

combo: 0000000010011011

word: 0101010011001000

combo: 0000000010011001

word: 0110110011000000

combo: 0000000010011000

word: 0111110001000000

combo: 0000000010001000

word: 0100010001001000

combo: 0000000010001001

word: 0111110001011000

combo: 0000000010001011

word: 0100010001010000

combo: 0000000010001010

word: 0111110001110000

combo: 0000000010001110

word: 0100010001111000

combo: 0000000010001111

word: 0111110001101000

combo: 0000000010001101

word: 0100010001100000

combo: 0000000010001100

word: 1101110000100000

combo: 0000000010000100

word: 1110010000101000

combo: 0000000010000101

word: 1101110000111000

combo: 0000000010000111

temp: 0000000010000111

orbit_checks[temp>>log2radix]= 111010000000000010000001

word: 1110010000110000

combo: 0000000010000110

word: 1101110000010000

combo: 0000000010000010

word: 1110010000011000

combo: 0000000010000011

word: 1101110000001000

combo: 0000000010000001

word: 1110010000000000

combo: 0000000010000000

temp: 0000000010000000

orbit_checks[temp>>log2radix]= 111010000000000010000001

exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 1 1 1 1 0 1 1]
[0 1 0 0 0 0 0 1 1 1]
limit on degree (length): 15
ortho basis:
100001100000100
100001100001000
100001100010000
100001100100000
100001101000000
000001010000000
100010000000000
100100000000000
101000000000000
110000000000000

B_can_lab before row reduction:
000001111110110
000000000001111

B_can_lab after row reduction:
000001111111001
000001111110110

word generated as sum over rows of ortho_basis starting at 6: 011110000000000
gate: 000000000000011
k_gate: 000000000111111
nonzero_gate: 111110000000000
radix_gate: 000000000011111

Starting main loop:
word: 011110000000000

combo: 000000000000000

word: 111111100000100

combo: 000000000000001

temp: 000000000000001

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
111111100000100
000001011111101
rs list:
0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
1 0 1 1 1 1 1 1 0 1 0 0 0 0 0 
B_aug:
[1 0 1 1 1 1 1 1 0 1 0 0 0 0 0]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0 0]
[0 0 1 0 0 0 0 0 1 1 1 1 1 1 1]
m:
[0 0 1 0 0 0 0 0 1 1 1 1 1 1 1]
[1 0 1 1 1 1 1 1 0 1 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (14,15), (13,14), (12,13), (11,12), (6,7), (5,6), (4,5), (1,4), ( 1,11)( 4,12)( 5,13)( 6,14)( 7,15)( 8, 9) ] )
Right transversal of automorphism group of B_aug:
[0, 7, 2, 3, 4, 5, 6, 1, 9, 8, 10, 11, 12, 13, 14]
[10, 8, 2, 11, 12, 13, 14, 1, 9, 7, 0, 3, 4, 5, 6]
[10, 9, 2, 11, 12, 13, 14, 7, 8, 1, 0, 3, 4, 5, 6]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
111111100000100
111111100001000
111110111111100
111110110000100
111111100010000
111110110001000
111111101111100
111111100100000
111110110010000
111111101000000
111110110100000
111110111000000
word: 011110000001100

combo: 000000000000011

word: 111111100001000

combo: 000000000000010

temp: 000000000000010

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 011110000011000

combo: 000000000000110

word: 111111100011100

combo: 000000000000111

word: 011110000010100

combo: 000000000000101

word: 111111100010000

combo: 000000000000100

temp: 000000000000100

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 011110000110000

combo: 000000000001100

word: 111111100110100

combo: 000000000001101

word: 011110000111100

combo: 000000000001111

word: 111111100111000

combo: 000000000001110

word: 011110000101000

combo: 000000000001010

word: 111111100101100

combo: 000000000001011

word: 011110000100100

combo: 000000000001001

word: 111111100100000

combo: 000000000001000

temp: 000000000001000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 011110001100000

combo: 000000000011000

word: 111111101100100

combo: 000000000011001

word: 011110001101100

combo: 000000000011011

word: 111111101101000

combo: 000000000011010

word: 011110001111000

combo: 000000000011110

word: 111111101111100

combo: 000000000011111

temp: 000000000011111

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 011110001110100

combo: 000000000011101

word: 111111101110000

combo: 000000000011100

word: 011110001010000

combo: 000000000010100

word: 111111101010100

combo: 000000000010101

word: 011110001011100

combo: 000000000010111

word: 111111101011000

combo: 000000000010110

word: 011110001001000

combo: 000000000010010

word: 111111101001100

combo: 000000000010011

word: 011110001000100

combo: 000000000010001

word: 111111101000000

combo: 000000000010000

temp: 000000000010000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 111110111000000

combo: 000000000110000

temp: 000000000110000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 011111011000100

combo: 000000000110001

word: 111110111001100

combo: 000000000110011

word: 011111011001000

combo: 000000000110010

word: 111110111011000

combo: 000000000110110

word: 011111011011100

combo: 000000000110111

word: 111110111010100

combo: 000000000110101

word: 011111011010000

combo: 000000000110100

word: 111110111110000

combo: 000000000111100

word: 011111011110100

combo: 000000000111101

word: 111110111111100

combo: 000000000111111

temp: 000000000111111

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 011111011111000

combo: 000000000111110

word: 111110111101000

combo: 000000000111010

word: 011111011101100

combo: 000000000111011

word: 111110111100100

combo: 000000000111001

word: 011111011100000

combo: 000000000111000

word: 111110110100000

combo: 000000000101000

temp: 000000000101000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 011111010100100

combo: 000000000101001

word: 111110110101100

combo: 000000000101011

word: 011111010101000

combo: 000000000101010

word: 111110110111000

combo: 000000000101110

word: 011111010111100

combo: 000000000101111

word: 111110110110100

combo: 000000000101101

word: 011111010110000

combo: 000000000101100

word: 111110110010000

combo: 000000000100100

temp: 000000000100100

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 011111010010100

combo: 000000000100101

word: 111110110011100

combo: 000000000100111

word: 011111010011000

combo: 000000000100110

word: 111110110001000

combo: 000000000100010

temp: 000000000100010

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 011111010001100

combo: 000000000100011

word: 111110110000100

combo: 000000000100001

temp: 000000000100001

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 011111010000000

combo: 000000000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 1 1 1 1 0 1 1]
[0 1 0 0 0 0 0 1 1 1]
limit on degree (length): 16
ortho basis:
1000001100000100
1000001100001000
1000001100010000
1000001100100000
1000001101000000
0000001010000000
1000010000000000
1000100000000000
1001000000000000
1010000000000000
1100000000000000

B_can_lab before row reduction:
0000001111110110
0000000000001111

B_can_lab after row reduction:
0000001111111001
0000001111110110

word generated as sum over rows of ortho_basis starting at 6: 1111110000000000
gate: 0000000000000011
k_gate: 0000000000111111
nonzero_gate: 1111110000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1111110000000000

combo: 0000000000000000

word: 0111111100000100

combo: 0000000000000001

word: 1111110000001100

combo: 0000000000000011

temp: 0000000000000011

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1111110000001100
0000000101111111
rs list:
0 0 1 1 0 0 0 0 0 0 1 1 1 1 1 1 
1 1 1 1 1 1 1 0 1 0 0 0 0 0 0 0 
B_aug:
[1 0 1 1 1 1 1 1 0 1 0 0 0 0 0 0]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0]
[0 0 1 1 0 0 0 0 0 0 1 1 1 1 1 1]
m:
[0 0 1 1 0 0 0 0 0 0 1 1 1 1 1 1]
[1 1 1 1 1 1 1 0 1 0 0 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (12,13), (12,14), (12,15)(13,14), (12,16)(13,15), (11,12,16)(13,15), ( 8,10)(12,16)(13,15), ( 2, 9)(12,16)(13,15), ( 5, 6)(12,16)(13,15), ( 5, 7)(12,16)(13,15), ( 1, 5, 7)(12,16)(13,15), ( 3, 4)( 5, 7)(12,16)(13,15) ] )
Right transversal of automorphism group of B_aug:
[0, 7, 2, 3, 4, 5, 6, 1, 9, 8, 10, 11, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111110000001100
1111110000010100
1111111011110100
1111110000100100
1111110000011000
1111111011101100
1111111011111000
1111110001000100
1111110000101000
1111111011011100
1111110001001000
1111111010111100
1111110000110000
1111110001010000
1111110001100000
word: 0111111100001000

combo: 0000000000000010

word: 1111110000011000

combo: 0000000000000110

temp: 0000000000000110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111100011100

combo: 0000000000000111

word: 1111110000010100

combo: 0000000000000101

temp: 0000000000000101

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111100010000

combo: 0000000000000100

word: 1111110000110000

combo: 0000000000001100

temp: 0000000000001100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111100110100

combo: 0000000000001101

word: 1111110000111100

combo: 0000000000001111

word: 0111111100111000

combo: 0000000000001110

word: 1111110000101000

combo: 0000000000001010

temp: 0000000000001010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111100101100

combo: 0000000000001011

word: 1111110000100100

combo: 0000000000001001

temp: 0000000000001001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111100100000

combo: 0000000000001000

word: 1111110001100000

combo: 0000000000011000

temp: 0000000000011000

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111101100100

combo: 0000000000011001

word: 1111110001101100

combo: 0000000000011011

word: 0111111101101000

combo: 0000000000011010

word: 1111110001111000

combo: 0000000000011110

word: 0111111101111100

combo: 0000000000011111

word: 1111110001110100

combo: 0000000000011101

word: 0111111101110000

combo: 0000000000011100

word: 1111110001010000

combo: 0000000000010100

temp: 0000000000010100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111101010100

combo: 0000000000010101

word: 1111110001011100

combo: 0000000000010111

word: 0111111101011000

combo: 0000000000010110

word: 1111110001001000

combo: 0000000000010010

temp: 0000000000010010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111101001100

combo: 0000000000010011

word: 1111110001000100

combo: 0000000000010001

temp: 0000000000010001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111101000000

combo: 0000000000010000

word: 0111110111000000

combo: 0000000000110000

word: 1111111011000100

combo: 0000000000110001

word: 0111110111001100

combo: 0000000000110011

word: 1111111011001000

combo: 0000000000110010

word: 0111110111011000

combo: 0000000000110110

word: 1111111011011100

combo: 0000000000110111

temp: 0000000000110111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 0111110111010100

combo: 0000000000110101

word: 1111111011010000

combo: 0000000000110100

word: 0111110111110000

combo: 0000000000111100

word: 1111111011110100

combo: 0000000000111101

temp: 0000000000111101

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 0111110111111100

combo: 0000000000111111

word: 1111111011111000

combo: 0000000000111110

temp: 0000000000111110

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 0111110111101000

combo: 0000000000111010

word: 1111111011101100

combo: 0000000000111011

temp: 0000000000111011

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 0111110111100100

combo: 0000000000111001

word: 1111111011100000

combo: 0000000000111000

word: 0111110110100000

combo: 0000000000101000

word: 1111111010100100

combo: 0000000000101001

word: 0111110110101100

combo: 0000000000101011

word: 1111111010101000

combo: 0000000000101010

word: 0111110110111000

combo: 0000000000101110

word: 1111111010111100

combo: 0000000000101111

temp: 0000000000101111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 0111110110110100

combo: 0000000000101101

word: 1111111010110000

combo: 0000000000101100

word: 0111110110010000

combo: 0000000000100100

word: 1111111010010100

combo: 0000000000100101

word: 0111110110011100

combo: 0000000000100111

word: 1111111010011000

combo: 0000000000100110

word: 0111110110001000

combo: 0000000000100010

word: 1111111010001100

combo: 0000000000100011

word: 0111110110000100

combo: 0000000000100001

word: 1111111010000000

combo: 0000000000100000

temp: 0000000000100000

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

passed if statements
temp basis:
0000001011111101
1111111010000000
rs list:
1 0 1 1 1 1 1 1 0 1 0 0 0 0 0 0 
0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 
B_aug:
[1 0 1 1 1 1 1 1 0 1 0 0 0 0 0 0]
[0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0]
[0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1]
m:
[1 0 1 1 1 1 1 1 0 1 0 0 0 0 0 0]
[0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), (12,13), (11,12), ( 8,10), (6,7), (5,6), (4,5), (3,4), (2,9), (1,3), ( 1,11)( 3,12)( 4,13)( 5,14)( 6,15)( 7,16) ] )
Right transversal of automorphism group of B_aug:
[0, 7, 2, 3, 4, 5, 6, 1, 9, 8, 10, 11, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111111010000000
exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1 1 1 1 1]
limit on degree (length): 11
ortho basis:
00010000010
00010000100
00010001000
00010010000
00010100000
00011000000
10100000000
11000000000

B_can_lab before row reduction:
00011111111

B_can_lab after row reduction:
00011111111
101011001000011

word generated as sum over rows of ortho_basis starting at 6: 01100000000
gate: 00000000001
k_gate: 00000111111
nonzero_gate: 11100000000
radix_gate: 00000011111

Starting main loop:
word: 01100000000

combo: 00000000000

word: 01110000010

combo: 00000000001

word: 01100000110

combo: 00000000011

word: 01110000100

combo: 00000000010

word: 01100001100

combo: 00000000110

word: 01110001110

combo: 00000000111

word: 01100001010

combo: 00000000101

word: 01110001000

combo: 00000000100

word: 01100011000

combo: 00000001100

word: 01110011010

combo: 00000001101

word: 01100011110

combo: 00000001111

word: 01110011100

combo: 00000001110

word: 01100010100

combo: 00000001010

word: 01110010110

combo: 00000001011

word: 01100010010

combo: 00000001001

word: 01110010000

combo: 00000001000

word: 01100110000

combo: 00000011000

word: 01110110010

combo: 00000011001

word: 01100110110

combo: 00000011011

word: 01110110100

combo: 00000011010

word: 01100111100

combo: 00000011110

word: 01110111110

combo: 00000011111

word: 01100111010

combo: 00000011101

word: 01110111000

combo: 00000011100

word: 01100101000

combo: 00000010100

word: 01110101010

combo: 00000010101

word: 01100101110

combo: 00000010111

word: 01110101100

combo: 00000010110

word: 01100100100

combo: 00000010010

word: 01110100110

combo: 00000010011

word: 01100100010

combo: 00000010001

word: 01110100000

combo: 00000010000

word: 01101100000

combo: 00000110000

word: 01111100010

combo: 00000110001

word: 01101100110

combo: 00000110011

word: 01111100100

combo: 00000110010

word: 01101101100

combo: 00000110110

word: 01111101110

combo: 00000110111

word: 01101101010

combo: 00000110101

word: 01111101000

combo: 00000110100

word: 01101111000

combo: 00000111100

word: 01111111010

combo: 00000111101

word: 01101111110

combo: 00000111111

word: 01111111100

combo: 00000111110

word: 01101110100

combo: 00000111010

word: 01111110110

combo: 00000111011

word: 01101110010

combo: 00000111001

word: 01111110000

combo: 00000111000

word: 01101010000

combo: 00000101000

word: 01111010010

combo: 00000101001

word: 01101010110

combo: 00000101011

word: 01111010100

combo: 00000101010

word: 01101011100

combo: 00000101110

word: 01111011110

combo: 00000101111

word: 01101011010

combo: 00000101101

word: 01111011000

combo: 00000101100

word: 01101001000

combo: 00000100100

word: 01111001010

combo: 00000100101

word: 01101001110

combo: 00000100111

word: 01111001100

combo: 00000100110

word: 01101000100

combo: 00000100010

word: 01111000110

combo: 00000100011

word: 01101000010

combo: 00000100001

word: 01111000000

combo: 00000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1 1 1 1 1]
limit on degree (length): 12
ortho basis:
000010000010
000010000100
000010001000
000010010000
000010100000
000011000000
100100000000
101000000000
110000000000

B_can_lab before row reduction:
000011111111

B_can_lab after row reduction:
000011111111
101011001000011

word generated as sum over rows of ortho_basis starting at 6: 111100000000
gate: 000000000001
k_gate: 000000111111
nonzero_gate: 111100000000
radix_gate: 000000011111

Starting main loop:
word: 111100000000

combo: 000000000000

temp: 000000000000

orbit_checks[temp>>log2radix]= 000000000000

passed if statements
temp basis:
000011111111
rs list:
1 1 1 1 1 1 1 1 0 0 0 0 
B_aug:
[1 1 1 1 1 1 1 1 0 0 0 0]
[0 0 0 0 0 0 0 0 1 1 1 1]
m:
[1 1 1 1 1 1 1 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,12), (10,11), ( 9,10), (7,8), (6,7), (5,6), (4,5), (3,4), (2,3), (1,2) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
orbits:
111100000000
word: 111110000010

combo: 000000000001

word: 111100000110

combo: 000000000011

word: 111110000100

combo: 000000000010

word: 111100001100

combo: 000000000110

word: 111110001110

combo: 000000000111

temp: 000000000111

orbit_checks[temp>>log2radix]= 000000000001

passed if statements
temp basis:
111101110001
rs list:
1 0 0 0 1 1 1 0 1 1 1 1 
B_aug:
[1 1 1 1 1 1 1 1 0 0 0 0]
[0 1 1 1 0 0 0 1 1 1 1 1]
m:
[1 0 0 0 1 1 1 0 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (4,8), (2,4), (2,3), ( 2, 3)(10,11), ( 2, 3)(10,11,12), ( 2, 3)( 9,10,11,12), ( 2, 3)( 5, 6)(10,11,12), ( 2, 3)( 5, 6, 7)(10,11,12), ( 1, 5, 6, 7)( 2, 3)(10,11,12), ( 1, 9)( 2, 3)( 5,11, 7,10, 6,12) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 4, 5, 2, 3, 7, 6, 8, 9, 10, 11]
[1, 8, 9, 10, 2, 3, 7, 11, 0, 4, 5, 6]
orbits:
111110001110
111101001110
111110010110
111101110010
111100101110
111101010110
111110110010
111110100110
111110011010
111101101010
111101110100
111100011110
111100110110
111111010010
111101100110
111101011010
111110101010
111110110100
111111000110
111110011100
111101101100
111101111000
111111100010
111100111010
111111001010
111111010100
111101011100
111110101100
111110111000
111111100100
111100111100
111111001100
111111011000
111111101000
111111110000
word: 111100001010

combo: 000000000101

word: 111110001000

combo: 000000000100

word: 111100011000

combo: 000000001100

word: 111110011010

combo: 000000001101

temp: 000000001101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111100011110

combo: 000000001111

temp: 000000001111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111110011100

combo: 000000001110

temp: 000000001110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111100010100

combo: 000000001010

word: 111110010110

combo: 000000001011

temp: 000000001011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111100010010

combo: 000000001001

word: 111110010000

combo: 000000001000

word: 111100110000

combo: 000000011000

word: 111110110010

combo: 000000011001

temp: 000000011001

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111100110110

combo: 000000011011

temp: 000000011011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111110110100

combo: 000000011010

temp: 000000011010

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111100111100

combo: 000000011110

temp: 000000011110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111110111110

combo: 000000011111

word: 111100111010

combo: 000000011101

temp: 000000011101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111110111000

combo: 000000011100

temp: 000000011100

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111100101000

combo: 000000010100

word: 111110101010

combo: 000000010101

temp: 000000010101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111100101110

combo: 000000010111

temp: 000000010111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111110101100

combo: 000000010110

temp: 000000010110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111100100100

combo: 000000010010

word: 111110100110

combo: 000000010011

temp: 000000010011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111100100010

combo: 000000010001

word: 111110100000

combo: 000000010000

word: 111101100000

combo: 000000110000

word: 111111100010

combo: 000000110001

temp: 000000110001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101100110

combo: 000000110011

temp: 000000110011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111100100

combo: 000000110010

temp: 000000110010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101101100

combo: 000000110110

temp: 000000110110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111101110

combo: 000000110111

word: 111101101010

combo: 000000110101

temp: 000000110101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111101000

combo: 000000110100

temp: 000000110100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101111000

combo: 000000111100

temp: 000000111100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111111010

combo: 000000111101

word: 111101111110

combo: 000000111111

word: 111111111100

combo: 000000111110

word: 111101110100

combo: 000000111010

temp: 000000111010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111110110

combo: 000000111011

word: 111101110010

combo: 000000111001

temp: 000000111001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111110000

combo: 000000111000

temp: 000000111000

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101010000

combo: 000000101000

word: 111111010010

combo: 000000101001

temp: 000000101001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101010110

combo: 000000101011

temp: 000000101011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111010100

combo: 000000101010

temp: 000000101010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101011100

combo: 000000101110

temp: 000000101110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111011110

combo: 000000101111

word: 111101011010

combo: 000000101101

temp: 000000101101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111011000

combo: 000000101100

temp: 000000101100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101001000

combo: 000000100100

word: 111111001010

combo: 000000100101

temp: 000000100101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101001110

combo: 000000100111

temp: 000000100111

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111001100

combo: 000000100110

temp: 000000100110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101000100

combo: 000000100010

word: 111111000110

combo: 000000100011

temp: 000000100011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101000010

combo: 000000100001

word: 111111000000

combo: 000000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 1 1 1 1 1 1 0 0 0]
[0 1 0 0 0 0 0 0 0 1 1 1]
limit on degree (length): 13
ortho basis:
0010000000100
0010000001000
0010000010000
0010000100000
0010001000000
0010010000000
0100100000000
0101000000000

B_can_lab before row reduction:
0000011111111
0111100000000

B_can_lab after row reduction:
0000011111111
0111100000000

word generated as sum over rows of ortho_basis starting at 8: 0000000000000
gate: 0000000000011
k_gate: 0000011111111
nonzero_gate: 1000000000000
radix_gate: 0000000011111

Starting main loop:
word: 0000000000000

combo: 0000000000000

word: 0010000000100

combo: 0000000000001

word: 0000000001100

combo: 0000000000011

word: 0010000001000

combo: 0000000000010

word: 0000000011000

combo: 0000000000110

word: 0010000011100

combo: 0000000000111

word: 0000000010100

combo: 0000000000101

word: 0010000010000

combo: 0000000000100

word: 0000000110000

combo: 0000000001100

word: 0010000110100

combo: 0000000001101

word: 0000000111100

combo: 0000000001111

word: 0010000111000

combo: 0000000001110

word: 0000000101000

combo: 0000000001010

word: 0010000101100

combo: 0000000001011

word: 0000000100100

combo: 0000000001001

word: 0010000100000

combo: 0000000001000

word: 0000001100000

combo: 0000000011000

word: 0010001100100

combo: 0000000011001

word: 0000001101100

combo: 0000000011011

word: 0010001101000

combo: 0000000011010

word: 0000001111000

combo: 0000000011110

word: 0010001111100

combo: 0000000011111

word: 0000001110100

combo: 0000000011101

word: 0010001110000

combo: 0000000011100

word: 0000001010000

combo: 0000000010100

word: 0010001010100

combo: 0000000010101

word: 0000001011100

combo: 0000000010111

word: 0010001011000

combo: 0000000010110

word: 0000001001000

combo: 0000000010010

word: 0010001001100

combo: 0000000010011

word: 0000001000100

combo: 0000000010001

word: 0010001000000

combo: 0000000010000

word: 0000011000000

combo: 0000000110000

word: 0010011000100

combo: 0000000110001

word: 0000011001100

combo: 0000000110011

word: 0010011001000

combo: 0000000110010

word: 0000011011000

combo: 0000000110110

word: 0010011011100

combo: 0000000110111

word: 0000011010100

combo: 0000000110101

word: 0010011010000

combo: 0000000110100

word: 0000011110000

combo: 0000000111100

word: 0010011110100

combo: 0000000111101

word: 0000011111100

combo: 0000000111111

word: 0010011111000

combo: 0000000111110

word: 0000011101000

combo: 0000000111010

word: 0010011101100

combo: 0000000111011

word: 0000011100100

combo: 0000000111001

word: 0010011100000

combo: 0000000111000

word: 0000010100000

combo: 0000000101000

word: 0010010100100

combo: 0000000101001

word: 0000010101100

combo: 0000000101011

word: 0010010101000

combo: 0000000101010

word: 0000010111000

combo: 0000000101110

word: 0010010111100

combo: 0000000101111

word: 0000010110100

combo: 0000000101101

word: 0010010110000

combo: 0000000101100

word: 0000010010000

combo: 0000000100100

word: 0010010010100

combo: 0000000100101

word: 0000010011100

combo: 0000000100111

word: 0010010011000

combo: 0000000100110

word: 0000010001000

combo: 0000000100010

word: 0010010001100

combo: 0000000100011

word: 0000010000100

combo: 0000000100001

word: 0010010000000

combo: 0000000100000

word: 0110110000000

combo: 0000001100000

word: 0100110000100

combo: 0000001100001

word: 0110110001100

combo: 0000001100011

word: 0100110001000

combo: 0000001100010

word: 0110110011000

combo: 0000001100110

word: 0100110011100

combo: 0000001100111

word: 0110110010100

combo: 0000001100101

word: 0100110010000

combo: 0000001100100

word: 0110110110000

combo: 0000001101100

word: 0100110110100

combo: 0000001101101

word: 0110110111100

combo: 0000001101111

word: 0100110111000

combo: 0000001101110

word: 0110110101000

combo: 0000001101010

word: 0100110101100

combo: 0000001101011

word: 0110110100100

combo: 0000001101001

word: 0100110100000

combo: 0000001101000

word: 0110111100000

combo: 0000001111000

word: 0100111100100

combo: 0000001111001

word: 0110111101100

combo: 0000001111011

word: 0100111101000

combo: 0000001111010

word: 0110111111000

combo: 0000001111110

word: 0100111111100

combo: 0000001111111

word: 0110111110100

combo: 0000001111101

word: 0100111110000

combo: 0000001111100

word: 0110111010000

combo: 0000001110100

word: 0100111010100

combo: 0000001110101

word: 0110111011100

combo: 0000001110111

word: 0100111011000

combo: 0000001110110

word: 0110111001000

combo: 0000001110010

word: 0100111001100

combo: 0000001110011

word: 0110111000100

combo: 0000001110001

word: 0100111000000

combo: 0000001110000

word: 0110101000000

combo: 0000001010000

word: 0100101000100

combo: 0000001010001

word: 0110101001100

combo: 0000001010011

word: 0100101001000

combo: 0000001010010

word: 0110101011000

combo: 0000001010110

word: 0100101011100

combo: 0000001010111

word: 0110101010100

combo: 0000001010101

word: 0100101010000

combo: 0000001010100

word: 0110101110000

combo: 0000001011100

word: 0100101110100

combo: 0000001011101

word: 0110101111100

combo: 0000001011111

word: 0100101111000

combo: 0000001011110

word: 0110101101000

combo: 0000001011010

word: 0100101101100

combo: 0000001011011

word: 0110101100100

combo: 0000001011001

word: 0100101100000

combo: 0000001011000

word: 0110100100000

combo: 0000001001000

word: 0100100100100

combo: 0000001001001

word: 0110100101100

combo: 0000001001011

word: 0100100101000

combo: 0000001001010

word: 0110100111000

combo: 0000001001110

word: 0100100111100

combo: 0000001001111

word: 0110100110100

combo: 0000001001101

word: 0100100110000

combo: 0000001001100

word: 0110100010000

combo: 0000001000100

word: 0100100010100

combo: 0000001000101

word: 0110100011100

combo: 0000001000111

word: 0100100011000

combo: 0000001000110

word: 0110100001000

combo: 0000001000010

word: 0100100001100

combo: 0000001000011

word: 0110100000100

combo: 0000001000001

word: 0100100000000

combo: 0000001000000

word: 0001100000000

combo: 0000011000000

word: 0011100000100

combo: 0000011000001

word: 0001100001100

combo: 0000011000011

word: 0011100001000

combo: 0000011000010

word: 0001100011000

combo: 0000011000110

word: 0011100011100

combo: 0000011000111

word: 0001100010100

combo: 0000011000101

word: 0011100010000

combo: 0000011000100

word: 0001100110000

combo: 0000011001100

word: 0011100110100

combo: 0000011001101

word: 0001100111100

combo: 0000011001111

word: 0011100111000

combo: 0000011001110

word: 0001100101000

combo: 0000011001010

word: 0011100101100

combo: 0000011001011

word: 0001100100100

combo: 0000011001001

word: 0011100100000

combo: 0000011001000

word: 0001101100000

combo: 0000011011000

word: 0011101100100

combo: 0000011011001

word: 0001101101100

combo: 0000011011011

word: 0011101101000

combo: 0000011011010

word: 0001101111000

combo: 0000011011110

word: 0011101111100

combo: 0000011011111

word: 0001101110100

combo: 0000011011101

word: 0011101110000

combo: 0000011011100

word: 0001101010000

combo: 0000011010100

word: 0011101010100

combo: 0000011010101

word: 0001101011100

combo: 0000011010111

word: 0011101011000

combo: 0000011010110

word: 0001101001000

combo: 0000011010010

word: 0011101001100

combo: 0000011010011

word: 0001101000100

combo: 0000011010001

word: 0011101000000

combo: 0000011010000

word: 0001111000000

combo: 0000011110000

word: 0011111000100

combo: 0000011110001

word: 0001111001100

combo: 0000011110011

word: 0011111001000

combo: 0000011110010

word: 0001111011000

combo: 0000011110110

word: 0011111011100

combo: 0000011110111

word: 0001111010100

combo: 0000011110101

word: 0011111010000

combo: 0000011110100

word: 0001111110000

combo: 0000011111100

word: 0011111110100

combo: 0000011111101

word: 0001111111100

combo: 0000011111111

word: 0011111111000

combo: 0000011111110

word: 0001111101000

combo: 0000011111010

word: 0011111101100

combo: 0000011111011

word: 0001111100100

combo: 0000011111001

word: 0011111100000

combo: 0000011111000

word: 0001110100000

combo: 0000011101000

word: 0011110100100

combo: 0000011101001

word: 0001110101100

combo: 0000011101011

word: 0011110101000

combo: 0000011101010

word: 0001110111000

combo: 0000011101110

word: 0011110111100

combo: 0000011101111

word: 0001110110100

combo: 0000011101101

word: 0011110110000

combo: 0000011101100

word: 0001110010000

combo: 0000011100100

word: 0011110010100

combo: 0000011100101

word: 0001110011100

combo: 0000011100111

word: 0011110011000

combo: 0000011100110

word: 0001110001000

combo: 0000011100010

word: 0011110001100

combo: 0000011100011

word: 0001110000100

combo: 0000011100001

word: 0011110000000

combo: 0000011100000

word: 0111010000000

combo: 0000010100000

word: 0101010000100

combo: 0000010100001

word: 0111010001100

combo: 0000010100011

word: 0101010001000

combo: 0000010100010

word: 0111010011000

combo: 0000010100110

word: 0101010011100

combo: 0000010100111

word: 0111010010100

combo: 0000010100101

word: 0101010010000

combo: 0000010100100

word: 0111010110000

combo: 0000010101100

word: 0101010110100

combo: 0000010101101

word: 0111010111100

combo: 0000010101111

word: 0101010111000

combo: 0000010101110

word: 0111010101000

combo: 0000010101010

word: 0101010101100

combo: 0000010101011

word: 0111010100100

combo: 0000010101001

word: 0101010100000

combo: 0000010101000

word: 0111011100000

combo: 0000010111000

word: 0101011100100

combo: 0000010111001

word: 0111011101100

combo: 0000010111011

word: 0101011101000

combo: 0000010111010

word: 0111011111000

combo: 0000010111110

word: 0101011111100

combo: 0000010111111

word: 0111011110100

combo: 0000010111101

word: 0101011110000

combo: 0000010111100

word: 0111011010000

combo: 0000010110100

word: 0101011010100

combo: 0000010110101

word: 0111011011100

combo: 0000010110111

word: 0101011011000

combo: 0000010110110

word: 0111011001000

combo: 0000010110010

word: 0101011001100

combo: 0000010110011

word: 0111011000100

combo: 0000010110001

word: 0101011000000

combo: 0000010110000

word: 0111001000000

combo: 0000010010000

word: 0101001000100

combo: 0000010010001

word: 0111001001100

combo: 0000010010011

word: 0101001001000

combo: 0000010010010

word: 0111001011000

combo: 0000010010110

word: 0101001011100

combo: 0000010010111

word: 0111001010100

combo: 0000010010101

word: 0101001010000

combo: 0000010010100

word: 0111001110000

combo: 0000010011100

word: 0101001110100

combo: 0000010011101

word: 0111001111100

combo: 0000010011111

word: 0101001111000

combo: 0000010011110

word: 0111001101000

combo: 0000010011010

word: 0101001101100

combo: 0000010011011

word: 0111001100100

combo: 0000010011001

word: 0101001100000

combo: 0000010011000

word: 0111000100000

combo: 0000010001000

word: 0101000100100

combo: 0000010001001

word: 0111000101100

combo: 0000010001011

word: 0101000101000

combo: 0000010001010

word: 0111000111000

combo: 0000010001110

word: 0101000111100

combo: 0000010001111

word: 0111000110100

combo: 0000010001101

word: 0101000110000

combo: 0000010001100

word: 0111000010000

combo: 0000010000100

word: 0101000010100

combo: 0000010000101

word: 0111000011100

combo: 0000010000111

word: 0101000011000

combo: 0000010000110

word: 0111000001000

combo: 0000010000010

word: 0101000001100

combo: 0000010000011

word: 0111000000100

combo: 0000010000001

word: 0101000000000

combo: 0000010000000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 1 1 1 1 1 1 0 0 0]
[0 1 0 0 0 0 0 0 0 1 1 1]
limit on degree (length): 14
ortho basis:
00010000000100
00010000001000
00010000010000
00010000100000
00010001000000
00010010000000
00100100000000
00101000000000
11000000000000

B_can_lab before row reduction:
00000011111111
00111100000000

B_can_lab after row reduction:
00000011111111
00111100000000

word generated as sum over rows of ortho_basis starting at 8: 11000000000000
gate: 00000000000011
k_gate: 00000011111111
nonzero_gate: 11000000000000
radix_gate: 00000000011111

Starting main loop:
word: 11000000000000

combo: 00000000000000

word: 11010000000100

combo: 00000000000001

temp: 00000000000001

orbit_checks[temp>>log2radix]= 00000000000000

passed if statements
temp basis:
00101100000010
11000011111001
rs list:
0 1 0 0 0 0 0 0 1 1 0 1 0 0 
1 0 0 1 1 1 1 1 0 0 0 0 1 1 
B_aug:
[1 0 1 1 1 1 1 1 0 0 1 0 0 0]
[0 1 0 0 0 0 0 0 1 1 0 1 0 0]
[0 0 1 0 0 0 0 0 0 0 1 0 1 1]
m:
[0 1 0 0 0 0 0 0 1 1 0 1 0 0]
[1 0 0 1 1 1 1 1 0 0 0 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (4,5), (4,6), (4,7)(5,6), (4,8)(5,7), (1,4,8)(5,7), ( 4, 8)( 5, 7)(13,14), ( 3,11)( 4, 8)( 5, 7)(13,14), ( 4, 8)( 5, 7)( 9,10)(13,14), ( 4, 8)( 5, 7)( 9,12)(13,14), ( 2, 9,12)( 4, 8)( 5, 7)(13,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 12, 3, 4, 5, 6, 7, 8, 9, 13, 11, 2, 10]
orbits:
11010000000100
11000010000100
11010000001000
11000011111100
11000001000100
11000010001000
11010001111100
11010000010000
11000000100100
11000001001000
11010010111100
11000010010000
11010000100000
11000000010100
11000000101000
11010011011100
11000001010000
11000010100000
11010001000000
11000000001100
11000000011000
11010011101100
11000000110000
11000001100000
11000011000000
11010010000000
11010011110100
11010011111000
word: 11000000001100

combo: 00000000000011

temp: 00000000000011

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11010000001000

combo: 00000000000010

temp: 00000000000010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11000000011000

combo: 00000000000110

temp: 00000000000110

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11010000011100

combo: 00000000000111

word: 11000000010100

combo: 00000000000101

temp: 00000000000101

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11010000010000

combo: 00000000000100

temp: 00000000000100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11000000110000

combo: 00000000001100

temp: 00000000001100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11010000110100

combo: 00000000001101

word: 11000000111100

combo: 00000000001111

word: 11010000111000

combo: 00000000001110

word: 11000000101000

combo: 00000000001010

temp: 00000000001010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11010000101100

combo: 00000000001011

word: 11000000100100

combo: 00000000001001

temp: 00000000001001

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11010000100000

combo: 00000000001000

temp: 00000000001000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11000001100000

combo: 00000000011000

temp: 00000000011000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11010001100100

combo: 00000000011001

word: 11000001101100

combo: 00000000011011

word: 11010001101000

combo: 00000000011010

word: 11000001111000

combo: 00000000011110

word: 11010001111100

combo: 00000000011111

temp: 00000000011111

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11000001110100

combo: 00000000011101

word: 11010001110000

combo: 00000000011100

word: 11000001010000

combo: 00000000010100

temp: 00000000010100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11010001010100

combo: 00000000010101

word: 11000001011100

combo: 00000000010111

word: 11010001011000

combo: 00000000010110

word: 11000001001000

combo: 00000000010010

temp: 00000000010010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11010001001100

combo: 00000000010011

word: 11000001000100

combo: 00000000010001

temp: 00000000010001

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11010001000000

combo: 00000000010000

temp: 00000000010000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11000011000000

combo: 00000000110000

temp: 00000000110000

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 11010011000100

combo: 00000000110001

word: 11000011001100

combo: 00000000110011

word: 11010011001000

combo: 00000000110010

word: 11000011011000

combo: 00000000110110

word: 11010011011100

combo: 00000000110111

temp: 00000000110111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 11000011010100

combo: 00000000110101

word: 11010011010000

combo: 00000000110100

word: 11000011110000

combo: 00000000111100

word: 11010011110100

combo: 00000000111101

temp: 00000000111101

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 11000011111100

combo: 00000000111111

temp: 00000000111111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 11010011111000

combo: 00000000111110

temp: 00000000111110

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 11000011101000

combo: 00000000111010

word: 11010011101100

combo: 00000000111011

temp: 00000000111011

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 11000011100100

combo: 00000000111001

word: 11010011100000

combo: 00000000111000

word: 11000010100000

combo: 00000000101000

temp: 00000000101000

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 11010010100100

combo: 00000000101001

word: 11000010101100

combo: 00000000101011

word: 11010010101000

combo: 00000000101010

word: 11000010111000

combo: 00000000101110

word: 11010010111100

combo: 00000000101111

temp: 00000000101111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 11000010110100

combo: 00000000101101

word: 11010010110000

combo: 00000000101100

word: 11000010010000

combo: 00000000100100

temp: 00000000100100

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 11010010010100

combo: 00000000100101

word: 11000010011100

combo: 00000000100111

word: 11010010011000

combo: 00000000100110

word: 11000010001000

combo: 00000000100010

temp: 00000000100010

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 11010010001100

combo: 00000000100011

word: 11000010000100

combo: 00000000100001

temp: 00000000100001

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 11010010000000

combo: 00000000100000

temp: 00000000100000

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 11110110000000

combo: 00000001100000

word: 11100110000100

combo: 00000001100001

word: 11110110001100

combo: 00000001100011

temp: 00000001100011

orbit_checks[temp>>log2radix]= 00000000000000

passed if statements
temp basis:
11011010001110
11110110001100
rs list:
0 1 1 1 0 0 0 1 0 1 1 0 1 1 
0 0 1 1 0 0 0 1 1 0 1 1 1 1 
B_aug:
[1 0 1 1 1 1 1 1 0 0 1 0 0 0]
[0 1 0 0 0 0 0 0 1 1 0 1 0 0]
[0 0 1 1 0 0 0 1 1 0 1 1 1 1]
m:
[0 1 1 1 0 0 0 1 0 1 1 0 1 1]
[0 0 1 1 0 0 0 1 1 0 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 4,11), ( 3, 4,11), ( 3, 4,11, 8), ( 3, 4,11, 8)( 5, 6), ( 3, 4,11, 8)( 5, 6, 7), ( 1, 5, 6, 7)( 3, 4,11, 8), ( 3, 4,11, 8)( 5, 6, 7)( 9,12), ( 2, 9)( 3, 4,11, 8)( 5, 6, 7)(10,12), ( 3, 4,11, 8)( 5, 6, 7)(13,14) ] )
Right transversal of automorphism group of B_aug:
[2, 1, 0, 4, 3, 7, 10, 5, 8, 9, 6, 11, 12, 13]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
orbits:
11110110001100
11110101001100
11110110010100
11100101110100
11011110001100
11111010001100
11100111001100
11110100101100
11110101010100
11100110110100
11011101001100
11111001001100
11110110100100
11110110011000
11100101101100
11011110010100
11111010010100
11100101111000
11001101110100
11101001110100
11100110101100
11100111010100
11110100110100
11001111001100
11101011001100
11110100011100
11011100101100
11111000101100
11110101100100
11110101011000
11011101010100
11111001010100
11100110111000
11001110110100
11101010110100
11110111000100
11110110101000
11100101011100
11011110100100
11111010100100
11011110011000
11111010011000
11001101101100
11101001101100
11001101111000
11101001111000
11100110011100
11001110101100
11101010101100
11100111100100
11100111011000
11001111010100
11101011010100
11110100111000
11011100110100
11111000110100
11011100011100
11111000011100
11110101101000
11011101100100
11111001100100
11011101011000
11111001011000
11001110111000
11101010111000
11110111001000
11100100111100
11011111000100
11111011000100
11110110110000
11011110101000
11111010101000
11001101011100
11101001011100
11001110011100
11101010011100
11100111101000
11001111100100
11101011100100
11001111011000
11101011011000
11011100111000
11111000111000
11110101110000
11011101101000
11111001101000
11110111010000
11011111001000
11111011001000
11001100111100
11101000111100
11011110110000
11111010110000
11100111110000
11001111101000
11101011101000
11011101110000
11111001110000
11110111100000
11011111010000
11111011010000
11001111110000
11101011110000
11011111100000
11111011100000
word: 11100110001000

combo: 00000001100010

word: 11110110011000

combo: 00000001100110

temp: 00000001100110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11100110011100

combo: 00000001100111

temp: 00000001100111

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11110110010100

combo: 00000001100101

temp: 00000001100101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11100110010000

combo: 00000001100100

word: 11110110110000

combo: 00000001101100

temp: 00000001101100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11100110110100

combo: 00000001101101

temp: 00000001101101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11110110111100

combo: 00000001101111

word: 11100110111000

combo: 00000001101110

temp: 00000001101110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11110110101000

combo: 00000001101010

temp: 00000001101010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11100110101100

combo: 00000001101011

temp: 00000001101011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11110110100100

combo: 00000001101001

temp: 00000001101001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11100110100000

combo: 00000001101000

word: 11110111100000

combo: 00000001111000

temp: 00000001111000

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11100111100100

combo: 00000001111001

temp: 00000001111001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11110111101100

combo: 00000001111011

word: 11100111101000

combo: 00000001111010

temp: 00000001111010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11110111111000

combo: 00000001111110

word: 11100111111100

combo: 00000001111111

word: 11110111110100

combo: 00000001111101

word: 11100111110000

combo: 00000001111100

temp: 00000001111100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11110111010000

combo: 00000001110100

temp: 00000001110100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11100111010100

combo: 00000001110101

temp: 00000001110101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11110111011100

combo: 00000001110111

word: 11100111011000

combo: 00000001110110

temp: 00000001110110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11110111001000

combo: 00000001110010

temp: 00000001110010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11100111001100

combo: 00000001110011

temp: 00000001110011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11110111000100

combo: 00000001110001

temp: 00000001110001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11100111000000

combo: 00000001110000

word: 11110101000000

combo: 00000001010000

word: 11100101000100

combo: 00000001010001

word: 11110101001100

combo: 00000001010011

temp: 00000001010011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11100101001000

combo: 00000001010010

word: 11110101011000

combo: 00000001010110

temp: 00000001010110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11100101011100

combo: 00000001010111

temp: 00000001010111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11110101010100

combo: 00000001010101

temp: 00000001010101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11100101010000

combo: 00000001010100

word: 11110101110000

combo: 00000001011100

temp: 00000001011100

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11100101110100

combo: 00000001011101

temp: 00000001011101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11110101111100

combo: 00000001011111

word: 11100101111000

combo: 00000001011110

temp: 00000001011110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11110101101000

combo: 00000001011010

temp: 00000001011010

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11100101101100

combo: 00000001011011

temp: 00000001011011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11110101100100

combo: 00000001011001

temp: 00000001011001

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11100101100000

combo: 00000001011000

word: 11110100100000

combo: 00000001001000

word: 11100100100100

combo: 00000001001001

word: 11110100101100

combo: 00000001001011

temp: 00000001001011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11100100101000

combo: 00000001001010

word: 11110100111000

combo: 00000001001110

temp: 00000001001110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11100100111100

combo: 00000001001111

temp: 00000001001111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11110100110100

combo: 00000001001101

temp: 00000001001101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11100100110000

combo: 00000001001100

word: 11110100010000

combo: 00000001000100

word: 11100100010100

combo: 00000001000101

word: 11110100011100

combo: 00000001000111

temp: 00000001000111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 11100100011000

combo: 00000001000110

word: 11110100001000

combo: 00000001000010

word: 11100100001100

combo: 00000001000011

word: 11110100000100

combo: 00000001000001

word: 11100100000000

combo: 00000001000000

temp: 00000001000000

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

passed if statements
temp basis:
00010011111101
11001000000010
rs list:
1 0 1 1 1 1 1 1 0 0 1 0 0 0 
0 1 0 0 0 0 0 0 0 1 0 0 1 1 
B_aug:
[1 0 1 1 1 1 1 1 0 0 1 0 0 0]
[0 1 0 0 0 0 0 0 1 1 0 1 0 0]
[0 0 0 0 0 0 0 0 1 0 0 1 1 1]
m:
[1 0 1 1 1 1 1 1 0 0 1 0 0 0]
[0 1 0 0 0 0 0 0 0 1 0 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (3,4), (3,5), (3,6)(4,5), (3,7)(4,6), (3,8)(4,7)(5,6), ( 3,11)( 4, 8)( 5, 7), ( 1, 3,11)( 4, 8)( 5, 7), ( 3,11)( 4, 8)( 5, 7)(13,14), ( 3,11)( 4, 8)( 5, 7)( 9,12)(13,14), ( 2,10)( 3,11)( 4, 8)( 5, 7)(13,14), ( 2,13,10,14)( 3,11)( 4, 8)( 5, 7) ] )
Right transversal of automorphism group of B_aug:
[0, 8, 2, 3, 4, 5, 6, 7, 1, 11, 10, 9, 12, 13]
[0, 8, 2, 3, 4, 5, 6, 7, 12, 11, 10, 13, 1, 9]
orbits:
11100100000000
11001100000000
11101000000000
word: 11001100000000

combo: 00000011000000

temp: 00000011000000

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11011100000100

combo: 00000011000001

word: 11001100001100

combo: 00000011000011

word: 11011100001000

combo: 00000011000010

word: 11001100011000

combo: 00000011000110

word: 11011100011100

combo: 00000011000111

temp: 00000011000111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11001100010100

combo: 00000011000101

word: 11011100010000

combo: 00000011000100

word: 11001100110000

combo: 00000011001100

word: 11011100110100

combo: 00000011001101

temp: 00000011001101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11001100111100

combo: 00000011001111

temp: 00000011001111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11011100111000

combo: 00000011001110

temp: 00000011001110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11001100101000

combo: 00000011001010

word: 11011100101100

combo: 00000011001011

temp: 00000011001011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11001100100100

combo: 00000011001001

word: 11011100100000

combo: 00000011001000

word: 11001101100000

combo: 00000011011000

word: 11011101100100

combo: 00000011011001

temp: 00000011011001

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11001101101100

combo: 00000011011011

temp: 00000011011011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11011101101000

combo: 00000011011010

temp: 00000011011010

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11001101111000

combo: 00000011011110

temp: 00000011011110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11011101111100

combo: 00000011011111

word: 11001101110100

combo: 00000011011101

temp: 00000011011101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11011101110000

combo: 00000011011100

temp: 00000011011100

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11001101010000

combo: 00000011010100

word: 11011101010100

combo: 00000011010101

temp: 00000011010101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11001101011100

combo: 00000011010111

temp: 00000011010111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11011101011000

combo: 00000011010110

temp: 00000011010110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11001101001000

combo: 00000011010010

word: 11011101001100

combo: 00000011010011

temp: 00000011010011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11001101000100

combo: 00000011010001

word: 11011101000000

combo: 00000011010000

word: 11001111000000

combo: 00000011110000

word: 11011111000100

combo: 00000011110001

temp: 00000011110001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11001111001100

combo: 00000011110011

temp: 00000011110011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11011111001000

combo: 00000011110010

temp: 00000011110010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11001111011000

combo: 00000011110110

temp: 00000011110110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11011111011100

combo: 00000011110111

word: 11001111010100

combo: 00000011110101

temp: 00000011110101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11011111010000

combo: 00000011110100

temp: 00000011110100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11001111110000

combo: 00000011111100

temp: 00000011111100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11011111110100

combo: 00000011111101

word: 11001111111100

combo: 00000011111111

word: 11011111111000

combo: 00000011111110

word: 11001111101000

combo: 00000011111010

temp: 00000011111010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11011111101100

combo: 00000011111011

word: 11001111100100

combo: 00000011111001

temp: 00000011111001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11011111100000

combo: 00000011111000

temp: 00000011111000

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11001110100000

combo: 00000011101000

word: 11011110100100

combo: 00000011101001

temp: 00000011101001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11001110101100

combo: 00000011101011

temp: 00000011101011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11011110101000

combo: 00000011101010

temp: 00000011101010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11001110111000

combo: 00000011101110

temp: 00000011101110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11011110111100

combo: 00000011101111

word: 11001110110100

combo: 00000011101101

temp: 00000011101101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11011110110000

combo: 00000011101100

temp: 00000011101100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11001110010000

combo: 00000011100100

word: 11011110010100

combo: 00000011100101

temp: 00000011100101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11001110011100

combo: 00000011100111

temp: 00000011100111

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11011110011000

combo: 00000011100110

temp: 00000011100110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11001110001000

combo: 00000011100010

word: 11011110001100

combo: 00000011100011

temp: 00000011100011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11001110000100

combo: 00000011100001

word: 11011110000000

combo: 00000011100000

word: 11111010000000

combo: 00000010100000

word: 11101010000100

combo: 00000010100001

word: 11111010001100

combo: 00000010100011

temp: 00000010100011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11101010001000

combo: 00000010100010

word: 11111010011000

combo: 00000010100110

temp: 00000010100110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11101010011100

combo: 00000010100111

temp: 00000010100111

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11111010010100

combo: 00000010100101

temp: 00000010100101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11101010010000

combo: 00000010100100

word: 11111010110000

combo: 00000010101100

temp: 00000010101100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11101010110100

combo: 00000010101101

temp: 00000010101101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11111010111100

combo: 00000010101111

word: 11101010111000

combo: 00000010101110

temp: 00000010101110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11111010101000

combo: 00000010101010

temp: 00000010101010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11101010101100

combo: 00000010101011

temp: 00000010101011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11111010100100

combo: 00000010101001

temp: 00000010101001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11101010100000

combo: 00000010101000

word: 11111011100000

combo: 00000010111000

temp: 00000010111000

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11101011100100

combo: 00000010111001

temp: 00000010111001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11111011101100

combo: 00000010111011

word: 11101011101000

combo: 00000010111010

temp: 00000010111010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11111011111000

combo: 00000010111110

word: 11101011111100

combo: 00000010111111

word: 11111011110100

combo: 00000010111101

word: 11101011110000

combo: 00000010111100

temp: 00000010111100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11111011010000

combo: 00000010110100

temp: 00000010110100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11101011010100

combo: 00000010110101

temp: 00000010110101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11111011011100

combo: 00000010110111

word: 11101011011000

combo: 00000010110110

temp: 00000010110110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11111011001000

combo: 00000010110010

temp: 00000010110010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11101011001100

combo: 00000010110011

temp: 00000010110011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11111011000100

combo: 00000010110001

temp: 00000010110001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 11101011000000

combo: 00000010110000

word: 11111001000000

combo: 00000010010000

word: 11101001000100

combo: 00000010010001

word: 11111001001100

combo: 00000010010011

temp: 00000010010011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11101001001000

combo: 00000010010010

word: 11111001011000

combo: 00000010010110

temp: 00000010010110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11101001011100

combo: 00000010010111

temp: 00000010010111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11111001010100

combo: 00000010010101

temp: 00000010010101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11101001010000

combo: 00000010010100

word: 11111001110000

combo: 00000010011100

temp: 00000010011100

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11101001110100

combo: 00000010011101

temp: 00000010011101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11111001111100

combo: 00000010011111

word: 11101001111000

combo: 00000010011110

temp: 00000010011110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11111001101000

combo: 00000010011010

temp: 00000010011010

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11101001101100

combo: 00000010011011

temp: 00000010011011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11111001100100

combo: 00000010011001

temp: 00000010011001

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11101001100000

combo: 00000010011000

word: 11111000100000

combo: 00000010001000

word: 11101000100100

combo: 00000010001001

word: 11111000101100

combo: 00000010001011

temp: 00000010001011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11101000101000

combo: 00000010001010

word: 11111000111000

combo: 00000010001110

temp: 00000010001110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11101000111100

combo: 00000010001111

temp: 00000010001111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11111000110100

combo: 00000010001101

temp: 00000010001101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11101000110000

combo: 00000010001100

word: 11111000010000

combo: 00000010000100

word: 11101000010100

combo: 00000010000101

word: 11111000011100

combo: 00000010000111

temp: 00000010000111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 11101000011000

combo: 00000010000110

word: 11111000001000

combo: 00000010000010

word: 11101000001100

combo: 00000010000011

word: 11111000000100

combo: 00000010000001

word: 11101000000000

combo: 00000010000000

temp: 00000010000000

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 1 1 1 1 0 0 0 0 1 1]
[0 1 0 0 0 0 0 0 1 1 0 1 0 0]
[0 0 1 0 0 0 0 0 0 0 1 0 1 1]
limit on degree (length): 15
ortho basis:
110100000001000
110100000010000
110100000100000
110100001000000
110100010000000
001000100000000
001001000000000
010010000000000

B_can_lab before row reduction:
001101111110000
000000000001111
011110000000000

B_can_lab after row reduction:
000000000001111
001101111110000
011110000000000

word generated as sum over rows of ortho_basis starting at 8: 000000000000000
gate: 000000000000111
k_gate: 000000011111111
nonzero_gate: 100000000000000
radix_gate: 000000000011111

Starting main loop:
word: 000000000000000

combo: 000000000000000

word: 110100000001000

combo: 000000000000001

temp: 000000000000001

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
001001100000010
100110011110001
010110000000100
rs list:
0 1 0 0 0 0 0 0 1 1 0 0 1 0 0 
1 0 0 0 1 1 1 1 0 0 1 1 0 0 1 
0 0 1 0 0 0 0 0 0 0 1 1 0 1 0 
B_aug:
[1 0 0 1 1 1 1 1 0 0 1 0 0 1 0]
[0 1 0 0 0 0 0 0 1 1 0 0 1 0 0]
[0 0 1 0 0 0 0 0 0 0 1 1 0 1 0]
[0 0 0 1 0 0 0 0 0 0 0 1 0 1 1]
m:
[0 1 0 0 0 0 0 0 1 1 0 0 1 0 0]
[1 0 0 0 1 1 1 1 0 0 1 1 0 0 1]
[0 0 1 0 0 0 0 0 0 0 1 1 0 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (10,13), ( 9,10), (7,8), (6,7), (5,6), (2,9), (1,5), ( 3,14)(11,12), ( 3,12)(11,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 11, 4, 5, 6, 7, 8, 9, 10, 3, 12, 14, 13]
[0, 1, 2, 13, 4, 5, 6, 7, 8, 9, 10, 14, 12, 3, 11]
[0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 14, 11, 12, 13, 10]
[0, 1, 2, 14, 4, 5, 6, 7, 8, 9, 10, 13, 12, 11, 3]
orbits:
110100000001000
110100000010000
100110011111000
100110000001000
110100000100000
100110000010000
110100011111000
110100001000000
100110000100000
110100010000000
100110001000000
100110010000000
word: 000000000011000

combo: 000000000000011

word: 110100000010000

combo: 000000000000010

temp: 000000000000010

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000000000110000

combo: 000000000000110

word: 110100000111000

combo: 000000000000111

word: 000000000101000

combo: 000000000000101

word: 110100000100000

combo: 000000000000100

temp: 000000000000100

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000000001100000

combo: 000000000001100

word: 110100001101000

combo: 000000000001101

word: 000000001111000

combo: 000000000001111

word: 110100001110000

combo: 000000000001110

word: 000000001010000

combo: 000000000001010

word: 110100001011000

combo: 000000000001011

word: 000000001001000

combo: 000000000001001

word: 110100001000000

combo: 000000000001000

temp: 000000000001000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000000011000000

combo: 000000000011000

word: 110100011001000

combo: 000000000011001

word: 000000011011000

combo: 000000000011011

word: 110100011010000

combo: 000000000011010

word: 000000011110000

combo: 000000000011110

word: 110100011111000

combo: 000000000011111

temp: 000000000011111

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000000011101000

combo: 000000000011101

word: 110100011100000

combo: 000000000011100

word: 000000010100000

combo: 000000000010100

word: 110100010101000

combo: 000000000010101

word: 000000010111000

combo: 000000000010111

word: 110100010110000

combo: 000000000010110

word: 000000010010000

combo: 000000000010010

word: 110100010011000

combo: 000000000010011

word: 000000010001000

combo: 000000000010001

word: 110100010000000

combo: 000000000010000

temp: 000000000010000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 111100110000000

combo: 000000000110000

word: 001000110001000

combo: 000000000110001

word: 111100110011000

combo: 000000000110011

temp: 000000000110011

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
100111001100011
101110101100001
010010011111001
rs list:
1 1 0 0 0 1 1 0 0 1 1 1 0 0 1 
1 0 0 0 0 1 1 0 1 0 1 1 1 0 1 
1 0 0 1 1 1 1 1 0 0 1 0 0 1 0 
B_aug:
[1 0 0 1 1 1 1 1 0 0 1 0 0 1 0]
[0 1 0 0 0 0 0 0 1 1 0 0 1 0 0]
[0 0 1 0 0 0 0 0 0 0 1 1 0 1 0]
[0 0 0 1 1 0 0 1 1 0 0 1 1 1 1]
m:
[1 1 0 0 0 1 1 0 0 1 1 1 0 0 1]
[1 0 0 0 0 1 1 0 1 0 1 1 1 0 1]
[1 0 0 1 1 1 1 1 0 0 1 0 0 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,13), (6,7), (5,8), (4,5), ( 2, 9)(10,13), ( 1, 4)( 5, 6)( 7, 8)(11,14), (1,6) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 10, 3, 4, 5, 6, 7, 8, 9, 2, 13, 12, 11, 14]
[3, 1, 13, 0, 5, 4, 7, 6, 8, 9, 2, 10, 12, 11, 14]
[3, 1, 11, 0, 5, 4, 7, 6, 8, 9, 10, 2, 12, 13, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
111100110011000
111100101011000
111100110101000
101110101101000
101110110011000
110101110011000
111101010011000
111100100111000
111100101101000
101110110101000
101110101011000
110101101011000
111101001011000
111100111001000
111100110110000
110101110101000
111101010101000
101110101110000
100111101101000
101111001101000
100111110011000
101111010011000
101110111001000
101110100111000
110101100111000
111101000111000
111100101110000
110101101101000
111101001101000
101110110110000
100111110101000
101111010101000
100111101011000
101111001011000
111100111010000
110101111001000
111101011001000
110101110110000
111101010110000
100111101110000
101111001110000
101110111010000
100111111001000
101111011001000
100111100111000
101111000111000
110101101110000
111101001110000
100111110110000
101111010110000
111100111100000
110101111010000
111101011010000
101110111100000
100111111010000
101111011010000
110101111100000
111101011100000
100111111100000
101111011100000
word: 001000110010000

combo: 000000000110010

word: 111100110110000

combo: 000000000110110

temp: 000000000110110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 001000110111000

combo: 000000000110111

word: 111100110101000

combo: 000000000110101

temp: 000000000110101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 001000110100000

combo: 000000000110100

word: 111100111100000

combo: 000000000111100

temp: 000000000111100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 001000111101000

combo: 000000000111101

word: 111100111111000

combo: 000000000111111

word: 001000111110000

combo: 000000000111110

word: 111100111010000

combo: 000000000111010

temp: 000000000111010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 001000111011000

combo: 000000000111011

word: 111100111001000

combo: 000000000111001

temp: 000000000111001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 001000111000000

combo: 000000000111000

word: 111100101000000

combo: 000000000101000

word: 001000101001000

combo: 000000000101001

word: 111100101011000

combo: 000000000101011

temp: 000000000101011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 001000101010000

combo: 000000000101010

word: 111100101110000

combo: 000000000101110

temp: 000000000101110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 001000101111000

combo: 000000000101111

word: 111100101101000

combo: 000000000101101

temp: 000000000101101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 001000101100000

combo: 000000000101100

word: 111100100100000

combo: 000000000100100

word: 001000100101000

combo: 000000000100101

word: 111100100111000

combo: 000000000100111

temp: 000000000100111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 001000100110000

combo: 000000000100110

word: 111100100010000

combo: 000000000100010

word: 001000100011000

combo: 000000000100011

word: 111100100001000

combo: 000000000100001

word: 001000100000000

combo: 000000000100000

word: 000001100000000

combo: 000000001100000

word: 110101100001000

combo: 000000001100001

word: 000001100011000

combo: 000000001100011

word: 110101100010000

combo: 000000001100010

word: 000001100110000

combo: 000000001100110

word: 110101100111000

combo: 000000001100111

temp: 000000001100111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001100101000

combo: 000000001100101

word: 110101100100000

combo: 000000001100100

word: 000001101100000

combo: 000000001101100

word: 110101101101000

combo: 000000001101101

temp: 000000001101101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001101111000

combo: 000000001101111

word: 110101101110000

combo: 000000001101110

temp: 000000001101110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001101010000

combo: 000000001101010

word: 110101101011000

combo: 000000001101011

temp: 000000001101011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001101001000

combo: 000000001101001

word: 110101101000000

combo: 000000001101000

word: 000001111000000

combo: 000000001111000

word: 110101111001000

combo: 000000001111001

temp: 000000001111001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001111011000

combo: 000000001111011

word: 110101111010000

combo: 000000001111010

temp: 000000001111010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001111110000

combo: 000000001111110

word: 110101111111000

combo: 000000001111111

word: 000001111101000

combo: 000000001111101

word: 110101111100000

combo: 000000001111100

temp: 000000001111100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001110100000

combo: 000000001110100

word: 110101110101000

combo: 000000001110101

temp: 000000001110101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001110111000

combo: 000000001110111

word: 110101110110000

combo: 000000001110110

temp: 000000001110110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001110010000

combo: 000000001110010

word: 110101110011000

combo: 000000001110011

temp: 000000001110011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001110001000

combo: 000000001110001

word: 110101110000000

combo: 000000001110000

word: 111101010000000

combo: 000000001010000

word: 001001010001000

combo: 000000001010001

word: 111101010011000

combo: 000000001010011

temp: 000000001010011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 001001010010000

combo: 000000001010010

word: 111101010110000

combo: 000000001010110

temp: 000000001010110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 001001010111000

combo: 000000001010111

word: 111101010101000

combo: 000000001010101

temp: 000000001010101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 001001010100000

combo: 000000001010100

word: 111101011100000

combo: 000000001011100

temp: 000000001011100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 001001011101000

combo: 000000001011101

word: 111101011111000

combo: 000000001011111

word: 001001011110000

combo: 000000001011110

word: 111101011010000

combo: 000000001011010

temp: 000000001011010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 001001011011000

combo: 000000001011011

word: 111101011001000

combo: 000000001011001

temp: 000000001011001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 001001011000000

combo: 000000001011000

word: 111101001000000

combo: 000000001001000

word: 001001001001000

combo: 000000001001001

word: 111101001011000

combo: 000000001001011

temp: 000000001001011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 001001001010000

combo: 000000001001010

word: 111101001110000

combo: 000000001001110

temp: 000000001001110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 001001001111000

combo: 000000001001111

word: 111101001101000

combo: 000000001001101

temp: 000000001001101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 001001001100000

combo: 000000001001100

word: 111101000100000

combo: 000000001000100

word: 001001000101000

combo: 000000001000101

word: 111101000111000

combo: 000000001000111

temp: 000000001000111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 001001000110000

combo: 000000001000110

word: 111101000010000

combo: 000000001000010

word: 001001000011000

combo: 000000001000011

word: 111101000001000

combo: 000000001000001

word: 001001000000000

combo: 000000001000000

word: 011011000000000

combo: 000000011000000

word: 101111000001000

combo: 000000011000001

word: 011011000011000

combo: 000000011000011

word: 101111000010000

combo: 000000011000010

word: 011011000110000

combo: 000000011000110

word: 101111000111000

combo: 000000011000111

temp: 000000011000111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 011011000101000

combo: 000000011000101

word: 101111000100000

combo: 000000011000100

word: 011011001100000

combo: 000000011001100

word: 101111001101000

combo: 000000011001101

temp: 000000011001101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 011011001111000

combo: 000000011001111

word: 101111001110000

combo: 000000011001110

temp: 000000011001110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 011011001010000

combo: 000000011001010

word: 101111001011000

combo: 000000011001011

temp: 000000011001011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 011011001001000

combo: 000000011001001

word: 101111001000000

combo: 000000011001000

word: 011011011000000

combo: 000000011011000

word: 101111011001000

combo: 000000011011001

temp: 000000011011001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 011011011011000

combo: 000000011011011

word: 101111011010000

combo: 000000011011010

temp: 000000011011010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 011011011110000

combo: 000000011011110

word: 101111011111000

combo: 000000011011111

word: 011011011101000

combo: 000000011011101

word: 101111011100000

combo: 000000011011100

temp: 000000011011100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 011011010100000

combo: 000000011010100

word: 101111010101000

combo: 000000011010101

temp: 000000011010101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 011011010111000

combo: 000000011010111

word: 101111010110000

combo: 000000011010110

temp: 000000011010110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 011011010010000

combo: 000000011010010

word: 101111010011000

combo: 000000011010011

temp: 000000011010011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 011011010001000

combo: 000000011010001

word: 101111010000000

combo: 000000011010000

word: 100111110000000

combo: 000000011110000

word: 010011110001000

combo: 000000011110001

word: 100111110011000

combo: 000000011110011

temp: 000000011110011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011110010000

combo: 000000011110010

word: 100111110110000

combo: 000000011110110

temp: 000000011110110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011110111000

combo: 000000011110111

word: 100111110101000

combo: 000000011110101

temp: 000000011110101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011110100000

combo: 000000011110100

word: 100111111100000

combo: 000000011111100

temp: 000000011111100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011111101000

combo: 000000011111101

word: 100111111111000

combo: 000000011111111

word: 010011111110000

combo: 000000011111110

word: 100111111010000

combo: 000000011111010

temp: 000000011111010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011111011000

combo: 000000011111011

word: 100111111001000

combo: 000000011111001

temp: 000000011111001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011111000000

combo: 000000011111000

word: 100111101000000

combo: 000000011101000

word: 010011101001000

combo: 000000011101001

word: 100111101011000

combo: 000000011101011

temp: 000000011101011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011101010000

combo: 000000011101010

word: 100111101110000

combo: 000000011101110

temp: 000000011101110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011101111000

combo: 000000011101111

word: 100111101101000

combo: 000000011101101

temp: 000000011101101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011101100000

combo: 000000011101100

word: 100111100100000

combo: 000000011100100

word: 010011100101000

combo: 000000011100101

word: 100111100111000

combo: 000000011100111

temp: 000000011100111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011100110000

combo: 000000011100110

word: 100111100010000

combo: 000000011100010

word: 010011100011000

combo: 000000011100011

word: 100111100001000

combo: 000000011100001

word: 010011100000000

combo: 000000011100000

word: 011010100000000

combo: 000000010100000

word: 101110100001000

combo: 000000010100001

word: 011010100011000

combo: 000000010100011

word: 101110100010000

combo: 000000010100010

word: 011010100110000

combo: 000000010100110

word: 101110100111000

combo: 000000010100111

temp: 000000010100111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 011010100101000

combo: 000000010100101

word: 101110100100000

combo: 000000010100100

word: 011010101100000

combo: 000000010101100

word: 101110101101000

combo: 000000010101101

temp: 000000010101101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 011010101111000

combo: 000000010101111

word: 101110101110000

combo: 000000010101110

temp: 000000010101110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 011010101010000

combo: 000000010101010

word: 101110101011000

combo: 000000010101011

temp: 000000010101011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 011010101001000

combo: 000000010101001

word: 101110101000000

combo: 000000010101000

word: 011010111000000

combo: 000000010111000

word: 101110111001000

combo: 000000010111001

temp: 000000010111001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 011010111011000

combo: 000000010111011

word: 101110111010000

combo: 000000010111010

temp: 000000010111010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 011010111110000

combo: 000000010111110

word: 101110111111000

combo: 000000010111111

word: 011010111101000

combo: 000000010111101

word: 101110111100000

combo: 000000010111100

temp: 000000010111100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 011010110100000

combo: 000000010110100

word: 101110110101000

combo: 000000010110101

temp: 000000010110101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 011010110111000

combo: 000000010110111

word: 101110110110000

combo: 000000010110110

temp: 000000010110110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 011010110010000

combo: 000000010110010

word: 101110110011000

combo: 000000010110011

temp: 000000010110011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 011010110001000

combo: 000000010110001

word: 101110110000000

combo: 000000010110000

word: 100110010000000

combo: 000000010010000

temp: 000000010010000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010010010001000

combo: 000000010010001

word: 100110010011000

combo: 000000010010011

word: 010010010010000

combo: 000000010010010

word: 100110010110000

combo: 000000010010110

word: 010010010111000

combo: 000000010010111

word: 100110010101000

combo: 000000010010101

word: 010010010100000

combo: 000000010010100

word: 100110011100000

combo: 000000010011100

word: 010010011101000

combo: 000000010011101

word: 100110011111000

combo: 000000010011111

temp: 000000010011111

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010010011110000

combo: 000000010011110

word: 100110011010000

combo: 000000010011010

word: 010010011011000

combo: 000000010011011

word: 100110011001000

combo: 000000010011001

word: 010010011000000

combo: 000000010011000

word: 100110001000000

combo: 000000010001000

temp: 000000010001000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010010001001000

combo: 000000010001001

word: 100110001011000

combo: 000000010001011

word: 010010001010000

combo: 000000010001010

word: 100110001110000

combo: 000000010001110

word: 010010001111000

combo: 000000010001111

word: 100110001101000

combo: 000000010001101

word: 010010001100000

combo: 000000010001100

word: 100110000100000

combo: 000000010000100

temp: 000000010000100

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010010000101000

combo: 000000010000101

word: 100110000111000

combo: 000000010000111

word: 010010000110000

combo: 000000010000110

word: 100110000010000

combo: 000000010000010

temp: 000000010000010

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010010000011000

combo: 000000010000011

word: 100110000001000

combo: 000000010000001

temp: 000000010000001

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010010000000000

combo: 000000010000000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 1 0 0 1 1 0 0 1]
[0 1 0 0 0 0 0 0 1 1 0 0 1 0 0]
[0 0 1 0 0 0 0 0 0 0 1 1 0 1 0]
[0 0 0 1 0 0 0 0 0 0 0 1 0 1 1]
limit on degree (length): 16
ortho basis:
1010100000010000
1010100000100000
1010100001000000
1010100010000000
0001000100000000
0001001000000000
1110010000000000

B_can_lab before row reduction:
0101010111110000
0000000000001111
0011011000000000
0111100000000000

B_can_lab after row reduction:
0000000000001111
0101010111110000
0011011000000000
0111100000000000
0000000000111000

word generated as sum over rows of ortho_basis starting at 7: 0000000000000000
gate: 0000000000001111
k_gate: 0000000001111111
nonzero_gate: 1000000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 0000000000000000

combo: 0000000000000000

word: 1010100000010000

combo: 0000000000000001

temp: 0000000000000001

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
0001001100000010
1110010011100001
0010110000000100
0110100000001000
rs list:
0 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0 
1 0 0 0 0 1 1 1 0 0 1 0 0 1 1 1 
0 0 1 0 0 0 0 0 0 0 1 1 0 1 0 0 
0 0 0 1 0 0 0 0 0 0 0 1 0 1 1 0 
B_aug:
[1 0 0 0 1 1 1 1 0 0 1 1 0 0 1 0]
[0 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0]
[0 0 1 0 0 0 0 0 0 0 1 1 0 1 0 0]
[0 0 0 1 0 0 0 0 0 0 0 1 0 1 1 0]
[0 0 0 0 1 0 0 0 0 0 0 1 0 1 0 1]
m:
[0 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0]
[1 0 0 0 0 1 1 1 0 0 1 0 0 1 1 1]
[0 0 1 0 0 0 0 0 0 0 1 1 0 1 0 0]
[0 0 0 1 0 0 0 0 0 0 0 1 0 1 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (10,13), ( 9,10), (7,8), (6,7), ( 3, 4)(11,15), (2,9), (1,6), ( 4,14)(12,15), ( 4,12)(14,15) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 11, 5, 6, 7, 8, 9, 10, 4, 12, 15, 14, 13]
[0, 1, 2, 3, 13, 5, 6, 7, 8, 9, 10, 15, 12, 4, 14, 11]
[0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14]
[0, 1, 2, 3, 15, 5, 6, 7, 8, 9, 10, 13, 12, 11, 14, 4]
orbits:
1010100000010000
1010100000100000
1110010011110000
1010100001000000
1010100010000000
word: 0000000000110000

combo: 0000000000000011

word: 1010100000100000

combo: 0000000000000010

temp: 0000000000000010

orbit_checks[temp>>log2radix]= 0000000100010110

word: 0000000001100000

combo: 0000000000000110

word: 1010100001110000

combo: 0000000000000111

word: 0000000001010000

combo: 0000000000000101

word: 1010100001000000

combo: 0000000000000100

temp: 0000000000000100

orbit_checks[temp>>log2radix]= 0000000100010110

word: 0000000011000000

combo: 0000000000001100

word: 1010100011010000

combo: 0000000000001101

word: 0000000011110000

combo: 0000000000001111

word: 1010100011100000

combo: 0000000000001110

word: 0000000010100000

combo: 0000000000001010

word: 1010100010110000

combo: 0000000000001011

word: 0000000010010000

combo: 0000000000001001

word: 1010100010000000

combo: 0000000000001000

temp: 0000000000001000

orbit_checks[temp>>log2radix]= 0000000100010110

word: 1011100110000000

combo: 0000000000011000

word: 0001000110010000

combo: 0000000000011001

word: 1011100110110000

combo: 0000000000011011

temp: 0000000000011011

orbit_checks[temp>>log2radix]= 0000000100010110

passed if statements
temp basis:
0100110011110001
1110011001000011
1111010101000001
0010110000000100
rs list:
1 0 0 0 1 1 1 1 0 0 1 1 0 0 1 0 
1 1 0 0 0 0 1 0 0 1 1 0 0 1 1 1 
1 0 0 0 0 0 1 0 1 0 1 0 1 1 1 1 
0 0 1 0 0 0 0 0 0 0 1 1 0 1 0 0 
B_aug:
[1 0 0 0 1 1 1 1 0 0 1 1 0 0 1 0]
[0 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0]
[0 0 1 0 0 0 0 0 0 0 1 1 0 1 0 0]
[0 0 0 1 0 0 0 0 0 0 0 1 0 1 1 0]
[0 0 0 0 1 1 0 1 1 0 0 1 1 1 0 1]
m:
[1 0 0 0 1 1 1 1 0 0 1 1 0 0 1 0]
[1 1 0 0 0 0 1 0 0 1 1 0 0 1 1 1]
[1 0 0 0 0 0 1 0 1 0 1 0 1 1 1 1]
[0 0 1 0 0 0 0 0 0 0 1 1 0 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,13), (6,8), (5,6), ( 2, 9)(10,13), (1,7), ( 3,14)(11,12), ( 3,12)(11,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 11, 4, 5, 6, 7, 8, 9, 10, 3, 12, 14, 13, 15]
[0, 1, 2, 13, 4, 5, 6, 7, 8, 9, 10, 14, 12, 3, 11, 15]
[0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 14, 11, 12, 13, 10, 15]
[0, 1, 2, 14, 4, 5, 6, 7, 8, 9, 10, 13, 12, 11, 3, 15]
[0, 1, 3, 10, 4, 5, 6, 7, 8, 9, 14, 13, 12, 11, 2, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1011100110110000
1011100101110000
1011100111010000
1111010101010000
1010101110110000
1011101010110000
1111010110010000
1010101101110000
1011101001110000
1011100111100000
1111010100110000
1010101111010000
1011101011010000
1111010101100000
1110011101010000
1111011001010000
1111010110100000
1110011110010000
1111011010010000
1010101111100000
1011101011100000
1110011100110000
1111011000110000
1110011101100000
1111011001100000
1111010111000000
1110011110100000
1111011010100000
1110011111000000
1111011011000000
word: 0001000110100000

combo: 0000000000011010

word: 1011100111100000

combo: 0000000000011110

temp: 0000000000011110

orbit_checks[temp>>log2radix]= 1101000100000000000000100010110

word: 0001000111110000

combo: 0000000000011111

word: 1011100111010000

combo: 0000000000011101

temp: 0000000000011101

orbit_checks[temp>>log2radix]= 1101000100000000000000100010110

word: 0001000111000000

combo: 0000000000011100

word: 1011100101000000

combo: 0000000000010100

word: 0001000101010000

combo: 0000000000010101

word: 1011100101110000

combo: 0000000000010111

temp: 0000000000010111

orbit_checks[temp>>log2radix]= 1101000100000000000000100010110

word: 0001000101100000

combo: 0000000000010110

word: 1011100100100000

combo: 0000000000010010

word: 0001000100110000

combo: 0000000000010011

word: 1011100100010000

combo: 0000000000010001

word: 0001000100000000

combo: 0000000000010000

word: 0000001100000000

combo: 0000000000110000

word: 1010101100010000

combo: 0000000000110001

word: 0000001100110000

combo: 0000000000110011

word: 1010101100100000

combo: 0000000000110010

word: 0000001101100000

combo: 0000000000110110

word: 1010101101110000

combo: 0000000000110111

temp: 0000000000110111

orbit_checks[temp>>log2radix]= 1101000100000000110100010000000

word: 0000001101010000

combo: 0000000000110101

word: 1010101101000000

combo: 0000000000110100

word: 0000001111000000

combo: 0000000000111100

word: 1010101111010000

combo: 0000000000111101

temp: 0000000000111101

orbit_checks[temp>>log2radix]= 1101000100000000110100010000000

word: 0000001111110000

combo: 0000000000111111

word: 1010101111100000

combo: 0000000000111110

temp: 0000000000111110

orbit_checks[temp>>log2radix]= 1101000100000000110100010000000

word: 0000001110100000

combo: 0000000000111010

word: 1010101110110000

combo: 0000000000111011

temp: 0000000000111011

orbit_checks[temp>>log2radix]= 1101000100000000110100010000000

word: 0000001110010000

combo: 0000000000111001

word: 1010101110000000

combo: 0000000000111000

word: 1011101010000000

combo: 0000000000101000

word: 0001001010010000

combo: 0000000000101001

word: 1011101010110000

combo: 0000000000101011

temp: 0000000000101011

orbit_checks[temp>>log2radix]= 1101000100000000110100010000000

word: 0001001010100000

combo: 0000000000101010

word: 1011101011100000

combo: 0000000000101110

temp: 0000000000101110

orbit_checks[temp>>log2radix]= 1101000100000000110100010000000

word: 0001001011110000

combo: 0000000000101111

word: 1011101011010000

combo: 0000000000101101

temp: 0000000000101101

orbit_checks[temp>>log2radix]= 1101000100000000110100010000000

word: 0001001011000000

combo: 0000000000101100

word: 1011101001000000

combo: 0000000000100100

word: 0001001001010000

combo: 0000000000100101

word: 1011101001110000

combo: 0000000000100111

temp: 0000000000100111

orbit_checks[temp>>log2radix]= 1101000100000000110100010000000

word: 0001001001100000

combo: 0000000000100110

word: 1011101000100000

combo: 0000000000100010

word: 0001001000110000

combo: 0000000000100011

word: 1011101000010000

combo: 0000000000100001

word: 0001001000000000

combo: 0000000000100000

word: 1111011000000000

combo: 0000000001100000

word: 0101111000010000

combo: 0000000001100001

word: 1111011000110000

combo: 0000000001100011

temp: 0000000001100011

orbit_checks[temp>>log2radix]= 10110011010000001011001101000

word: 0101111000100000

combo: 0000000001100010

word: 1111011001100000

combo: 0000000001100110

temp: 0000000001100110

orbit_checks[temp>>log2radix]= 10110011010000001011001101000

word: 0101111001110000

combo: 0000000001100111

word: 1111011001010000

combo: 0000000001100101

temp: 0000000001100101

orbit_checks[temp>>log2radix]= 10110011010000001011001101000

word: 0101111001000000

combo: 0000000001100100

word: 1111011011000000

combo: 0000000001101100

temp: 0000000001101100

orbit_checks[temp>>log2radix]= 10110011010000001011001101000

word: 0101111011010000

combo: 0000000001101101

word: 1111011011110000

combo: 0000000001101111

word: 0101111011100000

combo: 0000000001101110

word: 1111011010100000

combo: 0000000001101010

temp: 0000000001101010

orbit_checks[temp>>log2radix]= 10110011010000001011001101000

word: 0101111010110000

combo: 0000000001101011

word: 1111011010010000

combo: 0000000001101001

temp: 0000000001101001

orbit_checks[temp>>log2radix]= 10110011010000001011001101000

word: 0101111010000000

combo: 0000000001101000

word: 0100111110000000

combo: 0000000001111000

word: 1110011110010000

combo: 0000000001111001

temp: 0000000001111001

orbit_checks[temp>>log2radix]= 10110011010000001011001101000

word: 0100111110110000

combo: 0000000001111011

word: 1110011110100000

combo: 0000000001111010

temp: 0000000001111010

orbit_checks[temp>>log2radix]= 10110011010000001011001101000

word: 0100111111100000

combo: 0000000001111110

word: 1110011111110000

combo: 0000000001111111

word: 0100111111010000

combo: 0000000001111101

word: 1110011111000000

combo: 0000000001111100

temp: 0000000001111100

orbit_checks[temp>>log2radix]= 10110011010000001011001101000

word: 0100111101000000

combo: 0000000001110100

word: 1110011101010000

combo: 0000000001110101

temp: 0000000001110101

orbit_checks[temp>>log2radix]= 10110011010000001011001101000

word: 0100111101110000

combo: 0000000001110111

word: 1110011101100000

combo: 0000000001110110

temp: 0000000001110110

orbit_checks[temp>>log2radix]= 10110011010000001011001101000

word: 0100111100100000

combo: 0000000001110010

word: 1110011100110000

combo: 0000000001110011

temp: 0000000001110011

orbit_checks[temp>>log2radix]= 10110011010000001011001101000

word: 0100111100010000

combo: 0000000001110001

word: 1110011100000000

combo: 0000000001110000

word: 1111010100000000

combo: 0000000001010000

word: 0101110100010000

combo: 0000000001010001

word: 1111010100110000

combo: 0000000001010011

temp: 0000000001010011

orbit_checks[temp>>log2radix]= 10110011010001000000000000000

word: 0101110100100000

combo: 0000000001010010

word: 1111010101100000

combo: 0000000001010110

temp: 0000000001010110

orbit_checks[temp>>log2radix]= 10110011010001000000000000000

word: 0101110101110000

combo: 0000000001010111

word: 1111010101010000

combo: 0000000001010101

temp: 0000000001010101

orbit_checks[temp>>log2radix]= 10110011010001000000000000000

word: 0101110101000000

combo: 0000000001010100

word: 1111010111000000

combo: 0000000001011100

temp: 0000000001011100

orbit_checks[temp>>log2radix]= 10110011010001000000000000000

word: 0101110111010000

combo: 0000000001011101

word: 1111010111110000

combo: 0000000001011111

word: 0101110111100000

combo: 0000000001011110

word: 1111010110100000

combo: 0000000001011010

temp: 0000000001011010

orbit_checks[temp>>log2radix]= 10110011010001000000000000000

word: 0101110110110000

combo: 0000000001011011

word: 1111010110010000

combo: 0000000001011001

temp: 0000000001011001

orbit_checks[temp>>log2radix]= 10110011010001000000000000000

word: 0101110110000000

combo: 0000000001011000

word: 0100110010000000

combo: 0000000001001000

word: 1110010010010000

combo: 0000000001001001

word: 0100110010110000

combo: 0000000001001011

word: 1110010010100000

combo: 0000000001001010

word: 0100110011100000

combo: 0000000001001110

word: 1110010011110000

combo: 0000000001001111

temp: 0000000001001111

orbit_checks[temp>>log2radix]= 10110011010001000000000000000

word: 0100110011010000

combo: 0000000001001101

word: 1110010011000000

combo: 0000000001001100

word: 0100110001000000

combo: 0000000001000100

word: 1110010001010000

combo: 0000000001000101

word: 0100110001110000

combo: 0000000001000111

word: 1110010001100000

combo: 0000000001000110

word: 0100110000100000

combo: 0000000001000010

word: 1110010000110000

combo: 0000000001000011

word: 0100110000010000

combo: 0000000001000001

word: 1110010000000000

combo: 0000000001000000

temp: 0000000001000000

orbit_checks[temp>>log2radix]= 10110011010001000000000000000

passed if statements
temp basis:
1010100011110001
0001001100000010
1100100000000100
0110100000001000
rs list:
1 0 0 0 1 1 1 1 0 0 0 1 0 1 0 1 
0 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 1 
0 0 0 1 0 0 0 0 0 0 0 1 0 1 1 0 
B_aug:
[1 0 0 0 1 1 1 1 0 0 1 1 0 0 1 0]
[0 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0]
[0 0 1 0 0 0 0 0 0 0 1 1 0 1 0 0]
[0 0 0 1 0 0 0 0 0 0 0 1 0 1 1 0]
[0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1]
m:
[1 0 0 0 1 1 1 1 0 0 0 1 0 1 0 1]
[0 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0]
[0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 1]
[0 0 0 1 0 0 0 0 0 0 0 1 0 1 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (10,13), ( 9,10), (7,8), (6,7), (5,6), ( 3, 4)(14,16), (2,9), (1,5), ( 4,15)(12,14), ( 4,14)(12,15) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 11, 12, 10, 15, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 11, 12, 15, 10, 13]
[0, 1, 2, 10, 4, 5, 6, 7, 8, 9, 3, 15, 12, 13, 14, 11]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 11, 12, 14, 13, 10]
orbits:
1110010000000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 1 1 1 1 0 0 0 0 1 1]
[0 1 0 0 0 0 0 0 1 1 0 1 0 0]
[0 0 1 0 0 0 0 0 0 0 1 0 1 1]
limit on degree (length): 16
ortho basis:
1010100000001000
1010100000010000
1010100000100000
1010100001000000
1010100010000000
0001000100000000
0001001000000000
0010010000000000
1100000000000000

B_can_lab before row reduction:
0001101111110000
0000000000001111
0011110000000000

B_can_lab after row reduction:
0000000000001111
0001101111110000
0011110000000000

word generated as sum over rows of ortho_basis starting at 8: 1100000000000000
gate: 0000000000000111
k_gate: 0000000011111111
nonzero_gate: 1100000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1100000000000000

combo: 0000000000000000

word: 0110100000001000

combo: 0000000000000001

word: 1100000000011000

combo: 0000000000000011

temp: 0000000000000011

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
0001001100000010
1110010011100001
0010110000000100
rs list:
0 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0 
1 0 0 0 0 1 1 1 0 0 1 0 0 1 1 1 
0 0 1 0 0 0 0 0 0 0 1 1 0 1 0 0 
B_aug:
[1 0 0 1 1 1 1 1 0 0 1 0 0 1 0 0]
[0 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0]
[0 0 1 0 0 0 0 0 0 0 1 1 0 1 0 0]
[0 0 0 1 1 0 0 0 0 0 0 0 0 0 1 1]
m:
[0 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0]
[1 0 0 0 0 1 1 1 0 0 1 0 0 1 1 1]
[0 0 1 0 0 0 0 0 0 0 1 1 0 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (4,5), (15,16), (11,14), ( 3,11)(12,14), ( 9,10), ( 9,13), ( 2, 9,13), ( 6, 7)( 9,13), ( 6, 8)( 9,13), ( 1, 6, 8)( 9,13) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 3, 2, 11, 5, 6, 7, 8, 9, 14, 4, 12, 15, 10, 13]
[0, 1, 3, 10, 13, 5, 6, 7, 8, 9, 14, 4, 12, 15, 2, 11]
[0, 1, 2, 14, 15, 5, 6, 7, 8, 9, 10, 11, 12, 13, 3, 4]
orbits:
1100000000011000
1100000000101000
1110010011101000
1100000001001000
1100000000110000
1110010011011000
1110010011110000
1100000010001000
1100000001010000
1110010010111000
1100000010010000
1110010001111000
1100000001100000
1100000010100000
1100000011000000
word: 0110100000010000

combo: 0000000000000010

word: 1100000000110000

combo: 0000000000000110

temp: 0000000000000110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0110100000111000

combo: 0000000000000111

word: 1100000000101000

combo: 0000000000000101

temp: 0000000000000101

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0110100000100000

combo: 0000000000000100

word: 1100000001100000

combo: 0000000000001100

temp: 0000000000001100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0110100001101000

combo: 0000000000001101

word: 1100000001111000

combo: 0000000000001111

word: 0110100001110000

combo: 0000000000001110

word: 1100000001010000

combo: 0000000000001010

temp: 0000000000001010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0110100001011000

combo: 0000000000001011

word: 1100000001001000

combo: 0000000000001001

temp: 0000000000001001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0110100001000000

combo: 0000000000001000

word: 1100000011000000

combo: 0000000000011000

temp: 0000000000011000

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0110100011001000

combo: 0000000000011001

word: 1100000011011000

combo: 0000000000011011

word: 0110100011010000

combo: 0000000000011010

word: 1100000011110000

combo: 0000000000011110

word: 0110100011111000

combo: 0000000000011111

word: 1100000011101000

combo: 0000000000011101

word: 0110100011100000

combo: 0000000000011100

word: 1100000010100000

combo: 0000000000010100

temp: 0000000000010100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0110100010101000

combo: 0000000000010101

word: 1100000010111000

combo: 0000000000010111

word: 0110100010110000

combo: 0000000000010110

word: 1100000010010000

combo: 0000000000010010

temp: 0000000000010010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0110100010011000

combo: 0000000000010011

word: 1100000010001000

combo: 0000000000010001

temp: 0000000000010001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0110100010000000

combo: 0000000000010000

word: 0111100110000000

combo: 0000000000110000

word: 1101000110001000

combo: 0000000000110001

word: 0111100110011000

combo: 0000000000110011

word: 1101000110010000

combo: 0000000000110010

word: 0111100110110000

combo: 0000000000110110

word: 1101000110111000

combo: 0000000000110111

temp: 0000000000110111

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
0010010011111001
1110011001000011
1111010101000001
rs list:
1 0 0 1 1 1 1 1 0 0 1 0 0 1 0 0 
1 1 0 0 0 0 1 0 0 1 1 0 0 1 1 1 
1 0 0 0 0 0 1 0 1 0 1 0 1 1 1 1 
B_aug:
[1 0 0 1 1 1 1 1 0 0 1 0 0 1 0 0]
[0 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0]
[0 0 1 0 0 0 0 0 0 0 1 1 0 1 0 0]
[0 0 0 1 1 1 0 1 1 0 0 0 1 0 1 1]
m:
[1 0 0 1 1 1 1 1 0 0 1 0 0 1 0 0]
[1 1 0 0 0 0 1 0 0 1 1 0 0 1 1 1]
[1 0 0 0 0 0 1 0 1 0 1 0 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 2,10), ( 2,13)( 9,10), ( 2,13)( 5, 6)( 9,10), ( 2,13)( 5, 8)( 9,10), ( 2,13)( 4, 5, 8)( 9,10), ( 2,13)( 5, 8)( 9,10)(11,14), ( 2,13)( 3,12)( 5, 8)( 9,10), ( 2,13)( 3,12)( 5, 8)( 9,10)(15,16), ( 1, 7)( 2,13)( 3,12)( 5, 8)( 9,10)(15,16) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 10, 3, 4, 5, 6, 7, 8, 9, 2, 13, 12, 11, 14, 15]
[14, 2, 1, 3, 4, 5, 15, 7, 10, 11, 8, 9, 13, 12, 0, 6]
[14, 2, 8, 3, 4, 5, 15, 7, 10, 11, 1, 12, 13, 9, 0, 6]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1101000110111000
1101000101111000
1101000111011000
1111010101001000
1100001110111000
1101001010111000
1111010110001000
1100001101111000
1101001001111000
1101000111101000
1111010100101000
1100001111011000
1101001011011000
1111010101010000
1110011101001000
1111011001001000
1111010110010000
1110011110001000
1111011010001000
1101000111110000
1111010100011000
1100001111101000
1101001011101000
1111010100110000
1110011100101000
1111011000101000
1111010101100000
1110011101010000
1111011001010000
1111010110100000
1110011110010000
1111011010010000
1100001111110000
1101001011110000
1110011100011000
1111011000011000
1110011100110000
1111011000110000
1110011101100000
1111011001100000
1111010111000000
1110011110100000
1111011010100000
1110011111000000
1111011011000000
word: 0111100110101000

combo: 0000000000110101

word: 1101000110100000

combo: 0000000000110100

word: 0111100111100000

combo: 0000000000111100

word: 1101000111101000

combo: 0000000000111101

temp: 0000000000111101

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 0111100111111000

combo: 0000000000111111

word: 1101000111110000

combo: 0000000000111110

temp: 0000000000111110

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 0111100111010000

combo: 0000000000111010

word: 1101000111011000

combo: 0000000000111011

temp: 0000000000111011

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 0111100111001000

combo: 0000000000111001

word: 1101000111000000

combo: 0000000000111000

word: 0111100101000000

combo: 0000000000101000

word: 1101000101001000

combo: 0000000000101001

word: 0111100101011000

combo: 0000000000101011

word: 1101000101010000

combo: 0000000000101010

word: 0111100101110000

combo: 0000000000101110

word: 1101000101111000

combo: 0000000000101111

temp: 0000000000101111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 0111100101101000

combo: 0000000000101101

word: 1101000101100000

combo: 0000000000101100

word: 0111100100100000

combo: 0000000000100100

word: 1101000100101000

combo: 0000000000100101

word: 0111100100111000

combo: 0000000000100111

word: 1101000100110000

combo: 0000000000100110

word: 0111100100010000

combo: 0000000000100010

word: 1101000100011000

combo: 0000000000100011

word: 0111100100001000

combo: 0000000000100001

word: 1101000100000000

combo: 0000000000100000

temp: 0000000000100000

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

passed if statements
temp basis:
0000100011111101
0010010011111001
1100001000000010
rs list:
1 0 1 1 1 1 1 1 0 0 0 1 0 0 0 0 
1 0 0 1 1 1 1 1 0 0 1 0 0 1 0 0 
0 1 0 0 0 0 0 0 0 1 0 0 0 0 1 1 
B_aug:
[1 0 0 1 1 1 1 1 0 0 1 0 0 1 0 0]
[0 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0]
[0 0 1 0 0 0 0 0 0 0 1 1 0 1 0 0]
[0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 1]
m:
[1 0 1 1 1 1 1 1 0 0 0 1 0 0 0 0]
[1 0 0 1 1 1 1 1 0 0 1 0 0 1 0 0]
[0 1 0 0 0 0 0 0 0 1 0 0 0 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), ( 9,13)(15,16), ( 2,10)(15,16), ( 2,15,10,16), ( 4, 5)(15,16), ( 4, 6)(15,16), ( 4, 7)( 5, 6)(15,16), ( 4, 8)( 5, 7)(15,16), ( 1, 4, 8)( 5, 7)(15,16), ( 4, 8)( 5, 7)(11,14)(15,16), ( 3,11)( 4, 8)( 5, 7)(12,14)(15,16) ] )
Right transversal of automorphism group of B_aug:
[0, 8, 2, 3, 4, 5, 6, 7, 1, 12, 10, 11, 9, 13, 14, 15]
[0, 8, 2, 3, 4, 5, 6, 7, 14, 12, 10, 11, 15, 13, 1, 9]
orbits:
1101000100000000
1100001100000000
1101001000000000
word: 1100001100000000

combo: 0000000001100000

temp: 0000000001100000

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0110101100001000

combo: 0000000001100001

word: 1100001100011000

combo: 0000000001100011

word: 0110101100010000

combo: 0000000001100010

word: 1100001100110000

combo: 0000000001100110

word: 0110101100111000

combo: 0000000001100111

word: 1100001100101000

combo: 0000000001100101

word: 0110101100100000

combo: 0000000001100100

word: 1100001101100000

combo: 0000000001101100

word: 0110101101101000

combo: 0000000001101101

word: 1100001101111000

combo: 0000000001101111

temp: 0000000001101111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0110101101110000

combo: 0000000001101110

word: 1100001101010000

combo: 0000000001101010

word: 0110101101011000

combo: 0000000001101011

word: 1100001101001000

combo: 0000000001101001

word: 0110101101000000

combo: 0000000001101000

word: 1100001111000000

combo: 0000000001111000

word: 0110101111001000

combo: 0000000001111001

word: 1100001111011000

combo: 0000000001111011

temp: 0000000001111011

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0110101111010000

combo: 0000000001111010

word: 1100001111110000

combo: 0000000001111110

temp: 0000000001111110

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0110101111111000

combo: 0000000001111111

word: 1100001111101000

combo: 0000000001111101

temp: 0000000001111101

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0110101111100000

combo: 0000000001111100

word: 1100001110100000

combo: 0000000001110100

word: 0110101110101000

combo: 0000000001110101

word: 1100001110111000

combo: 0000000001110111

temp: 0000000001110111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0110101110110000

combo: 0000000001110110

word: 1100001110010000

combo: 0000000001110010

word: 0110101110011000

combo: 0000000001110011

word: 1100001110001000

combo: 0000000001110001

word: 0110101110000000

combo: 0000000001110000

word: 0111101010000000

combo: 0000000001010000

word: 1101001010001000

combo: 0000000001010001

word: 0111101010011000

combo: 0000000001010011

word: 1101001010010000

combo: 0000000001010010

word: 0111101010110000

combo: 0000000001010110

word: 1101001010111000

combo: 0000000001010111

temp: 0000000001010111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111101010101000

combo: 0000000001010101

word: 1101001010100000

combo: 0000000001010100

word: 0111101011100000

combo: 0000000001011100

word: 1101001011101000

combo: 0000000001011101

temp: 0000000001011101

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111101011111000

combo: 0000000001011111

word: 1101001011110000

combo: 0000000001011110

temp: 0000000001011110

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111101011010000

combo: 0000000001011010

word: 1101001011011000

combo: 0000000001011011

temp: 0000000001011011

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111101011001000

combo: 0000000001011001

word: 1101001011000000

combo: 0000000001011000

word: 0111101001000000

combo: 0000000001001000

word: 1101001001001000

combo: 0000000001001001

word: 0111101001011000

combo: 0000000001001011

word: 1101001001010000

combo: 0000000001001010

word: 0111101001110000

combo: 0000000001001110

word: 1101001001111000

combo: 0000000001001111

temp: 0000000001001111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111101001101000

combo: 0000000001001101

word: 1101001001100000

combo: 0000000001001100

word: 0111101000100000

combo: 0000000001000100

word: 1101001000101000

combo: 0000000001000101

word: 0111101000111000

combo: 0000000001000111

word: 1101001000110000

combo: 0000000001000110

word: 0111101000010000

combo: 0000000001000010

word: 1101001000011000

combo: 0000000001000011

word: 0111101000001000

combo: 0000000001000001

word: 1101001000000000

combo: 0000000001000000

temp: 0000000001000000

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 1111011000000000

combo: 0000000011000000

word: 0101111000001000

combo: 0000000011000001

word: 1111011000011000

combo: 0000000011000011

temp: 0000000011000011

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101111000010000

combo: 0000000011000010

word: 1111011000110000

combo: 0000000011000110

temp: 0000000011000110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101111000111000

combo: 0000000011000111

word: 1111011000101000

combo: 0000000011000101

temp: 0000000011000101

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101111000100000

combo: 0000000011000100

word: 1111011001100000

combo: 0000000011001100

temp: 0000000011001100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101111001101000

combo: 0000000011001101

word: 1111011001111000

combo: 0000000011001111

word: 0101111001110000

combo: 0000000011001110

word: 1111011001010000

combo: 0000000011001010

temp: 0000000011001010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101111001011000

combo: 0000000011001011

word: 1111011001001000

combo: 0000000011001001

temp: 0000000011001001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101111001000000

combo: 0000000011001000

word: 1111011011000000

combo: 0000000011011000

temp: 0000000011011000

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101111011001000

combo: 0000000011011001

word: 1111011011011000

combo: 0000000011011011

word: 0101111011010000

combo: 0000000011011010

word: 1111011011110000

combo: 0000000011011110

word: 0101111011111000

combo: 0000000011011111

word: 1111011011101000

combo: 0000000011011101

word: 0101111011100000

combo: 0000000011011100

word: 1111011010100000

combo: 0000000011010100

temp: 0000000011010100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101111010101000

combo: 0000000011010101

word: 1111011010111000

combo: 0000000011010111

word: 0101111010110000

combo: 0000000011010110

word: 1111011010010000

combo: 0000000011010010

temp: 0000000011010010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101111010011000

combo: 0000000011010011

word: 1111011010001000

combo: 0000000011010001

temp: 0000000011010001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101111010000000

combo: 0000000011010000

word: 0100111110000000

combo: 0000000011110000

word: 1110011110001000

combo: 0000000011110001

temp: 0000000011110001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0100111110011000

combo: 0000000011110011

word: 1110011110010000

combo: 0000000011110010

temp: 0000000011110010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0100111110110000

combo: 0000000011110110

word: 1110011110111000

combo: 0000000011110111

word: 0100111110101000

combo: 0000000011110101

word: 1110011110100000

combo: 0000000011110100

temp: 0000000011110100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0100111111100000

combo: 0000000011111100

word: 1110011111101000

combo: 0000000011111101

word: 0100111111111000

combo: 0000000011111111

word: 1110011111110000

combo: 0000000011111110

word: 0100111111010000

combo: 0000000011111010

word: 1110011111011000

combo: 0000000011111011

word: 0100111111001000

combo: 0000000011111001

word: 1110011111000000

combo: 0000000011111000

temp: 0000000011111000

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0100111101000000

combo: 0000000011101000

word: 1110011101001000

combo: 0000000011101001

temp: 0000000011101001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0100111101011000

combo: 0000000011101011

word: 1110011101010000

combo: 0000000011101010

temp: 0000000011101010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0100111101110000

combo: 0000000011101110

word: 1110011101111000

combo: 0000000011101111

word: 0100111101101000

combo: 0000000011101101

word: 1110011101100000

combo: 0000000011101100

temp: 0000000011101100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0100111100100000

combo: 0000000011100100

word: 1110011100101000

combo: 0000000011100101

temp: 0000000011100101

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0100111100111000

combo: 0000000011100111

word: 1110011100110000

combo: 0000000011100110

temp: 0000000011100110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0100111100010000

combo: 0000000011100010

word: 1110011100011000

combo: 0000000011100011

temp: 0000000011100011

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0100111100001000

combo: 0000000011100001

word: 1110011100000000

combo: 0000000011100000

word: 1111010100000000

combo: 0000000010100000

word: 0101110100001000

combo: 0000000010100001

word: 1111010100011000

combo: 0000000010100011

temp: 0000000010100011

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110100010000

combo: 0000000010100010

word: 1111010100110000

combo: 0000000010100110

temp: 0000000010100110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110100111000

combo: 0000000010100111

word: 1111010100101000

combo: 0000000010100101

temp: 0000000010100101

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110100100000

combo: 0000000010100100

word: 1111010101100000

combo: 0000000010101100

temp: 0000000010101100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110101101000

combo: 0000000010101101

word: 1111010101111000

combo: 0000000010101111

word: 0101110101110000

combo: 0000000010101110

word: 1111010101010000

combo: 0000000010101010

temp: 0000000010101010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110101011000

combo: 0000000010101011

word: 1111010101001000

combo: 0000000010101001

temp: 0000000010101001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110101000000

combo: 0000000010101000

word: 1111010111000000

combo: 0000000010111000

temp: 0000000010111000

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110111001000

combo: 0000000010111001

word: 1111010111011000

combo: 0000000010111011

word: 0101110111010000

combo: 0000000010111010

word: 1111010111110000

combo: 0000000010111110

word: 0101110111111000

combo: 0000000010111111

word: 1111010111101000

combo: 0000000010111101

word: 0101110111100000

combo: 0000000010111100

word: 1111010110100000

combo: 0000000010110100

temp: 0000000010110100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110110101000

combo: 0000000010110101

word: 1111010110111000

combo: 0000000010110111

word: 0101110110110000

combo: 0000000010110110

word: 1111010110010000

combo: 0000000010110010

temp: 0000000010110010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110110011000

combo: 0000000010110011

word: 1111010110001000

combo: 0000000010110001

temp: 0000000010110001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110110000000

combo: 0000000010110000

word: 0100110010000000

combo: 0000000010010000

word: 1110010010001000

combo: 0000000010010001

word: 0100110010011000

combo: 0000000010010011

word: 1110010010010000

combo: 0000000010010010

word: 0100110010110000

combo: 0000000010010110

word: 1110010010111000

combo: 0000000010010111

temp: 0000000010010111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 0100110010101000

combo: 0000000010010101

word: 1110010010100000

combo: 0000000010010100

word: 0100110011100000

combo: 0000000010011100

word: 1110010011101000

combo: 0000000010011101

temp: 0000000010011101

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 0100110011111000

combo: 0000000010011111

word: 1110010011110000

combo: 0000000010011110

temp: 0000000010011110

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 0100110011010000

combo: 0000000010011010

word: 1110010011011000

combo: 0000000010011011

temp: 0000000010011011

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 0100110011001000

combo: 0000000010011001

word: 1110010011000000

combo: 0000000010011000

word: 0100110001000000

combo: 0000000010001000

word: 1110010001001000

combo: 0000000010001001

word: 0100110001011000

combo: 0000000010001011

word: 1110010001010000

combo: 0000000010001010

word: 0100110001110000

combo: 0000000010001110

word: 1110010001111000

combo: 0000000010001111

temp: 0000000010001111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 0100110001101000

combo: 0000000010001101

word: 1110010001100000

combo: 0000000010001100

word: 0100110000100000

combo: 0000000010000100

word: 1110010000101000

combo: 0000000010000101

word: 0100110000111000

combo: 0000000010000111

word: 1110010000110000

combo: 0000000010000110

word: 0100110000010000

combo: 0000000010000010

word: 1110010000011000

combo: 0000000010000011

word: 0100110000001000

combo: 0000000010000001

word: 1110010000000000

combo: 0000000010000000

temp: 0000000010000000

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

passed if statements
temp basis:
1100000011111001
0001001100000010
1100100000000100
rs list:
1 0 0 1 1 1 1 1 0 0 0 0 0 0 1 1 
0 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 1 
B_aug:
[1 0 0 1 1 1 1 1 0 0 1 0 0 1 0 0]
[0 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0]
[0 0 1 0 0 0 0 0 0 0 1 1 0 1 0 0]
[0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1]
m:
[1 0 0 1 1 1 1 1 0 0 0 0 0 0 1 1]
[0 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0]
[0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (11,14), (10,13), ( 9,10), (7,8), (6,7), (5,6), (4,5), ( 3,12), ( 3,15)(12,16), (2,9), (1,4) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 10, 3, 4, 5, 6, 7, 8, 9, 2, 13, 12, 11, 14, 15]
[0, 1, 10, 3, 4, 5, 6, 7, 8, 9, 14, 13, 12, 15, 2, 11]
orbits:
1110010000000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 1 1 1 1 1 0 1 0 0 0]
[0 1 0 0 0 0 0 0 0 1 0 0 1 1]
[0 0 1 0 0 0 0 0 0 0 0 1 1 1]
limit on degree (length): 15
ortho basis:
000100000001000
000100000010000
000100000100000
000100001000000
000100010000000
000100100000000
111001000000000
010010000000000

B_can_lab before row reduction:
000000011111111
001101100000000
011110000000000

B_can_lab after row reduction:
000000011111111
001101100000000
011110000000000

word generated as sum over rows of ortho_basis starting at 8: 000000000000000
gate: 000000000000111
k_gate: 000000011111111
nonzero_gate: 100000000000000
radix_gate: 000000000011111

Starting main loop:
word: 000000000000000

combo: 000000000000000

word: 000100000001000

combo: 000000000000001

word: 000000000011000

combo: 000000000000011

word: 000100000010000

combo: 000000000000010

word: 000000000110000

combo: 000000000000110

word: 000100000111000

combo: 000000000000111

word: 000000000101000

combo: 000000000000101

word: 000100000100000

combo: 000000000000100

word: 000000001100000

combo: 000000000001100

word: 000100001101000

combo: 000000000001101

word: 000000001111000

combo: 000000000001111

word: 000100001110000

combo: 000000000001110

word: 000000001010000

combo: 000000000001010

word: 000100001011000

combo: 000000000001011

word: 000000001001000

combo: 000000000001001

word: 000100001000000

combo: 000000000001000

word: 000000011000000

combo: 000000000011000

word: 000100011001000

combo: 000000000011001

word: 000000011011000

combo: 000000000011011

word: 000100011010000

combo: 000000000011010

word: 000000011110000

combo: 000000000011110

word: 000100011111000

combo: 000000000011111

word: 000000011101000

combo: 000000000011101

word: 000100011100000

combo: 000000000011100

word: 000000010100000

combo: 000000000010100

word: 000100010101000

combo: 000000000010101

word: 000000010111000

combo: 000000000010111

word: 000100010110000

combo: 000000000010110

word: 000000010010000

combo: 000000000010010

word: 000100010011000

combo: 000000000010011

word: 000000010001000

combo: 000000000010001

word: 000100010000000

combo: 000000000010000

word: 000000110000000

combo: 000000000110000

word: 000100110001000

combo: 000000000110001

word: 000000110011000

combo: 000000000110011

word: 000100110010000

combo: 000000000110010

word: 000000110110000

combo: 000000000110110

word: 000100110111000

combo: 000000000110111

word: 000000110101000

combo: 000000000110101

word: 000100110100000

combo: 000000000110100

word: 000000111100000

combo: 000000000111100

word: 000100111101000

combo: 000000000111101

word: 000000111111000

combo: 000000000111111

word: 000100111110000

combo: 000000000111110

word: 000000111010000

combo: 000000000111010

word: 000100111011000

combo: 000000000111011

word: 000000111001000

combo: 000000000111001

word: 000100111000000

combo: 000000000111000

word: 000000101000000

combo: 000000000101000

word: 000100101001000

combo: 000000000101001

word: 000000101011000

combo: 000000000101011

word: 000100101010000

combo: 000000000101010

word: 000000101110000

combo: 000000000101110

word: 000100101111000

combo: 000000000101111

word: 000000101101000

combo: 000000000101101

word: 000100101100000

combo: 000000000101100

word: 000000100100000

combo: 000000000100100

word: 000100100101000

combo: 000000000100101

word: 000000100111000

combo: 000000000100111

word: 000100100110000

combo: 000000000100110

word: 000000100010000

combo: 000000000100010

word: 000100100011000

combo: 000000000100011

word: 000000100001000

combo: 000000000100001

word: 000100100000000

combo: 000000000100000

word: 111101100000000

combo: 000000001100000

word: 111001100001000

combo: 000000001100001

word: 111101100011000

combo: 000000001100011

temp: 000000001100011

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
101110100011010
111101100011000
011010000000100
rs list:
0 1 0 1 1 0 0 0 1 0 1 1 1 0 1 
0 0 0 1 1 0 0 0 1 1 0 1 1 1 1 
0 0 1 0 0 0 0 0 0 0 1 0 1 1 0 
B_aug:
[1 0 0 1 1 1 1 1 1 0 0 1 0 0 0]
[0 1 0 0 0 0 0 0 0 1 1 0 0 1 0]
[0 0 1 0 0 0 0 0 0 0 1 0 1 1 0]
[0 0 0 1 1 0 0 0 1 1 0 1 1 1 1]
m:
[0 1 0 1 1 0 0 0 1 0 1 1 1 0 1]
[0 0 0 1 1 0 0 0 1 1 0 1 1 1 1]
[0 0 1 0 0 0 0 0 0 0 1 0 1 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,12), (7,8), (6,7), (5,9), (4,5), ( 3,11)(13,14), ( 3,13)(11,14), ( 2, 3)(10,13), (1,6) ] )
Right transversal of automorphism group of B_aug:
[3, 1, 2, 0, 5, 4, 8, 11, 6, 9, 10, 7, 12, 13, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
111101100011000
111101010011000
111101100101000
111001011101000
101111100011000
111001110011000
111101001011000
111101010101000
111001101101000
101111010011000
111101101001000
111101100110000
111001011011000
101111100101000
111001011110000
101011011101000
111001101011000
111001110101000
111101001101000
101011110011000
111101000111000
101111001011000
111101011001000
111101010110000
101111010101000
111001101110000
101011101101000
111101110001000
111101101010000
111001010111000
101111101001000
101111100110000
101011011011000
101011011110000
111001100111000
101011101011000
111001111001000
111001110110000
101011110101000
111101001110000
101111001101000
101111000111000
111101011010000
101111011001000
101111010110000
101011101110000
111101110010000
111001001111000
101111110001000
111101101100000
101111101010000
101011010111000
101011100111000
111001111010000
101011111001000
101011110110000
101111001110000
111101011100000
101111011010000
111101110100000
101111110010000
101011001111000
101111101100000
111001111100000
101011111010000
101111011100000
111101111000000
101111110100000
101011111100000
101111111000000
word: 111001100010000

combo: 000000001100010

word: 111101100110000

combo: 000000001100110

temp: 000000001100110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111001100111000

combo: 000000001100111

temp: 000000001100111

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101100101000

combo: 000000001100101

temp: 000000001100101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111001100100000

combo: 000000001100100

word: 111101101100000

combo: 000000001101100

temp: 000000001101100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111001101101000

combo: 000000001101101

temp: 000000001101101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101101111000

combo: 000000001101111

word: 111001101110000

combo: 000000001101110

temp: 000000001101110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101101010000

combo: 000000001101010

temp: 000000001101010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111001101011000

combo: 000000001101011

temp: 000000001101011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101101001000

combo: 000000001101001

temp: 000000001101001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111001101000000

combo: 000000001101000

word: 111101111000000

combo: 000000001111000

temp: 000000001111000

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111001111001000

combo: 000000001111001

temp: 000000001111001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101111011000

combo: 000000001111011

word: 111001111010000

combo: 000000001111010

temp: 000000001111010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101111110000

combo: 000000001111110

word: 111001111111000

combo: 000000001111111

word: 111101111101000

combo: 000000001111101

word: 111001111100000

combo: 000000001111100

temp: 000000001111100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101110100000

combo: 000000001110100

temp: 000000001110100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111001110101000

combo: 000000001110101

temp: 000000001110101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101110111000

combo: 000000001110111

word: 111001110110000

combo: 000000001110110

temp: 000000001110110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101110010000

combo: 000000001110010

temp: 000000001110010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111001110011000

combo: 000000001110011

temp: 000000001110011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101110001000

combo: 000000001110001

temp: 000000001110001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111001110000000

combo: 000000001110000

word: 111101010000000

combo: 000000001010000

word: 111001010001000

combo: 000000001010001

word: 111101010011000

combo: 000000001010011

temp: 000000001010011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 111001010010000

combo: 000000001010010

word: 111101010110000

combo: 000000001010110

temp: 000000001010110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 111001010111000

combo: 000000001010111

temp: 000000001010111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 111101010101000

combo: 000000001010101

temp: 000000001010101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 111001010100000

combo: 000000001010100

word: 111101011100000

combo: 000000001011100

temp: 000000001011100

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 111001011101000

combo: 000000001011101

temp: 000000001011101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 111101011111000

combo: 000000001011111

word: 111001011110000

combo: 000000001011110

temp: 000000001011110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 111101011010000

combo: 000000001011010

temp: 000000001011010

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 111001011011000

combo: 000000001011011

temp: 000000001011011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 111101011001000

combo: 000000001011001

temp: 000000001011001

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 111001011000000

combo: 000000001011000

word: 111101001000000

combo: 000000001001000

word: 111001001001000

combo: 000000001001001

word: 111101001011000

combo: 000000001001011

temp: 000000001001011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 111001001010000

combo: 000000001001010

word: 111101001110000

combo: 000000001001110

temp: 000000001001110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 111001001111000

combo: 000000001001111

temp: 000000001001111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 111101001101000

combo: 000000001001101

temp: 000000001001101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 111001001100000

combo: 000000001001100

word: 111101000100000

combo: 000000001000100

word: 111001000101000

combo: 000000001000101

word: 111101000111000

combo: 000000001000111

temp: 000000001000111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 111001000110000

combo: 000000001000110

word: 111101000010000

combo: 000000001000010

word: 111001000011000

combo: 000000001000011

word: 111101000001000

combo: 000000001000001

word: 111001000000000

combo: 000000001000000

temp: 000000001000000

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

passed if statements
temp basis:
000100111111001
101010000000010
011010000000100
rs list:
1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 
0 1 0 0 0 0 0 0 0 0 1 0 1 0 1 
0 0 1 0 0 0 0 0 0 0 1 0 1 1 0 
B_aug:
[1 0 0 1 1 1 1 1 1 0 0 1 0 0 0]
[0 1 0 0 0 0 0 0 0 1 1 0 0 1 0]
[0 0 1 0 0 0 0 0 0 0 1 0 1 1 0]
[0 0 0 0 0 0 0 0 0 1 0 0 1 1 1]
m:
[1 0 0 1 1 1 1 1 1 0 0 1 0 0 0]
[0 1 0 0 0 0 0 0 0 0 1 0 1 0 1]
[0 0 1 0 0 0 0 0 0 0 1 0 1 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,12), (8,9), (7,8), (6,7), (5,6), (4,5), ( 2, 3)(14,15), (1,4), ( 3,14)(11,13), ( 3,13)(11,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 10, 11, 9, 14, 13]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 13, 10, 11, 14, 9, 12]
[0, 1, 9, 3, 4, 5, 6, 7, 8, 2, 14, 11, 12, 13, 10]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 10, 11, 13, 12, 9]
orbits:
111001000000000
101011000000000
word: 101011000000000

combo: 000000011000000

temp: 000000011000000

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 101111000001000

combo: 000000011000001

word: 101011000011000

combo: 000000011000011

word: 101111000010000

combo: 000000011000010

word: 101011000110000

combo: 000000011000110

word: 101111000111000

combo: 000000011000111

temp: 000000011000111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 101011000101000

combo: 000000011000101

word: 101111000100000

combo: 000000011000100

word: 101011001100000

combo: 000000011001100

word: 101111001101000

combo: 000000011001101

temp: 000000011001101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 101011001111000

combo: 000000011001111

temp: 000000011001111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 101111001110000

combo: 000000011001110

temp: 000000011001110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 101011001010000

combo: 000000011001010

word: 101111001011000

combo: 000000011001011

temp: 000000011001011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 101011001001000

combo: 000000011001001

word: 101111001000000

combo: 000000011001000

word: 101011011000000

combo: 000000011011000

word: 101111011001000

combo: 000000011011001

temp: 000000011011001

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 101011011011000

combo: 000000011011011

temp: 000000011011011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 101111011010000

combo: 000000011011010

temp: 000000011011010

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 101011011110000

combo: 000000011011110

temp: 000000011011110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 101111011111000

combo: 000000011011111

word: 101011011101000

combo: 000000011011101

temp: 000000011011101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 101111011100000

combo: 000000011011100

temp: 000000011011100

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 101011010100000

combo: 000000011010100

word: 101111010101000

combo: 000000011010101

temp: 000000011010101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 101011010111000

combo: 000000011010111

temp: 000000011010111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 101111010110000

combo: 000000011010110

temp: 000000011010110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 101011010010000

combo: 000000011010010

word: 101111010011000

combo: 000000011010011

temp: 000000011010011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 101011010001000

combo: 000000011010001

word: 101111010000000

combo: 000000011010000

word: 101011110000000

combo: 000000011110000

word: 101111110001000

combo: 000000011110001

temp: 000000011110001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 101011110011000

combo: 000000011110011

temp: 000000011110011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 101111110010000

combo: 000000011110010

temp: 000000011110010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 101011110110000

combo: 000000011110110

temp: 000000011110110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 101111110111000

combo: 000000011110111

word: 101011110101000

combo: 000000011110101

temp: 000000011110101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 101111110100000

combo: 000000011110100

temp: 000000011110100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 101011111100000

combo: 000000011111100

temp: 000000011111100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 101111111101000

combo: 000000011111101

word: 101011111111000

combo: 000000011111111

word: 101111111110000

combo: 000000011111110

word: 101011111010000

combo: 000000011111010

temp: 000000011111010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 101111111011000

combo: 000000011111011

word: 101011111001000

combo: 000000011111001

temp: 000000011111001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 101111111000000

combo: 000000011111000

temp: 000000011111000

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 101011101000000

combo: 000000011101000

word: 101111101001000

combo: 000000011101001

temp: 000000011101001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 101011101011000

combo: 000000011101011

temp: 000000011101011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 101111101010000

combo: 000000011101010

temp: 000000011101010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 101011101110000

combo: 000000011101110

temp: 000000011101110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 101111101111000

combo: 000000011101111

word: 101011101101000

combo: 000000011101101

temp: 000000011101101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 101111101100000

combo: 000000011101100

temp: 000000011101100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 101011100100000

combo: 000000011100100

word: 101111100101000

combo: 000000011100101

temp: 000000011100101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 101011100111000

combo: 000000011100111

temp: 000000011100111

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 101111100110000

combo: 000000011100110

temp: 000000011100110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 101011100010000

combo: 000000011100010

word: 101111100011000

combo: 000000011100011

temp: 000000011100011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 101011100001000

combo: 000000011100001

word: 101111100000000

combo: 000000011100000

word: 010110100000000

combo: 000000010100000

word: 010010100001000

combo: 000000010100001

word: 010110100011000

combo: 000000010100011

word: 010010100010000

combo: 000000010100010

word: 010110100110000

combo: 000000010100110

word: 010010100111000

combo: 000000010100111

word: 010110100101000

combo: 000000010100101

word: 010010100100000

combo: 000000010100100

word: 010110101100000

combo: 000000010101100

word: 010010101101000

combo: 000000010101101

word: 010110101111000

combo: 000000010101111

word: 010010101110000

combo: 000000010101110

word: 010110101010000

combo: 000000010101010

word: 010010101011000

combo: 000000010101011

word: 010110101001000

combo: 000000010101001

word: 010010101000000

combo: 000000010101000

word: 010110111000000

combo: 000000010111000

word: 010010111001000

combo: 000000010111001

word: 010110111011000

combo: 000000010111011

word: 010010111010000

combo: 000000010111010

word: 010110111110000

combo: 000000010111110

word: 010010111111000

combo: 000000010111111

word: 010110111101000

combo: 000000010111101

word: 010010111100000

combo: 000000010111100

word: 010110110100000

combo: 000000010110100

word: 010010110101000

combo: 000000010110101

word: 010110110111000

combo: 000000010110111

word: 010010110110000

combo: 000000010110110

word: 010110110010000

combo: 000000010110010

word: 010010110011000

combo: 000000010110011

word: 010110110001000

combo: 000000010110001

word: 010010110000000

combo: 000000010110000

word: 010110010000000

combo: 000000010010000

word: 010010010001000

combo: 000000010010001

word: 010110010011000

combo: 000000010010011

word: 010010010010000

combo: 000000010010010

word: 010110010110000

combo: 000000010010110

word: 010010010111000

combo: 000000010010111

word: 010110010101000

combo: 000000010010101

word: 010010010100000

combo: 000000010010100

word: 010110011100000

combo: 000000010011100

word: 010010011101000

combo: 000000010011101

word: 010110011111000

combo: 000000010011111

word: 010010011110000

combo: 000000010011110

word: 010110011010000

combo: 000000010011010

word: 010010011011000

combo: 000000010011011

word: 010110011001000

combo: 000000010011001

word: 010010011000000

combo: 000000010011000

word: 010110001000000

combo: 000000010001000

word: 010010001001000

combo: 000000010001001

word: 010110001011000

combo: 000000010001011

word: 010010001010000

combo: 000000010001010

word: 010110001110000

combo: 000000010001110

word: 010010001111000

combo: 000000010001111

word: 010110001101000

combo: 000000010001101

word: 010010001100000

combo: 000000010001100

word: 010110000100000

combo: 000000010000100

word: 010010000101000

combo: 000000010000101

word: 010110000111000

combo: 000000010000111

word: 010010000110000

combo: 000000010000110

word: 010110000010000

combo: 000000010000010

word: 010010000011000

combo: 000000010000011

word: 010110000001000

combo: 000000010000001

word: 010010000000000

combo: 000000010000000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0 0]
[0 1 0 0 0 0 0 0 0 0 1 0 1 0 1]
[0 0 1 0 0 0 0 0 0 0 1 0 1 1 0]
[0 0 0 1 0 0 0 0 0 0 0 0 1 1 1]
limit on degree (length): 16
ortho basis:
0000100000010000
0000100000100000
0000100001000000
0000100010000000
0000100100000000
0000101000000000
1110010000000000

B_can_lab before row reduction:
0000000011111111
0101010100000000
0011011000000000
0111100000000000

B_can_lab after row reduction:
0000000011111111
0101010100000000
0011011000000000
0111100000000000
0000000000111000

word generated as sum over rows of ortho_basis starting at 7: 0000000000000000
gate: 0000000000001111
k_gate: 0000000001111111
nonzero_gate: 1000000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 0000000000000000

combo: 0000000000000000

word: 0000100000010000

combo: 0000000000000001

word: 0000000000110000

combo: 0000000000000011

word: 0000100000100000

combo: 0000000000000010

word: 0000000001100000

combo: 0000000000000110

word: 0000100001110000

combo: 0000000000000111

word: 0000000001010000

combo: 0000000000000101

word: 0000100001000000

combo: 0000000000000100

word: 0000000011000000

combo: 0000000000001100

word: 0000100011010000

combo: 0000000000001101

word: 0000000011110000

combo: 0000000000001111

word: 0000100011100000

combo: 0000000000001110

word: 0000000010100000

combo: 0000000000001010

word: 0000100010110000

combo: 0000000000001011

word: 0000000010010000

combo: 0000000000001001

word: 0000100010000000

combo: 0000000000001000

word: 0000000110000000

combo: 0000000000011000

word: 0000100110010000

combo: 0000000000011001

word: 0000000110110000

combo: 0000000000011011

word: 0000100110100000

combo: 0000000000011010

word: 0000000111100000

combo: 0000000000011110

word: 0000100111110000

combo: 0000000000011111

word: 0000000111010000

combo: 0000000000011101

word: 0000100111000000

combo: 0000000000011100

word: 0000000101000000

combo: 0000000000010100

word: 0000100101010000

combo: 0000000000010101

word: 0000000101110000

combo: 0000000000010111

word: 0000100101100000

combo: 0000000000010110

word: 0000000100100000

combo: 0000000000010010

word: 0000100100110000

combo: 0000000000010011

word: 0000000100010000

combo: 0000000000010001

word: 0000100100000000

combo: 0000000000010000

word: 0000001100000000

combo: 0000000000110000

word: 0000101100010000

combo: 0000000000110001

word: 0000001100110000

combo: 0000000000110011

word: 0000101100100000

combo: 0000000000110010

word: 0000001101100000

combo: 0000000000110110

word: 0000101101110000

combo: 0000000000110111

word: 0000001101010000

combo: 0000000000110101

word: 0000101101000000

combo: 0000000000110100

word: 0000001111000000

combo: 0000000000111100

word: 0000101111010000

combo: 0000000000111101

word: 0000001111110000

combo: 0000000000111111

word: 0000101111100000

combo: 0000000000111110

word: 0000001110100000

combo: 0000000000111010

word: 0000101110110000

combo: 0000000000111011

word: 0000001110010000

combo: 0000000000111001

word: 0000101110000000

combo: 0000000000111000

word: 0000001010000000

combo: 0000000000101000

word: 0000101010010000

combo: 0000000000101001

word: 0000001010110000

combo: 0000000000101011

word: 0000101010100000

combo: 0000000000101010

word: 0000001011100000

combo: 0000000000101110

word: 0000101011110000

combo: 0000000000101111

word: 0000001011010000

combo: 0000000000101101

word: 0000101011000000

combo: 0000000000101100

word: 0000001001000000

combo: 0000000000100100

word: 0000101001010000

combo: 0000000000100101

word: 0000001001110000

combo: 0000000000100111

word: 0000101001100000

combo: 0000000000100110

word: 0000001000100000

combo: 0000000000100010

word: 0000101000110000

combo: 0000000000100011

word: 0000001000010000

combo: 0000000000100001

word: 0000101000000000

combo: 0000000000100000

word: 1110111000000000

combo: 0000000001100000

word: 1110011000010000

combo: 0000000001100001

word: 1110111000110000

combo: 0000000001100011

temp: 0000000001100011

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1011101000110010
1101101000110100
1110111000110000
0111000000001000
rs list:
0 1 0 0 1 1 0 0 0 1 0 1 1 1 0 1 
0 0 1 0 1 1 0 0 0 1 0 1 1 0 1 1 
0 0 0 0 1 1 0 0 0 1 1 1 0 1 1 1 
0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 0 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 0]
[0 1 0 0 0 0 0 0 0 0 1 0 1 0 1 0]
[0 0 1 0 0 0 0 0 0 0 1 0 1 1 0 0]
[0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 0]
[0 0 0 0 1 1 0 0 0 1 1 1 0 1 1 1]
m:
[0 1 0 0 1 1 0 0 0 1 0 1 1 1 0 1]
[0 0 1 0 1 1 0 0 0 1 0 1 1 0 1 1]
[0 0 0 0 1 1 0 0 0 1 1 1 0 1 1 1]
[0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (10,12), (8,9), (7,8), ( 6,10), (5,6), ( 4,13)(14,15), ( 4,14)(13,15), ( 3, 4)(11,15), ( 2, 3)(14,15), (1,7) ] )
Right transversal of automorphism group of B_aug:
[4, 1, 2, 3, 0, 6, 5, 9, 11, 7, 10, 8, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1110111000110000
1110110100110000
1110111001010000
1110010111010000
1110011100110000
1110110010110000
1110110101010000
1110011011010000
1110111010010000
1110111001100000
1110010110110000
1110010111100000
1110011010110000
1110011101010000
1110110011010000
1110110001110000
1110110110010000
1110110101100000
1110011011100000
1110111100010000
1110111010100000
1110010101110000
1110011001110000
1110011110010000
1110011101100000
1110110011100000
1110110110100000
1110111100100000
1110010011110000
1110111011000000
1110011110100000
1110110111000000
1110111101000000
1110011111000000
1110111110000000
word: 1110011000100000

combo: 0000000001100010

word: 1110111001100000

combo: 0000000001100110

temp: 0000000001100110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110011001110000

combo: 0000000001100111

temp: 0000000001100111

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110111001010000

combo: 0000000001100101

temp: 0000000001100101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110011001000000

combo: 0000000001100100

word: 1110111011000000

combo: 0000000001101100

temp: 0000000001101100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110011011010000

combo: 0000000001101101

temp: 0000000001101101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110111011110000

combo: 0000000001101111

word: 1110011011100000

combo: 0000000001101110

temp: 0000000001101110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110111010100000

combo: 0000000001101010

temp: 0000000001101010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110011010110000

combo: 0000000001101011

temp: 0000000001101011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110111010010000

combo: 0000000001101001

temp: 0000000001101001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110011010000000

combo: 0000000001101000

word: 1110111110000000

combo: 0000000001111000

temp: 0000000001111000

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110011110010000

combo: 0000000001111001

temp: 0000000001111001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110111110110000

combo: 0000000001111011

word: 1110011110100000

combo: 0000000001111010

temp: 0000000001111010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110111111100000

combo: 0000000001111110

word: 1110011111110000

combo: 0000000001111111

word: 1110111111010000

combo: 0000000001111101

word: 1110011111000000

combo: 0000000001111100

temp: 0000000001111100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110111101000000

combo: 0000000001110100

temp: 0000000001110100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110011101010000

combo: 0000000001110101

temp: 0000000001110101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110111101110000

combo: 0000000001110111

word: 1110011101100000

combo: 0000000001110110

temp: 0000000001110110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110111100100000

combo: 0000000001110010

temp: 0000000001110010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110011100110000

combo: 0000000001110011

temp: 0000000001110011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110111100010000

combo: 0000000001110001

temp: 0000000001110001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110011100000000

combo: 0000000001110000

word: 1110110100000000

combo: 0000000001010000

word: 1110010100010000

combo: 0000000001010001

word: 1110110100110000

combo: 0000000001010011

temp: 0000000001010011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110010100100000

combo: 0000000001010010

word: 1110110101100000

combo: 0000000001010110

temp: 0000000001010110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110010101110000

combo: 0000000001010111

temp: 0000000001010111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110110101010000

combo: 0000000001010101

temp: 0000000001010101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110010101000000

combo: 0000000001010100

word: 1110110111000000

combo: 0000000001011100

temp: 0000000001011100

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110010111010000

combo: 0000000001011101

temp: 0000000001011101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110110111110000

combo: 0000000001011111

word: 1110010111100000

combo: 0000000001011110

temp: 0000000001011110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110110110100000

combo: 0000000001011010

temp: 0000000001011010

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110010110110000

combo: 0000000001011011

temp: 0000000001011011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110110110010000

combo: 0000000001011001

temp: 0000000001011001

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110010110000000

combo: 0000000001011000

word: 1110110010000000

combo: 0000000001001000

word: 1110010010010000

combo: 0000000001001001

word: 1110110010110000

combo: 0000000001001011

temp: 0000000001001011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110010010100000

combo: 0000000001001010

word: 1110110011100000

combo: 0000000001001110

temp: 0000000001001110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110010011110000

combo: 0000000001001111

temp: 0000000001001111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110110011010000

combo: 0000000001001101

temp: 0000000001001101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110010011000000

combo: 0000000001001100

word: 1110110001000000

combo: 0000000001000100

word: 1110010001010000

combo: 0000000001000101

word: 1110110001110000

combo: 0000000001000111

temp: 0000000001000111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110010001100000

combo: 0000000001000110

word: 1110110000100000

combo: 0000000001000010

word: 1110010000110000

combo: 0000000001000011

word: 1110110000010000

combo: 0000000001000001

word: 1110010000000000

combo: 0000000001000000

temp: 0000000001000000

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

passed if statements
temp basis:
0000101111110001
1011000000000010
1101000000000100
0111000000001000
rs list:
1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 0 
0 1 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 1 
0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 0 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 0]
[0 1 0 0 0 0 0 0 0 0 1 0 1 0 1 0]
[0 0 1 0 0 0 0 0 0 0 1 0 1 1 0 0]
[0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 0]
[0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1]
m:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 0]
[0 1 0 0 0 0 0 0 0 0 0 0 1 1 0 1]
[0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 1]
[0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (10,12), ( 9,10), (8,9), (7,8), (6,7), (5,6), ( 3, 4)(14,16), ( 2, 3)(14,15), (1,5), ( 4,15)(13,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 11, 12, 10, 15, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 11, 12, 15, 10, 13]
[0, 1, 2, 10, 4, 5, 6, 7, 8, 9, 3, 11, 15, 13, 14, 12]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 11, 12, 14, 13, 10]
orbits:
1110010000000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 1 1 1 1 1 0 1 0 0 0]
[0 1 0 0 0 0 0 0 0 1 0 0 1 1]
[0 0 1 0 0 0 0 0 0 0 0 1 1 1]
limit on degree (length): 16
ortho basis:
0000100000001000
0000100000010000
0000100000100000
0000100001000000
0000100010000000
0000100100000000
1011001000000000
0010010000000000
1100000000000000

B_can_lab before row reduction:
0000000011111111
0001101100000000
0011110000000000

B_can_lab after row reduction:
0000000011111111
0001101100000000
0011110000000000

word generated as sum over rows of ortho_basis starting at 8: 1100000000000000
gate: 0000000000000111
k_gate: 0000000011111111
nonzero_gate: 1100000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1100000000000000

combo: 0000000000000000

word: 1100100000001000

combo: 0000000000000001

temp: 0000000000000001

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
0000100111111001
1100000111110001
0010011000000010
rs list:
1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 0 
1 0 0 0 1 1 1 1 1 0 0 0 0 0 1 1 
0 1 0 0 0 0 0 0 0 1 1 0 0 1 0 0 
B_aug:
[1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 0]
[0 1 0 0 0 0 0 0 0 1 1 0 0 1 0 0]
[0 0 1 0 0 0 0 0 0 0 1 0 1 1 0 0]
[0 0 0 1 0 0 0 0 0 0 0 1 0 0 1 1]
m:
[1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 0]
[1 0 0 0 1 1 1 1 1 0 0 0 0 0 1 1]
[0 1 0 0 0 0 0 0 0 1 1 0 0 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,14), ( 3,13), ( 2,10), ( 2,11)(10,14), (5,6), (5,7), (5,8)(6,7), (5,9)(6,8), (1,5,9)(6,8), ( 5, 9)( 6, 8)(15,16), ( 4,12)( 5, 9)( 6, 8)(15,16), ( 4,15,12,16)( 5, 9)( 6, 8) ] )
Right transversal of automorphism group of B_aug:
[0, 2, 1, 3, 4, 5, 6, 7, 8, 12, 10, 11, 9, 13, 14, 15]
[0, 2, 10, 3, 4, 5, 6, 7, 8, 12, 1, 11, 13, 9, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1100100000001000
1100000100001000
1100100000010000
1100000111111000
1100000010001000
1100000100010000
1100100011111000
1100100000100000
1100000001001000
1100000010010000
1100100101111000
1100000100100000
1100100001000000
1100000000101000
1100000001010000
1100100110111000
1100000010100000
1100000101000000
1100100010000000
1100000000011000
1100000000110000
1100100111011000
1100000001100000
1100000011000000
1100000110000000
1100100100000000
1100100111101000
1100100111110000
word: 1100000000011000

combo: 0000000000000011

temp: 0000000000000011

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1100100000010000

combo: 0000000000000010

temp: 0000000000000010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1100000000110000

combo: 0000000000000110

temp: 0000000000000110

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1100100000111000

combo: 0000000000000111

word: 1100000000101000

combo: 0000000000000101

temp: 0000000000000101

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1100100000100000

combo: 0000000000000100

temp: 0000000000000100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1100000001100000

combo: 0000000000001100

temp: 0000000000001100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1100100001101000

combo: 0000000000001101

word: 1100000001111000

combo: 0000000000001111

word: 1100100001110000

combo: 0000000000001110

word: 1100000001010000

combo: 0000000000001010

temp: 0000000000001010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1100100001011000

combo: 0000000000001011

word: 1100000001001000

combo: 0000000000001001

temp: 0000000000001001

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1100100001000000

combo: 0000000000001000

temp: 0000000000001000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1100000011000000

combo: 0000000000011000

temp: 0000000000011000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1100100011001000

combo: 0000000000011001

word: 1100000011011000

combo: 0000000000011011

word: 1100100011010000

combo: 0000000000011010

word: 1100000011110000

combo: 0000000000011110

word: 1100100011111000

combo: 0000000000011111

temp: 0000000000011111

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1100000011101000

combo: 0000000000011101

word: 1100100011100000

combo: 0000000000011100

word: 1100000010100000

combo: 0000000000010100

temp: 0000000000010100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1100100010101000

combo: 0000000000010101

word: 1100000010111000

combo: 0000000000010111

word: 1100100010110000

combo: 0000000000010110

word: 1100000010010000

combo: 0000000000010010

temp: 0000000000010010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1100100010011000

combo: 0000000000010011

word: 1100000010001000

combo: 0000000000010001

temp: 0000000000010001

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1100100010000000

combo: 0000000000010000

temp: 0000000000010000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1100000110000000

combo: 0000000000110000

temp: 0000000000110000

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1100100110001000

combo: 0000000000110001

word: 1100000110011000

combo: 0000000000110011

word: 1100100110010000

combo: 0000000000110010

word: 1100000110110000

combo: 0000000000110110

word: 1100100110111000

combo: 0000000000110111

temp: 0000000000110111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1100000110101000

combo: 0000000000110101

word: 1100100110100000

combo: 0000000000110100

word: 1100000111100000

combo: 0000000000111100

word: 1100100111101000

combo: 0000000000111101

temp: 0000000000111101

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1100000111111000

combo: 0000000000111111

temp: 0000000000111111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1100100111110000

combo: 0000000000111110

temp: 0000000000111110

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1100000111010000

combo: 0000000000111010

word: 1100100111011000

combo: 0000000000111011

temp: 0000000000111011

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1100000111001000

combo: 0000000000111001

word: 1100100111000000

combo: 0000000000111000

word: 1100000101000000

combo: 0000000000101000

temp: 0000000000101000

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1100100101001000

combo: 0000000000101001

word: 1100000101011000

combo: 0000000000101011

word: 1100100101010000

combo: 0000000000101010

word: 1100000101110000

combo: 0000000000101110

word: 1100100101111000

combo: 0000000000101111

temp: 0000000000101111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1100000101101000

combo: 0000000000101101

word: 1100100101100000

combo: 0000000000101100

word: 1100000100100000

combo: 0000000000100100

temp: 0000000000100100

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1100100100101000

combo: 0000000000100101

word: 1100000100111000

combo: 0000000000100111

word: 1100100100110000

combo: 0000000000100110

word: 1100000100010000

combo: 0000000000100010

temp: 0000000000100010

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1100100100011000

combo: 0000000000100011

word: 1100000100001000

combo: 0000000000100001

temp: 0000000000100001

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1100100100000000

combo: 0000000000100000

temp: 0000000000100000

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 0111101100000000

combo: 0000000001100000

word: 0111001100001000

combo: 0000000001100001

word: 0111101100011000

combo: 0000000001100011

word: 0111001100010000

combo: 0000000001100010

word: 0111101100110000

combo: 0000000001100110

word: 0111001100111000

combo: 0000000001100111

word: 0111101100101000

combo: 0000000001100101

word: 0111001100100000

combo: 0000000001100100

word: 0111101101100000

combo: 0000000001101100

word: 0111001101101000

combo: 0000000001101101

word: 0111101101111000

combo: 0000000001101111

word: 0111001101110000

combo: 0000000001101110

word: 0111101101010000

combo: 0000000001101010

word: 0111001101011000

combo: 0000000001101011

word: 0111101101001000

combo: 0000000001101001

word: 0111001101000000

combo: 0000000001101000

word: 0111101111000000

combo: 0000000001111000

word: 0111001111001000

combo: 0000000001111001

word: 0111101111011000

combo: 0000000001111011

word: 0111001111010000

combo: 0000000001111010

word: 0111101111110000

combo: 0000000001111110

word: 0111001111111000

combo: 0000000001111111

word: 0111101111101000

combo: 0000000001111101

word: 0111001111100000

combo: 0000000001111100

word: 0111101110100000

combo: 0000000001110100

word: 0111001110101000

combo: 0000000001110101

word: 0111101110111000

combo: 0000000001110111

word: 0111001110110000

combo: 0000000001110110

word: 0111101110010000

combo: 0000000001110010

word: 0111001110011000

combo: 0000000001110011

word: 0111101110001000

combo: 0000000001110001

word: 0111001110000000

combo: 0000000001110000

word: 0111101010000000

combo: 0000000001010000

word: 0111001010001000

combo: 0000000001010001

word: 0111101010011000

combo: 0000000001010011

word: 0111001010010000

combo: 0000000001010010

word: 0111101010110000

combo: 0000000001010110

word: 0111001010111000

combo: 0000000001010111

word: 0111101010101000

combo: 0000000001010101

word: 0111001010100000

combo: 0000000001010100

word: 0111101011100000

combo: 0000000001011100

word: 0111001011101000

combo: 0000000001011101

word: 0111101011111000

combo: 0000000001011111

word: 0111001011110000

combo: 0000000001011110

word: 0111101011010000

combo: 0000000001011010

word: 0111001011011000

combo: 0000000001011011

word: 0111101011001000

combo: 0000000001011001

word: 0111001011000000

combo: 0000000001011000

word: 0111101001000000

combo: 0000000001001000

word: 0111001001001000

combo: 0000000001001001

word: 0111101001011000

combo: 0000000001001011

word: 0111001001010000

combo: 0000000001001010

word: 0111101001110000

combo: 0000000001001110

word: 0111001001111000

combo: 0000000001001111

word: 0111101001101000

combo: 0000000001001101

word: 0111001001100000

combo: 0000000001001100

word: 0111101000100000

combo: 0000000001000100

word: 0111001000101000

combo: 0000000001000101

word: 0111101000111000

combo: 0000000001000111

word: 0111001000110000

combo: 0000000001000110

word: 0111101000010000

combo: 0000000001000010

word: 0111001000011000

combo: 0000000001000011

word: 0111101000001000

combo: 0000000001000001

word: 0111001000000000

combo: 0000000001000000

word: 0101011000000000

combo: 0000000011000000

word: 0101111000001000

combo: 0000000011000001

word: 0101011000011000

combo: 0000000011000011

word: 0101111000010000

combo: 0000000011000010

word: 0101011000110000

combo: 0000000011000110

word: 0101111000111000

combo: 0000000011000111

word: 0101011000101000

combo: 0000000011000101

word: 0101111000100000

combo: 0000000011000100

word: 0101011001100000

combo: 0000000011001100

word: 0101111001101000

combo: 0000000011001101

word: 0101011001111000

combo: 0000000011001111

word: 0101111001110000

combo: 0000000011001110

word: 0101011001010000

combo: 0000000011001010

word: 0101111001011000

combo: 0000000011001011

word: 0101011001001000

combo: 0000000011001001

word: 0101111001000000

combo: 0000000011001000

word: 0101011011000000

combo: 0000000011011000

word: 0101111011001000

combo: 0000000011011001

word: 0101011011011000

combo: 0000000011011011

word: 0101111011010000

combo: 0000000011011010

word: 0101011011110000

combo: 0000000011011110

word: 0101111011111000

combo: 0000000011011111

word: 0101011011101000

combo: 0000000011011101

word: 0101111011100000

combo: 0000000011011100

word: 0101011010100000

combo: 0000000011010100

word: 0101111010101000

combo: 0000000011010101

word: 0101011010111000

combo: 0000000011010111

word: 0101111010110000

combo: 0000000011010110

word: 0101011010010000

combo: 0000000011010010

word: 0101111010011000

combo: 0000000011010011

word: 0101011010001000

combo: 0000000011010001

word: 0101111010000000

combo: 0000000011010000

word: 0101011110000000

combo: 0000000011110000

word: 0101111110001000

combo: 0000000011110001

word: 0101011110011000

combo: 0000000011110011

word: 0101111110010000

combo: 0000000011110010

word: 0101011110110000

combo: 0000000011110110

word: 0101111110111000

combo: 0000000011110111

word: 0101011110101000

combo: 0000000011110101

word: 0101111110100000

combo: 0000000011110100

word: 0101011111100000

combo: 0000000011111100

word: 0101111111101000

combo: 0000000011111101

word: 0101011111111000

combo: 0000000011111111

word: 0101111111110000

combo: 0000000011111110

word: 0101011111010000

combo: 0000000011111010

word: 0101111111011000

combo: 0000000011111011

word: 0101011111001000

combo: 0000000011111001

word: 0101111111000000

combo: 0000000011111000

word: 0101011101000000

combo: 0000000011101000

word: 0101111101001000

combo: 0000000011101001

word: 0101011101011000

combo: 0000000011101011

word: 0101111101010000

combo: 0000000011101010

word: 0101011101110000

combo: 0000000011101110

word: 0101111101111000

combo: 0000000011101111

word: 0101011101101000

combo: 0000000011101101

word: 0101111101100000

combo: 0000000011101100

word: 0101011100100000

combo: 0000000011100100

word: 0101111100101000

combo: 0000000011100101

word: 0101011100111000

combo: 0000000011100111

word: 0101111100110000

combo: 0000000011100110

word: 0101011100010000

combo: 0000000011100010

word: 0101111100011000

combo: 0000000011100011

word: 0101011100001000

combo: 0000000011100001

word: 0101111100000000

combo: 0000000011100000

word: 1110110100000000

combo: 0000000010100000

word: 1110010100001000

combo: 0000000010100001

word: 1110110100011000

combo: 0000000010100011

temp: 0000000010100011

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1100101100011010
1101100100011100
1110110100011000
rs list:
0 1 0 1 1 0 0 0 1 1 0 1 0 0 1 1 
0 0 1 1 1 0 0 0 1 0 0 1 1 0 1 1 
0 0 0 1 1 0 0 0 1 0 1 1 0 1 1 1 
B_aug:
[1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 0]
[0 1 0 0 0 0 0 0 0 1 1 0 0 1 0 0]
[0 0 1 0 0 0 0 0 0 0 1 0 1 1 0 0]
[0 0 0 1 1 0 0 0 1 0 1 1 0 1 1 1]
m:
[0 1 0 1 1 0 0 0 1 1 0 1 0 0 1 1]
[0 0 1 1 1 0 0 0 1 0 0 1 1 0 1 1]
[0 0 0 1 1 0 0 0 1 0 1 1 0 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 5,12), ( 4, 5,12), ( 4, 5,12, 9), ( 4, 5,12, 9)( 6, 7), ( 4, 5,12, 9)( 6, 7, 8), ( 1, 6, 7, 8)( 4, 5,12, 9), ( 4, 5,12, 9)( 6, 7, 8)(11,14), ( 3,11)( 4, 5,12, 9)( 6, 7, 8)(13,14), ( 2, 3)( 4, 5,12, 9)( 6, 7, 8)(10,13), ( 4, 5,12, 9)( 6, 7, 8)(15,16) ] )
Right transversal of automorphism group of B_aug:
[3, 1, 2, 0, 5, 4, 8, 11, 6, 9, 10, 7, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1110110100011000
1110110010011000
1110110100101000
1110010011101000
1110010110011000
1110110001011000
1110110010101000
1110010101101000
1110110101001000
1110110100110000
1110010011011000
1110010011110000
1110010101011000
1110010110101000
1110110001101000
1110110000111000
1110110011001000
1110110010110000
1110010101110000
1110110110001000
1110110101010000
1110010010111000
1110010100111000
1110010111001000
1110010110110000
1110110001110000
1110110011010000
1110110110010000
1110010001111000
1110110101100000
1110010111010000
1110110011100000
1110110110100000
1110010111100000
1110110111000000
word: 1110010100010000

combo: 0000000010100010

word: 1110110100110000

combo: 0000000010100110

temp: 0000000010100110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110010100111000

combo: 0000000010100111

temp: 0000000010100111

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110110100101000

combo: 0000000010100101

temp: 0000000010100101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110010100100000

combo: 0000000010100100

word: 1110110101100000

combo: 0000000010101100

temp: 0000000010101100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110010101101000

combo: 0000000010101101

temp: 0000000010101101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110110101111000

combo: 0000000010101111

word: 1110010101110000

combo: 0000000010101110

temp: 0000000010101110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110110101010000

combo: 0000000010101010

temp: 0000000010101010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110010101011000

combo: 0000000010101011

temp: 0000000010101011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110110101001000

combo: 0000000010101001

temp: 0000000010101001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110010101000000

combo: 0000000010101000

word: 1110110111000000

combo: 0000000010111000

temp: 0000000010111000

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110010111001000

combo: 0000000010111001

temp: 0000000010111001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110110111011000

combo: 0000000010111011

word: 1110010111010000

combo: 0000000010111010

temp: 0000000010111010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110110111110000

combo: 0000000010111110

word: 1110010111111000

combo: 0000000010111111

word: 1110110111101000

combo: 0000000010111101

word: 1110010111100000

combo: 0000000010111100

temp: 0000000010111100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110110110100000

combo: 0000000010110100

temp: 0000000010110100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110010110101000

combo: 0000000010110101

temp: 0000000010110101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110110110111000

combo: 0000000010110111

word: 1110010110110000

combo: 0000000010110110

temp: 0000000010110110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110110110010000

combo: 0000000010110010

temp: 0000000010110010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110010110011000

combo: 0000000010110011

temp: 0000000010110011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110110110001000

combo: 0000000010110001

temp: 0000000010110001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1110010110000000

combo: 0000000010110000

word: 1110110010000000

combo: 0000000010010000

word: 1110010010001000

combo: 0000000010010001

word: 1110110010011000

combo: 0000000010010011

temp: 0000000010010011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110010010010000

combo: 0000000010010010

word: 1110110010110000

combo: 0000000010010110

temp: 0000000010010110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110010010111000

combo: 0000000010010111

temp: 0000000010010111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110110010101000

combo: 0000000010010101

temp: 0000000010010101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110010010100000

combo: 0000000010010100

word: 1110110011100000

combo: 0000000010011100

temp: 0000000010011100

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110010011101000

combo: 0000000010011101

temp: 0000000010011101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110110011111000

combo: 0000000010011111

word: 1110010011110000

combo: 0000000010011110

temp: 0000000010011110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110110011010000

combo: 0000000010011010

temp: 0000000010011010

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110010011011000

combo: 0000000010011011

temp: 0000000010011011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110110011001000

combo: 0000000010011001

temp: 0000000010011001

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110010011000000

combo: 0000000010011000

word: 1110110001000000

combo: 0000000010001000

word: 1110010001001000

combo: 0000000010001001

word: 1110110001011000

combo: 0000000010001011

temp: 0000000010001011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110010001010000

combo: 0000000010001010

word: 1110110001110000

combo: 0000000010001110

temp: 0000000010001110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110010001111000

combo: 0000000010001111

temp: 0000000010001111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110110001101000

combo: 0000000010001101

temp: 0000000010001101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110010001100000

combo: 0000000010001100

word: 1110110000100000

combo: 0000000010000100

word: 1110010000101000

combo: 0000000010000101

word: 1110110000111000

combo: 0000000010000111

temp: 0000000010000111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

word: 1110010000110000

combo: 0000000010000110

word: 1110110000010000

combo: 0000000010000010

word: 1110010000011000

combo: 0000000010000011

word: 1110110000001000

combo: 0000000010000001

word: 1110010000000000

combo: 0000000010000000

temp: 0000000010000000

orbit_checks[temp>>log2radix]= 1111110111010001110100010000000

passed if statements
temp basis:
0000100111111001
1100001000000010
1101000000000100
rs list:
1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 0 
0 1 0 0 0 0 0 0 0 1 0 0 0 0 1 1 
0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 1 
B_aug:
[1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 0]
[0 1 0 0 0 0 0 0 0 1 1 0 0 1 0 0]
[0 0 1 0 0 0 0 0 0 0 1 0 1 1 0 0]
[0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1]
m:
[1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 0]
[0 1 0 0 0 0 0 0 0 1 0 0 0 0 1 1]
[0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (11,14), ( 9,12), (8,9), (7,8), (6,7), (5,6), (4,5), ( 3,13), ( 3,15)(13,16), ( 2, 3)(10,13), (1,4) ] )
Right transversal of automorphism group of B_aug:
[0, 10, 2, 3, 4, 5, 6, 7, 8, 13, 1, 11, 12, 9, 14, 15]
[0, 10, 1, 3, 4, 5, 6, 7, 8, 13, 2, 11, 9, 12, 14, 15]
[0, 10, 1, 3, 4, 5, 6, 7, 8, 13, 14, 11, 9, 15, 2, 12]
orbits:
1110010000000000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 1 1 1 1 1 1 0 0 0]
[0 1 0 0 0 0 0 0 0 1 1 1]
limit on degree (length): 15
ortho basis:
000010000000100
000010000001000
000010000010000
000010000100000
000010001000000
000010010000000
000100100000000
000101000000000
101000000000000
110000000000000

B_can_lab before row reduction:
000000011111111
000111100000000

B_can_lab after row reduction:
000000011111111
000111100000000

word generated as sum over rows of ortho_basis starting at 8: 011000000000000
gate: 000000000000011
k_gate: 000000011111111
nonzero_gate: 111000000000000
radix_gate: 000000000011111

Starting main loop:
word: 011000000000000

combo: 000000000000000

word: 011010000000100

combo: 000000000000001

word: 011000000001100

combo: 000000000000011

word: 011010000001000

combo: 000000000000010

word: 011000000011000

combo: 000000000000110

word: 011010000011100

combo: 000000000000111

word: 011000000010100

combo: 000000000000101

word: 011010000010000

combo: 000000000000100

word: 011000000110000

combo: 000000000001100

word: 011010000110100

combo: 000000000001101

word: 011000000111100

combo: 000000000001111

word: 011010000111000

combo: 000000000001110

word: 011000000101000

combo: 000000000001010

word: 011010000101100

combo: 000000000001011

word: 011000000100100

combo: 000000000001001

word: 011010000100000

combo: 000000000001000

word: 011000001100000

combo: 000000000011000

word: 011010001100100

combo: 000000000011001

word: 011000001101100

combo: 000000000011011

word: 011010001101000

combo: 000000000011010

word: 011000001111000

combo: 000000000011110

word: 011010001111100

combo: 000000000011111

word: 011000001110100

combo: 000000000011101

word: 011010001110000

combo: 000000000011100

word: 011000001010000

combo: 000000000010100

word: 011010001010100

combo: 000000000010101

word: 011000001011100

combo: 000000000010111

word: 011010001011000

combo: 000000000010110

word: 011000001001000

combo: 000000000010010

word: 011010001001100

combo: 000000000010011

word: 011000001000100

combo: 000000000010001

word: 011010001000000

combo: 000000000010000

word: 011000011000000

combo: 000000000110000

word: 011010011000100

combo: 000000000110001

word: 011000011001100

combo: 000000000110011

word: 011010011001000

combo: 000000000110010

word: 011000011011000

combo: 000000000110110

word: 011010011011100

combo: 000000000110111

word: 011000011010100

combo: 000000000110101

word: 011010011010000

combo: 000000000110100

word: 011000011110000

combo: 000000000111100

word: 011010011110100

combo: 000000000111101

word: 011000011111100

combo: 000000000111111

word: 011010011111000

combo: 000000000111110

word: 011000011101000

combo: 000000000111010

word: 011010011101100

combo: 000000000111011

word: 011000011100100

combo: 000000000111001

word: 011010011100000

combo: 000000000111000

word: 011000010100000

combo: 000000000101000

word: 011010010100100

combo: 000000000101001

word: 011000010101100

combo: 000000000101011

word: 011010010101000

combo: 000000000101010

word: 011000010111000

combo: 000000000101110

word: 011010010111100

combo: 000000000101111

word: 011000010110100

combo: 000000000101101

word: 011010010110000

combo: 000000000101100

word: 011000010010000

combo: 000000000100100

word: 011010010010100

combo: 000000000100101

word: 011000010011100

combo: 000000000100111

word: 011010010011000

combo: 000000000100110

word: 011000010001000

combo: 000000000100010

word: 011010010001100

combo: 000000000100011

word: 011000010000100

combo: 000000000100001

word: 011010010000000

combo: 000000000100000

word: 011110110000000

combo: 000000001100000

word: 011100110000100

combo: 000000001100001

word: 011110110001100

combo: 000000001100011

word: 011100110001000

combo: 000000001100010

word: 011110110011000

combo: 000000001100110

word: 011100110011100

combo: 000000001100111

word: 011110110010100

combo: 000000001100101

word: 011100110010000

combo: 000000001100100

word: 011110110110000

combo: 000000001101100

word: 011100110110100

combo: 000000001101101

word: 011110110111100

combo: 000000001101111

word: 011100110111000

combo: 000000001101110

word: 011110110101000

combo: 000000001101010

word: 011100110101100

combo: 000000001101011

word: 011110110100100

combo: 000000001101001

word: 011100110100000

combo: 000000001101000

word: 011110111100000

combo: 000000001111000

word: 011100111100100

combo: 000000001111001

word: 011110111101100

combo: 000000001111011

word: 011100111101000

combo: 000000001111010

word: 011110111111000

combo: 000000001111110

word: 011100111111100

combo: 000000001111111

word: 011110111110100

combo: 000000001111101

word: 011100111110000

combo: 000000001111100

word: 011110111010000

combo: 000000001110100

word: 011100111010100

combo: 000000001110101

word: 011110111011100

combo: 000000001110111

word: 011100111011000

combo: 000000001110110

word: 011110111001000

combo: 000000001110010

word: 011100111001100

combo: 000000001110011

word: 011110111000100

combo: 000000001110001

word: 011100111000000

combo: 000000001110000

word: 011110101000000

combo: 000000001010000

word: 011100101000100

combo: 000000001010001

word: 011110101001100

combo: 000000001010011

word: 011100101001000

combo: 000000001010010

word: 011110101011000

combo: 000000001010110

word: 011100101011100

combo: 000000001010111

word: 011110101010100

combo: 000000001010101

word: 011100101010000

combo: 000000001010100

word: 011110101110000

combo: 000000001011100

word: 011100101110100

combo: 000000001011101

word: 011110101111100

combo: 000000001011111

word: 011100101111000

combo: 000000001011110

word: 011110101101000

combo: 000000001011010

word: 011100101101100

combo: 000000001011011

word: 011110101100100

combo: 000000001011001

word: 011100101100000

combo: 000000001011000

word: 011110100100000

combo: 000000001001000

word: 011100100100100

combo: 000000001001001

word: 011110100101100

combo: 000000001001011

word: 011100100101000

combo: 000000001001010

word: 011110100111000

combo: 000000001001110

word: 011100100111100

combo: 000000001001111

word: 011110100110100

combo: 000000001001101

word: 011100100110000

combo: 000000001001100

word: 011110100010000

combo: 000000001000100

word: 011100100010100

combo: 000000001000101

word: 011110100011100

combo: 000000001000111

word: 011100100011000

combo: 000000001000110

word: 011110100001000

combo: 000000001000010

word: 011100100001100

combo: 000000001000011

word: 011110100000100

combo: 000000001000001

word: 011100100000000

combo: 000000001000000

word: 011001100000000

combo: 000000011000000

word: 011011100000100

combo: 000000011000001

word: 011001100001100

combo: 000000011000011

word: 011011100001000

combo: 000000011000010

word: 011001100011000

combo: 000000011000110

word: 011011100011100

combo: 000000011000111

word: 011001100010100

combo: 000000011000101

word: 011011100010000

combo: 000000011000100

word: 011001100110000

combo: 000000011001100

word: 011011100110100

combo: 000000011001101

word: 011001100111100

combo: 000000011001111

word: 011011100111000

combo: 000000011001110

word: 011001100101000

combo: 000000011001010

word: 011011100101100

combo: 000000011001011

word: 011001100100100

combo: 000000011001001

word: 011011100100000

combo: 000000011001000

word: 011001101100000

combo: 000000011011000

word: 011011101100100

combo: 000000011011001

word: 011001101101100

combo: 000000011011011

word: 011011101101000

combo: 000000011011010

word: 011001101111000

combo: 000000011011110

word: 011011101111100

combo: 000000011011111

word: 011001101110100

combo: 000000011011101

word: 011011101110000

combo: 000000011011100

word: 011001101010000

combo: 000000011010100

word: 011011101010100

combo: 000000011010101

word: 011001101011100

combo: 000000011010111

word: 011011101011000

combo: 000000011010110

word: 011001101001000

combo: 000000011010010

word: 011011101001100

combo: 000000011010011

word: 011001101000100

combo: 000000011010001

word: 011011101000000

combo: 000000011010000

word: 011001111000000

combo: 000000011110000

word: 011011111000100

combo: 000000011110001

word: 011001111001100

combo: 000000011110011

word: 011011111001000

combo: 000000011110010

word: 011001111011000

combo: 000000011110110

word: 011011111011100

combo: 000000011110111

word: 011001111010100

combo: 000000011110101

word: 011011111010000

combo: 000000011110100

word: 011001111110000

combo: 000000011111100

word: 011011111110100

combo: 000000011111101

word: 011001111111100

combo: 000000011111111

word: 011011111111000

combo: 000000011111110

word: 011001111101000

combo: 000000011111010

word: 011011111101100

combo: 000000011111011

word: 011001111100100

combo: 000000011111001

word: 011011111100000

combo: 000000011111000

word: 011001110100000

combo: 000000011101000

word: 011011110100100

combo: 000000011101001

word: 011001110101100

combo: 000000011101011

word: 011011110101000

combo: 000000011101010

word: 011001110111000

combo: 000000011101110

word: 011011110111100

combo: 000000011101111

word: 011001110110100

combo: 000000011101101

word: 011011110110000

combo: 000000011101100

word: 011001110010000

combo: 000000011100100

word: 011011110010100

combo: 000000011100101

word: 011001110011100

combo: 000000011100111

word: 011011110011000

combo: 000000011100110

word: 011001110001000

combo: 000000011100010

word: 011011110001100

combo: 000000011100011

word: 011001110000100

combo: 000000011100001

word: 011011110000000

combo: 000000011100000

word: 011111010000000

combo: 000000010100000

word: 011101010000100

combo: 000000010100001

word: 011111010001100

combo: 000000010100011

word: 011101010001000

combo: 000000010100010

word: 011111010011000

combo: 000000010100110

word: 011101010011100

combo: 000000010100111

word: 011111010010100

combo: 000000010100101

word: 011101010010000

combo: 000000010100100

word: 011111010110000

combo: 000000010101100

word: 011101010110100

combo: 000000010101101

word: 011111010111100

combo: 000000010101111

word: 011101010111000

combo: 000000010101110

word: 011111010101000

combo: 000000010101010

word: 011101010101100

combo: 000000010101011

word: 011111010100100

combo: 000000010101001

word: 011101010100000

combo: 000000010101000

word: 011111011100000

combo: 000000010111000

word: 011101011100100

combo: 000000010111001

word: 011111011101100

combo: 000000010111011

word: 011101011101000

combo: 000000010111010

word: 011111011111000

combo: 000000010111110

word: 011101011111100

combo: 000000010111111

word: 011111011110100

combo: 000000010111101

word: 011101011110000

combo: 000000010111100

word: 011111011010000

combo: 000000010110100

word: 011101011010100

combo: 000000010110101

word: 011111011011100

combo: 000000010110111

word: 011101011011000

combo: 000000010110110

word: 011111011001000

combo: 000000010110010

word: 011101011001100

combo: 000000010110011

word: 011111011000100

combo: 000000010110001

word: 011101011000000

combo: 000000010110000

word: 011111001000000

combo: 000000010010000

word: 011101001000100

combo: 000000010010001

word: 011111001001100

combo: 000000010010011

word: 011101001001000

combo: 000000010010010

word: 011111001011000

combo: 000000010010110

word: 011101001011100

combo: 000000010010111

word: 011111001010100

combo: 000000010010101

word: 011101001010000

combo: 000000010010100

word: 011111001110000

combo: 000000010011100

word: 011101001110100

combo: 000000010011101

word: 011111001111100

combo: 000000010011111

word: 011101001111000

combo: 000000010011110

word: 011111001101000

combo: 000000010011010

word: 011101001101100

combo: 000000010011011

word: 011111001100100

combo: 000000010011001

word: 011101001100000

combo: 000000010011000

word: 011111000100000

combo: 000000010001000

word: 011101000100100

combo: 000000010001001

word: 011111000101100

combo: 000000010001011

word: 011101000101000

combo: 000000010001010

word: 011111000111000

combo: 000000010001110

word: 011101000111100

combo: 000000010001111

word: 011111000110100

combo: 000000010001101

word: 011101000110000

combo: 000000010001100

word: 011111000010000

combo: 000000010000100

word: 011101000010100

combo: 000000010000101

word: 011111000011100

combo: 000000010000111

word: 011101000011000

combo: 000000010000110

word: 011111000001000

combo: 000000010000010

word: 011101000001100

combo: 000000010000011

word: 011111000000100

combo: 000000010000001

word: 011101000000000

combo: 000000010000000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 1 1 1 1 1 1 0 0 0]
[0 1 0 0 0 0 0 0 0 1 1 1]
limit on degree (length): 16
ortho basis:
0000010000000100
0000010000001000
0000010000010000
0000010000100000
0000010001000000
0000010010000000
0000100100000000
0000101000000000
1001000000000000
1010000000000000
1100000000000000

B_can_lab before row reduction:
0000000011111111
0000111100000000

B_can_lab after row reduction:
0000000011111111
0000111100000000

word generated as sum over rows of ortho_basis starting at 8: 1111000000000000
gate: 0000000000000011
k_gate: 0000000011111111
nonzero_gate: 1111000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1111000000000000

combo: 0000000000000000

temp: 0000000000000000

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
0000010011111101
0000101100000010
rs list:
1 0 1 1 1 1 1 1 0 0 1 0 0 0 0 0 
0 1 0 0 0 0 0 0 1 1 0 1 0 0 0 0 
B_aug:
[1 0 1 1 1 1 1 1 0 0 1 0 0 0 0 0]
[0 1 0 0 0 0 0 0 1 1 0 1 0 0 0 0]
[0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1]
m:
[1 0 1 1 1 1 1 1 0 0 1 0 0 0 0 0]
[0 1 0 0 0 0 0 0 1 1 0 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), (10,12), ( 9,10), ( 8,11), (7,8), (6,7), (5,6), (4,5), (3,4), (2,9), (1,3) ] )
Right transversal of automorphism group of B_aug:
[0, 12, 2, 3, 4, 5, 6, 7, 13, 14, 10, 15, 1, 8, 9, 11]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111000000000000
word: 1111010000000100

combo: 0000000000000001

word: 1111000000001100

combo: 0000000000000011

word: 1111010000001000

combo: 0000000000000010

word: 1111000000011000

combo: 0000000000000110

word: 1111010000011100

combo: 0000000000000111

temp: 0000000000000111

orbit_checks[temp>>log2radix]= 0000000000000001

passed if statements
temp basis:
0000101100000010
1111000011100001
rs list:
0 1 0 0 0 0 0 0 1 1 0 1 0 0 0 0 
1 0 0 0 0 1 1 1 0 0 0 0 1 1 1 1 
B_aug:
[1 0 1 1 1 1 1 1 0 0 1 0 0 0 0 0]
[0 1 0 0 0 0 0 0 1 1 0 1 0 0 0 0]
[0 0 1 1 1 0 0 0 0 0 1 0 1 1 1 1]
m:
[0 1 0 0 0 0 0 0 1 1 0 1 0 0 0 0]
[1 0 0 0 0 1 1 1 0 0 0 0 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 5,11), (3,5), (3,4), ( 3, 4)(14,15), ( 3, 4)(14,15,16), ( 3, 4)(13,14,15,16), ( 3, 4)( 6, 7)(14,15,16), ( 3, 4)( 6, 7, 8)(14,15,16), ( 1, 6, 7, 8)( 3, 4)(14,15,16), ( 1,13)( 3, 4)( 6,15, 8,14, 7,16), ( 3, 4)( 6, 7, 8)( 9,10)(14,15,16), ( 3, 4)( 6, 7, 8)( 9,12)(14,15,16), ( 2, 9,12)( 3, 4)( 6, 7, 8)(14,15,16) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 12, 13, 14, 5, 6, 7, 8, 9, 15, 11, 2, 3, 4, 10]
orbits:
1111010000011100
1111000010011100
1111010000101100
1111000011100100
1111000001011100
1111000010101100
1111010001100100
1111010001001100
1111010000110100
1111000011010100
1111000011101000
1111000000111100
1111000001101100
1111010010100100
1111000011001100
1111000010110100
1111010001010100
1111010001101000
1111010010001100
1111010000111000
1111000011011000
1111000011110000
1111010011000100
1111000001110100
1111010010010100
1111010010101000
1111000010111000
1111010001011000
1111010001110000
1111010011001000
1111000001111000
1111010010011000
1111010010110000
1111010011010000
1111010011100000
word: 1111000000010100

combo: 0000000000000101

word: 1111010000010000

combo: 0000000000000100

word: 1111000000110000

combo: 0000000000001100

word: 1111010000110100

combo: 0000000000001101

temp: 0000000000001101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 1111000000111100

combo: 0000000000001111

temp: 0000000000001111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 1111010000111000

combo: 0000000000001110

temp: 0000000000001110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 1111000000101000

combo: 0000000000001010

word: 1111010000101100

combo: 0000000000001011

temp: 0000000000001011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 1111000000100100

combo: 0000000000001001

word: 1111010000100000

combo: 0000000000001000

word: 1111000001100000

combo: 0000000000011000

word: 1111010001100100

combo: 0000000000011001

temp: 0000000000011001

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 1111000001101100

combo: 0000000000011011

temp: 0000000000011011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 1111010001101000

combo: 0000000000011010

temp: 0000000000011010

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 1111000001111000

combo: 0000000000011110

temp: 0000000000011110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 1111010001111100

combo: 0000000000011111

word: 1111000001110100

combo: 0000000000011101

temp: 0000000000011101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 1111010001110000

combo: 0000000000011100

temp: 0000000000011100

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 1111000001010000

combo: 0000000000010100

word: 1111010001010100

combo: 0000000000010101

temp: 0000000000010101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 1111000001011100

combo: 0000000000010111

temp: 0000000000010111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 1111010001011000

combo: 0000000000010110

temp: 0000000000010110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 1111000001001000

combo: 0000000000010010

word: 1111010001001100

combo: 0000000000010011

temp: 0000000000010011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 1111000001000100

combo: 0000000000010001

word: 1111010001000000

combo: 0000000000010000

word: 1111000011000000

combo: 0000000000110000

word: 1111010011000100

combo: 0000000000110001

temp: 0000000000110001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111000011001100

combo: 0000000000110011

temp: 0000000000110011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111010011001000

combo: 0000000000110010

temp: 0000000000110010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111000011011000

combo: 0000000000110110

temp: 0000000000110110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111010011011100

combo: 0000000000110111

word: 1111000011010100

combo: 0000000000110101

temp: 0000000000110101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111010011010000

combo: 0000000000110100

temp: 0000000000110100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111000011110000

combo: 0000000000111100

temp: 0000000000111100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111010011110100

combo: 0000000000111101

word: 1111000011111100

combo: 0000000000111111

word: 1111010011111000

combo: 0000000000111110

word: 1111000011101000

combo: 0000000000111010

temp: 0000000000111010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111010011101100

combo: 0000000000111011

word: 1111000011100100

combo: 0000000000111001

temp: 0000000000111001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111010011100000

combo: 0000000000111000

temp: 0000000000111000

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111000010100000

combo: 0000000000101000

word: 1111010010100100

combo: 0000000000101001

temp: 0000000000101001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111000010101100

combo: 0000000000101011

temp: 0000000000101011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111010010101000

combo: 0000000000101010

temp: 0000000000101010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111000010111000

combo: 0000000000101110

temp: 0000000000101110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111010010111100

combo: 0000000000101111

word: 1111000010110100

combo: 0000000000101101

temp: 0000000000101101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111010010110000

combo: 0000000000101100

temp: 0000000000101100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111000010010000

combo: 0000000000100100

word: 1111010010010100

combo: 0000000000100101

temp: 0000000000100101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111000010011100

combo: 0000000000100111

temp: 0000000000100111

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111010010011000

combo: 0000000000100110

temp: 0000000000100110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111000010001000

combo: 0000000000100010

word: 1111010010001100

combo: 0000000000100011

temp: 0000000000100011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111000010000100

combo: 0000000000100001

word: 1111010010000000

combo: 0000000000100000

word: 1111110110000000

combo: 0000000001100000

temp: 0000000001100000

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
0000010011111101
1111011010000010
rs list:
1 0 1 1 1 1 1 1 0 0 1 0 0 0 0 0 
0 1 0 0 0 0 0 1 0 1 1 0 1 1 1 1 
B_aug:
[1 0 1 1 1 1 1 1 0 0 1 0 0 0 0 0]
[0 1 0 0 0 0 0 0 1 1 0 1 0 0 0 0]
[0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1]
m:
[1 0 1 1 1 1 1 1 0 0 1 0 0 0 0 0]
[0 1 0 0 0 0 0 1 0 1 1 0 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (3,4), (3,5), (3,6)(4,5), (3,7)(4,6), (1,3,7)(4,6), ( 3, 7)( 4, 6)(14,15), ( 3, 7)( 4, 6)(14,16), ( 3, 7)( 4, 6)(13,14,16), ( 3, 7)( 4, 6)( 9,12)(14,16), ( 2,10)( 3, 7)( 4, 6)(14,16), ( 3, 7)( 4, 6)( 8,11)(14,16) ] )
Right transversal of automorphism group of B_aug:
[0, 8, 2, 3, 4, 5, 6, 7, 1, 11, 10, 9, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111110110000000
1111110101000000
1111011110000000
1111111010000000
1111100111000000
1111110100100000
1111011101000000
1111111001000000
1111100110100000
1111001111000000
1111101011000000
1111110100010000
1111011100100000
1111111000100000
1111100101100000
1111100110010000
1111001110100000
1111101010100000
1111110100001000
1111011100010000
1111111000010000
1111100101010000
1111001101100000
1111101001100000
1111100110001000
1111001110010000
1111101010010000
1111110100000100
1111011100001000
1111111000001000
1111100100110000
1111100101001000
1111001101010000
1111101001010000
1111100110000100
1111001110001000
1111101010001000
1111100111111100
1111011100000100
1111111000000100
1111100100101000
1111001100110000
1111101000110000
1111100101000100
1111001101001000
1111101001001000
1111110101111100
1111001110000100
1111101010000100
1111001111111100
1111101011111100
1111100100011000
1111100100100100
1111001100101000
1111101000101000
1111110110111100
1111001101000100
1111101001000100
1111011101111100
1111111001111100
1111100100010100
1111001100011000
1111101000011000
1111110111011100
1111001100100100
1111101000100100
1111011110111100
1111111010111100
1111100100001100
1111110111101100
1111001100010100
1111101000010100
1111011111011100
1111111011011100
1111110111110100
1111001100001100
1111101000001100
1111011111101100
1111111011101100
1111110111111000
1111011111110100
1111111011110100
1111011111111000
1111111011111000
word: 1111100110000100

combo: 0000000001100001

temp: 0000000001100001

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111110110001100

combo: 0000000001100011

word: 1111100110001000

combo: 0000000001100010

temp: 0000000001100010

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111110110011000

combo: 0000000001100110

word: 1111100110011100

combo: 0000000001100111

word: 1111110110010100

combo: 0000000001100101

word: 1111100110010000

combo: 0000000001100100

temp: 0000000001100100

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111110110110000

combo: 0000000001101100

word: 1111100110110100

combo: 0000000001101101

word: 1111110110111100

combo: 0000000001101111

temp: 0000000001101111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111100110111000

combo: 0000000001101110

word: 1111110110101000

combo: 0000000001101010

word: 1111100110101100

combo: 0000000001101011

word: 1111110110100100

combo: 0000000001101001

word: 1111100110100000

combo: 0000000001101000

temp: 0000000001101000

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111110111100000

combo: 0000000001111000

word: 1111100111100100

combo: 0000000001111001

word: 1111110111101100

combo: 0000000001111011

temp: 0000000001111011

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111100111101000

combo: 0000000001111010

word: 1111110111111000

combo: 0000000001111110

temp: 0000000001111110

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111100111111100

combo: 0000000001111111

temp: 0000000001111111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111110111110100

combo: 0000000001111101

temp: 0000000001111101

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111100111110000

combo: 0000000001111100

word: 1111110111010000

combo: 0000000001110100

word: 1111100111010100

combo: 0000000001110101

word: 1111110111011100

combo: 0000000001110111

temp: 0000000001110111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111100111011000

combo: 0000000001110110

word: 1111110111001000

combo: 0000000001110010

word: 1111100111001100

combo: 0000000001110011

word: 1111110111000100

combo: 0000000001110001

word: 1111100111000000

combo: 0000000001110000

temp: 0000000001110000

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111110101000000

combo: 0000000001010000

temp: 0000000001010000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111100101000100

combo: 0000000001010001

temp: 0000000001010001

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111110101001100

combo: 0000000001010011

word: 1111100101001000

combo: 0000000001010010

temp: 0000000001010010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111110101011000

combo: 0000000001010110

word: 1111100101011100

combo: 0000000001010111

word: 1111110101010100

combo: 0000000001010101

word: 1111100101010000

combo: 0000000001010100

temp: 0000000001010100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111110101110000

combo: 0000000001011100

word: 1111100101110100

combo: 0000000001011101

word: 1111110101111100

combo: 0000000001011111

temp: 0000000001011111

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111100101111000

combo: 0000000001011110

word: 1111110101101000

combo: 0000000001011010

word: 1111100101101100

combo: 0000000001011011

word: 1111110101100100

combo: 0000000001011001

word: 1111100101100000

combo: 0000000001011000

temp: 0000000001011000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111110100100000

combo: 0000000001001000

temp: 0000000001001000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111100100100100

combo: 0000000001001001

temp: 0000000001001001

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111110100101100

combo: 0000000001001011

word: 1111100100101000

combo: 0000000001001010

temp: 0000000001001010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111110100111000

combo: 0000000001001110

word: 1111100100111100

combo: 0000000001001111

word: 1111110100110100

combo: 0000000001001101

word: 1111100100110000

combo: 0000000001001100

temp: 0000000001001100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111110100010000

combo: 0000000001000100

temp: 0000000001000100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111100100010100

combo: 0000000001000101

temp: 0000000001000101

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111110100011100

combo: 0000000001000111

word: 1111100100011000

combo: 0000000001000110

temp: 0000000001000110

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111110100001000

combo: 0000000001000010

temp: 0000000001000010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111100100001100

combo: 0000000001000011

temp: 0000000001000011

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111110100000100

combo: 0000000001000001

temp: 0000000001000001

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111100100000000

combo: 0000000001000000

word: 1111001100000000

combo: 0000000011000000

word: 1111011100000100

combo: 0000000011000001

temp: 0000000011000001

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111001100001100

combo: 0000000011000011

temp: 0000000011000011

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111011100001000

combo: 0000000011000010

temp: 0000000011000010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111001100011000

combo: 0000000011000110

temp: 0000000011000110

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111011100011100

combo: 0000000011000111

word: 1111001100010100

combo: 0000000011000101

temp: 0000000011000101

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111011100010000

combo: 0000000011000100

temp: 0000000011000100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111001100110000

combo: 0000000011001100

temp: 0000000011001100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111011100110100

combo: 0000000011001101

word: 1111001100111100

combo: 0000000011001111

word: 1111011100111000

combo: 0000000011001110

word: 1111001100101000

combo: 0000000011001010

temp: 0000000011001010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111011100101100

combo: 0000000011001011

word: 1111001100100100

combo: 0000000011001001

temp: 0000000011001001

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111011100100000

combo: 0000000011001000

temp: 0000000011001000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111001101100000

combo: 0000000011011000

temp: 0000000011011000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111011101100100

combo: 0000000011011001

word: 1111001101101100

combo: 0000000011011011

word: 1111011101101000

combo: 0000000011011010

word: 1111001101111000

combo: 0000000011011110

word: 1111011101111100

combo: 0000000011011111

temp: 0000000011011111

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111001101110100

combo: 0000000011011101

word: 1111011101110000

combo: 0000000011011100

word: 1111001101010000

combo: 0000000011010100

temp: 0000000011010100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111011101010100

combo: 0000000011010101

word: 1111001101011100

combo: 0000000011010111

word: 1111011101011000

combo: 0000000011010110

word: 1111001101001000

combo: 0000000011010010

temp: 0000000011010010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111011101001100

combo: 0000000011010011

word: 1111001101000100

combo: 0000000011010001

temp: 0000000011010001

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111011101000000

combo: 0000000011010000

temp: 0000000011010000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111001111000000

combo: 0000000011110000

temp: 0000000011110000

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111011111000100

combo: 0000000011110001

word: 1111001111001100

combo: 0000000011110011

word: 1111011111001000

combo: 0000000011110010

word: 1111001111011000

combo: 0000000011110110

word: 1111011111011100

combo: 0000000011110111

temp: 0000000011110111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111001111010100

combo: 0000000011110101

word: 1111011111010000

combo: 0000000011110100

word: 1111001111110000

combo: 0000000011111100

word: 1111011111110100

combo: 0000000011111101

temp: 0000000011111101

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111001111111100

combo: 0000000011111111

temp: 0000000011111111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111011111111000

combo: 0000000011111110

temp: 0000000011111110

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111001111101000

combo: 0000000011111010

word: 1111011111101100

combo: 0000000011111011

temp: 0000000011111011

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111001111100100

combo: 0000000011111001

word: 1111011111100000

combo: 0000000011111000

word: 1111001110100000

combo: 0000000011101000

temp: 0000000011101000

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111011110100100

combo: 0000000011101001

word: 1111001110101100

combo: 0000000011101011

word: 1111011110101000

combo: 0000000011101010

word: 1111001110111000

combo: 0000000011101110

word: 1111011110111100

combo: 0000000011101111

temp: 0000000011101111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111001110110100

combo: 0000000011101101

word: 1111011110110000

combo: 0000000011101100

word: 1111001110010000

combo: 0000000011100100

temp: 0000000011100100

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111011110010100

combo: 0000000011100101

word: 1111001110011100

combo: 0000000011100111

word: 1111011110011000

combo: 0000000011100110

word: 1111001110001000

combo: 0000000011100010

temp: 0000000011100010

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111011110001100

combo: 0000000011100011

word: 1111001110000100

combo: 0000000011100001

temp: 0000000011100001

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111011110000000

combo: 0000000011100000

temp: 0000000011100000

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111111010000000

combo: 0000000010100000

temp: 0000000010100000

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111101010000100

combo: 0000000010100001

temp: 0000000010100001

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111111010001100

combo: 0000000010100011

word: 1111101010001000

combo: 0000000010100010

temp: 0000000010100010

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111111010011000

combo: 0000000010100110

word: 1111101010011100

combo: 0000000010100111

word: 1111111010010100

combo: 0000000010100101

word: 1111101010010000

combo: 0000000010100100

temp: 0000000010100100

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111111010110000

combo: 0000000010101100

word: 1111101010110100

combo: 0000000010101101

word: 1111111010111100

combo: 0000000010101111

temp: 0000000010101111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111101010111000

combo: 0000000010101110

word: 1111111010101000

combo: 0000000010101010

word: 1111101010101100

combo: 0000000010101011

word: 1111111010100100

combo: 0000000010101001

word: 1111101010100000

combo: 0000000010101000

temp: 0000000010101000

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111111011100000

combo: 0000000010111000

word: 1111101011100100

combo: 0000000010111001

word: 1111111011101100

combo: 0000000010111011

temp: 0000000010111011

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111101011101000

combo: 0000000010111010

word: 1111111011111000

combo: 0000000010111110

temp: 0000000010111110

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111101011111100

combo: 0000000010111111

temp: 0000000010111111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111111011110100

combo: 0000000010111101

temp: 0000000010111101

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111101011110000

combo: 0000000010111100

word: 1111111011010000

combo: 0000000010110100

word: 1111101011010100

combo: 0000000010110101

word: 1111111011011100

combo: 0000000010110111

temp: 0000000010110111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111101011011000

combo: 0000000010110110

word: 1111111011001000

combo: 0000000010110010

word: 1111101011001100

combo: 0000000010110011

word: 1111111011000100

combo: 0000000010110001

word: 1111101011000000

combo: 0000000010110000

temp: 0000000010110000

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111111001000000

combo: 0000000010010000

temp: 0000000010010000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111101001000100

combo: 0000000010010001

temp: 0000000010010001

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111111001001100

combo: 0000000010010011

word: 1111101001001000

combo: 0000000010010010

temp: 0000000010010010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111111001011000

combo: 0000000010010110

word: 1111101001011100

combo: 0000000010010111

word: 1111111001010100

combo: 0000000010010101

word: 1111101001010000

combo: 0000000010010100

temp: 0000000010010100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111111001110000

combo: 0000000010011100

word: 1111101001110100

combo: 0000000010011101

word: 1111111001111100

combo: 0000000010011111

temp: 0000000010011111

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111101001111000

combo: 0000000010011110

word: 1111111001101000

combo: 0000000010011010

word: 1111101001101100

combo: 0000000010011011

word: 1111111001100100

combo: 0000000010011001

word: 1111101001100000

combo: 0000000010011000

temp: 0000000010011000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111111000100000

combo: 0000000010001000

temp: 0000000010001000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111101000100100

combo: 0000000010001001

temp: 0000000010001001

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111111000101100

combo: 0000000010001011

word: 1111101000101000

combo: 0000000010001010

temp: 0000000010001010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111111000111000

combo: 0000000010001110

word: 1111101000111100

combo: 0000000010001111

word: 1111111000110100

combo: 0000000010001101

word: 1111101000110000

combo: 0000000010001100

temp: 0000000010001100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111111000010000

combo: 0000000010000100

temp: 0000000010000100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111101000010100

combo: 0000000010000101

temp: 0000000010000101

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111111000011100

combo: 0000000010000111

word: 1111101000011000

combo: 0000000010000110

temp: 0000000010000110

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111111000001000

combo: 0000000010000010

temp: 0000000010000010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111101000001100

combo: 0000000010000011

temp: 0000000010000011

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111111000000100

combo: 0000000010000001

temp: 0000000010000001

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1111101000000000

combo: 0000000010000000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 0 1 1 1 1]
[0 1 1 1 0 0 0 1 1 1 1 1]
limit on degree (length): 13
ortho basis:
0010000000100
0010000001000
1110000010000
1110000100000
1110001000000
0100010000000
0100100000000
0101000000000

B_can_lab before row reduction:
0000111101111
0111111110000

B_can_lab after row reduction:
0000111101111
0111111110000

word generated as sum over rows of ortho_basis starting at 8: 0000000000000
gate: 0000000000011
k_gate: 0000011111111
nonzero_gate: 1000000000000
radix_gate: 0000000011111

Starting main loop:
word: 0000000000000

combo: 0000000000000

word: 0010000000100

combo: 0000000000001

word: 0000000001100

combo: 0000000000011

word: 0010000001000

combo: 0000000000010

word: 1100000011000

combo: 0000000000110

temp: 0000000000110

orbit_checks[temp>>log2radix]= 0000000000000

passed if statements
temp basis:
1001111101001
1011110010110
rs list:
1 0 0 1 0 1 1 1 1 1 0 0 1 
0 1 1 0 1 0 0 1 1 1 1 0 1 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 1 0]
[0 1 1 1 0 0 0 1 1 1 1 1 0]
[0 0 0 1 1 0 0 0 0 0 0 1 1]
m:
[1 0 0 1 0 1 1 1 1 1 0 0 1]
[0 1 1 0 1 0 0 1 1 1 1 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,10), (8,9), (6,7), ( 3,11), (2,3), ( 1, 2)( 3, 6)( 4, 5)( 7,11), (1,6), ( 2, 8)( 3, 9)( 5,13)(10,11) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 5, 3, 4, 2, 10, 7, 8, 9, 6, 12, 11]
orbits:
1100000011000
1001000011000
1110000010000
1100000010100
1011000010000
1100000101000
1100000100100
1000100011000
1001000010100
1001000101000
1001000100100
1110000100000
1100001000100
1011110011100
1010100010000
1011000100000
1001001000100
1100001001000
1011110101100
1010100100000
1000010011000
1000100010100
1000100101000
1000100100100
1110110011100
1001001001000
1110110101100
1110001000000
1011111001100
1010101000000
1010010010000
1001111110100
1000101000100
1011001000000
1110111001100
1000101001000
1010010100000
1001111111000
1000010010100
1000010101000
1000010100100
1111010011100
1111010101100
1100111110100
1100111111000
1010011000000
1011111110000
1000011000100
1110001111100
1111011110000
1111011001100
1000011001000
1110111110000
1111100011100
1111100101100
1101011110100
1101011111000
1011001111100
1111101001100
1111101110000
1101101110100
1101101111000
1010101111100
1010011111100
word: 1110000011100

combo: 0000000000111

word: 1100000010100

combo: 0000000000101

temp: 0000000000101

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 1110000010000

combo: 0000000000100

temp: 0000000000100

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 0000000110000

combo: 0000000001100

word: 0010000110100

combo: 0000000001101

word: 0000000111100

combo: 0000000001111

word: 0010000111000

combo: 0000000001110

word: 1100000101000

combo: 0000000001010

temp: 0000000001010

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 1110000101100

combo: 0000000001011

word: 1100000100100

combo: 0000000001001

temp: 0000000001001

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 1110000100000

combo: 0000000001000

temp: 0000000001000

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 0000001100000

combo: 0000000011000

word: 0010001100100

combo: 0000000011001

word: 0000001101100

combo: 0000000011011

word: 0010001101000

combo: 0000000011010

word: 1100001111000

combo: 0000000011110

word: 1110001111100

combo: 0000000011111

temp: 0000000011111

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 1100001110100

combo: 0000000011101

word: 1110001110000

combo: 0000000011100

word: 0000001010000

combo: 0000000010100

word: 0010001010100

combo: 0000000010101

word: 0000001011100

combo: 0000000010111

word: 0010001011000

combo: 0000000010110

word: 1100001001000

combo: 0000000010010

temp: 0000000010010

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 1110001001100

combo: 0000000010011

word: 1100001000100

combo: 0000000010001

temp: 0000000010001

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 1110001000000

combo: 0000000010000

temp: 0000000010000

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 1010011000000

combo: 0000000110000

temp: 0000000110000

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 1000011000100

combo: 0000000110001

temp: 0000000110001

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 1010011001100

combo: 0000000110011

word: 1000011001000

combo: 0000000110010

temp: 0000000110010

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 0110011011000

combo: 0000000110110

word: 0100011011100

combo: 0000000110111

word: 0110011010100

combo: 0000000110101

word: 0100011010000

combo: 0000000110100

word: 1010011110000

combo: 0000000111100

word: 1000011110100

combo: 0000000111101

word: 1010011111100

combo: 0000000111111

temp: 0000000111111

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 1000011111000

combo: 0000000111110

word: 0110011101000

combo: 0000000111010

word: 0100011101100

combo: 0000000111011

word: 0110011100100

combo: 0000000111001

word: 0100011100000

combo: 0000000111000

word: 1010010100000

combo: 0000000101000

temp: 0000000101000

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 1000010100100

combo: 0000000101001

temp: 0000000101001

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 1010010101100

combo: 0000000101011

word: 1000010101000

combo: 0000000101010

temp: 0000000101010

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 0110010111000

combo: 0000000101110

word: 0100010111100

combo: 0000000101111

word: 0110010110100

combo: 0000000101101

word: 0100010110000

combo: 0000000101100

word: 1010010010000

combo: 0000000100100

temp: 0000000100100

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 1000010010100

combo: 0000000100101

temp: 0000000100101

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 1010010011100

combo: 0000000100111

word: 1000010011000

combo: 0000000100110

temp: 0000000100110

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 0110010001000

combo: 0000000100010

word: 0100010001100

combo: 0000000100011

word: 0110010000100

combo: 0000000100001

word: 0100010000000

combo: 0000000100000

word: 0000110000000

combo: 0000001100000

word: 0010110000100

combo: 0000001100001

word: 0000110001100

combo: 0000001100011

word: 0010110001000

combo: 0000001100010

word: 1100110011000

combo: 0000001100110

word: 1110110011100

combo: 0000001100111

temp: 0000001100111

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 1100110010100

combo: 0000001100101

word: 1110110010000

combo: 0000001100100

word: 0000110110000

combo: 0000001101100

word: 0010110110100

combo: 0000001101101

word: 0000110111100

combo: 0000001101111

word: 0010110111000

combo: 0000001101110

word: 1100110101000

combo: 0000001101010

word: 1110110101100

combo: 0000001101011

temp: 0000001101011

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 1100110100100

combo: 0000001101001

word: 1110110100000

combo: 0000001101000

word: 0000111100000

combo: 0000001111000

word: 0010111100100

combo: 0000001111001

word: 0000111101100

combo: 0000001111011

word: 0010111101000

combo: 0000001111010

word: 1100111111000

combo: 0000001111110

temp: 0000001111110

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 1110111111100

combo: 0000001111111

word: 1100111110100

combo: 0000001111101

temp: 0000001111101

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 1110111110000

combo: 0000001111100

temp: 0000001111100

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 0000111010000

combo: 0000001110100

word: 0010111010100

combo: 0000001110101

word: 0000111011100

combo: 0000001110111

word: 0010111011000

combo: 0000001110110

word: 1100111001000

combo: 0000001110010

word: 1110111001100

combo: 0000001110011

temp: 0000001110011

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 1100111000100

combo: 0000001110001

word: 1110111000000

combo: 0000001110000

word: 1010101000000

combo: 0000001010000

temp: 0000001010000

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 1000101000100

combo: 0000001010001

temp: 0000001010001

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 1010101001100

combo: 0000001010011

word: 1000101001000

combo: 0000001010010

temp: 0000001010010

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 0110101011000

combo: 0000001010110

word: 0100101011100

combo: 0000001010111

word: 0110101010100

combo: 0000001010101

word: 0100101010000

combo: 0000001010100

word: 1010101110000

combo: 0000001011100

word: 1000101110100

combo: 0000001011101

word: 1010101111100

combo: 0000001011111

temp: 0000001011111

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 1000101111000

combo: 0000001011110

word: 0110101101000

combo: 0000001011010

word: 0100101101100

combo: 0000001011011

word: 0110101100100

combo: 0000001011001

word: 0100101100000

combo: 0000001011000

word: 1010100100000

combo: 0000001001000

temp: 0000001001000

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 1000100100100

combo: 0000001001001

temp: 0000001001001

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 1010100101100

combo: 0000001001011

word: 1000100101000

combo: 0000001001010

temp: 0000001001010

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 0110100111000

combo: 0000001001110

word: 0100100111100

combo: 0000001001111

word: 0110100110100

combo: 0000001001101

word: 0100100110000

combo: 0000001001100

word: 1010100010000

combo: 0000001000100

temp: 0000001000100

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 1000100010100

combo: 0000001000101

temp: 0000001000101

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 1010100011100

combo: 0000001000111

word: 1000100011000

combo: 0000001000110

temp: 0000001000110

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 0110100001000

combo: 0000001000010

word: 0100100001100

combo: 0000001000011

word: 0110100000100

combo: 0000001000001

word: 0100100000000

combo: 0000001000000

word: 0001100000000

combo: 0000011000000

word: 0011100000100

combo: 0000011000001

word: 0001100001100

combo: 0000011000011

word: 0011100001000

combo: 0000011000010

word: 1101100011000

combo: 0000011000110

word: 1111100011100

combo: 0000011000111

temp: 0000011000111

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 1101100010100

combo: 0000011000101

word: 1111100010000

combo: 0000011000100

word: 0001100110000

combo: 0000011001100

word: 0011100110100

combo: 0000011001101

word: 0001100111100

combo: 0000011001111

word: 0011100111000

combo: 0000011001110

word: 1101100101000

combo: 0000011001010

word: 1111100101100

combo: 0000011001011

temp: 0000011001011

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 1101100100100

combo: 0000011001001

word: 1111100100000

combo: 0000011001000

word: 0001101100000

combo: 0000011011000

word: 0011101100100

combo: 0000011011001

word: 0001101101100

combo: 0000011011011

word: 0011101101000

combo: 0000011011010

word: 1101101111000

combo: 0000011011110

temp: 0000011011110

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 1111101111100

combo: 0000011011111

word: 1101101110100

combo: 0000011011101

temp: 0000011011101

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 1111101110000

combo: 0000011011100

temp: 0000011011100

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 0001101010000

combo: 0000011010100

word: 0011101010100

combo: 0000011010101

word: 0001101011100

combo: 0000011010111

word: 0011101011000

combo: 0000011010110

word: 1101101001000

combo: 0000011010010

word: 1111101001100

combo: 0000011010011

temp: 0000011010011

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 1101101000100

combo: 0000011010001

word: 1111101000000

combo: 0000011010000

word: 1011111000000

combo: 0000011110000

word: 1001111000100

combo: 0000011110001

word: 1011111001100

combo: 0000011110011

temp: 0000011110011

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 1001111001000

combo: 0000011110010

word: 0111111011000

combo: 0000011110110

word: 0101111011100

combo: 0000011110111

word: 0111111010100

combo: 0000011110101

word: 0101111010000

combo: 0000011110100

word: 1011111110000

combo: 0000011111100

temp: 0000011111100

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 1001111110100

combo: 0000011111101

temp: 0000011111101

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 1011111111100

combo: 0000011111111

word: 1001111111000

combo: 0000011111110

temp: 0000011111110

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 0111111101000

combo: 0000011111010

word: 0101111101100

combo: 0000011111011

word: 0111111100100

combo: 0000011111001

word: 0101111100000

combo: 0000011111000

word: 1011110100000

combo: 0000011101000

word: 1001110100100

combo: 0000011101001

word: 1011110101100

combo: 0000011101011

temp: 0000011101011

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 1001110101000

combo: 0000011101010

word: 0111110111000

combo: 0000011101110

word: 0101110111100

combo: 0000011101111

word: 0111110110100

combo: 0000011101101

word: 0101110110000

combo: 0000011101100

word: 1011110010000

combo: 0000011100100

word: 1001110010100

combo: 0000011100101

word: 1011110011100

combo: 0000011100111

temp: 0000011100111

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 1001110011000

combo: 0000011100110

word: 0111110001000

combo: 0000011100010

word: 0101110001100

combo: 0000011100011

word: 0111110000100

combo: 0000011100001

word: 0101110000000

combo: 0000011100000

word: 0001010000000

combo: 0000010100000

word: 0011010000100

combo: 0000010100001

word: 0001010001100

combo: 0000010100011

word: 0011010001000

combo: 0000010100010

word: 1101010011000

combo: 0000010100110

word: 1111010011100

combo: 0000010100111

temp: 0000010100111

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 1101010010100

combo: 0000010100101

word: 1111010010000

combo: 0000010100100

word: 0001010110000

combo: 0000010101100

word: 0011010110100

combo: 0000010101101

word: 0001010111100

combo: 0000010101111

word: 0011010111000

combo: 0000010101110

word: 1101010101000

combo: 0000010101010

word: 1111010101100

combo: 0000010101011

temp: 0000010101011

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 1101010100100

combo: 0000010101001

word: 1111010100000

combo: 0000010101000

word: 0001011100000

combo: 0000010111000

word: 0011011100100

combo: 0000010111001

word: 0001011101100

combo: 0000010111011

word: 0011011101000

combo: 0000010111010

word: 1101011111000

combo: 0000010111110

temp: 0000010111110

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 1111011111100

combo: 0000010111111

word: 1101011110100

combo: 0000010111101

temp: 0000010111101

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 1111011110000

combo: 0000010111100

temp: 0000010111100

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 0001011010000

combo: 0000010110100

word: 0011011010100

combo: 0000010110101

word: 0001011011100

combo: 0000010110111

word: 0011011011000

combo: 0000010110110

word: 1101011001000

combo: 0000010110010

word: 1111011001100

combo: 0000010110011

temp: 0000010110011

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 1101011000100

combo: 0000010110001

word: 1111011000000

combo: 0000010110000

word: 1011001000000

combo: 0000010010000

temp: 0000010010000

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 1001001000100

combo: 0000010010001

temp: 0000010010001

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 1011001001100

combo: 0000010010011

word: 1001001001000

combo: 0000010010010

temp: 0000010010010

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 0111001011000

combo: 0000010010110

word: 0101001011100

combo: 0000010010111

word: 0111001010100

combo: 0000010010101

word: 0101001010000

combo: 0000010010100

word: 1011001110000

combo: 0000010011100

word: 1001001110100

combo: 0000010011101

word: 1011001111100

combo: 0000010011111

temp: 0000010011111

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 1001001111000

combo: 0000010011110

word: 0111001101000

combo: 0000010011010

word: 0101001101100

combo: 0000010011011

word: 0111001100100

combo: 0000010011001

word: 0101001100000

combo: 0000010011000

word: 1011000100000

combo: 0000010001000

temp: 0000010001000

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 1001000100100

combo: 0000010001001

temp: 0000010001001

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 1011000101100

combo: 0000010001011

word: 1001000101000

combo: 0000010001010

temp: 0000010001010

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 0111000111000

combo: 0000010001110

word: 0101000111100

combo: 0000010001111

word: 0111000110100

combo: 0000010001101

word: 0101000110000

combo: 0000010001100

word: 1011000010000

combo: 0000010000100

temp: 0000010000100

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 1001000010100

combo: 0000010000101

temp: 0000010000101

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 1011000011100

combo: 0000010000111

word: 1001000011000

combo: 0000010000110

temp: 0000010000110

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 0111000001000

combo: 0000010000010

word: 0101000001100

combo: 0000010000011

word: 0111000000100

combo: 0000010000001

word: 0101000000000

combo: 0000010000000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 1 1 1 0 1 0]
[0 1 0 1 1 0 0 1 1 1 1 0 1]
[0 0 1 0 1 0 0 0 0 0 0 1 1]
limit on degree (length): 14
ortho basis:
00010000001000
10110000010000
01110000100000
01110001000000
11100010000000
11100100000000
11101000000000

B_can_lab before row reduction:
01110001110110
00001111111010
00000000001111

B_can_lab after row reduction:
01110001111001
00001111111010
01111110001100

word generated as sum over rows of ortho_basis starting at 7: 00000000000000
gate: 00000000000111
k_gate: 00000001111111
nonzero_gate: 10000000000000
radix_gate: 00000000011111

Starting main loop:
word: 00000000000000

combo: 00000000000000

word: 00010000001000

combo: 00000000000001

word: 10100000011000

combo: 00000000000011

temp: 00000000000011

orbit_checks[temp>>log2radix]= 00000000000000

passed if statements
temp basis:
10110001100111
11111110000010
10001111101001
rs list:
1 1 1 0 0 1 1 0 0 0 1 1 0 1 
0 1 0 0 0 0 0 1 1 1 1 1 1 1 
1 0 0 1 0 1 1 1 1 1 0 0 0 1 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0]
[0 1 0 1 1 0 0 1 1 1 1 0 1 0]
[0 0 1 0 1 0 0 0 0 0 0 1 1 0]
[0 0 0 1 1 0 0 0 0 0 0 1 0 1]
m:
[1 1 1 0 0 1 1 0 0 0 1 1 0 1]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1]
[1 0 0 1 0 1 1 1 1 1 0 0 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,10), (8,9), (6,7), ( 3, 4)(13,14), ( 2,11), (1,6), ( 1, 8)( 4,14)( 6, 9)( 7,10) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 13, 12, 11]
[7, 1, 2, 3, 11, 8, 9, 0, 5, 6, 10, 4, 12, 13]
[0, 1, 3, 4, 2, 5, 6, 7, 8, 9, 10, 12, 13, 11]
[7, 1, 2, 4, 13, 8, 9, 0, 5, 6, 10, 3, 12, 11]
orbits:
10100000011000
10110000010000
11111110001000
11000000110000
11000001010000
11101111100000
11100100000000
11101000000000
11100010000000
word: 10110000010000

combo: 00000000000010

temp: 00000000000010

orbit_checks[temp>>log2radix]= 10000010001001100

word: 11000000110000

combo: 00000000000110

temp: 00000000000110

orbit_checks[temp>>log2radix]= 10000010001001100

word: 11010000111000

combo: 00000000000111

word: 01100000101000

combo: 00000000000101

word: 01110000100000

combo: 00000000000100

word: 00000001100000

combo: 00000000001100

word: 00010001101000

combo: 00000000001101

word: 10100001111000

combo: 00000000001111

word: 10110001110000

combo: 00000000001110

word: 11000001010000

combo: 00000000001010

temp: 00000000001010

orbit_checks[temp>>log2radix]= 10000010001001100

word: 11010001011000

combo: 00000000001011

word: 01100001001000

combo: 00000000001001

word: 01110001000000

combo: 00000000001000

word: 10010011000000

combo: 00000000011000

temp: 00000000011000

orbit_checks[temp>>log2radix]= 10000010001001100

passed if statements
temp basis:
01100000010100
11001101011010
10111100110001
rs list:
0 0 1 0 1 0 0 0 0 0 0 1 1 0 
0 1 0 1 1 0 1 0 1 1 0 0 1 1 
1 0 0 0 1 1 0 0 1 1 1 1 0 1 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0]
[0 1 0 1 1 0 0 1 1 1 1 0 1 0]
[0 0 1 0 1 0 0 0 0 0 0 1 1 0]
[0 0 0 0 0 0 1 1 0 0 1 0 0 1]
m:
[0 0 1 0 1 0 0 0 0 0 0 1 1 0]
[0 1 0 1 1 0 1 0 1 1 0 0 1 1]
[1 0 0 0 1 1 0 0 1 1 1 1 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,10), ( 3, 5)(12,13), (2,4), ( 3,13)( 5,12), ( 2, 9)( 4,10)( 5,13)( 7,14), ( 1, 9)( 5,12)( 6,10)(11,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 13, 11, 12, 10]
[0, 1, 2, 3, 4, 5, 10, 13, 8, 9, 6, 11, 12, 7]
orbits:
10010011000000
10010010100000
10000011001000
10010101000000
10110111110000
10111101110000
10000010101000
10010100100000
10111011110000
11011101011000
10000101001000
10100111111000
10011001000000
10011000100000
11010111011000
10101101111000
11011100111000
10000100101000
10101011111000
11011011011000
11111001101000
10001001001000
10001000101000
11010110111000
11110011101000
11011010111000
11110101101000
word: 10000011001000

combo: 00000000011001

temp: 00000000011001

orbit_checks[temp>>log2radix]= 100011001100010000010001001100

word: 00110011011000

combo: 00000000011011

word: 00100011010000

combo: 00000000011010

word: 01010011110000

combo: 00000000011110

word: 01000011111000

combo: 00000000011111

word: 11110011101000

combo: 00000000011101

temp: 00000000011101

orbit_checks[temp>>log2radix]= 100011001100010000010001001100

word: 11100011100000

combo: 00000000011100

word: 10010010100000

combo: 00000000010100

temp: 00000000010100

orbit_checks[temp>>log2radix]= 100011001100010000010001001100

word: 10000010101000

combo: 00000000010101

temp: 00000000010101

orbit_checks[temp>>log2radix]= 100011001100010000010001001100

word: 00110010111000

combo: 00000000010111

word: 00100010110000

combo: 00000000010110

word: 01010010010000

combo: 00000000010010

word: 01000010011000

combo: 00000000010011

word: 11110010001000

combo: 00000000010001

word: 11100010000000

combo: 00000000010000

temp: 00000000010000

orbit_checks[temp>>log2radix]= 100011001100010000010001001100

word: 00000110000000

combo: 00000000110000

word: 00010110001000

combo: 00000000110001

word: 10100110011000

combo: 00000000110011

word: 10110110010000

combo: 00000000110010

word: 11000110110000

combo: 00000000110110

word: 11010110111000

combo: 00000000110111

temp: 00000000110111

orbit_checks[temp>>log2radix]= 11001000100000000010001100110001

word: 01100110101000

combo: 00000000110101

word: 01110110100000

combo: 00000000110100

word: 00000111100000

combo: 00000000111100

word: 00010111101000

combo: 00000000111101

word: 10100111111000

combo: 00000000111111

temp: 00000000111111

orbit_checks[temp>>log2radix]= 11001000100000000010001100110001

word: 10110111110000

combo: 00000000111110

temp: 00000000111110

orbit_checks[temp>>log2radix]= 11001000100000000010001100110001

word: 11000111010000

combo: 00000000111010

word: 11010111011000

combo: 00000000111011

temp: 00000000111011

orbit_checks[temp>>log2radix]= 11001000100000000010001100110001

word: 01100111001000

combo: 00000000111001

word: 01110111000000

combo: 00000000111000

word: 10010101000000

combo: 00000000101000

temp: 00000000101000

orbit_checks[temp>>log2radix]= 11001000100000000010001100110001

word: 10000101001000

combo: 00000000101001

temp: 00000000101001

orbit_checks[temp>>log2radix]= 11001000100000000010001100110001

word: 00110101011000

combo: 00000000101011

word: 00100101010000

combo: 00000000101010

word: 01010101110000

combo: 00000000101110

word: 01000101111000

combo: 00000000101111

word: 11110101101000

combo: 00000000101101

temp: 00000000101101

orbit_checks[temp>>log2radix]= 11001000100000000010001100110001

word: 11100101100000

combo: 00000000101100

word: 10010100100000

combo: 00000000100100

temp: 00000000100100

orbit_checks[temp>>log2radix]= 11001000100000000010001100110001

word: 10000100101000

combo: 00000000100101

temp: 00000000100101

orbit_checks[temp>>log2radix]= 11001000100000000010001100110001

word: 00110100111000

combo: 00000000100111

word: 00100100110000

combo: 00000000100110

word: 01010100010000

combo: 00000000100010

word: 01000100011000

combo: 00000000100011

word: 11110100001000

combo: 00000000100001

word: 11100100000000

combo: 00000000100000

temp: 00000000100000

orbit_checks[temp>>log2radix]= 11001000100000000010001100110001

word: 00001100000000

combo: 00000001100000

word: 00011100001000

combo: 00000001100001

word: 10101100011000

combo: 00000001100011

word: 10111100010000

combo: 00000001100010

word: 11001100110000

combo: 00000001100110

word: 11011100111000

combo: 00000001100111

temp: 00000001100111

orbit_checks[temp>>log2radix]= 10000000000101100100010000000

word: 01101100101000

combo: 00000001100101

word: 01111100100000

combo: 00000001100100

word: 00001101100000

combo: 00000001101100

word: 00011101101000

combo: 00000001101101

word: 10101101111000

combo: 00000001101111

temp: 00000001101111

orbit_checks[temp>>log2radix]= 10000000000101100100010000000

word: 10111101110000

combo: 00000001101110

temp: 00000001101110

orbit_checks[temp>>log2radix]= 10000000000101100100010000000

word: 11001101010000

combo: 00000001101010

word: 11011101011000

combo: 00000001101011

temp: 00000001101011

orbit_checks[temp>>log2radix]= 10000000000101100100010000000

word: 01101101001000

combo: 00000001101001

word: 01111101000000

combo: 00000001101000

word: 10011111000000

combo: 00000001111000

word: 10001111001000

combo: 00000001111001

word: 00111111011000

combo: 00000001111011

word: 00101111010000

combo: 00000001111010

word: 01011111110000

combo: 00000001111110

word: 01001111111000

combo: 00000001111111

word: 11111111101000

combo: 00000001111101

word: 11101111100000

combo: 00000001111100

temp: 00000001111100

orbit_checks[temp>>log2radix]= 10000000000101100100010000000

word: 10011110100000

combo: 00000001110100

word: 10001110101000

combo: 00000001110101

word: 00111110111000

combo: 00000001110111

word: 00101110110000

combo: 00000001110110

word: 01011110010000

combo: 00000001110010

word: 01001110011000

combo: 00000001110011

word: 11111110001000

combo: 00000001110001

temp: 00000001110001

orbit_checks[temp>>log2radix]= 10000000000101100100010000000

word: 11101110000000

combo: 00000001110000

word: 00001010000000

combo: 00000001010000

word: 00011010001000

combo: 00000001010001

word: 10101010011000

combo: 00000001010011

word: 10111010010000

combo: 00000001010010

word: 11001010110000

combo: 00000001010110

word: 11011010111000

combo: 00000001010111

temp: 00000001010111

orbit_checks[temp>>log2radix]= 11001000100000000010001100110001

word: 01101010101000

combo: 00000001010101

word: 01111010100000

combo: 00000001010100

word: 00001011100000

combo: 00000001011100

word: 00011011101000

combo: 00000001011101

word: 10101011111000

combo: 00000001011111

temp: 00000001011111

orbit_checks[temp>>log2radix]= 11001000100000000010001100110001

word: 10111011110000

combo: 00000001011110

temp: 00000001011110

orbit_checks[temp>>log2radix]= 11001000100000000010001100110001

word: 11001011010000

combo: 00000001011010

word: 11011011011000

combo: 00000001011011

temp: 00000001011011

orbit_checks[temp>>log2radix]= 11001000100000000010001100110001

word: 01101011001000

combo: 00000001011001

word: 01111011000000

combo: 00000001011000

word: 10011001000000

combo: 00000001001000

temp: 00000001001000

orbit_checks[temp>>log2radix]= 11001000100000000010001100110001

word: 10001001001000

combo: 00000001001001

temp: 00000001001001

orbit_checks[temp>>log2radix]= 11001000100000000010001100110001

word: 00111001011000

combo: 00000001001011

word: 00101001010000

combo: 00000001001010

word: 01011001110000

combo: 00000001001110

word: 01001001111000

combo: 00000001001111

word: 11111001101000

combo: 00000001001101

temp: 00000001001101

orbit_checks[temp>>log2radix]= 11001000100000000010001100110001

word: 11101001100000

combo: 00000001001100

word: 10011000100000

combo: 00000001000100

temp: 00000001000100

orbit_checks[temp>>log2radix]= 11001000100000000010001100110001

word: 10001000101000

combo: 00000001000101

temp: 00000001000101

orbit_checks[temp>>log2radix]= 11001000100000000010001100110001

word: 00111000111000

combo: 00000001000111

word: 00101000110000

combo: 00000001000110

word: 01011000010000

combo: 00000001000010

word: 01001000011000

combo: 00000001000011

word: 11111000001000

combo: 00000001000001

word: 11101000000000

combo: 00000001000000

temp: 00000001000000

orbit_checks[temp>>log2radix]= 11001000100000000010001100110001

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1]
[0 0 1 0 1 0 0 0 0 0 0 1 1 0]
[0 0 0 1 1 0 0 0 0 0 0 1 0 1]
limit on degree (length): 15
ortho basis:
100110000010000
111110000100000
111110001000000
011100010000000
011100100000000
011101000000000

B_can_lab before row reduction:
000111111011000
011000111110010
000000000011011
000000000111100

B_can_lab after row reduction:
011111000110001
011000111110010
000111111100100
000111111011000
000000000111000

word generated as sum over rows of ortho_basis starting at 6: 000000000000000
gate: 000000000001111
k_gate: 000000000111111
nonzero_gate: 100000000000000
radix_gate: 000000000011111

Starting main loop:
word: 000000000000000

combo: 000000000000000

word: 100110000010000

combo: 000000000000001

temp: 000000000000001

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
001001111100101
101101110001010
111100001100011
000101111110001
rs list:
1 0 1 0 0 1 1 1 1 1 0 0 1 0 0 
0 1 0 1 0 0 0 1 1 1 0 1 1 0 1 
1 1 0 0 0 1 1 0 0 0 0 1 1 1 1 
1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0 0]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0]
[0 0 1 0 1 0 0 0 0 0 0 1 1 0 0]
[0 0 0 1 1 0 0 0 0 0 0 1 0 1 0]
[0 0 0 0 1 0 0 0 0 0 1 1 0 0 1]
m:
[1 0 1 0 0 1 1 1 1 1 0 0 1 0 0]
[0 1 0 1 0 0 0 1 1 1 0 1 1 0 1]
[1 1 0 0 0 1 1 0 0 0 0 1 1 1 1]
[1 0 0 0 1 1 1 1 1 1 0 1 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,10), (8,9), (6,7), ( 4, 5)(12,14), ( 3, 4)(13,14), (1,6), ( 4,12)( 5,14), ( 1, 8)( 5,12)( 6, 9)( 7,10) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 10, 5, 6, 7, 8, 9, 4, 14, 12, 13, 11]
[0, 1, 2, 3, 11, 5, 6, 7, 8, 9, 14, 4, 12, 13, 10]
orbits:
100110000010000
111011110010000
word: 011000000110000

combo: 000000000000011

word: 111110000100000

combo: 000000000000010

word: 000000001100000

combo: 000000000000110

word: 100110001110000

combo: 000000000000111

word: 011000001010000

combo: 000000000000101

word: 111110001000000

combo: 000000000000100

word: 100010011000000

combo: 000000000001100

temp: 000000000001100

orbit_checks[temp>>log2radix]= 000000000000010

passed if statements
temp basis:
010011110010110
111000010110011
110011100101001
100111100110001
rs list:
0 1 1 0 1 0 0 1 1 1 1 0 0 1 0 
1 1 0 0 1 1 0 1 0 0 0 0 1 1 1 
1 0 0 1 0 1 0 0 1 1 1 0 0 1 1 
1 0 0 0 1 1 0 0 1 1 1 1 0 0 1 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0 0]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0]
[0 0 1 0 1 0 0 0 0 0 0 1 1 0 0]
[0 0 0 1 1 0 0 0 0 0 0 1 0 1 0]
[0 0 0 0 0 0 1 1 0 0 1 0 0 0 1]
m:
[0 1 1 0 1 0 0 1 1 1 1 0 0 1 0]
[1 1 0 0 1 1 0 1 0 0 0 0 1 1 1]
[1 0 0 1 0 1 0 0 1 1 1 0 0 1 1]
[1 0 0 0 1 1 0 0 1 1 1 1 0 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,10), ( 4, 5)(12,14), ( 4,12)( 5,14), ( 3, 4)(13,14), (1,6), ( 1, 9)( 5,12)( 6,10)(11,15) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 14, 11, 12, 13, 10]
[0, 1, 2, 3, 4, 5, 10, 14, 8, 9, 6, 11, 12, 13, 7]
[0, 1, 2, 3, 4, 5, 14, 10, 8, 9, 7, 11, 12, 13, 6]
orbits:
100010011000000
100010010100000
100010101000000
100110111110000
111111101000000
100111101110000
100010100100000
100111011110000
111111100100000
100011001000000
100011000100000
111111011000000
111011001110000
111010011110000
111111010100000
111010101110000
111110111000000
111110110100000
word: 000100011010000

combo: 000000000001101

word: 111010011110000

combo: 000000000001111

temp: 000000000001111

orbit_checks[temp>>log2radix]= 10010100100101001001010000000010

word: 011100011100000

combo: 000000000001110

word: 100010010100000

combo: 000000000001010

temp: 000000000001010

orbit_checks[temp>>log2radix]= 10010100100101001001010000000010

word: 000100010110000

combo: 000000000001011

word: 111010010010000

combo: 000000000001001

word: 011100010000000

combo: 000000000001000

word: 000000110000000

combo: 000000000011000

word: 100110110010000

combo: 000000000011001

word: 011000110110000

combo: 000000000011011

word: 111110110100000

combo: 000000000011010

temp: 000000000011010

orbit_checks[temp>>log2radix]= 10010100100101001001010000000010

word: 000000111100000

combo: 000000000011110

word: 100110111110000

combo: 000000000011111

temp: 000000000011111

orbit_checks[temp>>log2radix]= 10010100100101001001010000000010

word: 011000111010000

combo: 000000000011101

word: 111110111000000

combo: 000000000011100

temp: 000000000011100

orbit_checks[temp>>log2radix]= 10010100100101001001010000000010

word: 100010101000000

combo: 000000000010100

temp: 000000000010100

orbit_checks[temp>>log2radix]= 10010100100101001001010000000010

word: 000100101010000

combo: 000000000010101

word: 111010101110000

combo: 000000000010111

temp: 000000000010111

orbit_checks[temp>>log2radix]= 10010100100101001001010000000010

word: 011100101100000

combo: 000000000010110

word: 100010100100000

combo: 000000000010010

temp: 000000000010010

orbit_checks[temp>>log2radix]= 10010100100101001001010000000010

word: 000100100110000

combo: 000000000010011

word: 111010100010000

combo: 000000000010001

word: 011100100000000

combo: 000000000010000

word: 000001100000000

combo: 000000000110000

word: 100111100010000

combo: 000000000110001

word: 011001100110000

combo: 000000000110011

word: 111111100100000

combo: 000000000110010

temp: 000000000110010

orbit_checks[temp>>log2radix]= 10100101001001010010010100

word: 000001101100000

combo: 000000000110110

word: 100111101110000

combo: 000000000110111

temp: 000000000110111

orbit_checks[temp>>log2radix]= 10100101001001010010010100

word: 011001101010000

combo: 000000000110101

word: 111111101000000

combo: 000000000110100

temp: 000000000110100

orbit_checks[temp>>log2radix]= 10100101001001010010010100

word: 100011111000000

combo: 000000000111100

word: 000101111010000

combo: 000000000111101

word: 111011111110000

combo: 000000000111111

word: 011101111100000

combo: 000000000111110

word: 100011110100000

combo: 000000000111010

word: 000101110110000

combo: 000000000111011

word: 111011110010000

combo: 000000000111001

temp: 000000000111001

orbit_checks[temp>>log2radix]= 10100101001001010010010100

word: 011101110000000

combo: 000000000111000

word: 000001010000000

combo: 000000000101000

word: 100111010010000

combo: 000000000101001

word: 011001010110000

combo: 000000000101011

word: 111111010100000

combo: 000000000101010

temp: 000000000101010

orbit_checks[temp>>log2radix]= 10100101001001010010010100

word: 000001011100000

combo: 000000000101110

word: 100111011110000

combo: 000000000101111

temp: 000000000101111

orbit_checks[temp>>log2radix]= 10100101001001010010010100

word: 011001011010000

combo: 000000000101101

word: 111111011000000

combo: 000000000101100

temp: 000000000101100

orbit_checks[temp>>log2radix]= 10100101001001010010010100

word: 100011001000000

combo: 000000000100100

temp: 000000000100100

orbit_checks[temp>>log2radix]= 10100101001001010010010100

word: 000101001010000

combo: 000000000100101

word: 111011001110000

combo: 000000000100111

temp: 000000000100111

orbit_checks[temp>>log2radix]= 10100101001001010010010100

word: 011101001100000

combo: 000000000100110

word: 100011000100000

combo: 000000000100010

temp: 000000000100010

orbit_checks[temp>>log2radix]= 10100101001001010010010100

word: 000101000110000

combo: 000000000100011

word: 111011000010000

combo: 000000000100001

word: 011101000000000

combo: 000000000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 1 1 1 1 1 1 0 0 0 1]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0]
[0 0 1 0 0 0 0 0 0 0 1 0 1 0 1]
[0 0 0 1 0 0 0 0 0 0 1 0 0 1 1]
[0 0 0 0 1 0 0 0 0 0 1 1 0 0 1]
limit on degree (length): 16
ortho basis:
1011110000100000
1011110001000000
1111100010000000
1111100100000000
1111101000000000

B_can_lab before row reduction:
0011111100110000
0100111011010100
0000000010110001
0000000000110110
0000000001111000

B_can_lab after row reduction:
0011111110000001
0100111011100010
0111000111100100
0011111101001000
0011111100110000

word generated as sum over rows of ortho_basis starting at 5: 0000000000000000
gate: 0000000000011111
k_gate: 0000000000011111
nonzero_gate: 1000000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 0000000000000000

combo: 0000000000000000

word: 1011110000100000

combo: 0000000000000001

word: 0000000001100000

combo: 0000000000000011

word: 1011110001000000

combo: 0000000000000010

word: 0100010011000000

combo: 0000000000000110

word: 1111100011100000

combo: 0000000000000111

temp: 0000000000000111

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1001001101100110
0101101110001010
1111100011100000
1000101101110010
1100011101100010
rs list:
0 1 1 0 0 1 1 0 1 1 0 0 1 0 0 1 
0 1 0 1 0 0 0 1 1 1 0 1 1 0 1 0 
0 0 0 0 0 1 1 1 0 0 0 1 1 1 1 1 
0 1 0 0 1 1 1 0 1 1 0 1 0 0 0 1 
0 1 0 0 0 1 1 0 1 1 1 0 0 0 1 1 
B_aug:
[1 0 0 0 0 1 1 1 1 1 1 0 0 0 1 0]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0 0]
[0 0 1 0 0 0 0 0 0 0 1 0 1 0 1 0]
[0 0 0 1 0 0 0 0 0 0 1 0 0 1 1 0]
[0 0 0 0 1 0 0 0 0 0 1 1 0 0 1 0]
[0 0 0 0 0 1 1 1 0 0 0 1 1 1 1 1]
m:
[0 1 1 0 0 1 1 0 1 1 0 0 1 0 0 1]
[0 1 0 1 0 0 0 1 1 1 0 1 1 0 1 0]
[0 0 0 0 0 1 1 1 0 0 0 1 1 1 1 1]
[0 1 0 0 1 1 1 0 1 1 0 1 0 0 0 1]
[0 1 0 0 0 1 1 0 1 1 1 0 0 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,10), (6,7), ( 5,11)(12,15), ( 5,12)(11,15), ( 4, 5)(12,14), ( 3, 4)(13,14), ( 2,16)( 6, 9)( 7,10)(11,15) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 2, 3, 4, 5, 6, 15, 8, 9, 10, 11, 12, 13, 14, 7]
[7, 15, 2, 3, 4, 5, 6, 0, 8, 9, 10, 11, 12, 13, 14, 1]
[15, 0, 2, 3, 4, 8, 9, 1, 5, 6, 14, 11, 12, 13, 10, 7]
orbits:
1111100011100000
1111100101100000
1011111100100000
1111101001100000
1011111010100000
1011111101000000
1011110110100000
1011111011000000
1011110111000000
word: 0100010010100000

combo: 0000000000000101

word: 1111100010000000

combo: 0000000000000100

word: 0000000110000000

combo: 0000000000001100

word: 1011110110100000

combo: 0000000000001101

temp: 0000000000001101

orbit_checks[temp>>log2radix]= 110011010000110100010000000

word: 0000000111100000

combo: 0000000000001111

word: 1011110111000000

combo: 0000000000001110

temp: 0000000000001110

orbit_checks[temp>>log2radix]= 110011010000110100010000000

word: 0100010101000000

combo: 0000000000001010

word: 1111100101100000

combo: 0000000000001011

temp: 0000000000001011

orbit_checks[temp>>log2radix]= 110011010000110100010000000

word: 0100010100100000

combo: 0000000000001001

word: 1111100100000000

combo: 0000000000001000

word: 0000001100000000

combo: 0000000000011000

word: 1011111100100000

combo: 0000000000011001

temp: 0000000000011001

orbit_checks[temp>>log2radix]= 110011010000110100010000000

word: 0000001101100000

combo: 0000000000011011

word: 1011111101000000

combo: 0000000000011010

temp: 0000000000011010

orbit_checks[temp>>log2radix]= 110011010000110100010000000

word: 0100011111000000

combo: 0000000000011110

word: 1111101111100000

combo: 0000000000011111

word: 0100011110100000

combo: 0000000000011101

word: 1111101110000000

combo: 0000000000011100

temp: 0000000000011100

orbit_checks[temp>>log2radix]= 110011010000110100010000000

passed if statements
temp basis:
1011110001100001
1111101110000000
1100010000000010
0101010000000100
0110010000001000
rs list:
1 0 0 0 0 1 1 0 0 0 1 1 1 1 0 1 
0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 1 
0 0 1 0 0 0 0 0 0 0 1 0 1 0 1 0 
0 0 0 1 0 0 0 0 0 0 1 0 0 1 1 0 
B_aug:
[1 0 0 0 0 1 1 1 1 1 1 0 0 0 1 0]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0 0]
[0 0 1 0 0 0 0 0 0 0 1 0 1 0 1 0]
[0 0 0 1 0 0 0 0 0 0 1 0 0 1 1 0]
[0 0 0 0 1 0 0 0 0 0 1 1 0 0 1 0]
[0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1]
m:
[1 0 0 0 0 1 1 0 0 0 1 1 1 1 0 1]
[0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1]
[0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 1]
[0 0 1 0 0 0 0 0 0 0 1 0 1 0 1 0]
[0 0 0 1 0 0 0 0 0 0 1 0 0 1 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,10), (8,9), (6,7), ( 3, 4)(13,14), ( 2, 3)(13,16), (1,6), ( 1, 8)( 6, 9)( 7,10)(11,15), ( 4,15)(11,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 10, 5, 6, 7, 8, 9, 4, 14, 12, 13, 11, 15]
[0, 1, 2, 3, 11, 5, 6, 7, 8, 9, 14, 4, 12, 13, 10, 15]
[0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 13, 12, 11, 14, 15]
[0, 1, 2, 3, 14, 5, 6, 7, 8, 9, 11, 10, 12, 13, 4, 15]
[0, 1, 2, 4, 13, 5, 6, 7, 8, 9, 14, 3, 12, 11, 10, 15]
[0, 1, 3, 4, 2, 5, 6, 7, 8, 9, 10, 12, 13, 11, 14, 15]
[0, 1, 3, 4, 12, 5, 6, 7, 8, 9, 14, 2, 13, 11, 10, 15]
[0, 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 15, 13, 11, 14, 12]
[0, 2, 3, 4, 15, 5, 6, 7, 8, 9, 14, 1, 13, 11, 10, 12]
orbits:
1111101110000000
word: 0000001010000000

combo: 0000000000010100

word: 1011111010100000

combo: 0000000000010101

temp: 0000000000010101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0000001011100000

combo: 0000000000010111

word: 1011111011000000

combo: 0000000000010110

temp: 0000000000010110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0100011001000000

combo: 0000000000010010

word: 1111101001100000

combo: 0000000000010011

temp: 0000000000010011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0100011000100000

combo: 0000000000010001

word: 1111101000000000

combo: 0000000000010000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 1 1 0 1 1 1 1 0 0 1]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0]
[0 0 1 0 0 1 0 0 0 0 0 1 1 0 0]
[0 0 0 1 0 1 0 0 0 0 0 1 0 1 0]
[0 0 0 0 1 0 0 1 0 0 1 0 0 0 1]
limit on degree (length): 16
ortho basis:
0100110000100000
0111110001000000
1111100010000000
0011100100000000
0011101000000000

B_can_lab before row reduction:
0001101111011000
0110100110101010
0000000000011011
0000000000111100
0011110000000000

B_can_lab after row reduction:
0110100110110001
0111001001110010
0001101111100100
0001101111011000
0011110000000000

word generated as sum over rows of ortho_basis starting at 5: 0000000000000000
gate: 0000000000011111
k_gate: 0000000000011111
nonzero_gate: 1000000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 0000000000000000

combo: 0000000000000000

word: 0100110000100000

combo: 0000000000000001

word: 0011000001100000

combo: 0000000000000011

word: 0111110001000000

combo: 0000000000000010

word: 1000010011000000

combo: 0000000000000110

temp: 0000000000000110

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1100101110100001
1110110000000111
1111010000100011
0010100000101000
0100010010010000
rs list:
1 0 0 0 0 1 0 1 1 1 0 1 0 0 1 1 
1 1 1 0 0 0 0 0 0 0 1 1 0 1 1 1 
1 1 0 0 0 1 0 0 0 0 1 0 1 1 1 1 
0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 
0 0 0 0 1 0 0 1 0 0 1 0 0 0 1 0 
B_aug:
[1 0 0 0 0 1 1 0 1 1 1 1 0 0 1 0]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0 0]
[0 0 1 0 0 1 0 0 0 0 0 1 1 0 0 0]
[0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0]
[0 0 0 0 1 0 0 1 0 0 1 0 0 0 1 0]
[0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 1]
m:
[1 0 0 0 0 1 0 1 1 1 0 1 0 0 1 1]
[1 1 1 0 0 0 0 0 0 0 1 1 0 1 1 1]
[1 1 0 0 0 1 0 0 0 0 1 0 1 1 1 1]
[0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0]
[0 0 0 0 1 0 0 1 0 0 1 0 0 0 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,10), ( 5,11)( 8,15), ( 5, 8)(11,15), ( 4, 6)(12,14), ( 4,12)( 6,14), ( 3, 4)(13,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 15, 11, 12, 13, 14, 10]
[0, 1, 2, 3, 4, 5, 10, 15, 8, 9, 6, 11, 12, 13, 14, 7]
[0, 1, 2, 3, 4, 5, 15, 10, 8, 9, 7, 11, 12, 13, 14, 6]
orbits:
1000010011000000
1100101111100000
1100001010000000
1100000110000000
word: 1100100011100000

combo: 0000000000000111

word: 1011010010100000

combo: 0000000000000101

word: 1111100010000000

combo: 0000000000000100

word: 1100000110000000

combo: 0000000000001100

temp: 0000000000001100

orbit_checks[temp>>log2radix]= 10000000000100000001000001000000

word: 1000110110100000

combo: 0000000000001101

word: 1111000111100000

combo: 0000000000001111

temp: 0000000000001111

orbit_checks[temp>>log2radix]= 10000000000100000001000001000000

passed if statements
temp basis:
0010011110100110
1111000111100000
1110011001001010
1100111001100010
1000000100000011
rs list:
0 1 1 0 0 1 0 1 1 1 1 0 0 1 0 0 
0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 
0 1 0 1 0 0 1 0 0 1 1 0 0 1 1 1 
0 1 0 0 0 1 1 0 0 1 1 1 0 0 1 1 
1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 
B_aug:
[1 0 0 0 0 1 1 0 1 1 1 1 0 0 1 0]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0 0]
[0 0 1 0 0 1 0 0 0 0 0 1 1 0 0 0]
[0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0]
[0 0 0 0 1 0 0 1 0 0 1 0 0 0 1 0]
[0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1]
m:
[0 1 1 0 0 1 0 1 1 1 1 0 0 1 0 0]
[0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1]
[0 1 0 1 0 0 1 0 0 1 1 0 0 1 1 1]
[0 1 0 0 0 1 1 0 0 1 1 1 0 0 1 1]
[1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 4, 6)(12,14), ( 4,12)( 6,14), ( 3, 4)(13,14), ( 2,16)( 6,12)( 7,10)(11,15), ( 1, 2)( 9,16) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 7, 5, 6, 4, 8, 9, 14, 11, 12, 13, 10, 15]
[0, 1, 2, 3, 10, 5, 6, 14, 8, 9, 4, 11, 12, 13, 7, 15]
[4, 10, 2, 3, 0, 5, 6, 8, 7, 9, 1, 11, 12, 13, 15, 14]
[0, 1, 2, 3, 14, 5, 6, 10, 8, 9, 7, 11, 12, 13, 4, 15]
[4, 10, 2, 3, 8, 5, 6, 0, 7, 9, 15, 11, 12, 13, 1, 14]
[4, 10, 2, 3, 1, 5, 6, 15, 7, 9, 0, 11, 12, 13, 8, 14]
[4, 10, 2, 3, 15, 5, 6, 1, 7, 9, 8, 11, 12, 13, 0, 14]
orbits:
1111000111100000
1111001011100000
1011111011000000
1011110111000000
word: 1011110111000000

combo: 0000000000001110

temp: 0000000000001110

orbit_checks[temp>>log2radix]= 10000000110100001101000001000000

word: 0100010101000000

combo: 0000000000001010

word: 0000100101100000

combo: 0000000000001011

word: 0111010100100000

combo: 0000000000001001

word: 0011100100000000

combo: 0000000000001000

word: 0000001100000000

combo: 0000000000011000

word: 0100111100100000

combo: 0000000000011001

word: 0011001101100000

combo: 0000000000011011

word: 0111111101000000

combo: 0000000000011010

word: 1000011111000000

combo: 0000000000011110

word: 1100101111100000

combo: 0000000000011111

temp: 0000000000011111

orbit_checks[temp>>log2radix]= 10000000110100001101000001000000

word: 1011011110100000

combo: 0000000000011101

temp: 0000000000011101

orbit_checks[temp>>log2radix]= 10000000110100001101000001000000

passed if statements
temp basis:
1100011101000011
1010111110000100
1111100011000001
0110011101001001
0100111101100001
rs list:
1 1 0 0 0 0 1 0 1 1 1 0 0 0 1 1 
0 0 1 0 0 0 0 1 1 1 1 1 0 1 0 1 
1 0 0 0 0 0 1 1 0 0 0 1 1 1 1 1 
1 0 0 1 0 0 1 0 1 1 1 0 0 1 1 0 
1 0 0 0 0 1 1 0 1 1 1 1 0 0 1 0 
B_aug:
[1 0 0 0 0 1 1 0 1 1 1 1 0 0 1 0]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0 0]
[0 0 1 0 0 1 0 0 0 0 0 1 1 0 0 0]
[0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0]
[0 0 0 0 1 0 0 1 0 0 1 0 0 0 1 0]
[0 0 0 0 0 1 0 1 1 1 1 0 1 1 0 1]
m:
[1 1 0 0 0 0 1 0 1 1 1 0 0 0 1 1]
[0 0 1 0 0 0 0 1 1 1 1 1 0 1 0 1]
[1 0 0 0 0 0 1 1 0 0 0 1 1 1 1 1]
[1 0 0 1 0 0 1 0 1 1 1 0 0 1 1 0]
[1 0 0 0 0 1 1 0 1 1 1 1 0 0 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,10), ( 4, 6)(12,14), ( 4,12)( 6,14), ( 3, 4)(13,14), ( 2, 3)(13,16), (1,7), ( 1, 9)( 6,12)( 7,10)(11,15) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 7, 5, 6, 4, 8, 9, 14, 11, 12, 13, 10, 15]
[0, 1, 2, 3, 10, 5, 6, 14, 8, 9, 4, 11, 12, 13, 7, 15]
[0, 1, 2, 3, 14, 5, 6, 10, 8, 9, 7, 11, 12, 13, 4, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1011011110100000
word: 1111101110000000

combo: 0000000000011100

temp: 0000000000011100

orbit_checks[temp>>log2radix]= 10100000110100001101000001000000

passed if statements
temp basis:
1011010011100001
1111101110000000
1100010000000010
0001100000100100
0010100000101000
rs list:
1 0 0 0 0 1 1 1 0 0 1 0 1 1 0 1 
0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 1 
0 0 1 0 0 1 0 0 0 0 0 1 1 0 0 0 
0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 
B_aug:
[1 0 0 0 0 1 1 0 1 1 1 1 0 0 1 0]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0 0]
[0 0 1 0 0 1 0 0 0 0 0 1 1 0 0 0]
[0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0]
[0 0 0 0 1 0 0 1 0 0 1 0 0 0 1 0]
[0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1]
m:
[1 0 0 0 0 1 1 1 0 0 1 0 1 1 0 1]
[0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1]
[0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 1]
[0 0 1 0 0 1 0 0 0 0 0 1 1 0 0 0]
[0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,10), ( 4, 6)(12,14), ( 4,12)( 6,14), ( 3, 4)(13,14), (1,7), ( 1, 9)( 6,12)( 7,10)(11,15), ( 2,16)(11,15), ( 2,15)(11,16) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 7, 5, 6, 4, 8, 9, 14, 11, 12, 13, 10, 15]
[0, 1, 2, 3, 10, 5, 6, 14, 8, 9, 4, 11, 12, 13, 7, 15]
[0, 2, 1, 4, 3, 10, 6, 13, 8, 9, 5, 14, 15, 7, 11, 12]
[0, 1, 2, 3, 14, 5, 6, 10, 8, 9, 7, 11, 12, 13, 4, 15]
[0, 2, 1, 4, 13, 10, 6, 3, 8, 9, 11, 14, 15, 7, 5, 12]
[0, 2, 1, 4, 5, 10, 6, 11, 8, 9, 3, 14, 15, 7, 13, 12]
[0, 2, 1, 4, 11, 10, 6, 5, 8, 9, 13, 14, 15, 7, 3, 12]
[0, 3, 1, 4, 2, 10, 6, 12, 8, 9, 5, 14, 15, 7, 11, 13]
[0, 3, 1, 4, 12, 10, 6, 2, 8, 9, 11, 14, 15, 7, 5, 13]
[0, 4, 2, 3, 1, 5, 6, 15, 8, 9, 10, 11, 12, 13, 14, 7]
[0, 4, 2, 3, 15, 5, 6, 1, 8, 9, 14, 11, 12, 13, 10, 7]
orbits:
1111101110000000
word: 1100001010000000

combo: 0000000000010100

temp: 0000000000010100

orbit_checks[temp>>log2radix]= 10110000110100001101000001000000

word: 1000111010100000

combo: 0000000000010101

word: 1111001011100000

combo: 0000000000010111

temp: 0000000000010111

orbit_checks[temp>>log2radix]= 10110000110100001101000001000000

word: 1011111011000000

combo: 0000000000010110

temp: 0000000000010110

orbit_checks[temp>>log2radix]= 10110000110100001101000001000000

word: 0100011001000000

combo: 0000000000010010

word: 0000101001100000

combo: 0000000000010011

word: 0111011000100000

combo: 0000000000010001

word: 0011101000000000

combo: 0000000000010000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1]
[0 0 1 0 1 0 0 0 0 0 0 1 1 0]
[0 0 0 1 1 0 0 0 0 0 0 1 0 1]
limit on degree (length): 16
ortho basis:
1000110000010000
1011110000100000
1011110001000000
0011100010000000
0011100100000000
0011101000000000
1100000000000000

B_can_lab before row reduction:
0000111111011000
0011000111110010
0000000000011011
0000000000111100

B_can_lab after row reduction:
0011111000110001
0011000111110010
0000111111100100
0000111111011000
0000000000111000

word generated as sum over rows of ortho_basis starting at 6: 1100000000000000
gate: 0000000000001111
k_gate: 0000000000111111
nonzero_gate: 1100000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1100000000000000

combo: 0000000000000000

word: 0100110000010000

combo: 0000000000000001

word: 1111000000110000

combo: 0000000000000011

word: 0111110000100000

combo: 0000000000000010

word: 1100000001100000

combo: 0000000000000110

temp: 0000000000000110

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
0011111110000010
0011010001110011
1111010000010011
0001100000010100
rs list:
0 1 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
1 1 0 0 1 1 1 0 0 0 1 0 1 1 0 0 
1 1 0 0 1 0 0 0 0 0 1 0 1 1 1 1 
0 0 1 0 1 0 0 0 0 0 0 1 1 0 0 0 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 0]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0 0]
[0 0 1 0 1 0 0 0 0 0 0 1 1 0 0 0]
[0 0 0 1 1 0 0 0 0 0 0 1 0 1 0 0]
[0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1]
m:
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0 0]
[1 1 0 0 1 1 1 0 0 0 1 0 1 1 0 0]
[1 1 0 0 1 0 0 0 0 0 1 0 1 1 1 1]
[0 0 1 0 1 0 0 0 0 0 0 1 1 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), ( 9,10), (8,9), (6,7), ( 6,15)( 7,16), ( 2,11), ( 3,12)( 5,13), ( 3, 5)(12,13) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 13, 12, 11, 14, 15]
[0, 1, 2, 11, 13, 5, 6, 7, 8, 9, 10, 3, 12, 4, 14, 15]
[0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15]
[0, 1, 2, 13, 11, 5, 6, 7, 8, 9, 10, 4, 12, 3, 14, 15]
[0, 1, 3, 12, 11, 5, 6, 7, 8, 9, 10, 4, 13, 2, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1100000001100000
1100101110110000
1100001100000000
1100101111010000
1100001010000000
1100000110000000
word: 0100110001110000

combo: 0000000000000111

word: 1111000001010000

combo: 0000000000000101

word: 0111110001000000

combo: 0000000000000100

word: 0100010011000000

combo: 0000000000001100

word: 1100100011010000

combo: 0000000000001101

word: 0111010011110000

combo: 0000000000001111

word: 1111100011100000

combo: 0000000000001110

temp: 0000000000001110

orbit_checks[temp>>log2radix]= 1000000000000000001000000

passed if statements
temp basis:
1110000011110100
1111001100010001
0010001111101001
0000101111110001
rs list:
0 0 1 0 1 1 1 1 0 0 0 0 0 1 1 1 
1 0 0 0 1 0 0 0 1 1 0 0 1 1 1 1 
1 0 0 1 0 1 1 1 1 1 0 0 0 1 0 0 
1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 0 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 0]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0 0]
[0 0 1 0 1 0 0 0 0 0 0 1 1 0 0 0]
[0 0 0 1 1 0 0 0 0 0 0 1 0 1 0 0]
[0 0 0 0 0 1 1 1 0 0 0 1 1 1 1 1]
m:
[0 0 1 0 1 1 1 1 0 0 0 0 0 1 1 1]
[1 0 0 0 1 0 0 0 1 1 0 0 1 1 1 1]
[1 0 0 1 0 1 1 1 1 1 0 0 0 1 0 0]
[1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,10), ( 6, 7)( 9,10), ( 6, 7)( 9,10)(15,16), ( 2,11)( 6, 7)( 9,10)(15,16), ( 4, 5)( 6, 7)( 9,10)(12,14)(15,16), ( 4,12)( 5,14)( 6, 7)( 9,10)(15,16), ( 3, 4)( 6, 7)( 9,10)(13,14)(15,16), ( 1, 8)( 5,12)( 6,10)( 7, 9)(15,16) ] )
Right transversal of automorphism group of B_aug:
[0, 5, 2, 3, 4, 1, 10, 7, 14, 15, 6, 11, 12, 13, 8, 9]
[0, 8, 2, 3, 4, 14, 15, 7, 1, 10, 9, 11, 12, 13, 5, 6]
[0, 14, 2, 3, 4, 8, 9, 7, 5, 6, 15, 11, 12, 13, 1, 10]
orbits:
1111100011100000
1111001100110000
1111100101100000
1111001101010000
1111001010110000
1111101001100000
1111001011010000
1111000110110000
1111000111010000
word: 0100010010100000

combo: 0000000000001010

word: 1100100010110000

combo: 0000000000001011

word: 0111010010010000

combo: 0000000000001001

word: 1111100010000000

combo: 0000000000001000

word: 1100000110000000

combo: 0000000000011000

temp: 0000000000011000

orbit_checks[temp>>log2radix]= 101001010000000100000001000000

word: 0100110110010000

combo: 0000000000011001

word: 1111000110110000

combo: 0000000000011011

temp: 0000000000011011

orbit_checks[temp>>log2radix]= 101001010000000100000001000000

word: 0111110110100000

combo: 0000000000011010

word: 1100000111100000

combo: 0000000000011110

word: 0100110111110000

combo: 0000000000011111

word: 1111000111010000

combo: 0000000000011101

temp: 0000000000011101

orbit_checks[temp>>log2radix]= 101001010000000100000001000000

word: 0111110111000000

combo: 0000000000011100

word: 0100010101000000

combo: 0000000000010100

word: 1100100101010000

combo: 0000000000010101

word: 0111010101110000

combo: 0000000000010111

word: 1111100101100000

combo: 0000000000010110

temp: 0000000000010110

orbit_checks[temp>>log2radix]= 101001010000000100000001000000

word: 0100010100100000

combo: 0000000000010010

word: 1100100100110000

combo: 0000000000010011

word: 0111010100010000

combo: 0000000000010001

word: 1111100100000000

combo: 0000000000010000

word: 1100001100000000

combo: 0000000000110000

temp: 0000000000110000

orbit_checks[temp>>log2radix]= 101000001010010010100101000000

word: 0100111100010000

combo: 0000000000110001

word: 1111001100110000

combo: 0000000000110011

temp: 0000000000110011

orbit_checks[temp>>log2radix]= 101000001010010010100101000000

word: 0111111100100000

combo: 0000000000110010

word: 1100001101100000

combo: 0000000000110110

word: 0100111101110000

combo: 0000000000110111

word: 1111001101010000

combo: 0000000000110101

temp: 0000000000110101

orbit_checks[temp>>log2radix]= 101000001010010010100101000000

word: 0111111101000000

combo: 0000000000110100

word: 0100011111000000

combo: 0000000000111100

word: 1100101111010000

combo: 0000000000111101

temp: 0000000000111101

orbit_checks[temp>>log2radix]= 101000001010010010100101000000

word: 0111011111110000

combo: 0000000000111111

word: 1111101111100000

combo: 0000000000111110

word: 0100011110100000

combo: 0000000000111010

word: 1100101110110000

combo: 0000000000111011

temp: 0000000000111011

orbit_checks[temp>>log2radix]= 101000001010010010100101000000

word: 0111011110010000

combo: 0000000000111001

word: 1111101110000000

combo: 0000000000111000

temp: 0000000000111000

orbit_checks[temp>>log2radix]= 101000001010010010100101000000

passed if statements
temp basis:
1111000001110001
1111101110000000
1100010000000010
0001100000010100
rs list:
1 0 0 0 1 1 1 0 0 0 0 0 1 1 1 1 
0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 1 
0 0 1 0 1 0 0 0 0 0 0 1 1 0 0 0 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 0]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0 0]
[0 0 1 0 1 0 0 0 0 0 0 1 1 0 0 0]
[0 0 0 1 1 0 0 0 0 0 0 1 0 1 0 0]
[0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1]
m:
[1 0 0 0 1 1 1 0 0 0 0 0 1 1 1 1]
[0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1]
[0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 1]
[0 0 1 0 1 0 0 0 0 0 0 1 1 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), ( 9,10), (8,9), (6,7), ( 2,11), ( 2,15)(11,16), (1,6), ( 1, 8)( 5,12)( 6, 9)( 7,10), ( 3,12)( 5,13) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 13, 12, 11, 14, 15]
[0, 1, 2, 11, 13, 5, 6, 7, 8, 9, 10, 3, 12, 4, 14, 15]
[0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15]
[0, 1, 2, 13, 11, 5, 6, 7, 8, 9, 10, 4, 12, 3, 14, 15]
[0, 1, 3, 12, 11, 5, 6, 7, 8, 9, 10, 4, 13, 2, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111101110000000
word: 1100001010000000

combo: 0000000000101000

temp: 0000000000101000

orbit_checks[temp>>log2radix]= 101001001010010010100101000000

word: 0100111010010000

combo: 0000000000101001

word: 1111001010110000

combo: 0000000000101011

temp: 0000000000101011

orbit_checks[temp>>log2radix]= 101001001010010010100101000000

word: 0111111010100000

combo: 0000000000101010

word: 1100001011100000

combo: 0000000000101110

word: 0100111011110000

combo: 0000000000101111

word: 1111001011010000

combo: 0000000000101101

temp: 0000000000101101

orbit_checks[temp>>log2radix]= 101001001010010010100101000000

word: 0111111011000000

combo: 0000000000101100

word: 0100011001000000

combo: 0000000000100100

word: 1100101001010000

combo: 0000000000100101

word: 0111011001110000

combo: 0000000000100111

word: 1111101001100000

combo: 0000000000100110

temp: 0000000000100110

orbit_checks[temp>>log2radix]= 101001001010010010100101000000

word: 0100011000100000

combo: 0000000000100010

word: 1100101000110000

combo: 0000000000100011

word: 0111011000010000

combo: 0000000000100001

word: 1111101000000000

combo: 0000000000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 1 1 0 1 1 1 1 0 1]
[0 1 0 0 1 1 0 1 1 1 1 0 1 0]
[0 0 1 0 0 1 0 0 0 0 0 1 1 0]
[0 0 0 1 0 0 0 1 0 0 1 0 0 1]
limit on degree (length): 15
ortho basis:
110010000010000
010110000100000
111110001000000
011100010000000
101100100000000
101101000000000

B_can_lab before row reduction:
001101110110100
011110001101100
000000011100001
000000000011110

B_can_lab after row reduction:
000000011100001
011110001110010
001101110110100
010011111011000
000000000111000

word generated as sum over rows of ortho_basis starting at 6: 000000000000000
gate: 000000000001111
k_gate: 000000000111111
nonzero_gate: 100000000000000
radix_gate: 000000000011111

Starting main loop:
word: 000000000000000

combo: 000000000000000

word: 110010000010000

combo: 000000000000001

temp: 000000000000001

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
101011100101010
101110011000011
100101101110001
010111101100001
rs list:
0 1 0 1 0 1 0 0 1 1 1 0 1 0 1 
1 1 0 0 0 0 1 1 0 0 1 1 1 0 1 
1 0 0 0 1 1 1 0 1 1 0 1 0 0 1 
1 0 0 0 0 1 1 0 1 1 1 1 0 1 0 
B_aug:
[1 0 0 0 0 1 1 0 1 1 1 1 0 1 0]
[0 1 0 0 1 1 0 1 1 1 1 0 1 0 0]
[0 0 1 0 0 1 0 0 0 0 0 1 1 0 0]
[0 0 0 1 0 0 0 1 0 0 1 0 0 1 0]
[0 0 0 0 1 0 0 0 0 0 1 0 0 1 1]
m:
[0 1 0 1 0 1 0 0 1 1 1 0 1 0 1]
[1 1 0 0 0 0 1 1 0 0 1 1 1 0 1]
[1 0 0 0 1 1 1 0 1 1 0 1 0 0 1]
[1 0 0 0 0 1 1 0 1 1 1 1 0 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,10), ( 5,11)(14,15), ( 5,14)(11,15), ( 4, 5)( 8,15), (1,7), ( 1, 9)( 6,12)( 7,10)(11,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 5, 3, 4, 2, 6, 7, 8, 9, 10, 12, 11, 13, 14]
[0, 1, 11, 3, 4, 12, 6, 7, 8, 9, 10, 2, 5, 13, 14]
[0, 1, 12, 3, 4, 11, 6, 7, 8, 9, 10, 5, 2, 13, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
110010000010000
100100000110000
111001110110000
110001010000000
100010011000000
101111110010000
101101000000000
101000001100000
110000110000000
110101111100000
101100100000000
111111101000000
word: 100100000110000

combo: 000000000000011

temp: 000000000000011

orbit_checks[temp>>log2radix]= 1000000010001000001001010

word: 010110000100000

combo: 000000000000010

word: 101000001100000

combo: 000000000000110

temp: 000000000000110

orbit_checks[temp>>log2radix]= 1000000010001000001001010

word: 011010001110000

combo: 000000000000111

word: 001100001010000

combo: 000000000000101

word: 111110001000000

combo: 000000000000100

word: 100010011000000

combo: 000000000001100

temp: 000000000001100

orbit_checks[temp>>log2radix]= 1000000010001000001001010

word: 010000011010000

combo: 000000000001101

word: 000110011110000

combo: 000000000001111

word: 110100011100000

combo: 000000000001110

word: 001010010100000

combo: 000000000001010

word: 111000010110000

combo: 000000000001011

word: 101110010010000

combo: 000000000001001

word: 011100010000000

combo: 000000000001000

word: 110000110000000

combo: 000000000011000

temp: 000000000011000

orbit_checks[temp>>log2radix]= 1000000010001000001001010

word: 000010110010000

combo: 000000000011001

word: 010100110110000

combo: 000000000011011

word: 100110110100000

combo: 000000000011010

word: 011000111100000

combo: 000000000011110

word: 101010111110000

combo: 000000000011111

temp: 000000000011111

orbit_checks[temp>>log2radix]= 1000000010001000001001010

passed if statements
temp basis:
100001001000010
001100000100100
111000101111000
010111101100001
rs list:
0 1 0 0 0 0 1 0 0 1 0 0 0 0 1 
0 0 1 0 0 1 0 0 0 0 0 1 1 0 0 
0 0 0 1 1 1 1 0 1 0 0 0 1 1 1 
1 0 0 0 0 1 1 0 1 1 1 1 0 1 0 
B_aug:
[1 0 0 0 0 1 1 0 1 1 1 1 0 1 0]
[0 1 0 0 1 1 0 1 1 1 1 0 1 0 0]
[0 0 1 0 0 1 0 0 0 0 0 1 1 0 0]
[0 0 0 1 0 0 0 1 0 0 1 0 0 1 0]
[0 0 0 0 1 1 1 1 1 0 1 0 1 0 1]
m:
[0 1 0 0 0 0 1 0 0 1 0 0 0 0 1]
[0 0 1 0 0 1 0 0 0 0 0 1 1 0 0]
[0 0 0 1 1 1 1 0 1 0 0 0 1 1 1]
[1 0 0 0 0 1 1 0 1 1 1 1 0 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 2, 3)( 6, 7)(10,12)(13,15), ( 4,14)( 5, 9)( 6,13)( 7,15), ( 3,13)( 6,12), ( 1, 5)( 4,11)(10,15)(12,13) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 8, 12, 14, 10, 4, 9, 7, 11, 5, 13, 6]
[0, 1, 2, 7, 4, 5, 6, 3, 8, 9, 13, 11, 12, 10, 14]
[0, 1, 2, 10, 4, 5, 6, 13, 8, 9, 3, 11, 12, 7, 14]
[0, 1, 3, 2, 4, 10, 6, 12, 8, 9, 5, 13, 7, 11, 14]
[0, 1, 3, 2, 8, 7, 14, 5, 4, 9, 12, 13, 10, 11, 6]
[0, 1, 3, 12, 4, 10, 6, 2, 8, 9, 11, 13, 7, 5, 14]
[0, 1, 3, 5, 4, 10, 6, 11, 8, 9, 2, 13, 7, 12, 14]
[0, 2, 3, 1, 4, 10, 5, 14, 8, 11, 6, 13, 7, 9, 12]
orbits:
101010111110000
101011011110000
100001001010000
100000101010000
110110101110000
110111001110000
111101011010000
111100111010000
word: 111100111010000

combo: 000000000011101

temp: 000000000011101

orbit_checks[temp>>log2radix]= 10100001101000010001000001001010

word: 001110111000000

combo: 000000000011100

word: 010010101000000

combo: 000000000010100

word: 100000101010000

combo: 000000000010101

temp: 000000000010101

orbit_checks[temp>>log2radix]= 10100001101000010001000001001010

word: 110110101110000

combo: 000000000010111

temp: 000000000010111

orbit_checks[temp>>log2radix]= 10100001101000010001000001001010

word: 000100101100000

combo: 000000000010110

word: 111010100100000

combo: 000000000010010

word: 001000100110000

combo: 000000000010011

word: 011110100010000

combo: 000000000010001

word: 101100100000000

combo: 000000000010000

temp: 000000000010000

orbit_checks[temp>>log2radix]= 10100001101000010001000001001010

word: 000001100000000

combo: 000000000110000

word: 110011100010000

combo: 000000000110001

word: 100101100110000

combo: 000000000110011

word: 010111100100000

combo: 000000000110010

word: 101001101100000

combo: 000000000110110

word: 011011101110000

combo: 000000000110111

word: 001101101010000

combo: 000000000110101

word: 111111101000000

combo: 000000000110100

temp: 000000000110100

orbit_checks[temp>>log2radix]= 1001010000100001010000110100001

word: 100011111000000

combo: 000000000111100

word: 010001111010000

combo: 000000000111101

word: 000111111110000

combo: 000000000111111

word: 110101111100000

combo: 000000000111110

temp: 000000000111110

orbit_checks[temp>>log2radix]= 1001010000100001010000110100001

word: 001011110100000

combo: 000000000111010

word: 111001110110000

combo: 000000000111011

temp: 000000000111011

orbit_checks[temp>>log2radix]= 1001010000100001010000110100001

word: 101111110010000

combo: 000000000111001

temp: 000000000111001

orbit_checks[temp>>log2radix]= 1001010000100001010000110100001

word: 011101110000000

combo: 000000000111000

word: 110001010000000

combo: 000000000101000

temp: 000000000101000

orbit_checks[temp>>log2radix]= 1001010000100001010000110100001

word: 000011010010000

combo: 000000000101001

word: 010101010110000

combo: 000000000101011

word: 100111010100000

combo: 000000000101010

word: 011001011100000

combo: 000000000101110

word: 101011011110000

combo: 000000000101111

temp: 000000000101111

orbit_checks[temp>>log2radix]= 1001010000100001010000110100001

word: 111101011010000

combo: 000000000101101

temp: 000000000101101

orbit_checks[temp>>log2radix]= 1001010000100001010000110100001

word: 001111011000000

combo: 000000000101100

word: 010011001000000

combo: 000000000100100

word: 100001001010000

combo: 000000000100101

temp: 000000000100101

orbit_checks[temp>>log2radix]= 1001010000100001010000110100001

word: 110111001110000

combo: 000000000100111

temp: 000000000100111

orbit_checks[temp>>log2radix]= 1001010000100001010000110100001

word: 000101001100000

combo: 000000000100110

word: 111011000100000

combo: 000000000100010

word: 001001000110000

combo: 000000000100011

word: 011111000010000

combo: 000000000100001

word: 101101000000000

combo: 000000000100000

temp: 000000000100000

orbit_checks[temp>>log2radix]= 1001010000100001010000110100001

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 1 1 0 1 1 1 1 0 1 0]
[0 1 0 0 0 0 1 0 0 1 0 0 0 0 1]
[0 0 1 0 0 1 0 0 0 0 0 1 1 0 0]
[0 0 0 1 0 0 0 1 0 0 1 0 0 1 0]
[0 0 0 0 1 1 1 1 1 0 1 0 1 0 1]
limit on degree (length): 16
ortho basis:
0010110000100000
0111110001000000
0011100010000000
1001100100000000
0101101000000000

B_can_lab before row reduction:
0101101101101000
0000111000000001
0000000111000010
0000000000111100
0110011011011000

B_can_lab after row reduction:
0000111000000001
0000000111000010
0110011011100100
0101101101101000
0011110110110000

word generated as sum over rows of ortho_basis starting at 5: 0000000000000000
gate: 0000000000011111
k_gate: 0000000000011111
nonzero_gate: 1000000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 0000000000000000

combo: 0000000000000000

word: 0010110000100000

combo: 0000000000000001

word: 0101000001100000

combo: 0000000000000011

word: 0111110001000000

combo: 0000000000000010

word: 0100010011000000

combo: 0000000000000110

word: 0110100011100000

combo: 0000000000000111

word: 0001010010100000

combo: 0000000000000101

word: 0011100010000000

combo: 0000000000000100

word: 1010000110000000

combo: 0000000000001100

temp: 0000000000001100

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
0111000101111000
0010111101100001
0111101010010001
1101101100010001
0100001001000010
rs list:
0 0 0 1 1 1 1 0 1 0 0 0 1 1 1 0 
1 0 0 0 0 1 1 0 1 1 1 1 0 1 0 0 
1 0 0 0 1 0 0 1 0 1 0 1 1 1 1 0 
1 0 0 0 1 0 0 0 1 1 0 1 1 0 1 1 
0 1 0 0 0 0 1 0 0 1 0 0 0 0 1 0 
B_aug:
[1 0 0 0 0 1 1 0 1 1 1 1 0 1 0 0]
[0 1 0 0 0 0 1 0 0 1 0 0 0 0 1 0]
[0 0 1 0 0 1 0 0 0 0 0 1 1 0 0 0]
[0 0 0 1 0 0 0 1 0 0 1 0 0 1 0 0]
[0 0 0 0 1 1 1 1 1 0 1 0 1 0 1 0]
[0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 1]
m:
[0 0 0 1 1 1 1 0 1 0 0 0 1 1 1 0]
[1 0 0 0 0 1 1 0 1 1 1 1 0 1 0 0]
[1 0 0 0 1 0 0 1 0 1 0 1 1 1 1 0]
[1 0 0 0 1 0 0 0 1 1 0 1 1 0 1 1]
[0 1 0 0 0 0 1 0 0 1 0 0 0 0 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 8, 9)(14,16), ( 8,14)( 9,16), ( 4, 8)(11,14), ( 1, 5)( 9,16)(10,15)(12,13), ( 2, 7)(10,15), ( 2,10)( 7,15) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 5, 3, 4, 2, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15]
[0, 1, 11, 3, 4, 12, 6, 7, 8, 9, 10, 2, 5, 13, 14, 15]
[0, 2, 1, 3, 4, 6, 5, 7, 8, 11, 10, 9, 14, 13, 12, 15]
[0, 1, 12, 3, 4, 11, 6, 7, 8, 9, 10, 5, 2, 13, 14, 15]
[0, 2, 6, 3, 4, 1, 5, 7, 8, 11, 10, 14, 9, 13, 12, 15]
[0, 2, 9, 3, 4, 14, 5, 7, 8, 11, 10, 1, 6, 13, 12, 15]
[0, 2, 14, 3, 4, 9, 5, 7, 8, 11, 10, 6, 1, 13, 12, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1010000110000000
1001100100000000
1111000111100000
1100001100000000
1101110111000000
1010101111100000
1101011110100000
1011111101000000
1110111100100000
word: 1000110110100000

combo: 0000000000001101

word: 1111000111100000

combo: 0000000000001111

temp: 0000000000001111

orbit_checks[temp>>log2radix]= 10100111000000001101000100000000

word: 1101110111000000

combo: 0000000000001110

temp: 0000000000001110

orbit_checks[temp>>log2radix]= 10100111000000001101000100000000

word: 1110010101000000

combo: 0000000000001010

word: 1100100101100000

combo: 0000000000001011

word: 1011010100100000

combo: 0000000000001001

word: 1001100100000000

combo: 0000000000001000

temp: 0000000000001000

orbit_checks[temp>>log2radix]= 10100111000000001101000100000000

word: 1100001100000000

combo: 0000000000011000

temp: 0000000000011000

orbit_checks[temp>>log2radix]= 10100111000000001101000100000000

word: 1110111100100000

combo: 0000000000011001

temp: 0000000000011001

orbit_checks[temp>>log2radix]= 10100111000000001101000100000000

word: 1001001101100000

combo: 0000000000011011

word: 1011111101000000

combo: 0000000000011010

temp: 0000000000011010

orbit_checks[temp>>log2radix]= 10100111000000001101000100000000

word: 1000011111000000

combo: 0000000000011110

word: 1010101111100000

combo: 0000000000011111

temp: 0000000000011111

orbit_checks[temp>>log2radix]= 10100111000000001101000100000000

word: 1101011110100000

combo: 0000000000011101

temp: 0000000000011101

orbit_checks[temp>>log2radix]= 10100111000000001101000100000000

word: 1111101110000000

combo: 0000000000011100

temp: 0000000000011100

orbit_checks[temp>>log2radix]= 10100111000000001101000100000000

passed if statements
temp basis:
1000000100010001
0100001001000010
0001100000100100
1101111100001000
1010111001110000
rs list:
1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 
0 1 0 0 0 0 1 0 0 1 0 0 0 0 1 0 
0 0 1 0 0 1 0 0 0 0 0 1 1 0 0 0 
0 0 0 1 0 0 0 0 1 1 1 1 1 0 1 1 
0 0 0 0 1 1 1 0 0 1 1 1 0 1 0 1 
B_aug:
[1 0 0 0 0 1 1 0 1 1 1 1 0 1 0 0]
[0 1 0 0 0 0 1 0 0 1 0 0 0 0 1 0]
[0 0 1 0 0 1 0 0 0 0 0 1 1 0 0 0]
[0 0 0 1 0 0 0 1 0 0 1 0 0 1 0 0]
[0 0 0 0 1 1 1 1 1 0 1 0 1 0 1 0]
[0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1]
m:
[1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1]
[0 1 0 0 0 0 1 0 0 1 0 0 0 0 1 0]
[0 0 1 0 0 1 0 0 0 0 0 1 1 0 0 0]
[0 0 0 1 0 0 0 0 1 1 1 1 1 0 1 1]
[0 0 0 0 1 1 1 0 0 1 1 1 0 1 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 2, 3)( 6, 7)(10,12)(13,15), ( 4,14)( 5, 9)( 6,13)( 7,15), ( 5,16)( 6,12)( 7,10)(11,14), ( 3, 6)(12,13), ( 1, 2)( 5, 7)( 9,15)(10,16) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 5, 6, 13, 15, 14, 10, 12, 11, 7, 9, 8]
[0, 1, 2, 3, 8, 12, 14, 10, 4, 9, 7, 11, 5, 13, 6, 15]
[0, 1, 2, 7, 4, 5, 6, 3, 8, 9, 13, 11, 12, 10, 14, 15]
[0, 1, 3, 2, 4, 10, 6, 12, 8, 9, 5, 13, 7, 11, 14, 15]
[0, 1, 3, 2, 4, 10, 6, 11, 15, 14, 5, 7, 13, 12, 9, 8]
[0, 1, 3, 2, 8, 7, 14, 5, 4, 9, 12, 13, 10, 11, 6, 15]
[0, 1, 3, 12, 4, 10, 6, 2, 8, 9, 11, 13, 7, 5, 14, 15]
[0, 2, 3, 1, 4, 10, 5, 14, 8, 11, 6, 13, 7, 9, 12, 15]
[0, 2, 3, 1, 4, 10, 5, 9, 15, 12, 6, 7, 13, 14, 11, 8]
[0, 2, 3, 1, 8, 7, 12, 6, 4, 11, 14, 13, 10, 9, 5, 15]
[0, 2, 3, 14, 4, 10, 5, 1, 8, 11, 9, 13, 7, 6, 12, 15]
[1, 2, 3, 0, 14, 7, 12, 15, 9, 5, 8, 10, 13, 4, 11, 6]
orbits:
1111101110000000
word: 0110001010000000

combo: 0000000000010100

word: 0100111010100000

combo: 0000000000010101

word: 0011001011100000

combo: 0000000000010111

word: 0001111011000000

combo: 0000000000010110

word: 0010011001000000

combo: 0000000000010010

word: 0000101001100000

combo: 0000000000010011

word: 0111011000100000

combo: 0000000000010001

word: 0101101000000000

combo: 0000000000010000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 0 1 1 0 1 1 1 1 0 1]
[0 1 0 0 1 1 0 1 1 1 1 0 1 0]
[0 0 1 0 0 1 0 0 0 0 0 1 1 0]
[0 0 0 1 0 0 0 1 0 0 1 0 0 1]
limit on degree (length): 16
ortho basis:
1010010000010000
0010110000100000
1011110001000000
0011100010000000
1001100100000000
1001101000000000
1100000000000000

B_can_lab before row reduction:
0001101110110100
0011110001101100
0000000011100001
0000000000011110

B_can_lab after row reduction:
0000000011100001
0011110001110010
0001101110110100
0010011111011000
0000000000111000

word generated as sum over rows of ortho_basis starting at 6: 1100000000000000
gate: 0000000000001111
k_gate: 0000000000111111
nonzero_gate: 1100000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1100000000000000

combo: 0000000000000000

word: 0110010000010000

combo: 0000000000000001

word: 0100100000110000

combo: 0000000000000011

word: 1110110000100000

combo: 0000000000000010

word: 0101000001100000

combo: 0000000000000110

word: 1111010001110000

combo: 0000000000000111

temp: 0000000000000111

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
0001011110110010
1100110010100011
0001110001011011
0011100011010011
rs list:
0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 
1 1 0 0 0 1 0 1 0 0 1 1 0 0 1 1 
1 1 0 1 1 0 1 0 0 0 1 1 1 0 0 0 
1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 0 
B_aug:
[1 0 0 0 0 1 1 0 1 1 1 1 0 1 0 0]
[0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0]
[0 0 1 0 0 1 0 0 0 0 0 1 1 0 0 0]
[0 0 0 1 0 0 0 1 0 0 1 0 0 1 0 0]
[0 0 0 0 1 1 1 0 0 0 1 0 1 1 1 1]
m:
[0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0]
[1 1 0 0 0 1 0 1 0 0 1 1 0 0 1 1]
[1 1 0 1 1 0 1 0 0 0 1 1 1 0 0 0]
[1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), ( 9,10), ( 4, 8)(11,14), ( 4,11)( 8,14), ( 2, 7)( 8,14)( 9,15)(10,16), ( 1, 5)( 2, 7)( 8,14)(12,13) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 5, 3, 4, 2, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15]
[0, 1, 11, 3, 4, 12, 6, 7, 8, 9, 10, 2, 5, 13, 14, 15]
[1, 0, 3, 2, 6, 10, 4, 11, 8, 9, 5, 7, 13, 12, 14, 15]
[0, 1, 12, 3, 4, 11, 6, 7, 8, 9, 10, 5, 2, 13, 14, 15]
[1, 0, 10, 2, 6, 3, 4, 11, 8, 9, 5, 13, 7, 12, 14, 15]
[1, 0, 7, 2, 6, 13, 4, 11, 8, 9, 5, 3, 10, 12, 14, 15]
[1, 0, 13, 2, 6, 7, 4, 11, 8, 9, 5, 10, 3, 12, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111010001110000
1100110011110000
1110001111010000
1111001011100000
1101101101010000
1101111011000000
1111000111100000
1110101010110000
1101110111000000
1111111000010000
1110100110110000
1111110100010000
word: 1101100001010000

combo: 0000000000000101

word: 0111110001000000

combo: 0000000000000100

word: 0100010011000000

combo: 0000000000001100

word: 1110000011010000

combo: 0000000000001101

word: 1100110011110000

combo: 0000000000001111

temp: 0000000000001111

orbit_checks[temp>>log2radix]= 1011000000000101000000010000000

word: 0110100011100000

combo: 0000000000001110

word: 1101010010100000

combo: 0000000000001010

word: 0111000010110000

combo: 0000000000001011

word: 0101110010010000

combo: 0000000000001001

word: 1111100010000000

combo: 0000000000001000

word: 0110000110000000

combo: 0000000000011000

word: 1100010110010000

combo: 0000000000011001

word: 1110100110110000

combo: 0000000000011011

temp: 0000000000011011

orbit_checks[temp>>log2radix]= 1011000000000101000000010000000

word: 0100110110100000

combo: 0000000000011010

word: 1111000111100000

combo: 0000000000011110

temp: 0000000000011110

orbit_checks[temp>>log2radix]= 1011000000000101000000010000000

word: 0101010111110000

combo: 0000000000011111

word: 0111100111010000

combo: 0000000000011101

word: 1101110111000000

combo: 0000000000011100

temp: 0000000000011100

orbit_checks[temp>>log2radix]= 1011000000000101000000010000000

word: 1110010101000000

combo: 0000000000010100

word: 0100000101010000

combo: 0000000000010101

word: 0110110101110000

combo: 0000000000010111

word: 1100100101100000

combo: 0000000000010110

word: 0111010100100000

combo: 0000000000010010

word: 1101000100110000

combo: 0000000000010011

word: 1111110100010000

combo: 0000000000010001

temp: 0000000000010001

orbit_checks[temp>>log2radix]= 1011000000000101000000010000000

word: 0101100100000000

combo: 0000000000010000

word: 1100001100000000

combo: 0000000000110000

temp: 0000000000110000

orbit_checks[temp>>log2radix]= 100000001000000101100000000010

passed if statements
temp basis:
0001011110110010
1101010010110010
0011100011010011
0001100000100100
rs list:
0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 
0 1 0 0 1 1 0 1 0 0 1 0 1 0 1 1 
1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 0 
0 0 1 0 0 1 0 0 0 0 0 1 1 0 0 0 
B_aug:
[1 0 0 0 0 1 1 0 1 1 1 1 0 1 0 0]
[0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0]
[0 0 1 0 0 1 0 0 0 0 0 1 1 0 0 0]
[0 0 0 1 0 0 0 1 0 0 1 0 0 1 0 0]
[0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1]
m:
[0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0]
[0 1 0 0 1 1 0 1 0 0 1 0 1 0 1 1]
[1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 0]
[0 0 1 0 0 1 0 0 0 0 0 1 1 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), ( 9,10), ( 9,15)(10,16), (2,5), ( 1, 2)( 5, 7)( 8,14)(12,13), ( 3,13)( 6,12) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 7, 4, 5, 6, 3, 8, 9, 13, 11, 12, 10, 14, 15]
[0, 1, 2, 10, 4, 5, 6, 13, 8, 9, 3, 11, 12, 7, 14, 15]
[0, 1, 3, 2, 4, 10, 6, 12, 8, 9, 5, 13, 7, 11, 14, 15]
[0, 1, 2, 13, 4, 5, 6, 10, 8, 9, 7, 11, 12, 3, 14, 15]
[0, 1, 3, 12, 4, 10, 6, 2, 8, 9, 11, 13, 7, 5, 14, 15]
[0, 1, 3, 5, 4, 10, 6, 11, 8, 9, 2, 13, 7, 12, 14, 15]
[0, 1, 3, 11, 4, 10, 6, 5, 8, 9, 12, 13, 7, 2, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1100001100000000
1101011110100000
1110111100100000
word: 0110011100010000

combo: 0000000000110001

word: 0100101100110000

combo: 0000000000110011

word: 1110111100100000

combo: 0000000000110010

temp: 0000000000110010

orbit_checks[temp>>log2radix]= 100100001001010101100000000010

word: 0101001101100000

combo: 0000000000110110

word: 1111011101110000

combo: 0000000000110111

word: 1101101101010000

combo: 0000000000110101

temp: 0000000000110101

orbit_checks[temp>>log2radix]= 100100001001010101100000000010

word: 0111111101000000

combo: 0000000000110100

word: 0100011111000000

combo: 0000000000111100

word: 1110001111010000

combo: 0000000000111101

temp: 0000000000111101

orbit_checks[temp>>log2radix]= 100100001001010101100000000010

word: 1100111111110000

combo: 0000000000111111

word: 0110101111100000

combo: 0000000000111110

word: 1101011110100000

combo: 0000000000111010

temp: 0000000000111010

orbit_checks[temp>>log2radix]= 100100001001010101100000000010

word: 0111001110110000

combo: 0000000000111011

word: 0101111110010000

combo: 0000000000111001

word: 1111101110000000

combo: 0000000000111000

temp: 0000000000111000

orbit_checks[temp>>log2radix]= 100100001001010101100000000010

passed if statements
temp basis:
1101010011100001
1110110000110010
1111101110000000
0001100000100100
rs list:
1 0 0 0 0 1 1 1 0 0 1 0 1 0 1 1 
0 1 0 0 1 1 0 0 0 0 1 1 0 1 1 1 
0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
0 0 1 0 0 1 0 0 0 0 0 1 1 0 0 0 
B_aug:
[1 0 0 0 0 1 1 0 1 1 1 1 0 1 0 0]
[0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0]
[0 0 1 0 0 1 0 0 0 0 0 1 1 0 0 0]
[0 0 0 1 0 0 0 1 0 0 1 0 0 1 0 0]
[0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1]
m:
[1 0 0 0 0 1 1 1 0 0 1 0 1 0 1 1]
[0 1 0 0 1 1 0 0 0 0 1 1 0 1 1 1]
[0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1]
[0 0 1 0 0 1 0 0 0 0 0 1 1 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), ( 9,10), ( 8,14)( 9,15)(10,16)(12,13), (2,5), ( 2, 9)( 5,10)( 6,13)( 8,11), ( 1, 2)( 5, 7)( 8,14)(12,13), ( 3,12)( 6,13) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 7, 4, 5, 6, 3, 8, 9, 13, 11, 12, 10, 14, 15]
[0, 1, 2, 10, 4, 5, 6, 13, 8, 9, 3, 11, 12, 7, 14, 15]
[0, 1, 3, 2, 4, 10, 6, 12, 8, 9, 5, 13, 7, 11, 14, 15]
[0, 1, 2, 13, 4, 5, 6, 3, 14, 15, 7, 12, 11, 10, 8, 9]
[0, 1, 3, 12, 4, 10, 6, 2, 8, 9, 11, 13, 7, 5, 14, 15]
[0, 1, 3, 5, 4, 10, 6, 11, 8, 9, 2, 13, 7, 12, 14, 15]
[0, 1, 3, 11, 4, 10, 6, 2, 14, 15, 12, 7, 13, 5, 8, 9]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111101110000000
word: 0110001010000000

combo: 0000000000101000

word: 1100011010010000

combo: 0000000000101001

word: 1110101010110000

combo: 0000000000101011

temp: 0000000000101011

orbit_checks[temp>>log2radix]= 100101001001010101100000000010

word: 0100111010100000

combo: 0000000000101010

word: 1111001011100000

combo: 0000000000101110

temp: 0000000000101110

orbit_checks[temp>>log2radix]= 100101001001010101100000000010

word: 0101011011110000

combo: 0000000000101111

word: 0111101011010000

combo: 0000000000101101

word: 1101111011000000

combo: 0000000000101100

temp: 0000000000101100

orbit_checks[temp>>log2radix]= 100101001001010101100000000010

word: 1110011001000000

combo: 0000000000100100

word: 0100001001010000

combo: 0000000000100101

word: 0110111001110000

combo: 0000000000100111

word: 1100101001100000

combo: 0000000000100110

word: 0111011000100000

combo: 0000000000100010

word: 1101001000110000

combo: 0000000000100011

word: 1111111000010000

combo: 0000000000100001

temp: 0000000000100001

orbit_checks[temp>>log2radix]= 100101001001010101100000000010

word: 0101101000000000

combo: 0000000000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 1 1 1 0 1 0]
[0 1 0 1 1 0 0 1 1 1 1 0 1]
[0 0 1 0 1 0 0 0 0 0 0 1 1]
limit on degree (length): 15
ortho basis:
000010000001000
100110000010000
001110000100000
001110001000000
101100010000000
101100100000000
101101000000000
110000000000000

B_can_lab before row reduction:
001110001110110
000001111111010
000000000001111

B_can_lab after row reduction:
001110001111001
000001111111010
001111110001100

word generated as sum over rows of ortho_basis starting at 7: 110000000000000
gate: 000000000000111
k_gate: 000000001111111
nonzero_gate: 110000000000000
radix_gate: 000000000011111

Starting main loop:
word: 110000000000000

combo: 000000000000000

word: 110010000001000

combo: 000000000000001

temp: 000000000000001

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
001011110011010
111001110010010
000101111110001
rs list:
0 1 0 1 1 0 0 1 1 1 1 0 1 0 0 
0 1 0 0 1 0 0 1 1 1 0 0 1 1 1 
1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0 0]
[0 1 0 1 1 0 0 1 1 1 1 0 1 0 0]
[0 0 1 0 1 0 0 0 0 0 0 1 1 0 0]
[0 0 0 1 0 0 0 0 0 0 1 0 0 1 1]
m:
[0 1 0 1 1 0 0 1 1 1 1 0 1 0 0]
[0 1 0 0 1 0 0 1 1 1 0 0 1 1 1]
[1 0 0 0 1 1 1 1 1 1 0 1 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (14,15), ( 9,10), (8,9), (6,7), ( 4,11), ( 4,14)(11,15), (1,6), ( 1, 8)( 5,12)( 6, 9)( 7,10) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 4, 3, 2, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14]
[7, 1, 11, 3, 2, 8, 9, 0, 5, 6, 10, 12, 4, 13, 14]
[7, 1, 12, 3, 4, 8, 9, 0, 5, 6, 10, 11, 2, 13, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
110010000001000
111001110011000
110000001100000
111011110010000
110101110110000
110001100000000
110101111010000
110001010000000
110000110000000
word: 010100000011000

combo: 000000000000011

word: 010110000010000

combo: 000000000000010

word: 011000000110000

combo: 000000000000110

word: 011010000111000

combo: 000000000000111

word: 111100000101000

combo: 000000000000101

word: 111110000100000

combo: 000000000000100

word: 110000001100000

combo: 000000000001100

temp: 000000000001100

orbit_checks[temp>>log2radix]= 001000000000010

word: 110010001101000

combo: 000000000001101

word: 010100001111000

combo: 000000000001111

word: 010110001110000

combo: 000000000001110

word: 011000001010000

combo: 000000000001010

word: 011010001011000

combo: 000000000001011

word: 111100001001000

combo: 000000000001001

word: 111110001000000

combo: 000000000001000

word: 010010011000000

combo: 000000000011000

word: 010000011001000

combo: 000000000011001

word: 110110011011000

combo: 000000000011011

temp: 000000000011011

orbit_checks[temp>>log2radix]= 001000000000010

passed if statements
temp basis:
111010011001100
001011110011010
111101101000010
rs list:
0 0 1 1 0 0 1 1 0 0 1 0 1 1 1 
0 1 0 1 1 0 0 1 1 1 1 0 1 0 0 
0 1 0 0 0 0 1 0 1 1 0 1 1 1 1 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0 0]
[0 1 0 1 1 0 0 1 1 1 1 0 1 0 0]
[0 0 1 0 1 0 0 0 0 0 0 1 1 0 0]
[0 0 0 1 1 0 1 1 0 0 1 1 0 1 1]
m:
[0 0 1 1 0 0 1 1 0 0 1 0 1 1 1]
[0 1 0 1 1 0 0 1 1 1 1 0 1 0 0]
[0 1 0 0 0 0 1 0 1 1 0 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,10), ( 4,11), ( 4,11)(14,15), ( 1, 6)( 4,11), ( 3, 5)( 4,11)(12,13), ( 3,12)( 4,11)( 5,13), ( 4,15,11,14)( 5,12)( 7, 8), ( 2, 7, 8)( 4,10,15,11, 9,14)( 5,13,12) ] )
Right transversal of automorphism group of B_aug:
[3, 1, 2, 0, 4, 10, 6, 7, 13, 14, 5, 11, 12, 8, 9]
[8, 1, 2, 13, 4, 9, 6, 7, 0, 5, 14, 11, 12, 3, 10]
[13, 1, 2, 0, 11, 14, 7, 6, 3, 10, 5, 4, 12, 8, 9]
orbits:
110110011011000
110110010111000
111101101001000
110110101011000
111010011110000
110010111101000
110011101101000
111101100101000
110110100111000
111000011111000
110011011101000
111111101000000
111101011001000
111111100100000
111001001111000
110111001011000
111010101110000
110111000111000
111101010101000
111000101111000
111111011000000
111011001110000
111100111001000
111111010100000
111100110101000
111110111000000
111110110100000
word: 110100011010000

combo: 000000000011010

word: 111010011110000

combo: 000000000011110

temp: 000000000011110

orbit_checks[temp>>log2radix]= 11001000100000000001000000000010

word: 111000011111000

combo: 000000000011111

temp: 000000000011111

orbit_checks[temp>>log2radix]= 11001000100000000001000000000010

word: 011110011101000

combo: 000000000011101

word: 011100011100000

combo: 000000000011100

word: 010010010100000

combo: 000000000010100

word: 010000010101000

combo: 000000000010101

word: 110110010111000

combo: 000000000010111

temp: 000000000010111

orbit_checks[temp>>log2radix]= 11001000100000000001000000000010

word: 110100010110000

combo: 000000000010110

word: 111010010010000

combo: 000000000010010

word: 111000010011000

combo: 000000000010011

word: 011110010001000

combo: 000000000010001

word: 011100010000000

combo: 000000000010000

word: 110000110000000

combo: 000000000110000

temp: 000000000110000

orbit_checks[temp>>log2radix]= 100011001100011100100010000000

word: 110010110001000

combo: 000000000110001

word: 010100110011000

combo: 000000000110011

word: 010110110010000

combo: 000000000110010

word: 011000110110000

combo: 000000000110110

word: 011010110111000

combo: 000000000110111

word: 111100110101000

combo: 000000000110101

temp: 000000000110101

orbit_checks[temp>>log2radix]= 100011001100011100100010000000

word: 111110110100000

combo: 000000000110100

temp: 000000000110100

orbit_checks[temp>>log2radix]= 100011001100011100100010000000

word: 110000111100000

combo: 000000000111100

word: 110010111101000

combo: 000000000111101

temp: 000000000111101

orbit_checks[temp>>log2radix]= 100011001100011100100010000000

word: 010100111111000

combo: 000000000111111

word: 010110111110000

combo: 000000000111110

word: 011000111010000

combo: 000000000111010

word: 011010111011000

combo: 000000000111011

word: 111100111001000

combo: 000000000111001

temp: 000000000111001

orbit_checks[temp>>log2radix]= 100011001100011100100010000000

word: 111110111000000

combo: 000000000111000

temp: 000000000111000

orbit_checks[temp>>log2radix]= 100011001100011100100010000000

word: 010010101000000

combo: 000000000101000

word: 010000101001000

combo: 000000000101001

word: 110110101011000

combo: 000000000101011

temp: 000000000101011

orbit_checks[temp>>log2radix]= 100011001100011100100010000000

word: 110100101010000

combo: 000000000101010

word: 111010101110000

combo: 000000000101110

temp: 000000000101110

orbit_checks[temp>>log2radix]= 100011001100011100100010000000

word: 111000101111000

combo: 000000000101111

temp: 000000000101111

orbit_checks[temp>>log2radix]= 100011001100011100100010000000

word: 011110101101000

combo: 000000000101101

word: 011100101100000

combo: 000000000101100

word: 010010100100000

combo: 000000000100100

word: 010000100101000

combo: 000000000100101

word: 110110100111000

combo: 000000000100111

temp: 000000000100111

orbit_checks[temp>>log2radix]= 100011001100011100100010000000

word: 110100100110000

combo: 000000000100110

word: 111010100010000

combo: 000000000100010

word: 111000100011000

combo: 000000000100011

word: 011110100001000

combo: 000000000100001

word: 011100100000000

combo: 000000000100000

word: 110001100000000

combo: 000000001100000

temp: 000000001100000

orbit_checks[temp>>log2radix]= 100010011000010001100110001

word: 110011100001000

combo: 000000001100001

word: 010101100011000

combo: 000000001100011

word: 010111100010000

combo: 000000001100010

word: 011001100110000

combo: 000000001100110

word: 011011100111000

combo: 000000001100111

word: 111101100101000

combo: 000000001100101

temp: 000000001100101

orbit_checks[temp>>log2radix]= 100010011000010001100110001

word: 111111100100000

combo: 000000001100100

temp: 000000001100100

orbit_checks[temp>>log2radix]= 100010011000010001100110001

word: 110001101100000

combo: 000000001101100

word: 110011101101000

combo: 000000001101101

temp: 000000001101101

orbit_checks[temp>>log2radix]= 100010011000010001100110001

word: 010101101111000

combo: 000000001101111

word: 010111101110000

combo: 000000001101110

word: 011001101010000

combo: 000000001101010

word: 011011101011000

combo: 000000001101011

word: 111101101001000

combo: 000000001101001

temp: 000000001101001

orbit_checks[temp>>log2radix]= 100010011000010001100110001

word: 111111101000000

combo: 000000001101000

temp: 000000001101000

orbit_checks[temp>>log2radix]= 100010011000010001100110001

word: 010011111000000

combo: 000000001111000

word: 010001111001000

combo: 000000001111001

word: 110111111011000

combo: 000000001111011

word: 110101111010000

combo: 000000001111010

temp: 000000001111010

orbit_checks[temp>>log2radix]= 100010011000010001100110001

word: 111011111110000

combo: 000000001111110

word: 111001111111000

combo: 000000001111111

word: 011111111101000

combo: 000000001111101

word: 011101111100000

combo: 000000001111100

word: 010011110100000

combo: 000000001110100

word: 010001110101000

combo: 000000001110101

word: 110111110111000

combo: 000000001110111

word: 110101110110000

combo: 000000001110110

temp: 000000001110110

orbit_checks[temp>>log2radix]= 100010011000010001100110001

word: 111011110010000

combo: 000000001110010

temp: 000000001110010

orbit_checks[temp>>log2radix]= 100010011000010001100110001

word: 111001110011000

combo: 000000001110011

temp: 000000001110011

orbit_checks[temp>>log2radix]= 100010011000010001100110001

word: 011111110001000

combo: 000000001110001

word: 011101110000000

combo: 000000001110000

word: 110001010000000

combo: 000000001010000

temp: 000000001010000

orbit_checks[temp>>log2radix]= 100011001100011100100010000000

word: 110011010001000

combo: 000000001010001

word: 010101010011000

combo: 000000001010011

word: 010111010010000

combo: 000000001010010

word: 011001010110000

combo: 000000001010110

word: 011011010111000

combo: 000000001010111

word: 111101010101000

combo: 000000001010101

temp: 000000001010101

orbit_checks[temp>>log2radix]= 100011001100011100100010000000

word: 111111010100000

combo: 000000001010100

temp: 000000001010100

orbit_checks[temp>>log2radix]= 100011001100011100100010000000

word: 110001011100000

combo: 000000001011100

word: 110011011101000

combo: 000000001011101

temp: 000000001011101

orbit_checks[temp>>log2radix]= 100011001100011100100010000000

word: 010101011111000

combo: 000000001011111

word: 010111011110000

combo: 000000001011110

word: 011001011010000

combo: 000000001011010

word: 011011011011000

combo: 000000001011011

word: 111101011001000

combo: 000000001011001

temp: 000000001011001

orbit_checks[temp>>log2radix]= 100011001100011100100010000000

word: 111111011000000

combo: 000000001011000

temp: 000000001011000

orbit_checks[temp>>log2radix]= 100011001100011100100010000000

word: 010011001000000

combo: 000000001001000

word: 010001001001000

combo: 000000001001001

word: 110111001011000

combo: 000000001001011

temp: 000000001001011

orbit_checks[temp>>log2radix]= 100011001100011100100010000000

word: 110101001010000

combo: 000000001001010

word: 111011001110000

combo: 000000001001110

temp: 000000001001110

orbit_checks[temp>>log2radix]= 100011001100011100100010000000

word: 111001001111000

combo: 000000001001111

temp: 000000001001111

orbit_checks[temp>>log2radix]= 100011001100011100100010000000

word: 011111001101000

combo: 000000001001101

word: 011101001100000

combo: 000000001001100

word: 010011000100000

combo: 000000001000100

word: 010001000101000

combo: 000000001000101

word: 110111000111000

combo: 000000001000111

temp: 000000001000111

orbit_checks[temp>>log2radix]= 100011001100011100100010000000

word: 110101000110000

combo: 000000001000110

word: 111011000010000

combo: 000000001000010

word: 111001000011000

combo: 000000001000011

word: 011111000001000

combo: 000000001000001

word: 011101000000000

combo: 000000001000000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0 0]
[0 1 0 0 0 0 1 0 1 1 0 1 1 1 1]
[0 0 1 0 1 0 0 0 0 0 0 1 1 0 0]
[0 0 0 1 1 0 1 1 0 0 1 1 0 1 1]
limit on degree (length): 16
ortho basis:
0101100000010000
0011100000100000
1111100001000000
1011000010000000
0111000100000000
0111001000000000
0100010000000000

B_can_lab before row reduction:
0110111000010110
0011011110001100
0000000000001111
0110000111100110

B_can_lab after row reduction:
0110000111101001
0101011001101010
0011011110001100
0000111111110000
0000000000111000

word generated as sum over rows of ortho_basis starting at 7: 0000000000000000
gate: 0000000000001111
k_gate: 0000000001111111
nonzero_gate: 1000000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 0000000000000000

combo: 0000000000000000

word: 0101100000010000

combo: 0000000000000001

word: 0110000000110000

combo: 0000000000000011

word: 0011100000100000

combo: 0000000000000010

word: 1100000001100000

combo: 0000000000000110

temp: 0000000000000110

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
0101110011011000
1101001110010001
1001010011000111
1010010011010011
rs list:
0 0 0 1 1 0 1 1 0 0 1 1 1 0 1 0 
1 0 0 0 1 0 0 1 1 1 0 0 1 0 1 1 
1 1 1 0 0 0 1 1 0 0 1 0 1 0 0 1 
1 1 0 0 1 0 1 1 0 0 1 0 0 1 0 1 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 0 1 0 0 0]
[0 1 0 0 0 0 1 0 1 1 1 0 1 1 1 0]
[0 0 1 0 1 0 0 0 0 0 0 0 1 1 0 0]
[0 0 0 1 1 0 1 1 0 0 1 1 1 0 1 0]
[0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1]
m:
[0 0 0 1 1 0 1 1 0 0 1 1 1 0 1 0]
[1 0 0 0 1 0 0 1 1 1 0 0 1 0 1 1]
[1 1 1 0 0 0 1 1 0 0 1 0 1 0 0 1]
[1 1 0 0 1 0 1 1 0 0 1 0 0 1 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,10), ( 3, 5)(13,14), ( 3,13)( 5,14), ( 2, 8)( 4, 9)( 5,14)(10,12), ( 1,11)( 4, 9)( 7,16)(10,12) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 15, 14]
[0, 1, 2, 3, 4, 14, 15, 7, 8, 9, 10, 11, 12, 13, 5, 6]
[1, 0, 5, 3, 6, 2, 4, 10, 8, 9, 7, 11, 14, 15, 12, 13]
[0, 1, 2, 3, 4, 15, 14, 7, 8, 9, 10, 11, 12, 13, 6, 5]
orbits:
1100000001100000
1000010001100000
1000101001000000
1000100010100000
1111010101100000
1000100101000000
1101111010010000
1101110001110000
1111011001100000
1100001010000000
1011111101000000
1101110110010000
1101001110110000
1100000110000000
1111101101000000
1000011010000000
1110101110010000
1001101101110000
1110011010110000
1001011110110000
1000010110000000
1010111110010000
1100111110100000
1110010110110000
word: 1001100001110000

combo: 0000000000000111

word: 1010000001010000

combo: 0000000000000101

temp: 0000000000000101

orbit_checks[temp>>log2radix]= 1000100000000010001000000

passed if statements
temp basis:
0110110011001100
0111011101000010
0010101110011010
1000101111001010
rs list:
0 0 1 1 0 0 1 1 0 0 1 1 0 1 1 0 
0 1 0 0 0 0 1 0 1 1 1 0 1 1 1 0 
0 1 0 1 1 0 0 1 1 1 0 1 0 1 0 0 
0 1 0 1 0 0 1 1 1 1 0 1 0 0 0 1 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 0 1 0 0 0]
[0 1 0 0 0 0 1 0 1 1 1 0 1 1 1 0]
[0 0 1 0 1 0 0 0 0 0 0 0 1 1 0 0]
[0 0 0 1 1 0 1 1 0 0 1 1 1 0 1 0]
[0 0 0 0 1 0 1 0 0 0 0 0 0 1 0 1]
m:
[0 0 1 1 0 0 1 1 0 0 1 1 0 1 1 0]
[0 1 0 0 0 0 1 0 1 1 1 0 1 1 1 0]
[0 1 0 1 1 0 0 1 1 1 0 1 0 1 0 0]
[0 1 0 1 0 0 1 1 1 1 0 1 0 0 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,10), ( 4,12), ( 4,12)(11,15), ( 1, 6)( 4,12)(11,15), ( 4,12)( 5, 7)(11,15)(14,16), ( 4,12)( 5,14)( 7,16)(11,15), ( 3, 5)( 4,12)(11,15)(13,14), ( 2, 8)( 4,10,12, 9)( 7,16)(11,15) ] )
Right transversal of automorphism group of B_aug:
[3, 1, 2, 0, 4, 11, 6, 7, 10, 14, 8, 5, 12, 13, 9, 15]
[8, 1, 2, 10, 4, 9, 6, 7, 0, 5, 3, 14, 12, 13, 11, 15]
[10, 1, 2, 8, 4, 14, 6, 7, 3, 11, 0, 9, 12, 13, 5, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1010000001010000
1011000010000000
1110011101010000
word: 1111100001000000

combo: 0000000000000100

word: 0100100011000000

combo: 0000000000001100

word: 0001000011010000

combo: 0000000000001101

word: 0010100011110000

combo: 0000000000001111

word: 0111000011100000

combo: 0000000000001110

word: 1000100010100000

combo: 0000000000001010

temp: 0000000000001010

orbit_checks[temp>>log2radix]= 1000100000000010101100000

word: 1101000010110000

combo: 0000000000001011

word: 1110100010010000

combo: 0000000000001001

word: 1011000010000000

combo: 0000000000001000

temp: 0000000000001000

orbit_checks[temp>>log2radix]= 1000100000000010101100000

word: 1100000110000000

combo: 0000000000011000

temp: 0000000000011000

orbit_checks[temp>>log2radix]= 1000100000000010101100000

word: 1001100110010000

combo: 0000000000011001

word: 1010000110110000

combo: 0000000000011011

word: 1111100110100000

combo: 0000000000011010

temp: 0000000000011010

orbit_checks[temp>>log2radix]= 1000100000000010101100000

passed if statements
temp basis:
0110110011001100
1010010101111000
1111100110100000
0100111100101001
rs list:
0 0 1 1 0 0 1 1 0 0 1 1 0 1 1 0 
0 0 0 1 1 1 1 0 1 0 1 0 0 1 0 1 
0 0 0 0 0 1 0 1 1 0 0 1 1 1 1 1 
1 0 0 1 0 1 0 0 1 1 1 1 0 0 1 0 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 0 1 0 0 0]
[0 1 0 0 0 0 1 0 1 1 1 0 1 1 1 0]
[0 0 1 0 1 0 0 0 0 0 0 0 1 1 0 0]
[0 0 0 1 1 0 1 1 0 0 1 1 1 0 1 0]
[0 0 0 0 0 1 0 1 1 0 0 1 1 1 1 1]
m:
[0 0 1 1 0 0 1 1 0 0 1 1 0 1 1 0]
[0 0 0 1 1 1 1 0 1 0 1 0 0 1 0 1]
[0 0 0 0 0 1 0 1 1 0 0 1 1 1 1 1]
[1 0 0 1 0 1 0 0 1 1 1 1 0 0 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 6,12)( 8,16)( 9,15)(13,14), ( 4,15)( 5,13)( 7, 8)(11,12), ( 3, 5)( 6,12)( 8,16)( 9,15), ( 1,10)( 4,11)( 6, 9)(12,15), ( 1, 4)( 6,12)( 9,15)(10,11) ] )
Right transversal of automorphism group of B_aug:
[0, 5, 2, 3, 4, 1, 11, 10, 8, 15, 7, 6, 12, 13, 14, 9]
[0, 6, 2, 3, 4, 11, 1, 15, 8, 10, 9, 5, 12, 13, 14, 7]
[0, 7, 2, 3, 4, 10, 15, 1, 8, 11, 5, 9, 12, 13, 14, 6]
[1, 0, 2, 6, 4, 5, 3, 14, 15, 9, 10, 11, 12, 13, 7, 8]
[0, 11, 2, 3, 4, 1, 5, 10, 14, 7, 15, 6, 13, 12, 8, 9]
[0, 10, 2, 3, 4, 7, 9, 5, 8, 6, 1, 15, 12, 13, 14, 11]
[0, 15, 2, 3, 4, 9, 7, 6, 8, 5, 11, 10, 12, 13, 14, 1]
orbits:
1111100110100000
1111101010100000
1011110110100000
1010110101110000
1011111010100000
1110100101110000
1010111001110000
1110101001110000
word: 0000000111100000

combo: 0000000000011110

word: 0101100111110000

combo: 0000000000011111

word: 0110000111010000

combo: 0000000000011101

word: 0011100111000000

combo: 0000000000011100

word: 1000100101000000

combo: 0000000000010100

temp: 0000000000010100

orbit_checks[temp>>log2radix]= 101100100000000010101100000

word: 1101000101010000

combo: 0000000000010101

word: 1110100101110000

combo: 0000000000010111

temp: 0000000000010111

orbit_checks[temp>>log2radix]= 101100100000000010101100000

word: 1011000101100000

combo: 0000000000010110

word: 0100100100100000

combo: 0000000000010010

word: 0001000100110000

combo: 0000000000010011

word: 0010100100010000

combo: 0000000000010001

word: 0111000100000000

combo: 0000000000010000

word: 0000001100000000

combo: 0000000000110000

word: 0101101100010000

combo: 0000000000110001

word: 0110001100110000

combo: 0000000000110011

word: 0011101100100000

combo: 0000000000110010

word: 1100001101100000

combo: 0000000000110110

word: 1001101101110000

combo: 0000000000110111

temp: 0000000000110111

orbit_checks[temp>>log2radix]= 1010100100000000010110010000

word: 1010001101010000

combo: 0000000000110101

word: 1111101101000000

combo: 0000000000110100

temp: 0000000000110100

orbit_checks[temp>>log2radix]= 1010100100000000010110010000

word: 0100101111000000

combo: 0000000000111100

word: 0001001111010000

combo: 0000000000111101

word: 0010101111110000

combo: 0000000000111111

word: 0111001111100000

combo: 0000000000111110

word: 1000101110100000

combo: 0000000000111010

word: 1101001110110000

combo: 0000000000111011

temp: 0000000000111011

orbit_checks[temp>>log2radix]= 1010100100000000010110010000

word: 1110101110010000

combo: 0000000000111001

temp: 0000000000111001

orbit_checks[temp>>log2radix]= 1010100100000000010110010000

word: 1011001110000000

combo: 0000000000111000

word: 1100001010000000

combo: 0000000000101000

temp: 0000000000101000

orbit_checks[temp>>log2radix]= 1010100100000000010110010000

word: 1001101010010000

combo: 0000000000101001

word: 1010001010110000

combo: 0000000000101011

word: 1111101010100000

combo: 0000000000101010

temp: 0000000000101010

orbit_checks[temp>>log2radix]= 1010100100000000010110010000

word: 0000001011100000

combo: 0000000000101110

word: 0101101011110000

combo: 0000000000101111

word: 0110001011010000

combo: 0000000000101101

word: 0011101011000000

combo: 0000000000101100

word: 1000101001000000

combo: 0000000000100100

temp: 0000000000100100

orbit_checks[temp>>log2radix]= 1010100100000000010110010000

word: 1101001001010000

combo: 0000000000100101

word: 1110101001110000

combo: 0000000000100111

temp: 0000000000100111

orbit_checks[temp>>log2radix]= 1010100100000000010110010000

word: 1011001001100000

combo: 0000000000100110

word: 0100101000100000

combo: 0000000000100010

word: 0001001000110000

combo: 0000000000100011

word: 0010101000010000

combo: 0000000000100001

word: 0111001000000000

combo: 0000000000100000

word: 0011011000000000

combo: 0000000001100000

word: 0110111000010000

combo: 0000000001100001

word: 0101011000110000

combo: 0000000001100011

word: 0000111000100000

combo: 0000000001100010

word: 1111011001100000

combo: 0000000001100110

temp: 0000000001100110

orbit_checks[temp>>log2radix]= 1110001100000000111111000000

word: 1010111001110000

combo: 0000000001100111

temp: 0000000001100111

orbit_checks[temp>>log2radix]= 1110001100000000111111000000

word: 1001011001010000

combo: 0000000001100101

word: 1100111001000000

combo: 0000000001100100

word: 0111111011000000

combo: 0000000001101100

word: 0010011011010000

combo: 0000000001101101

word: 0001111011110000

combo: 0000000001101111

word: 0100011011100000

combo: 0000000001101110

word: 1011111010100000

combo: 0000000001101010

temp: 0000000001101010

orbit_checks[temp>>log2radix]= 1110001100000000111111000000

word: 1110011010110000

combo: 0000000001101011

temp: 0000000001101011

orbit_checks[temp>>log2radix]= 1110001100000000111111000000

word: 1101111010010000

combo: 0000000001101001

temp: 0000000001101001

orbit_checks[temp>>log2radix]= 1110001100000000111111000000

word: 1000011010000000

combo: 0000000001101000

temp: 0000000001101000

orbit_checks[temp>>log2radix]= 1110001100000000111111000000

word: 1111011110000000

combo: 0000000001111000

temp: 0000000001111000

orbit_checks[temp>>log2radix]= 1110001100000000111111000000

passed if statements
temp basis:
1110010001110001
0101110011011000
1111011110000000
1000000011000010
rs list:
1 0 0 0 1 1 1 0 0 0 1 0 0 1 1 1 
0 0 0 1 1 0 1 1 0 0 1 1 1 0 1 0 
0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 1 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 0 1 0 0 0]
[0 1 0 0 0 0 1 0 1 1 1 0 1 1 1 0]
[0 0 1 0 1 0 0 0 0 0 0 0 1 1 0 0]
[0 0 0 1 1 0 1 1 0 0 1 1 1 0 1 0]
[0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1]
m:
[1 0 0 0 1 1 1 0 0 0 1 0 0 1 1 1]
[0 0 0 1 1 0 1 1 0 0 1 1 1 0 1 0]
[0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1]
[0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,15), ( 9,10), ( 8,16)( 9,11)(10,15)(13,14), ( 4, 9)( 5,14)( 7,16)(10,12), ( 1, 4)( 6,12)( 8,16)(13,14), ( 2,16)( 7, 8) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 4, 3, 2, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15]
[0, 1, 12, 3, 13, 5, 6, 7, 8, 9, 10, 11, 2, 4, 14, 15]
[0, 2, 1, 3, 6, 5, 4, 12, 8, 9, 10, 11, 7, 15, 14, 13]
[0, 1, 13, 8, 2, 5, 15, 7, 3, 11, 10, 9, 4, 12, 14, 6]
[0, 2, 6, 3, 1, 5, 4, 12, 8, 9, 10, 11, 15, 7, 14, 13]
[0, 2, 7, 3, 15, 5, 4, 12, 8, 9, 10, 11, 1, 6, 14, 13]
[0, 2, 15, 8, 1, 5, 13, 12, 3, 11, 10, 9, 6, 7, 14, 4]
orbits:
1111011110000000
word: 1010111110010000

combo: 0000000001111001

temp: 0000000001111001

orbit_checks[temp>>log2radix]= 1111001100000000111111000000

word: 1001011110110000

combo: 0000000001111011

temp: 0000000001111011

orbit_checks[temp>>log2radix]= 1111001100000000111111000000

word: 1100111110100000

combo: 0000000001111010

temp: 0000000001111010

orbit_checks[temp>>log2radix]= 1111001100000000111111000000

word: 0011011111100000

combo: 0000000001111110

word: 0110111111110000

combo: 0000000001111111

word: 0101011111010000

combo: 0000000001111101

word: 0000111111000000

combo: 0000000001111100

word: 1011111101000000

combo: 0000000001110100

temp: 0000000001110100

orbit_checks[temp>>log2radix]= 1111001100000000111111000000

word: 1110011101010000

combo: 0000000001110101

temp: 0000000001110101

orbit_checks[temp>>log2radix]= 1111001100000000111111000000

word: 1101111101110000

combo: 0000000001110111

word: 1000011101100000

combo: 0000000001110110

word: 0111111100100000

combo: 0000000001110010

word: 0010011100110000

combo: 0000000001110011

word: 0001111100010000

combo: 0000000001110001

word: 0100011100000000

combo: 0000000001110000

word: 0011010100000000

combo: 0000000001010000

word: 0110110100010000

combo: 0000000001010001

word: 0101010100110000

combo: 0000000001010011

word: 0000110100100000

combo: 0000000001010010

word: 1111010101100000

combo: 0000000001010110

temp: 0000000001010110

orbit_checks[temp>>log2radix]= 1111110000000000000011000000

word: 1010110101110000

combo: 0000000001010111

temp: 0000000001010111

orbit_checks[temp>>log2radix]= 1111110000000000000011000000

word: 1001010101010000

combo: 0000000001010101

word: 1100110101000000

combo: 0000000001010100

word: 0111110111000000

combo: 0000000001011100

word: 0010010111010000

combo: 0000000001011101

word: 0001110111110000

combo: 0000000001011111

word: 0100010111100000

combo: 0000000001011110

word: 1011110110100000

combo: 0000000001011010

temp: 0000000001011010

orbit_checks[temp>>log2radix]= 1111110000000000000011000000

word: 1110010110110000

combo: 0000000001011011

temp: 0000000001011011

orbit_checks[temp>>log2radix]= 1111110000000000000011000000

word: 1101110110010000

combo: 0000000001011001

temp: 0000000001011001

orbit_checks[temp>>log2radix]= 1111110000000000000011000000

word: 1000010110000000

combo: 0000000001011000

temp: 0000000001011000

orbit_checks[temp>>log2radix]= 1111110000000000000011000000

word: 1111010010000000

combo: 0000000001001000

word: 1010110010010000

combo: 0000000001001001

word: 1001010010110000

combo: 0000000001001011

word: 1100110010100000

combo: 0000000001001010

word: 0011010011100000

combo: 0000000001001110

word: 0110110011110000

combo: 0000000001001111

word: 0101010011010000

combo: 0000000001001101

word: 0000110011000000

combo: 0000000001001100

word: 1011110001000000

combo: 0000000001000100

word: 1110010001010000

combo: 0000000001000101

word: 1101110001110000

combo: 0000000001000111

temp: 0000000001000111

orbit_checks[temp>>log2radix]= 1111110000000000000011000000

word: 1000010001100000

combo: 0000000001000110

temp: 0000000001000110

orbit_checks[temp>>log2radix]= 1111110000000000000011000000

word: 0111110000100000

combo: 0000000001000010

word: 0010010000110000

combo: 0000000001000011

word: 0001110000010000

combo: 0000000001000001

word: 0100010000000000

combo: 0000000001000000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 1 1 1 0 1 0]
[0 1 0 1 1 0 0 1 1 1 1 0 1]
[0 0 1 0 1 0 0 0 0 0 0 1 1]
limit on degree (length): 16
ortho basis:
0000010000001000
1000110000010000
0001110000100000
0001110001000000
1001100010000000
1001100100000000
1001101000000000
1010000000000000
1100000000000000

B_can_lab before row reduction:
0001110001110110
0000001111111010
0000000000001111

B_can_lab after row reduction:
0001110001111001
0000001111111010
0001111110001100

word generated as sum over rows of ortho_basis starting at 7: 0110000000000000
gate: 0000000000000111
k_gate: 0000000001111111
nonzero_gate: 1110000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 0110000000000000

combo: 0000000000000000

word: 0110010000001000

combo: 0000000000000001

word: 1110100000011000

combo: 0000000000000011

word: 1110110000010000

combo: 0000000000000010

word: 1111000000110000

combo: 0000000000000110

word: 1111010000111000

combo: 0000000000000111

temp: 0000000000000111

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1111010000111000
0001011110011010
0000010001111111
rs list:
0 0 0 1 1 1 0 0 0 0 1 0 1 1 1 1 
0 1 0 1 1 0 0 1 1 1 1 0 1 0 0 0 
1 1 1 1 1 1 1 0 0 0 1 0 0 0 0 0 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 0]
[0 1 0 1 1 0 0 1 1 1 1 0 1 0 0 0]
[0 0 1 0 1 0 0 0 0 0 0 1 1 0 0 0]
[0 0 0 1 1 1 0 0 0 0 1 0 1 1 1 1]
m:
[0 0 0 1 1 1 0 0 0 0 1 0 1 1 1 1]
[0 1 0 1 1 0 0 1 1 1 1 0 1 0 0 0]
[1 1 1 1 1 1 1 0 0 0 1 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), ( 9,10), (8,9), ( 4,11), ( 2, 6)( 8,14)( 9,15)(10,16), ( 1, 4)( 3, 5)( 7,11)( 8,14)( 9,15)(10,16), (1,7) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 11, 3, 12, 5, 6, 7, 8, 9, 10, 2, 4, 13, 14, 15]
[3, 1, 2, 0, 4, 5, 10, 13, 14, 15, 6, 12, 11, 7, 8, 9]
[3, 1, 11, 0, 12, 5, 10, 13, 14, 15, 6, 4, 2, 7, 8, 9]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111010000111000
1111010001011000
1111111111101000
1110001110101000
1110100001111000
1111110100001000
1110001111001000
1110110001110000
1111111000001000
1111110010001000
1110011110100000
1110101010011000
1110101100011000
1111100101100000
1110011111000000
1110100110011000
1110111100010000
1111101001100000
1111100011100000
1110111010010000
1111001010110000
1111001100110000
1110110110010000
1111000110110000
1111001101010000
1111001011010000
1111000111010000
word: 0111100000101000

combo: 0000000000000101

word: 0111110000100000

combo: 0000000000000100

word: 0110000001100000

combo: 0000000000001100

word: 0110010001101000

combo: 0000000000001101

word: 1110100001111000

combo: 0000000000001111

temp: 0000000000001111

orbit_checks[temp>>log2radix]= 10000000000101100100010000000

word: 1110110001110000

combo: 0000000000001110

temp: 0000000000001110

orbit_checks[temp>>log2radix]= 10000000000101100100010000000

word: 1111000001010000

combo: 0000000000001010

word: 1111010001011000

combo: 0000000000001011

temp: 0000000000001011

orbit_checks[temp>>log2radix]= 10000000000101100100010000000

word: 0111100001001000

combo: 0000000000001001

word: 0111110001000000

combo: 0000000000001000

word: 1110010011000000

combo: 0000000000011000

word: 1110000011001000

combo: 0000000000011001

word: 0110110011011000

combo: 0000000000011011

word: 0110100011010000

combo: 0000000000011010

word: 0111010011110000

combo: 0000000000011110

word: 0111000011111000

combo: 0000000000011111

word: 1111110011101000

combo: 0000000000011101

word: 1111100011100000

combo: 0000000000011100

temp: 0000000000011100

orbit_checks[temp>>log2radix]= 10000000000101100100010000000

word: 1110010010100000

combo: 0000000000010100

word: 1110000010101000

combo: 0000000000010101

word: 0110110010111000

combo: 0000000000010111

word: 0110100010110000

combo: 0000000000010110

word: 0111010010010000

combo: 0000000000010010

word: 0111000010011000

combo: 0000000000010011

word: 1111110010001000

combo: 0000000000010001

temp: 0000000000010001

orbit_checks[temp>>log2radix]= 10000000000101100100010000000

word: 1111100010000000

combo: 0000000000010000

word: 0110000110000000

combo: 0000000000110000

word: 0110010110001000

combo: 0000000000110001

word: 1110100110011000

combo: 0000000000110011

temp: 0000000000110011

orbit_checks[temp>>log2radix]= 100010011000001000000000010

word: 1110110110010000

combo: 0000000000110010

temp: 0000000000110010

orbit_checks[temp>>log2radix]= 100010011000001000000000010

word: 1111000110110000

combo: 0000000000110110

temp: 0000000000110110

orbit_checks[temp>>log2radix]= 100010011000001000000000010

word: 1111010110111000

combo: 0000000000110111

word: 0111100110101000

combo: 0000000000110101

word: 0111110110100000

combo: 0000000000110100

word: 0110000111100000

combo: 0000000000111100

word: 0110010111101000

combo: 0000000000111101

word: 1110100111111000

combo: 0000000000111111

word: 1110110111110000

combo: 0000000000111110

word: 1111000111010000

combo: 0000000000111010

temp: 0000000000111010

orbit_checks[temp>>log2radix]= 100010011000001000000000010

word: 1111010111011000

combo: 0000000000111011

word: 0111100111001000

combo: 0000000000111001

word: 0111110111000000

combo: 0000000000111000

word: 1110010101000000

combo: 0000000000101000

word: 1110000101001000

combo: 0000000000101001

word: 0110110101011000

combo: 0000000000101011

word: 0110100101010000

combo: 0000000000101010

word: 0111010101110000

combo: 0000000000101110

word: 0111000101111000

combo: 0000000000101111

word: 1111110101101000

combo: 0000000000101101

word: 1111100101100000

combo: 0000000000101100

temp: 0000000000101100

orbit_checks[temp>>log2radix]= 100010011000001000000000010

word: 1110010100100000

combo: 0000000000100100

word: 1110000100101000

combo: 0000000000100101

word: 0110110100111000

combo: 0000000000100111

word: 0110100100110000

combo: 0000000000100110

word: 0111010100010000

combo: 0000000000100010

word: 0111000100011000

combo: 0000000000100011

word: 1111110100001000

combo: 0000000000100001

temp: 0000000000100001

orbit_checks[temp>>log2radix]= 100010011000001000000000010

word: 1111100100000000

combo: 0000000000100000

word: 0110001100000000

combo: 0000000001100000

word: 0110011100001000

combo: 0000000001100001

word: 1110101100011000

combo: 0000000001100011

temp: 0000000001100011

orbit_checks[temp>>log2radix]= 100011001100000000010001001100

word: 1110111100010000

combo: 0000000001100010

temp: 0000000001100010

orbit_checks[temp>>log2radix]= 100011001100000000010001001100

word: 1111001100110000

combo: 0000000001100110

temp: 0000000001100110

orbit_checks[temp>>log2radix]= 100011001100000000010001001100

word: 1111011100111000

combo: 0000000001100111

word: 0111101100101000

combo: 0000000001100101

word: 0111111100100000

combo: 0000000001100100

word: 0110001101100000

combo: 0000000001101100

word: 0110011101101000

combo: 0000000001101101

word: 1110101101111000

combo: 0000000001101111

word: 1110111101110000

combo: 0000000001101110

word: 1111001101010000

combo: 0000000001101010

temp: 0000000001101010

orbit_checks[temp>>log2radix]= 100011001100000000010001001100

word: 1111011101011000

combo: 0000000001101011

word: 0111101101001000

combo: 0000000001101001

word: 0111111101000000

combo: 0000000001101000

word: 1110011111000000

combo: 0000000001111000

temp: 0000000001111000

orbit_checks[temp>>log2radix]= 100011001100000000010001001100

word: 1110001111001000

combo: 0000000001111001

temp: 0000000001111001

orbit_checks[temp>>log2radix]= 100011001100000000010001001100

word: 0110111111011000

combo: 0000000001111011

word: 0110101111010000

combo: 0000000001111010

word: 0111011111110000

combo: 0000000001111110

word: 0111001111111000

combo: 0000000001111111

word: 1111111111101000

combo: 0000000001111101

temp: 0000000001111101

orbit_checks[temp>>log2radix]= 100011001100000000010001001100

word: 1111101111100000

combo: 0000000001111100

word: 1110011110100000

combo: 0000000001110100

temp: 0000000001110100

orbit_checks[temp>>log2radix]= 100011001100000000010001001100

word: 1110001110101000

combo: 0000000001110101

temp: 0000000001110101

orbit_checks[temp>>log2radix]= 100011001100000000010001001100

word: 0110111110111000

combo: 0000000001110111

word: 0110101110110000

combo: 0000000001110110

word: 0111011110010000

combo: 0000000001110010

word: 0111001110011000

combo: 0000000001110011

word: 1111111110001000

combo: 0000000001110001

word: 1111101110000000

combo: 0000000001110000

temp: 0000000001110000

orbit_checks[temp>>log2radix]= 100011001100000000010001001100

passed if statements
temp basis:
0001110001101011
0001011110011010
1110110000011010
rs list:
1 1 0 1 0 1 1 0 0 0 1 1 1 0 0 0 
0 1 0 1 1 0 0 1 1 1 1 0 1 0 0 0 
0 1 0 1 1 0 0 0 0 0 1 1 0 1 1 1 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 0]
[0 1 0 1 1 0 0 1 1 1 1 0 1 0 0 0]
[0 0 1 0 1 0 0 0 0 0 0 1 1 0 0 0]
[0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1]
m:
[1 1 0 1 0 1 1 0 0 0 1 1 1 0 0 0]
[0 1 0 1 1 0 0 1 1 1 1 0 1 0 0 0]
[0 1 0 1 1 0 0 0 0 0 1 1 0 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), ( 9,10), (8,9), ( 8,14)( 9,15)(10,16)(12,13), (6,7), ( 4,11), (2,4), ( 2,14)( 4,15)( 5,12)(11,16), ( 1, 2)( 4, 6)( 7,11)( 8,14)( 9,15)(10,16), ( 1, 8)( 2,14)( 4,15)( 6, 9)( 7,10)(11,16) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 4, 3, 2, 5, 6, 13, 14, 15, 10, 11, 12, 7, 8, 9]
[0, 13, 11, 14, 2, 5, 6, 1, 3, 10, 15, 4, 12, 7, 8, 9]
[0, 7, 12, 8, 2, 5, 6, 1, 3, 10, 9, 4, 11, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111101110000000
word: 0110001010000000

combo: 0000000001010000

word: 0110011010001000

combo: 0000000001010001

word: 1110101010011000

combo: 0000000001010011

temp: 0000000001010011

orbit_checks[temp>>log2radix]= 100010011000001000000000010

word: 1110111010010000

combo: 0000000001010010

temp: 0000000001010010

orbit_checks[temp>>log2radix]= 100010011000001000000000010

word: 1111001010110000

combo: 0000000001010110

temp: 0000000001010110

orbit_checks[temp>>log2radix]= 100010011000001000000000010

word: 1111011010111000

combo: 0000000001010111

word: 0111101010101000

combo: 0000000001010101

word: 0111111010100000

combo: 0000000001010100

word: 0110001011100000

combo: 0000000001011100

word: 0110011011101000

combo: 0000000001011101

word: 1110101011111000

combo: 0000000001011111

word: 1110111011110000

combo: 0000000001011110

word: 1111001011010000

combo: 0000000001011010

temp: 0000000001011010

orbit_checks[temp>>log2radix]= 100010011000001000000000010

word: 1111011011011000

combo: 0000000001011011

word: 0111101011001000

combo: 0000000001011001

word: 0111111011000000

combo: 0000000001011000

word: 1110011001000000

combo: 0000000001001000

word: 1110001001001000

combo: 0000000001001001

word: 0110111001011000

combo: 0000000001001011

word: 0110101001010000

combo: 0000000001001010

word: 0111011001110000

combo: 0000000001001110

word: 0111001001111000

combo: 0000000001001111

word: 1111111001101000

combo: 0000000001001101

word: 1111101001100000

combo: 0000000001001100

temp: 0000000001001100

orbit_checks[temp>>log2radix]= 100010011000001000000000010

word: 1110011000100000

combo: 0000000001000100

word: 1110001000101000

combo: 0000000001000101

word: 0110111000111000

combo: 0000000001000111

word: 0110101000110000

combo: 0000000001000110

word: 0111011000010000

combo: 0000000001000010

word: 0111001000011000

combo: 0000000001000011

word: 1111111000001000

combo: 0000000001000001

temp: 0000000001000001

orbit_checks[temp>>log2radix]= 100010011000001000000000010

word: 1111101000000000

combo: 0000000001000000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 0 1 1 1 1]
[0 1 1 1 0 0 0 1 1 1 1 1]
limit on degree (length): 14
ortho basis:
00010000000100
00010000001000
10110000010000
10110000100000
10110001000000
00100010000000
00100100000000
00101000000000
11000000000000

B_can_lab before row reduction:
00000111101111
00111111110000

B_can_lab after row reduction:
00000111101111
00111111110000

word generated as sum over rows of ortho_basis starting at 8: 11000000000000
gate: 00000000000011
k_gate: 00000011111111
nonzero_gate: 11000000000000
radix_gate: 00000000011111

Starting main loop:
word: 11000000000000

combo: 00000000000000

word: 11010000000100

combo: 00000000000001

temp: 00000000000001

orbit_checks[temp>>log2radix]= 00000000000000

passed if statements
temp basis:
00111110001110
11101110001010
rs list:
0 1 1 1 0 0 0 1 1 1 1 1 0 0 
0 1 0 1 0 0 0 1 1 1 0 1 1 1 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0]
[0 1 1 1 0 0 0 1 1 1 1 1 0 0]
[0 0 1 0 0 0 0 0 0 0 1 0 1 1]
m:
[0 1 1 1 0 0 0 1 1 1 1 1 0 0]
[0 1 0 1 0 0 0 1 1 1 0 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 8,10), (8,9), ( 8,10,12), ( 5, 7)( 8,10,12), ( 5, 6)( 8,10,12), ( 1, 5, 6)( 8,10,12), ( 5, 6)( 8,10,12)(13,14), ( 3,11)( 5, 6)( 8,10,12)(13,14), ( 3,13,11,14)( 5, 6)( 8,10,12), ( 2, 4)( 5, 6)( 8,10,12)(13,14) ] )
Right transversal of automorphism group of B_aug:
[7, 1, 2, 3, 8, 9, 11, 0, 4, 5, 10, 6, 12, 13]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
orbits:
11010000000100
11000000001100
11010000001000
11101110001100
11100100000000
11000001010000
11111110000100
11001100000000
11000000110000
11101000000000
11000001100000
11100010000000
11101110110000
11111110001000
11001010000000
11101111010000
11000110000000
11101111100000
word: 11000000001100

combo: 00000000000011

temp: 00000000000011

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 11010000001000

combo: 00000000000010

temp: 00000000000010

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 01100000011000

combo: 00000000000110

word: 01110000011100

combo: 00000000000111

word: 01100000010100

combo: 00000000000101

word: 01110000010000

combo: 00000000000100

word: 11000000110000

combo: 00000000001100

temp: 00000000001100

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 11010000110100

combo: 00000000001101

word: 11000000111100

combo: 00000000001111

word: 11010000111000

combo: 00000000001110

word: 01100000101000

combo: 00000000001010

word: 01110000101100

combo: 00000000001011

word: 01100000100100

combo: 00000000001001

word: 01110000100000

combo: 00000000001000

word: 11000001100000

combo: 00000000011000

temp: 00000000011000

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 11010001100100

combo: 00000000011001

word: 11000001101100

combo: 00000000011011

word: 11010001101000

combo: 00000000011010

word: 01100001111000

combo: 00000000011110

word: 01110001111100

combo: 00000000011111

word: 01100001110100

combo: 00000000011101

word: 01110001110000

combo: 00000000011100

word: 11000001010000

combo: 00000000010100

temp: 00000000010100

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 11010001010100

combo: 00000000010101

word: 11000001011100

combo: 00000000010111

word: 11010001011000

combo: 00000000010110

word: 01100001001000

combo: 00000000010010

word: 01110001001100

combo: 00000000010011

word: 01100001000100

combo: 00000000010001

word: 01110001000000

combo: 00000000010000

word: 01010011000000

combo: 00000000110000

word: 01000011000100

combo: 00000000110001

word: 01010011001100

combo: 00000000110011

word: 01000011001000

combo: 00000000110010

word: 11110011011000

combo: 00000000110110

temp: 00000000110110

orbit_checks[temp>>log2radix]= 00000000000001

passed if statements
temp basis:
00101111110001
11001101010110
rs list:
1 0 0 0 1 1 1 1 1 1 0 1 0 0 
0 1 1 0 1 0 1 0 1 1 0 0 1 1 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0]
[0 1 1 1 0 0 0 1 1 1 1 1 0 0]
[0 0 0 1 1 0 1 1 0 0 1 1 1 1]
m:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0]
[0 1 1 0 1 0 1 0 1 1 0 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 8,12), ( 5, 7)( 8,12), ( 5, 7)( 8,12)(13,14), ( 4,11)( 5, 7)( 8,12), ( 5, 7)( 8,12)( 9,10), ( 2, 3)( 5, 7)( 8,12)( 9,10), ( 2, 5, 3, 7)( 8,12)( 9,14,10,13), ( 2, 9, 3,10)( 5,14, 7,13)( 8,12), ( 1, 2)( 3, 6)( 5, 7)( 8,14,12,13)( 9,10) ] )
Right transversal of automorphism group of B_aug:
[3, 1, 2, 0, 4, 10, 6, 7, 12, 13, 5, 11, 8, 9]
[3, 0, 5, 1, 4, 10, 6, 12, 7, 11, 2, 13, 8, 9]
[3, 0, 5, 4, 1, 10, 2, 8, 7, 11, 6, 9, 12, 13]
[3, 0, 5, 12, 8, 10, 9, 1, 7, 11, 13, 2, 4, 6]
orbits:
11110011011000
11011011011000
11110101011000
11110011010100
11000111011100
11110010111000
11110011101000
11110011100100
11010111011000
11011101011000
11011011010100
11010111010100
11011010111000
11011011101000
11011011100100
11111001011000
11110101010100
11111001010100
11110100111000
11110101101000
11110101100100
11100011011100
11001101011100
11001011011100
11110010110100
11000110111100
11000111101100
11010110110100
11100011101100
11001101101100
11001011101100
11010110111000
11010111101000
11010111100100
11011101010100
11101001011100
11011100111000
11011101101000
11011101100100
11100101011100
11011010110100
11100101101100
11111000111000
11111001101000
11111001100100
11110100110100
11111000110100
11100010111100
11001100111100
11011100110100
11001010111100
11101000111100
11101001101100
11100100111100
word: 11100011011100

combo: 00000000110111

temp: 00000000110111

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11110011010100

combo: 00000000110101

temp: 00000000110101

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11100011010000

combo: 00000000110100

word: 01010011110000

combo: 00000000111100

word: 01000011110100

combo: 00000000111101

word: 01010011111100

combo: 00000000111111

word: 01000011111000

combo: 00000000111110

word: 11110011101000

combo: 00000000111010

temp: 00000000111010

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11100011101100

combo: 00000000111011

temp: 00000000111011

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11110011100100

combo: 00000000111001

temp: 00000000111001

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11100011100000

combo: 00000000111000

word: 01010010100000

combo: 00000000101000

word: 01000010100100

combo: 00000000101001

word: 01010010101100

combo: 00000000101011

word: 01000010101000

combo: 00000000101010

word: 11110010111000

combo: 00000000101110

temp: 00000000101110

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11100010111100

combo: 00000000101111

temp: 00000000101111

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11110010110100

combo: 00000000101101

temp: 00000000101101

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11100010110000

combo: 00000000101100

word: 01010010010000

combo: 00000000100100

word: 01000010010100

combo: 00000000100101

word: 01010010011100

combo: 00000000100111

word: 01000010011000

combo: 00000000100110

word: 11110010001000

combo: 00000000100010

word: 11100010001100

combo: 00000000100011

word: 11110010000100

combo: 00000000100001

word: 11100010000000

combo: 00000000100000

temp: 00000000100000

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11000110000000

combo: 00000001100000

temp: 00000001100000

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11010110000100

combo: 00000001100001

word: 11000110001100

combo: 00000001100011

word: 11010110001000

combo: 00000001100010

word: 01100110011000

combo: 00000001100110

word: 01110110011100

combo: 00000001100111

word: 01100110010100

combo: 00000001100101

word: 01110110010000

combo: 00000001100100

word: 11000110110000

combo: 00000001101100

word: 11010110110100

combo: 00000001101101

temp: 00000001101101

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11000110111100

combo: 00000001101111

temp: 00000001101111

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11010110111000

combo: 00000001101110

temp: 00000001101110

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 01100110101000

combo: 00000001101010

word: 01110110101100

combo: 00000001101011

word: 01100110100100

combo: 00000001101001

word: 01110110100000

combo: 00000001101000

word: 11000111100000

combo: 00000001111000

word: 11010111100100

combo: 00000001111001

temp: 00000001111001

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11000111101100

combo: 00000001111011

temp: 00000001111011

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11010111101000

combo: 00000001111010

temp: 00000001111010

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 01100111111000

combo: 00000001111110

word: 01110111111100

combo: 00000001111111

word: 01100111110100

combo: 00000001111101

word: 01110111110000

combo: 00000001111100

word: 11000111010000

combo: 00000001110100

word: 11010111010100

combo: 00000001110101

temp: 00000001110101

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11000111011100

combo: 00000001110111

temp: 00000001110111

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11010111011000

combo: 00000001110110

temp: 00000001110110

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 01100111001000

combo: 00000001110010

word: 01110111001100

combo: 00000001110011

word: 01100111000100

combo: 00000001110001

word: 01110111000000

combo: 00000001110000

word: 01010101000000

combo: 00000001010000

word: 01000101000100

combo: 00000001010001

word: 01010101001100

combo: 00000001010011

word: 01000101001000

combo: 00000001010010

word: 11110101011000

combo: 00000001010110

temp: 00000001010110

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11100101011100

combo: 00000001010111

temp: 00000001010111

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11110101010100

combo: 00000001010101

temp: 00000001010101

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11100101010000

combo: 00000001010100

word: 01010101110000

combo: 00000001011100

word: 01000101110100

combo: 00000001011101

word: 01010101111100

combo: 00000001011111

word: 01000101111000

combo: 00000001011110

word: 11110101101000

combo: 00000001011010

temp: 00000001011010

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11100101101100

combo: 00000001011011

temp: 00000001011011

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11110101100100

combo: 00000001011001

temp: 00000001011001

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11100101100000

combo: 00000001011000

word: 01010100100000

combo: 00000001001000

word: 01000100100100

combo: 00000001001001

word: 01010100101100

combo: 00000001001011

word: 01000100101000

combo: 00000001001010

word: 11110100111000

combo: 00000001001110

temp: 00000001001110

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11100100111100

combo: 00000001001111

temp: 00000001001111

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11110100110100

combo: 00000001001101

temp: 00000001001101

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11100100110000

combo: 00000001001100

word: 01010100010000

combo: 00000001000100

word: 01000100010100

combo: 00000001000101

word: 01010100011100

combo: 00000001000111

word: 01000100011000

combo: 00000001000110

word: 11110100001000

combo: 00000001000010

word: 11100100001100

combo: 00000001000011

word: 11110100000100

combo: 00000001000001

word: 11100100000000

combo: 00000001000000

temp: 00000001000000

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11001100000000

combo: 00000011000000

temp: 00000011000000

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11011100000100

combo: 00000011000001

word: 11001100001100

combo: 00000011000011

word: 11011100001000

combo: 00000011000010

word: 01101100011000

combo: 00000011000110

word: 01111100011100

combo: 00000011000111

word: 01101100010100

combo: 00000011000101

word: 01111100010000

combo: 00000011000100

word: 11001100110000

combo: 00000011001100

word: 11011100110100

combo: 00000011001101

temp: 00000011001101

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11001100111100

combo: 00000011001111

temp: 00000011001111

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11011100111000

combo: 00000011001110

temp: 00000011001110

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 01101100101000

combo: 00000011001010

word: 01111100101100

combo: 00000011001011

word: 01101100100100

combo: 00000011001001

word: 01111100100000

combo: 00000011001000

word: 11001101100000

combo: 00000011011000

word: 11011101100100

combo: 00000011011001

temp: 00000011011001

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11001101101100

combo: 00000011011011

temp: 00000011011011

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11011101101000

combo: 00000011011010

temp: 00000011011010

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 01101101111000

combo: 00000011011110

word: 01111101111100

combo: 00000011011111

word: 01101101110100

combo: 00000011011101

word: 01111101110000

combo: 00000011011100

word: 11001101010000

combo: 00000011010100

word: 11011101010100

combo: 00000011010101

temp: 00000011010101

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11001101011100

combo: 00000011010111

temp: 00000011010111

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11011101011000

combo: 00000011010110

temp: 00000011010110

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 01101101001000

combo: 00000011010010

word: 01111101001100

combo: 00000011010011

word: 01101101000100

combo: 00000011010001

word: 01111101000000

combo: 00000011010000

word: 01011111000000

combo: 00000011110000

word: 01001111000100

combo: 00000011110001

word: 01011111001100

combo: 00000011110011

word: 01001111001000

combo: 00000011110010

word: 11111111011000

combo: 00000011110110

word: 11101111011100

combo: 00000011110111

word: 11111111010100

combo: 00000011110101

word: 11101111010000

combo: 00000011110100

temp: 00000011110100

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 01011111110000

combo: 00000011111100

word: 01001111110100

combo: 00000011111101

word: 01011111111100

combo: 00000011111111

word: 01001111111000

combo: 00000011111110

word: 11111111101000

combo: 00000011111010

word: 11101111101100

combo: 00000011111011

word: 11111111100100

combo: 00000011111001

word: 11101111100000

combo: 00000011111000

temp: 00000011111000

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 01011110100000

combo: 00000011101000

word: 01001110100100

combo: 00000011101001

word: 01011110101100

combo: 00000011101011

word: 01001110101000

combo: 00000011101010

word: 11111110111000

combo: 00000011101110

word: 11101110111100

combo: 00000011101111

word: 11111110110100

combo: 00000011101101

word: 11101110110000

combo: 00000011101100

temp: 00000011101100

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 01011110010000

combo: 00000011100100

word: 01001110010100

combo: 00000011100101

word: 01011110011100

combo: 00000011100111

word: 01001110011000

combo: 00000011100110

word: 11111110001000

combo: 00000011100010

temp: 00000011100010

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 11101110001100

combo: 00000011100011

temp: 00000011100011

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 11111110000100

combo: 00000011100001

temp: 00000011100001

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 11101110000000

combo: 00000011100000

word: 11001010000000

combo: 00000010100000

temp: 00000010100000

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11011010000100

combo: 00000010100001

word: 11001010001100

combo: 00000010100011

word: 11011010001000

combo: 00000010100010

word: 01101010011000

combo: 00000010100110

word: 01111010011100

combo: 00000010100111

word: 01101010010100

combo: 00000010100101

word: 01111010010000

combo: 00000010100100

word: 11001010110000

combo: 00000010101100

word: 11011010110100

combo: 00000010101101

temp: 00000010101101

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11001010111100

combo: 00000010101111

temp: 00000010101111

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11011010111000

combo: 00000010101110

temp: 00000010101110

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 01101010101000

combo: 00000010101010

word: 01111010101100

combo: 00000010101011

word: 01101010100100

combo: 00000010101001

word: 01111010100000

combo: 00000010101000

word: 11001011100000

combo: 00000010111000

word: 11011011100100

combo: 00000010111001

temp: 00000010111001

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11001011101100

combo: 00000010111011

temp: 00000010111011

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11011011101000

combo: 00000010111010

temp: 00000010111010

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 01101011111000

combo: 00000010111110

word: 01111011111100

combo: 00000010111111

word: 01101011110100

combo: 00000010111101

word: 01111011110000

combo: 00000010111100

word: 11001011010000

combo: 00000010110100

word: 11011011010100

combo: 00000010110101

temp: 00000010110101

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11001011011100

combo: 00000010110111

temp: 00000010110111

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11011011011000

combo: 00000010110110

temp: 00000010110110

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 01101011001000

combo: 00000010110010

word: 01111011001100

combo: 00000010110011

word: 01101011000100

combo: 00000010110001

word: 01111011000000

combo: 00000010110000

word: 01011001000000

combo: 00000010010000

word: 01001001000100

combo: 00000010010001

word: 01011001001100

combo: 00000010010011

word: 01001001001000

combo: 00000010010010

word: 11111001011000

combo: 00000010010110

temp: 00000010010110

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11101001011100

combo: 00000010010111

temp: 00000010010111

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11111001010100

combo: 00000010010101

temp: 00000010010101

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11101001010000

combo: 00000010010100

word: 01011001110000

combo: 00000010011100

word: 01001001110100

combo: 00000010011101

word: 01011001111100

combo: 00000010011111

word: 01001001111000

combo: 00000010011110

word: 11111001101000

combo: 00000010011010

temp: 00000010011010

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11101001101100

combo: 00000010011011

temp: 00000010011011

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11111001100100

combo: 00000010011001

temp: 00000010011001

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11101001100000

combo: 00000010011000

word: 01011000100000

combo: 00000010001000

word: 01001000100100

combo: 00000010001001

word: 01011000101100

combo: 00000010001011

word: 01001000101000

combo: 00000010001010

word: 11111000111000

combo: 00000010001110

temp: 00000010001110

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11101000111100

combo: 00000010001111

temp: 00000010001111

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11111000110100

combo: 00000010001101

temp: 00000010001101

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 11101000110000

combo: 00000010001100

word: 01011000010000

combo: 00000010000100

word: 01001000010100

combo: 00000010000101

word: 01011000011100

combo: 00000010000111

word: 01001000011000

combo: 00000010000110

word: 11111000001000

combo: 00000010000010

word: 11101000001100

combo: 00000010000011

word: 11111000000100

combo: 00000010000001

word: 11101000000000

combo: 00000010000000

temp: 00000010000000

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0]
[0 1 0 1 1 0 1 0 1 1 0 0 1 1]
[0 0 1 0 1 0 1 1 0 0 1 1 1 1]
limit on degree (length): 15
ortho basis:
110100000001000
011100000010000
101100000100000
011100001000000
001000010000000
111000100000000
111001000000000
010010000000000

B_can_lab before row reduction:
001100110011011
000011110111100
011111111000000

B_can_lab after row reduction:
001100110011011
000011110111100
011111111000000

word generated as sum over rows of ortho_basis starting at 8: 000000000000000
gate: 000000000000111
k_gate: 000000011111111
nonzero_gate: 100000000000000
radix_gate: 000000000011111

Starting main loop:
word: 000000000000000

combo: 000000000000000

word: 110100000001000

combo: 000000000000001

temp: 000000000000001

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
101010011011100
100111101010010
111001110000110
rs list:
0 0 1 1 1 0 1 1 0 0 1 0 1 0 1 
0 1 0 0 1 0 1 0 1 1 1 1 0 0 1 
0 1 1 0 0 0 0 1 1 1 0 0 1 1 1 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 0 1 0 0]
[0 1 0 1 1 0 1 0 1 1 1 0 0 1 0]
[0 0 1 0 1 0 1 1 0 0 1 1 1 1 0]
[0 0 0 1 0 0 0 0 0 0 0 1 0 1 1]
m:
[0 0 1 1 1 0 1 1 0 0 1 0 1 0 1]
[0 1 0 0 1 0 1 0 1 1 1 1 0 0 1]
[0 1 1 0 0 0 0 1 1 1 0 0 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 8,13), (5,7), ( 5, 7)( 9,10), ( 1, 6)( 5, 7)( 9,10), ( 4,12)( 5, 7)( 9,10)(14,15), ( 4,14)( 5, 7)( 9,10)(12,15), ( 3,11)( 5,13, 7, 8)( 9,10)(12,14), ( 2, 3,11)( 5,10, 8)( 7, 9,13)(12,15,14) ] )
Right transversal of automorphism group of B_aug:
[4, 1, 2, 3, 0, 6, 5, 8, 7, 12, 10, 11, 9, 13, 14]
[7, 1, 2, 3, 8, 12, 9, 0, 4, 6, 10, 11, 5, 13, 14]
[8, 1, 2, 3, 7, 9, 12, 4, 0, 5, 10, 11, 6, 13, 14]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
110100000001000
100110000001000
101000001001000
101100000100000
100000011001000
101000000011000
100100010100000
100101001000000
110000001100000
100001000101000
100000010011000
101110011011000
100100101000000
100010001100000
100101000010000
110000000110000
110110011110000
100000100101000
111001000000000
111100011011000
100100100010000
100010000110000
100111101011000
111000100000000
111111010010000
101011000000000
111110001110000
110010101111000
110001010000000
110101101011000
111110110010000
101010100000000
111011100011000
100101111110000
110000110000000
111111011000000
100011010000000
110011001111000
101000111111000
110011110011000
111011101001000
101101101110000
111110111000000
100010110000000
111001110110000
101001011111000
110011111001000
111101110001000
101011110110000
111001111100000
111111100100000
101111110001000
101011111100000
110111110100000
111011010101000
111010110101000
word: 101000000011000

combo: 000000000000011

temp: 000000000000011

orbit_checks[temp>>log2radix]= 1010000110000001001001011010

word: 011100000010000

combo: 000000000000010

word: 110000000110000

combo: 000000000000110

temp: 000000000000110

orbit_checks[temp>>log2radix]= 1010000110000001001001011010

word: 000100000111000

combo: 000000000000111

word: 011000000101000

combo: 000000000000101

word: 101100000100000

combo: 000000000000100

temp: 000000000000100

orbit_checks[temp>>log2radix]= 1010000110000001001001011010

word: 110000001100000

combo: 000000000001100

temp: 000000000001100

orbit_checks[temp>>log2radix]= 1010000110000001001001011010

word: 000100001101000

combo: 000000000001101

word: 011000001111000

combo: 000000000001111

word: 101100001110000

combo: 000000000001110

word: 000000001010000

combo: 000000000001010

word: 110100001011000

combo: 000000000001011

word: 101000001001000

combo: 000000000001001

temp: 000000000001001

orbit_checks[temp>>log2radix]= 1010000110000001001001011010

word: 011100001000000

combo: 000000000001000

word: 010100011000000

combo: 000000000011000

word: 100000011001000

combo: 000000000011001

temp: 000000000011001

orbit_checks[temp>>log2radix]= 1010000110000001001001011010

word: 111100011011000

combo: 000000000011011

temp: 000000000011011

orbit_checks[temp>>log2radix]= 1010000110000001001001011010

word: 001000011010000

combo: 000000000011010

word: 100100011110000

combo: 000000000011110

word: 010000011111000

combo: 000000000011111

word: 001100011101000

combo: 000000000011101

word: 111000011100000

combo: 000000000011100

word: 100100010100000

combo: 000000000010100

temp: 000000000010100

orbit_checks[temp>>log2radix]= 1010000110000001001001011010

word: 010000010101000

combo: 000000000010101

word: 001100010111000

combo: 000000000010111

word: 111000010110000

combo: 000000000010110

word: 010100010010000

combo: 000000000010010

word: 100000010011000

combo: 000000000010011

temp: 000000000010011

orbit_checks[temp>>log2radix]= 1010000110000001001001011010

word: 111100010001000

combo: 000000000010001

word: 001000010000000

combo: 000000000010000

word: 110000110000000

combo: 000000000110000

temp: 000000000110000

orbit_checks[temp>>log2radix]= 10000000000000010000000100100101

word: 000100110001000

combo: 000000000110001

word: 011000110011000

combo: 000000000110011

word: 101100110010000

combo: 000000000110010

word: 000000110110000

combo: 000000000110110

word: 110100110111000

combo: 000000000110111

temp: 000000000110111

orbit_checks[temp>>log2radix]= 10000000000000010000000100100101

passed if statements
temp basis:
001001111110001
100111011100010
011110011010100
rs list:
1 0 0 0 1 1 1 1 1 1 0 0 1 0 0 
0 1 0 0 0 1 1 1 0 1 1 1 0 0 1 
0 0 1 0 1 0 1 1 0 0 1 1 1 1 0 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 0 1 0 0]
[0 1 0 1 1 0 1 0 1 1 1 0 0 1 0]
[0 0 1 0 1 0 1 1 0 0 1 1 1 1 0]
[0 0 0 1 1 1 0 1 1 0 0 1 0 1 1]
m:
[1 0 0 0 1 1 1 1 1 1 0 0 1 0 0]
[0 1 0 0 0 1 1 1 0 1 1 1 0 0 1]
[0 0 1 0 1 0 1 1 0 0 1 1 1 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 2, 3)( 5, 6)(10,13)(14,15), ( 1, 2)( 5,12)( 9,15)(11,13), ( 3, 7)( 5,12)( 8,14)(11,13), ( 3,14)( 5,13)( 7, 8)(11,12), ( 3,12)( 5, 7)( 8,13)(11,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 4, 3, 11, 6, 14, 13, 9, 10, 5, 12, 8, 7]
[0, 1, 2, 5, 11, 3, 6, 13, 14, 9, 10, 4, 12, 7, 8]
[0, 1, 2, 7, 14, 13, 6, 3, 11, 9, 10, 8, 12, 5, 4]
[0, 1, 3, 2, 4, 6, 5, 7, 12, 9, 14, 11, 8, 13, 10]
[0, 1, 2, 11, 5, 4, 6, 8, 7, 9, 10, 3, 12, 14, 13]
[0, 1, 2, 14, 7, 8, 6, 4, 5, 9, 10, 13, 12, 11, 3]
orbits:
110100110111000
111100100111000
100110110111000
110100111101000
110101010111000
101110100111000
111100101101000
101110101101000
111101000111000
100110111101000
100111010111000
110101011101000
101111000111000
111101001101000
101111001101000
100111011101000
word: 101000110101000

combo: 000000000110101

word: 011100110100000

combo: 000000000110100

word: 000000111100000

combo: 000000000111100

word: 110100111101000

combo: 000000000111101

temp: 000000000111101

orbit_checks[temp>>log2radix]= 10100000100000010010000110100101

word: 101000111111000

combo: 000000000111111

temp: 000000000111111

orbit_checks[temp>>log2radix]= 10100000100000010010000110100101

word: 011100111110000

combo: 000000000111110

word: 110000111010000

combo: 000000000111010

word: 000100111011000

combo: 000000000111011

word: 011000111001000

combo: 000000000111001

word: 101100111000000

combo: 000000000111000

word: 100100101000000

combo: 000000000101000

temp: 000000000101000

orbit_checks[temp>>log2radix]= 10100000100000010010000110100101

word: 010000101001000

combo: 000000000101001

word: 001100101011000

combo: 000000000101011

word: 111000101010000

combo: 000000000101010

word: 010100101110000

combo: 000000000101110

word: 100000101111000

combo: 000000000101111

word: 111100101101000

combo: 000000000101101

temp: 000000000101101

orbit_checks[temp>>log2radix]= 10100000100000010010000110100101

word: 001000101100000

combo: 000000000101100

word: 010100100100000

combo: 000000000100100

word: 100000100101000

combo: 000000000100101

temp: 000000000100101

orbit_checks[temp>>log2radix]= 10100000100000010010000110100101

word: 111100100111000

combo: 000000000100111

temp: 000000000100111

orbit_checks[temp>>log2radix]= 10100000100000010010000110100101

word: 001000100110000

combo: 000000000100110

word: 100100100010000

combo: 000000000100010

temp: 000000000100010

orbit_checks[temp>>log2radix]= 10100000100000010010000110100101

word: 010000100011000

combo: 000000000100011

word: 001100100001000

combo: 000000000100001

word: 111000100000000

combo: 000000000100000

temp: 000000000100000

orbit_checks[temp>>log2radix]= 10100000100000010010000110100101

word: 000001100000000

combo: 000000001100000

word: 110101100001000

combo: 000000001100001

word: 101001100011000

combo: 000000001100011

word: 011101100010000

combo: 000000001100010

word: 110001100110000

combo: 000000001100110

word: 000101100111000

combo: 000000001100111

word: 011001100101000

combo: 000000001100101

word: 101101100100000

combo: 000000001100100

word: 110001101100000

combo: 000000001101100

word: 000101101101000

combo: 000000001101101

word: 011001101111000

combo: 000000001101111

word: 101101101110000

combo: 000000001101110

temp: 000000001101110

orbit_checks[temp>>log2radix]= 1010000010000100100100000000000

word: 000001101010000

combo: 000000001101010

word: 110101101011000

combo: 000000001101011

temp: 000000001101011

orbit_checks[temp>>log2radix]= 1010000010000100100100000000000

word: 101001101001000

combo: 000000001101001

word: 011101101000000

combo: 000000001101000

word: 010101111000000

combo: 000000001111000

word: 100001111001000

combo: 000000001111001

word: 111101111011000

combo: 000000001111011

word: 001001111010000

combo: 000000001111010

word: 100101111110000

combo: 000000001111110

temp: 000000001111110

orbit_checks[temp>>log2radix]= 1010000010000100100100000000000

word: 010001111111000

combo: 000000001111111

word: 001101111101000

combo: 000000001111101

word: 111001111100000

combo: 000000001111100

temp: 000000001111100

orbit_checks[temp>>log2radix]= 1010000010000100100100000000000

word: 100101110100000

combo: 000000001110100

word: 010001110101000

combo: 000000001110101

word: 001101110111000

combo: 000000001110111

word: 111001110110000

combo: 000000001110110

temp: 000000001110110

orbit_checks[temp>>log2radix]= 1010000010000100100100000000000

word: 010101110010000

combo: 000000001110010

word: 100001110011000

combo: 000000001110011

word: 111101110001000

combo: 000000001110001

temp: 000000001110001

orbit_checks[temp>>log2radix]= 1010000010000100100100000000000

word: 001001110000000

combo: 000000001110000

word: 110001010000000

combo: 000000001010000

temp: 000000001010000

orbit_checks[temp>>log2radix]= 10100000100000010010000110100101

word: 000101010001000

combo: 000000001010001

word: 011001010011000

combo: 000000001010011

word: 101101010010000

combo: 000000001010010

word: 000001010110000

combo: 000000001010110

word: 110101010111000

combo: 000000001010111

temp: 000000001010111

orbit_checks[temp>>log2radix]= 10100000100000010010000110100101

word: 101001010101000

combo: 000000001010101

word: 011101010100000

combo: 000000001010100

word: 000001011100000

combo: 000000001011100

word: 110101011101000

combo: 000000001011101

temp: 000000001011101

orbit_checks[temp>>log2radix]= 10100000100000010010000110100101

word: 101001011111000

combo: 000000001011111

temp: 000000001011111

orbit_checks[temp>>log2radix]= 10100000100000010010000110100101

word: 011101011110000

combo: 000000001011110

word: 110001011010000

combo: 000000001011010

word: 000101011011000

combo: 000000001011011

word: 011001011001000

combo: 000000001011001

word: 101101011000000

combo: 000000001011000

word: 100101001000000

combo: 000000001001000

temp: 000000001001000

orbit_checks[temp>>log2radix]= 10100000100000010010000110100101

word: 010001001001000

combo: 000000001001001

word: 001101001011000

combo: 000000001001011

word: 111001001010000

combo: 000000001001010

word: 010101001110000

combo: 000000001001110

word: 100001001111000

combo: 000000001001111

word: 111101001101000

combo: 000000001001101

temp: 000000001001101

orbit_checks[temp>>log2radix]= 10100000100000010010000110100101

word: 001001001100000

combo: 000000001001100

word: 010101000100000

combo: 000000001000100

word: 100001000101000

combo: 000000001000101

temp: 000000001000101

orbit_checks[temp>>log2radix]= 10100000100000010010000110100101

word: 111101000111000

combo: 000000001000111

temp: 000000001000111

orbit_checks[temp>>log2radix]= 10100000100000010010000110100101

word: 001001000110000

combo: 000000001000110

word: 100101000010000

combo: 000000001000010

temp: 000000001000010

orbit_checks[temp>>log2radix]= 10100000100000010010000110100101

word: 010001000011000

combo: 000000001000011

word: 001101000001000

combo: 000000001000001

word: 111001000000000

combo: 000000001000000

temp: 000000001000000

orbit_checks[temp>>log2radix]= 10100000100000010010000110100101

word: 101011000000000

combo: 000000011000000

temp: 000000011000000

orbit_checks[temp>>log2radix]= 100001101001011010000010000001

word: 011111000001000

combo: 000000011000001

word: 000011000011000

combo: 000000011000011

word: 110111000010000

combo: 000000011000010

word: 011011000110000

combo: 000000011000110

word: 101111000111000

combo: 000000011000111

temp: 000000011000111

orbit_checks[temp>>log2radix]= 100001101001011010000010000001

word: 110011000101000

combo: 000000011000101

word: 000111000100000

combo: 000000011000100

word: 011011001100000

combo: 000000011001100

word: 101111001101000

combo: 000000011001101

temp: 000000011001101

orbit_checks[temp>>log2radix]= 100001101001011010000010000001

word: 110011001111000

combo: 000000011001111

temp: 000000011001111

orbit_checks[temp>>log2radix]= 100001101001011010000010000001

word: 000111001110000

combo: 000000011001110

word: 101011001010000

combo: 000000011001010

word: 011111001011000

combo: 000000011001011

word: 000011001001000

combo: 000000011001001

word: 110111001000000

combo: 000000011001000

word: 111111011000000

combo: 000000011011000

temp: 000000011011000

orbit_checks[temp>>log2radix]= 100001101001011010000010000001

word: 001011011001000

combo: 000000011011001

word: 010111011011000

combo: 000000011011011

word: 100011011010000

combo: 000000011011010

word: 001111011110000

combo: 000000011011110

word: 111011011111000

combo: 000000011011111

word: 100111011101000

combo: 000000011011101

temp: 000000011011101

orbit_checks[temp>>log2radix]= 100001101001011010000010000001

word: 010011011100000

combo: 000000011011100

word: 001111010100000

combo: 000000011010100

word: 111011010101000

combo: 000000011010101

temp: 000000011010101

orbit_checks[temp>>log2radix]= 100001101001011010000010000001

word: 100111010111000

combo: 000000011010111

temp: 000000011010111

orbit_checks[temp>>log2radix]= 100001101001011010000010000001

word: 010011010110000

combo: 000000011010110

word: 111111010010000

combo: 000000011010010

temp: 000000011010010

orbit_checks[temp>>log2radix]= 100001101001011010000010000001

word: 001011010011000

combo: 000000011010011

word: 010111010001000

combo: 000000011010001

word: 100011010000000

combo: 000000011010000

temp: 000000011010000

orbit_checks[temp>>log2radix]= 100001101001011010000010000001

word: 011011110000000

combo: 000000011110000

word: 101111110001000

combo: 000000011110001

temp: 000000011110001

orbit_checks[temp>>log2radix]= 10010010110100000101000011000

word: 110011110011000

combo: 000000011110011

temp: 000000011110011

orbit_checks[temp>>log2radix]= 10010010110100000101000011000

word: 000111110010000

combo: 000000011110010

word: 101011110110000

combo: 000000011110110

temp: 000000011110110

orbit_checks[temp>>log2radix]= 10010010110100000101000011000

word: 011111110111000

combo: 000000011110111

word: 000011110101000

combo: 000000011110101

word: 110111110100000

combo: 000000011110100

temp: 000000011110100

orbit_checks[temp>>log2radix]= 10010010110100000101000011000

word: 101011111100000

combo: 000000011111100

temp: 000000011111100

orbit_checks[temp>>log2radix]= 10010010110100000101000011000

word: 011111111101000

combo: 000000011111101

word: 000011111111000

combo: 000000011111111

word: 110111111110000

combo: 000000011111110

word: 011011111010000

combo: 000000011111010

word: 101111111011000

combo: 000000011111011

word: 110011111001000

combo: 000000011111001

temp: 000000011111001

orbit_checks[temp>>log2radix]= 10010010110100000101000011000

word: 000111111000000

combo: 000000011111000

word: 001111101000000

combo: 000000011101000

word: 111011101001000

combo: 000000011101001

temp: 000000011101001

orbit_checks[temp>>log2radix]= 10010010110100000101000011000

word: 100111101011000

combo: 000000011101011

temp: 000000011101011

orbit_checks[temp>>log2radix]= 10010010110100000101000011000

word: 010011101010000

combo: 000000011101010

word: 111111101110000

combo: 000000011101110

word: 001011101111000

combo: 000000011101111

word: 010111101101000

combo: 000000011101101

word: 100011101100000

combo: 000000011101100

word: 111111100100000

combo: 000000011100100

temp: 000000011100100

orbit_checks[temp>>log2radix]= 10010010110100000101000011000

word: 001011100101000

combo: 000000011100101

word: 010111100111000

combo: 000000011100111

word: 100011100110000

combo: 000000011100110

word: 001111100010000

combo: 000000011100010

word: 111011100011000

combo: 000000011100011

temp: 000000011100011

orbit_checks[temp>>log2radix]= 10010010110100000101000011000

word: 100111100001000

combo: 000000011100001

word: 010011100000000

combo: 000000011100000

word: 101010100000000

combo: 000000010100000

temp: 000000010100000

orbit_checks[temp>>log2radix]= 100001101001011010000010000001

word: 011110100001000

combo: 000000010100001

word: 000010100011000

combo: 000000010100011

word: 110110100010000

combo: 000000010100010

word: 011010100110000

combo: 000000010100110

word: 101110100111000

combo: 000000010100111

temp: 000000010100111

orbit_checks[temp>>log2radix]= 100001101001011010000010000001

word: 110010100101000

combo: 000000010100101

word: 000110100100000

combo: 000000010100100

word: 011010101100000

combo: 000000010101100

word: 101110101101000

combo: 000000010101101

temp: 000000010101101

orbit_checks[temp>>log2radix]= 100001101001011010000010000001

word: 110010101111000

combo: 000000010101111

temp: 000000010101111

orbit_checks[temp>>log2radix]= 100001101001011010000010000001

word: 000110101110000

combo: 000000010101110

word: 101010101010000

combo: 000000010101010

word: 011110101011000

combo: 000000010101011

word: 000010101001000

combo: 000000010101001

word: 110110101000000

combo: 000000010101000

word: 111110111000000

combo: 000000010111000

temp: 000000010111000

orbit_checks[temp>>log2radix]= 100001101001011010000010000001

word: 001010111001000

combo: 000000010111001

word: 010110111011000

combo: 000000010111011

word: 100010111010000

combo: 000000010111010

word: 001110111110000

combo: 000000010111110

word: 111010111111000

combo: 000000010111111

word: 100110111101000

combo: 000000010111101

temp: 000000010111101

orbit_checks[temp>>log2radix]= 100001101001011010000010000001

word: 010010111100000

combo: 000000010111100

word: 001110110100000

combo: 000000010110100

word: 111010110101000

combo: 000000010110101

temp: 000000010110101

orbit_checks[temp>>log2radix]= 100001101001011010000010000001

word: 100110110111000

combo: 000000010110111

temp: 000000010110111

orbit_checks[temp>>log2radix]= 100001101001011010000010000001

word: 010010110110000

combo: 000000010110110

word: 111110110010000

combo: 000000010110010

temp: 000000010110010

orbit_checks[temp>>log2radix]= 100001101001011010000010000001

word: 001010110011000

combo: 000000010110011

word: 010110110001000

combo: 000000010110001

word: 100010110000000

combo: 000000010110000

temp: 000000010110000

orbit_checks[temp>>log2radix]= 100001101001011010000010000001

word: 011010010000000

combo: 000000010010000

word: 101110010001000

combo: 000000010010001

word: 110010010011000

combo: 000000010010011

word: 000110010010000

combo: 000000010010010

word: 101010010110000

combo: 000000010010110

word: 011110010111000

combo: 000000010010111

word: 000010010101000

combo: 000000010010101

word: 110110010100000

combo: 000000010010100

word: 101010011100000

combo: 000000010011100

word: 011110011101000

combo: 000000010011101

word: 000010011111000

combo: 000000010011111

word: 110110011110000

combo: 000000010011110

temp: 000000010011110

orbit_checks[temp>>log2radix]= 1001000000000000101000001000010

word: 011010011010000

combo: 000000010011010

word: 101110011011000

combo: 000000010011011

temp: 000000010011011

orbit_checks[temp>>log2radix]= 1001000000000000101000001000010

word: 110010011001000

combo: 000000010011001

word: 000110011000000

combo: 000000010011000

word: 001110001000000

combo: 000000010001000

word: 111010001001000

combo: 000000010001001

word: 100110001011000

combo: 000000010001011

word: 010010001010000

combo: 000000010001010

word: 111110001110000

combo: 000000010001110

temp: 000000010001110

orbit_checks[temp>>log2radix]= 1001000000000000101000001000010

word: 001010001111000

combo: 000000010001111

word: 010110001101000

combo: 000000010001101

word: 100010001100000

combo: 000000010001100

temp: 000000010001100

orbit_checks[temp>>log2radix]= 1001000000000000101000001000010

word: 111110000100000

combo: 000000010000100

word: 001010000101000

combo: 000000010000101

word: 010110000111000

combo: 000000010000111

word: 100010000110000

combo: 000000010000110

temp: 000000010000110

orbit_checks[temp>>log2radix]= 1001000000000000101000001000010

word: 001110000010000

combo: 000000010000010

word: 111010000011000

combo: 000000010000011

word: 100110000001000

combo: 000000010000001

temp: 000000010000001

orbit_checks[temp>>log2radix]= 1001000000000000101000001000010

word: 010010000000000

combo: 000000010000000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 1 1 1 0 0 1 0 0]
[0 1 0 0 0 1 1 1 0 1 1 1 0 0 1]
[0 0 1 0 1 0 1 1 0 0 1 1 1 1 0]
[0 0 0 1 1 1 0 1 1 0 0 1 0 1 1]
limit on degree (length): 16
ortho basis:
1111100000010000
1001100000100000
0011100001000000
1101000010000000
1011000100000000
0111001000000000
1110010000000000

B_can_lab before row reduction:
0101010101010101
0011001100110110
0000111101111000
0111111110000000

B_can_lab after row reduction:
0101010101010101
0011001100110110
0000111101111000
0111111110000000
0000000000111000

word generated as sum over rows of ortho_basis starting at 7: 0000000000000000
gate: 0000000000001111
k_gate: 0000000001111111
nonzero_gate: 1000000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 0000000000000000

combo: 0000000000000000

word: 1111100000010000

combo: 0000000000000001

word: 0110000000110000

combo: 0000000000000011

word: 1001100000100000

combo: 0000000000000010

temp: 0000000000000010

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1010010011110100
1100110101001100
1111000110011000
0100011010011101
rs list:
0 0 1 0 1 1 1 1 0 0 1 0 0 1 0 1 
0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 1 
0 0 0 1 1 0 0 1 1 0 0 0 1 1 1 1 
1 0 1 1 1 0 0 1 0 1 1 0 0 0 1 0 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 0 1 0 0 0]
[0 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0]
[0 0 1 0 1 0 1 1 0 0 1 1 1 1 0 0]
[0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0]
[0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 1]
m:
[0 0 1 0 1 1 1 1 0 0 1 0 0 1 0 1]
[0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 1]
[0 0 0 1 1 0 0 1 1 0 0 0 1 1 1 1]
[1 0 1 1 1 0 0 1 0 1 1 0 0 0 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 4, 5)( 8,15)( 9,14)(13,16), ( 4, 5)( 6,12)( 8,15)( 9,14), ( 3, 8)( 5,11)( 7,14)(12,13), ( 1,11)( 3,10)( 4, 8)( 5,15) ] )
Right transversal of automorphism group of B_aug:
[0, 3, 2, 1, 6, 5, 4, 7, 9, 8, 13, 11, 12, 10, 14, 15]
[0, 4, 2, 6, 1, 5, 3, 7, 10, 13, 8, 11, 12, 9, 14, 15]
[0, 8, 2, 9, 10, 5, 13, 7, 1, 3, 4, 11, 12, 6, 14, 15]
[1, 0, 6, 3, 4, 5, 2, 13, 14, 9, 10, 11, 12, 7, 8, 15]
[0, 6, 2, 4, 3, 5, 1, 7, 13, 10, 9, 11, 12, 8, 14, 15]
[0, 9, 2, 8, 13, 5, 10, 7, 3, 1, 6, 11, 12, 4, 14, 15]
[0, 10, 7, 13, 1, 5, 3, 2, 4, 6, 8, 12, 11, 9, 14, 15]
[0, 13, 2, 9, 10, 5, 8, 14, 1, 4, 3, 11, 15, 6, 7, 12]
[1, 14, 6, 9, 10, 5, 7, 13, 0, 3, 4, 11, 12, 2, 8, 15]
[1, 2, 6, 4, 3, 5, 0, 13, 7, 10, 9, 11, 12, 14, 8, 15]
[1, 7, 6, 9, 10, 5, 14, 8, 0, 4, 3, 11, 15, 2, 13, 12]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1001100000100000
1111100110100000
1011000100000000
1000100101000000
1000101000010000
1000010000110000
1101000010000000
1011110111000000
1110101110010000
1110010110110000
1100001100000000
1110010000000000
1010000001100000
1100000001010000
1000010110000000
1010001010000000
1111010101100000
1111010011010000
1100111111000000
1011111010010000
1001011000000000
1110100101110000
1011110001110000
1110011101010000
1110011011100000
1101111010100000
1101001111010000
1100111001110000
1111011000110000
1111101101000000
1011001111100000
1001011110110000
1001101101110000
1011111100100000
1101111100010000
word: 1010000001100000

combo: 0000000000000110

temp: 0000000000000110

orbit_checks[temp>>log2radix]= 100100100010000000101100100

word: 0101100001110000

combo: 0000000000000111

word: 1100000001010000

combo: 0000000000000101

temp: 0000000000000101

orbit_checks[temp>>log2radix]= 100100100010000000101100100

word: 0011100001000000

combo: 0000000000000100

word: 1110100011000000

combo: 0000000000001100

word: 0001000011010000

combo: 0000000000001101

word: 1000100011110000

combo: 0000000000001111

word: 0111000011100000

combo: 0000000000001110

word: 0100100010100000

combo: 0000000000001010

word: 1011000010110000

combo: 0000000000001011

word: 0010100010010000

combo: 0000000000001001

word: 1101000010000000

combo: 0000000000001000

temp: 0000000000001000

orbit_checks[temp>>log2radix]= 100100100010000000101100100

word: 0110000110000000

combo: 0000000000011000

word: 1001100110010000

combo: 0000000000011001

word: 0000000110110000

combo: 0000000000011011

word: 1111100110100000

combo: 0000000000011010

temp: 0000000000011010

orbit_checks[temp>>log2radix]= 100100100010000000101100100

word: 1100000111100000

combo: 0000000000011110

word: 0011100111110000

combo: 0000000000011111

word: 1010000111010000

combo: 0000000000011101

word: 0101100111000000

combo: 0000000000011100

word: 1000100101000000

combo: 0000000000010100

temp: 0000000000010100

orbit_checks[temp>>log2radix]= 100100100010000000101100100

word: 0111000101010000

combo: 0000000000010101

word: 1110100101110000

combo: 0000000000010111

temp: 0000000000010111

orbit_checks[temp>>log2radix]= 100100100010000000101100100

word: 0001000101100000

combo: 0000000000010110

word: 0010100100100000

combo: 0000000000010010

word: 1101000100110000

combo: 0000000000010011

word: 0100100100010000

combo: 0000000000010001

word: 1011000100000000

combo: 0000000000010000

temp: 0000000000010000

orbit_checks[temp>>log2radix]= 100100100010000000101100100

word: 1100001100000000

combo: 0000000000110000

temp: 0000000000110000

orbit_checks[temp>>log2radix]= 1100010100100010000000100000010

word: 0011101100010000

combo: 0000000000110001

word: 1010001100110000

combo: 0000000000110011

word: 0101101100100000

combo: 0000000000110010

word: 0110001101100000

combo: 0000000000110110

word: 1001101101110000

combo: 0000000000110111

temp: 0000000000110111

orbit_checks[temp>>log2radix]= 1100010100100010000000100000010

word: 0000001101010000

combo: 0000000000110101

word: 1111101101000000

combo: 0000000000110100

temp: 0000000000110100

orbit_checks[temp>>log2radix]= 1100010100100010000000100000010

word: 0010101111000000

combo: 0000000000111100

word: 1101001111010000

combo: 0000000000111101

temp: 0000000000111101

orbit_checks[temp>>log2radix]= 1100010100100010000000100000010

word: 0100101111110000

combo: 0000000000111111

word: 1011001111100000

combo: 0000000000111110

temp: 0000000000111110

orbit_checks[temp>>log2radix]= 1100010100100010000000100000010

word: 1000101110100000

combo: 0000000000111010

word: 0111001110110000

combo: 0000000000111011

word: 1110101110010000

combo: 0000000000111001

temp: 0000000000111001

orbit_checks[temp>>log2radix]= 1100010100100010000000100000010

word: 0001001110000000

combo: 0000000000111000

word: 1010001010000000

combo: 0000000000101000

temp: 0000000000101000

orbit_checks[temp>>log2radix]= 1100010100100010000000100000010

word: 0101101010010000

combo: 0000000000101001

word: 1100001010110000

combo: 0000000000101011

word: 0011101010100000

combo: 0000000000101010

word: 0000001011100000

combo: 0000000000101110

word: 1111101011110000

combo: 0000000000101111

word: 0110001011010000

combo: 0000000000101101

word: 1001101011000000

combo: 0000000000101100

word: 0100101001000000

combo: 0000000000100100

word: 1011001001010000

combo: 0000000000100101

word: 0010101001110000

combo: 0000000000100111

word: 1101001001100000

combo: 0000000000100110

word: 1110101000100000

combo: 0000000000100010

word: 0001001000110000

combo: 0000000000100011

word: 1000101000010000

combo: 0000000000100001

temp: 0000000000100001

orbit_checks[temp>>log2radix]= 1100010100100010000000100000010

word: 0111001000000000

combo: 0000000000100000

word: 1001011000000000

combo: 0000000001100000

temp: 0000000001100000

orbit_checks[temp>>log2radix]= 11000001001100100011010001001

word: 0110111000010000

combo: 0000000001100001

word: 1111011000110000

combo: 0000000001100011

temp: 0000000001100011

orbit_checks[temp>>log2radix]= 11000001001100100011010001001

word: 0000111000100000

combo: 0000000001100010

word: 0011011001100000

combo: 0000000001100110

word: 1100111001110000

combo: 0000000001100111

temp: 0000000001100111

orbit_checks[temp>>log2radix]= 11000001001100100011010001001

word: 0101011001010000

combo: 0000000001100101

word: 1010111001000000

combo: 0000000001100100

word: 0111111011000000

combo: 0000000001101100

word: 1000011011010000

combo: 0000000001101101

word: 0001111011110000

combo: 0000000001101111

word: 1110011011100000

combo: 0000000001101110

temp: 0000000001101110

orbit_checks[temp>>log2radix]= 11000001001100100011010001001

word: 1101111010100000

combo: 0000000001101010

temp: 0000000001101010

orbit_checks[temp>>log2radix]= 11000001001100100011010001001

word: 0010011010110000

combo: 0000000001101011

word: 1011111010010000

combo: 0000000001101001

temp: 0000000001101001

orbit_checks[temp>>log2radix]= 11000001001100100011010001001

word: 0100011010000000

combo: 0000000001101000

word: 1111011110000000

combo: 0000000001111000

temp: 0000000001111000

orbit_checks[temp>>log2radix]= 11000001001100100011010001001

passed if statements
temp basis:
1110010001110001
1011100101100010
1100101101010100
1001111000111000
rs list:
1 0 0 0 1 1 1 0 0 0 1 0 0 1 1 1 
0 1 0 0 0 1 1 0 1 0 0 1 1 1 0 1 
0 0 1 0 1 0 1 0 1 1 0 1 0 0 1 1 
0 0 0 1 1 1 0 0 0 1 1 1 1 0 0 1 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 0 1 0 0 0]
[0 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0]
[0 0 1 0 1 0 1 1 0 0 1 1 1 1 0 0]
[0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0]
[0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1]
m:
[1 0 0 0 1 1 1 0 0 0 1 0 0 1 1 1]
[0 1 0 0 0 1 1 0 1 0 0 1 1 1 0 1]
[0 0 1 0 1 0 1 0 1 1 0 1 0 0 1 1]
[0 0 0 1 1 1 0 0 0 1 1 1 1 0 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 4, 5)( 6,12)(10,11)(13,16), ( 4, 6)( 5,12)(10,16)(11,13), ( 3, 4)( 6, 7)( 9,13)(11,15), ( 2, 3)( 5, 6)(10,13)(14,15), ( 1, 2)( 5,12)( 9,15)(11,13), ( 4,10)( 5,11)( 6,16)(12,13) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 5, 6, 8, 7, 12, 15, 11, 9, 14, 13, 10]
[0, 1, 2, 3, 4, 5, 6, 9, 12, 7, 14, 11, 8, 15, 10, 13]
[0, 1, 2, 3, 4, 5, 6, 10, 15, 14, 7, 11, 13, 12, 9, 8]
[0, 1, 2, 7, 14, 13, 6, 3, 11, 9, 10, 8, 12, 5, 4, 15]
[0, 1, 2, 3, 4, 5, 6, 12, 9, 8, 13, 11, 7, 10, 15, 14]
[0, 1, 2, 3, 4, 5, 6, 15, 10, 13, 8, 11, 14, 9, 12, 7]
orbits:
1111011110000000
word: 0000111110010000

combo: 0000000001111001

word: 1001011110110000

combo: 0000000001111011

temp: 0000000001111011

orbit_checks[temp>>log2radix]= 11001001001100100011010001001

word: 0110111110100000

combo: 0000000001111010

word: 0101011111100000

combo: 0000000001111110

word: 1010111111110000

combo: 0000000001111111

word: 0011011111010000

combo: 0000000001111101

word: 1100111111000000

combo: 0000000001111100

temp: 0000000001111100

orbit_checks[temp>>log2radix]= 11001001001100100011010001001

word: 0001111101000000

combo: 0000000001110100

word: 1110011101010000

combo: 0000000001110101

temp: 0000000001110101

orbit_checks[temp>>log2radix]= 11001001001100100011010001001

word: 0111111101110000

combo: 0000000001110111

word: 1000011101100000

combo: 0000000001110110

word: 1011111100100000

combo: 0000000001110010

temp: 0000000001110010

orbit_checks[temp>>log2radix]= 11001001001100100011010001001

word: 0100011100110000

combo: 0000000001110011

word: 1101111100010000

combo: 0000000001110001

temp: 0000000001110001

orbit_checks[temp>>log2radix]= 11001001001100100011010001001

word: 0010011100000000

combo: 0000000001110000

word: 0101010100000000

combo: 0000000001010000

word: 1010110100010000

combo: 0000000001010001

word: 0011010100110000

combo: 0000000001010011

word: 1100110100100000

combo: 0000000001010010

word: 1111010101100000

combo: 0000000001010110

temp: 0000000001010110

orbit_checks[temp>>log2radix]= 11001010000000010000010001001

word: 0000110101110000

combo: 0000000001010111

word: 1001010101010000

combo: 0000000001010101

word: 0110110101000000

combo: 0000000001010100

word: 1011110111000000

combo: 0000000001011100

temp: 0000000001011100

orbit_checks[temp>>log2radix]= 11001010000000010000010001001

word: 0100010111010000

combo: 0000000001011101

word: 1101110111110000

combo: 0000000001011111

word: 0010010111100000

combo: 0000000001011110

word: 0001110110100000

combo: 0000000001011010

word: 1110010110110000

combo: 0000000001011011

temp: 0000000001011011

orbit_checks[temp>>log2radix]= 11001010000000010000010001001

word: 0111110110010000

combo: 0000000001011001

word: 1000010110000000

combo: 0000000001011000

temp: 0000000001011000

orbit_checks[temp>>log2radix]= 11001010000000010000010001001

word: 0011010010000000

combo: 0000000001001000

word: 1100110010010000

combo: 0000000001001001

word: 0101010010110000

combo: 0000000001001011

word: 1010110010100000

combo: 0000000001001010

word: 1001010011100000

combo: 0000000001001110

word: 0110110011110000

combo: 0000000001001111

word: 1111010011010000

combo: 0000000001001101

temp: 0000000001001101

orbit_checks[temp>>log2radix]= 11001010000000010000010001001

word: 0000110011000000

combo: 0000000001001100

word: 1101110001000000

combo: 0000000001000100

word: 0010010001010000

combo: 0000000001000101

word: 1011110001110000

combo: 0000000001000111

temp: 0000000001000111

orbit_checks[temp>>log2radix]= 11001010000000010000010001001

word: 0100010001100000

combo: 0000000001000110

word: 0111110000100000

combo: 0000000001000010

word: 1000010000110000

combo: 0000000001000011

temp: 0000000001000011

orbit_checks[temp>>log2radix]= 11001010000000010000010001001

word: 0001110000010000

combo: 0000000001000001

word: 1110010000000000

combo: 0000000001000000

temp: 0000000001000000

orbit_checks[temp>>log2radix]= 11001010000000010000010001001

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0]
[0 1 0 1 1 0 1 0 1 1 0 0 1 1]
[0 0 1 0 1 0 1 1 0 0 1 1 1 1]
limit on degree (length): 16
ortho basis:
1010100000001000
0011100000010000
1001100000100000
0011100001000000
0001000010000000
1011000100000000
1011001000000000
0010010000000000
1100000000000000

B_can_lab before row reduction:
0001100110011011
0000011110111100
0011111111000000

B_can_lab after row reduction:
0001100110011011
0000011110111100
0011111111000000

word generated as sum over rows of ortho_basis starting at 8: 1100000000000000
gate: 0000000000000111
k_gate: 0000000011111111
nonzero_gate: 1100000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1100000000000000

combo: 0000000000000000

word: 0110100000001000

combo: 0000000000000001

word: 0101000000011000

combo: 0000000000000011

word: 1111100000010000

combo: 0000000000000010

word: 0110000000110000

combo: 0000000000000110

word: 1100100000111000

combo: 0000000000000111

word: 1111000000101000

combo: 0000000000000101

word: 0101100000100000

combo: 0000000000000100

word: 0110000001100000

combo: 0000000000001100

word: 1100100001101000

combo: 0000000000001101

word: 1111000001111000

combo: 0000000000001111

temp: 0000000000001111

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1100110010101100
1111000001111000
1101011100100010
rs list:
0 0 1 1 0 1 0 1 0 0 1 1 0 0 1 1 
0 0 0 1 1 1 1 0 0 0 0 0 1 1 1 1 
0 1 0 0 0 1 0 0 1 1 1 0 1 0 1 1 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 0 1 0 0 0]
[0 1 0 1 1 0 1 0 1 1 1 0 0 1 0 0]
[0 0 1 0 1 0 1 1 0 0 1 1 1 1 0 0]
[0 0 0 1 1 1 1 0 0 0 0 0 1 1 1 1]
m:
[0 0 1 1 0 1 0 1 0 0 1 1 0 0 1 1]
[0 0 0 1 1 1 1 0 0 0 0 0 1 1 1 1]
[0 1 0 0 0 1 0 0 1 1 1 0 1 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), ( 9,10), (5,7), ( 3, 5)( 7,12)( 8,14)(11,13), ( 2, 6)( 9,15)(10,16)(11,13), ( 2,14)( 4,11)( 5, 9)( 7,10) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 2, 5, 4, 3, 6, 10, 8, 9, 7, 11, 13, 12, 14, 15]
[3, 5, 2, 0, 4, 1, 6, 13, 8, 9, 12, 11, 10, 7, 14, 15]
[7, 10, 2, 13, 4, 12, 6, 0, 8, 9, 1, 11, 5, 3, 14, 15]
[5, 0, 2, 1, 4, 3, 6, 12, 14, 15, 7, 11, 13, 10, 8, 9]
[13, 0, 2, 5, 8, 10, 9, 3, 4, 6, 7, 11, 1, 12, 14, 15]
[10, 7, 2, 12, 4, 13, 6, 1, 8, 9, 0, 11, 3, 5, 14, 15]
[12, 7, 2, 10, 4, 13, 6, 5, 14, 15, 0, 11, 3, 1, 8, 9]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111000001111000
1110000011111000
1101010001111000
1100010011111000
1110110001101000
1110101001110000
1101100010111000
1110100101110000
1110110000111000
1100111001110000
1101100011101000
1100110101110000
1110011010110000
1111011001100000
1101101001011000
1100101100111000
1110010110110000
1111010101100000
1101100101011000
1111011000110000
1100101011011000
1100101101101000
1111010100110000
1100100111011000
1110011011100000
1111101010100000
1101011010011000
1111001011001000
1111111000001000
1111111110111000
1101011100101000
1110010111100000
1111100110100000
1101010110011000
1111000111001000
1111110100001000
1111001010011000
1111001100101000
1111000110011000
1101111010100000
1101011011001000
1101111100010000
1111101101000000
1110111010001000
1111111111101000
1110001110101000
1100011110101000
1101110110100000
1101010111001000
1100111110010000
1110101111000000
1110110110001000
1111101100010000
1110101110010000
1101111101000000
1100111111000000
word: 0101100001110000

combo: 0000000000001110

word: 1100000001010000

combo: 0000000000001010

temp: 0000000000001010

orbit_checks[temp>>log2radix]= 10100000100000001000000000000000

passed if statements
temp basis:
0011110011010100
1111110010000100
0010111100100101
rs list:
0 0 1 0 1 0 1 1 0 0 1 1 1 1 0 0 
0 0 1 0 0 0 0 1 0 0 1 1 1 1 1 1 
1 0 1 0 0 1 0 0 1 1 1 1 0 1 0 0 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 0 1 0 0 0]
[0 1 0 1 1 0 1 0 1 1 1 0 0 1 0 0]
[0 0 1 0 1 0 1 1 0 0 1 1 1 1 0 0]
[0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1]
m:
[0 0 1 0 1 0 1 1 0 0 1 1 1 1 0 0]
[0 0 1 0 0 0 0 1 0 0 1 1 1 1 1 1]
[1 0 1 0 0 1 0 0 1 1 1 1 0 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,10), ( 3,12)( 9,10), ( 2, 4)( 3,12)( 9,10), ( 2, 4)( 3,12)( 8,13)( 9,10), ( 2, 4)( 3,12)( 9,10)(11,14), ( 1, 3, 6,12)( 2, 4)( 9,14,10,11), ( 1, 9, 6,10)( 2, 4)( 3,14,12,11), ( 2, 4)( 3,12)( 9,10)(15,16), ( 2, 4)( 3,12)( 5, 7)( 9,10)(15,16), ( 2, 4)( 3,12)( 5,15, 7,16)( 9,10) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 2, 5, 4, 3, 6, 10, 8, 9, 7, 11, 13, 12, 14, 15]
[1, 2, 0, 11, 4, 3, 6, 8, 10, 13, 7, 5, 9, 12, 14, 15]
[1, 10, 8, 13, 4, 3, 6, 0, 2, 11, 7, 9, 5, 12, 14, 15]
[1, 8, 10, 9, 4, 3, 6, 2, 0, 5, 7, 13, 11, 12, 14, 15]
[0, 7, 8, 12, 4, 5, 6, 1, 2, 11, 10, 9, 3, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1100000001010000
1111010011010000
1110010000000000
1101000010000000
1110011101010000
1100001100000000
1101001111010000
word: 0110100001011000

combo: 0000000000001011

word: 0101000001001000

combo: 0000000000001001

word: 1111100001000000

combo: 0000000000001000

word: 1110100011000000

combo: 0000000000011000

word: 0100000011001000

combo: 0000000000011001

word: 0111100011011000

combo: 0000000000011011

word: 1101000011010000

combo: 0000000000011010

word: 0100100011110000

combo: 0000000000011110

word: 1110000011111000

combo: 0000000000011111

temp: 0000000000011111

orbit_checks[temp>>log2radix]= 10100000100000011000010000000000

word: 1101100011101000

combo: 0000000000011101

temp: 0000000000011101

orbit_checks[temp>>log2radix]= 10100000100000011000010000000000

word: 0111000011100000

combo: 0000000000011100

word: 0100100010100000

combo: 0000000000010100

word: 1110000010101000

combo: 0000000000010101

word: 1101100010111000

combo: 0000000000010111

temp: 0000000000010111

orbit_checks[temp>>log2radix]= 10100000100000011000010000000000

word: 0111000010110000

combo: 0000000000010110

word: 1110100010010000

combo: 0000000000010010

word: 0100000010011000

combo: 0000000000010011

word: 0111100010001000

combo: 0000000000010001

word: 1101000010000000

combo: 0000000000010000

temp: 0000000000010000

orbit_checks[temp>>log2radix]= 10100000100000011000010000000000

word: 0110000110000000

combo: 0000000000110000

word: 1100100110001000

combo: 0000000000110001

word: 1111000110011000

combo: 0000000000110011

temp: 0000000000110011

orbit_checks[temp>>log2radix]= 1010000110000100100000000000

word: 0101100110010000

combo: 0000000000110010

word: 1100000110110000

combo: 0000000000110110

word: 0110100110111000

combo: 0000000000110111

word: 0101000110101000

combo: 0000000000110101

word: 1111100110100000

combo: 0000000000110100

temp: 0000000000110100

orbit_checks[temp>>log2radix]= 1010000110000100100000000000

word: 1100000111100000

combo: 0000000000111100

word: 0110100111101000

combo: 0000000000111101

word: 0101000111111000

combo: 0000000000111111

word: 1111100111110000

combo: 0000000000111110

word: 0110000111010000

combo: 0000000000111010

word: 1100100111011000

combo: 0000000000111011

temp: 0000000000111011

orbit_checks[temp>>log2radix]= 1010000110000100100000000000

word: 1111000111001000

combo: 0000000000111001

temp: 0000000000111001

orbit_checks[temp>>log2radix]= 1010000110000100100000000000

word: 0101100111000000

combo: 0000000000111000

word: 0100100101000000

combo: 0000000000101000

word: 1110000101001000

combo: 0000000000101001

word: 1101100101011000

combo: 0000000000101011

temp: 0000000000101011

orbit_checks[temp>>log2radix]= 1010000110000100100000000000

word: 0111000101010000

combo: 0000000000101010

word: 1110100101110000

combo: 0000000000101110

temp: 0000000000101110

orbit_checks[temp>>log2radix]= 1010000110000100100000000000

word: 0100000101111000

combo: 0000000000101111

word: 0111100101101000

combo: 0000000000101101

word: 1101000101100000

combo: 0000000000101100

word: 1110100100100000

combo: 0000000000100100

word: 0100000100101000

combo: 0000000000100101

word: 0111100100111000

combo: 0000000000100111

word: 1101000100110000

combo: 0000000000100110

word: 0100100100010000

combo: 0000000000100010

word: 1110000100011000

combo: 0000000000100011

word: 1101100100001000

combo: 0000000000100001

word: 0111000100000000

combo: 0000000000100000

word: 1100001100000000

combo: 0000000001100000

temp: 0000000001100000

orbit_checks[temp>>log2radix]= 101001001000010000110100101

word: 0110101100001000

combo: 0000000001100001

word: 0101001100011000

combo: 0000000001100011

word: 1111101100010000

combo: 0000000001100010

temp: 0000000001100010

orbit_checks[temp>>log2radix]= 101001001000010000110100101

word: 0110001100110000

combo: 0000000001100110

word: 1100101100111000

combo: 0000000001100111

temp: 0000000001100111

orbit_checks[temp>>log2radix]= 101001001000010000110100101

word: 1111001100101000

combo: 0000000001100101

temp: 0000000001100101

orbit_checks[temp>>log2radix]= 101001001000010000110100101

word: 0101101100100000

combo: 0000000001100100

word: 0110001101100000

combo: 0000000001101100

word: 1100101101101000

combo: 0000000001101101

temp: 0000000001101101

orbit_checks[temp>>log2radix]= 101001001000010000110100101

word: 1111001101111000

combo: 0000000001101111

word: 0101101101110000

combo: 0000000001101110

word: 1100001101010000

combo: 0000000001101010

word: 0110101101011000

combo: 0000000001101011

word: 0101001101001000

combo: 0000000001101001

word: 1111101101000000

combo: 0000000001101000

temp: 0000000001101000

orbit_checks[temp>>log2radix]= 101001001000010000110100101

word: 1110101111000000

combo: 0000000001111000

temp: 0000000001111000

orbit_checks[temp>>log2radix]= 101001001000010000110100101

word: 0100001111001000

combo: 0000000001111001

word: 0111101111011000

combo: 0000000001111011

word: 1101001111010000

combo: 0000000001111010

temp: 0000000001111010

orbit_checks[temp>>log2radix]= 101001001000010000110100101

word: 0100101111110000

combo: 0000000001111110

word: 1110001111111000

combo: 0000000001111111

word: 1101101111101000

combo: 0000000001111101

word: 0111001111100000

combo: 0000000001111100

word: 0100101110100000

combo: 0000000001110100

word: 1110001110101000

combo: 0000000001110101

temp: 0000000001110101

orbit_checks[temp>>log2radix]= 101001001000010000110100101

word: 1101101110111000

combo: 0000000001110111

word: 0111001110110000

combo: 0000000001110110

word: 1110101110010000

combo: 0000000001110010

temp: 0000000001110010

orbit_checks[temp>>log2radix]= 101001001000010000110100101

word: 0100001110011000

combo: 0000000001110011

word: 0111101110001000

combo: 0000000001110001

word: 1101001110000000

combo: 0000000001110000

word: 0110001010000000

combo: 0000000001010000

word: 1100101010001000

combo: 0000000001010001

word: 1111001010011000

combo: 0000000001010011

temp: 0000000001010011

orbit_checks[temp>>log2radix]= 1010000110000100100000000000

word: 0101101010010000

combo: 0000000001010010

word: 1100001010110000

combo: 0000000001010110

word: 0110101010111000

combo: 0000000001010111

word: 0101001010101000

combo: 0000000001010101

word: 1111101010100000

combo: 0000000001010100

temp: 0000000001010100

orbit_checks[temp>>log2radix]= 1010000110000100100000000000

word: 1100001011100000

combo: 0000000001011100

word: 0110101011101000

combo: 0000000001011101

word: 0101001011111000

combo: 0000000001011111

word: 1111101011110000

combo: 0000000001011110

word: 0110001011010000

combo: 0000000001011010

word: 1100101011011000

combo: 0000000001011011

temp: 0000000001011011

orbit_checks[temp>>log2radix]= 1010000110000100100000000000

word: 1111001011001000

combo: 0000000001011001

temp: 0000000001011001

orbit_checks[temp>>log2radix]= 1010000110000100100000000000

word: 0101101011000000

combo: 0000000001011000

word: 0100101001000000

combo: 0000000001001000

word: 1110001001001000

combo: 0000000001001001

word: 1101101001011000

combo: 0000000001001011

temp: 0000000001001011

orbit_checks[temp>>log2radix]= 1010000110000100100000000000

word: 0111001001010000

combo: 0000000001001010

word: 1110101001110000

combo: 0000000001001110

temp: 0000000001001110

orbit_checks[temp>>log2radix]= 1010000110000100100000000000

word: 0100001001111000

combo: 0000000001001111

word: 0111101001101000

combo: 0000000001001101

word: 1101001001100000

combo: 0000000001001100

word: 1110101000100000

combo: 0000000001000100

word: 0100001000101000

combo: 0000000001000101

word: 0111101000111000

combo: 0000000001000111

word: 1101001000110000

combo: 0000000001000110

word: 0100101000010000

combo: 0000000001000010

word: 1110001000011000

combo: 0000000001000011

word: 1101101000001000

combo: 0000000001000001

word: 0111001000000000

combo: 0000000001000000

word: 0101011000000000

combo: 0000000011000000

word: 1111111000001000

combo: 0000000011000001

temp: 0000000011000001

orbit_checks[temp>>log2radix]= 10010010110100101000001000010

word: 1100011000011000

combo: 0000000011000011

word: 0110111000010000

combo: 0000000011000010

word: 1111011000110000

combo: 0000000011000110

temp: 0000000011000110

orbit_checks[temp>>log2radix]= 10010010110100101000001000010

word: 0101111000111000

combo: 0000000011000111

word: 0110011000101000

combo: 0000000011000101

word: 1100111000100000

combo: 0000000011000100

word: 1111011001100000

combo: 0000000011001100

temp: 0000000011001100

orbit_checks[temp>>log2radix]= 10010010110100101000001000010

word: 0101111001101000

combo: 0000000011001101

word: 0110011001111000

combo: 0000000011001111

word: 1100111001110000

combo: 0000000011001110

temp: 0000000011001110

orbit_checks[temp>>log2radix]= 10010010110100101000001000010

word: 0101011001010000

combo: 0000000011001010

word: 1111111001011000

combo: 0000000011001011

word: 1100011001001000

combo: 0000000011001001

word: 0110111001000000

combo: 0000000011001000

word: 0111111011000000

combo: 0000000011011000

word: 1101011011001000

combo: 0000000011011001

temp: 0000000011011001

orbit_checks[temp>>log2radix]= 10010010110100101000001000010

word: 1110111011011000

combo: 0000000011011011

word: 0100011011010000

combo: 0000000011011010

word: 1101111011110000

combo: 0000000011011110

word: 0111011011111000

combo: 0000000011011111

word: 0100111011101000

combo: 0000000011011101

word: 1110011011100000

combo: 0000000011011100

temp: 0000000011011100

orbit_checks[temp>>log2radix]= 10010010110100101000001000010

word: 1101111010100000

combo: 0000000011010100

temp: 0000000011010100

orbit_checks[temp>>log2radix]= 10010010110100101000001000010

word: 0111011010101000

combo: 0000000011010101

word: 0100111010111000

combo: 0000000011010111

word: 1110011010110000

combo: 0000000011010110

temp: 0000000011010110

orbit_checks[temp>>log2radix]= 10010010110100101000001000010

word: 0111111010010000

combo: 0000000011010010

word: 1101011010011000

combo: 0000000011010011

temp: 0000000011010011

orbit_checks[temp>>log2radix]= 10010010110100101000001000010

word: 1110111010001000

combo: 0000000011010001

temp: 0000000011010001

orbit_checks[temp>>log2radix]= 10010010110100101000001000010

word: 0100011010000000

combo: 0000000011010000

word: 1111011110000000

combo: 0000000011110000

temp: 0000000011110000

orbit_checks[temp>>log2radix]= 100001101001000000010100100100

passed if statements
temp basis:
1110010001110001
0010011101011010
1100101101010100
rs list:
1 0 0 0 1 1 1 0 0 0 1 0 0 1 1 1 
0 1 0 1 1 0 1 0 1 1 1 0 0 1 0 0 
0 0 1 0 1 0 1 0 1 1 0 1 0 0 1 1 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 0 1 0 0 0]
[0 1 0 1 1 0 1 0 1 1 1 0 0 1 0 0]
[0 0 1 0 1 0 1 1 0 0 1 1 1 1 0 0]
[0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1]
m:
[1 0 0 0 1 1 1 0 0 0 1 0 0 1 1 1]
[0 1 0 1 1 0 1 0 1 1 1 0 0 1 0 0]
[0 0 1 0 1 0 1 0 1 1 0 1 0 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (11,14), ( 9,10), ( 8,13), (5,7), ( 3, 5)( 7,12)( 9,15)(10,16), ( 3, 9)( 5,15)( 7,16)(10,12), ( 2, 3)( 4,12)(11,15)(14,16), ( 1, 2)( 4, 6)( 9,15)(10,16) ] )
Right transversal of automorphism group of B_aug:
[7, 1, 2, 3, 8, 12, 9, 0, 4, 6, 10, 11, 5, 13, 14, 15]
[7, 0, 2, 5, 14, 12, 15, 1, 4, 6, 10, 11, 3, 13, 8, 9]
[7, 0, 2, 5, 14, 12, 15, 10, 8, 9, 1, 11, 13, 3, 4, 6]
[7, 0, 1, 5, 10, 12, 13, 2, 4, 6, 14, 3, 11, 15, 8, 9]
[7, 0, 1, 5, 10, 12, 13, 14, 8, 9, 2, 3, 15, 11, 4, 6]
orbits:
1111011110000000
word: 0101111110001000

combo: 0000000011110001

word: 0110011110011000

combo: 0000000011110011

word: 1100111110010000

combo: 0000000011110010

temp: 0000000011110010

orbit_checks[temp>>log2radix]= 100001101001010000010100100100

word: 0101011110110000

combo: 0000000011110110

word: 1111111110111000

combo: 0000000011110111

temp: 0000000011110111

orbit_checks[temp>>log2radix]= 100001101001010000010100100100

word: 1100011110101000

combo: 0000000011110101

temp: 0000000011110101

orbit_checks[temp>>log2radix]= 100001101001010000010100100100

word: 0110111110100000

combo: 0000000011110100

word: 0101011111100000

combo: 0000000011111100

word: 1111111111101000

combo: 0000000011111101

temp: 0000000011111101

orbit_checks[temp>>log2radix]= 100001101001010000010100100100

word: 1100011111111000

combo: 0000000011111111

word: 0110111111110000

combo: 0000000011111110

word: 1111011111010000

combo: 0000000011111010

word: 0101111111011000

combo: 0000000011111011

word: 0110011111001000

combo: 0000000011111001

word: 1100111111000000

combo: 0000000011111000

temp: 0000000011111000

orbit_checks[temp>>log2radix]= 100001101001010000010100100100

word: 1101111101000000

combo: 0000000011101000

temp: 0000000011101000

orbit_checks[temp>>log2radix]= 100001101001010000010100100100

word: 0111011101001000

combo: 0000000011101001

word: 0100111101011000

combo: 0000000011101011

word: 1110011101010000

combo: 0000000011101010

temp: 0000000011101010

orbit_checks[temp>>log2radix]= 100001101001010000010100100100

word: 0111111101110000

combo: 0000000011101110

word: 1101011101111000

combo: 0000000011101111

word: 1110111101101000

combo: 0000000011101101

word: 0100011101100000

combo: 0000000011101100

word: 0111111100100000

combo: 0000000011100100

word: 1101011100101000

combo: 0000000011100101

temp: 0000000011100101

orbit_checks[temp>>log2radix]= 100001101001010000010100100100

word: 1110111100111000

combo: 0000000011100111

word: 0100011100110000

combo: 0000000011100110

word: 1101111100010000

combo: 0000000011100010

temp: 0000000011100010

orbit_checks[temp>>log2radix]= 100001101001010000010100100100

word: 0111011100011000

combo: 0000000011100011

word: 0100111100001000

combo: 0000000011100001

word: 1110011100000000

combo: 0000000011100000

word: 0101010100000000

combo: 0000000010100000

word: 1111110100001000

combo: 0000000010100001

temp: 0000000010100001

orbit_checks[temp>>log2radix]= 10010010110100101000001000010

word: 1100010100011000

combo: 0000000010100011

word: 0110110100010000

combo: 0000000010100010

word: 1111010100110000

combo: 0000000010100110

temp: 0000000010100110

orbit_checks[temp>>log2radix]= 10010010110100101000001000010

word: 0101110100111000

combo: 0000000010100111

word: 0110010100101000

combo: 0000000010100101

word: 1100110100100000

combo: 0000000010100100

word: 1111010101100000

combo: 0000000010101100

temp: 0000000010101100

orbit_checks[temp>>log2radix]= 10010010110100101000001000010

word: 0101110101101000

combo: 0000000010101101

word: 0110010101111000

combo: 0000000010101111

word: 1100110101110000

combo: 0000000010101110

temp: 0000000010101110

orbit_checks[temp>>log2radix]= 10010010110100101000001000010

word: 0101010101010000

combo: 0000000010101010

word: 1111110101011000

combo: 0000000010101011

word: 1100010101001000

combo: 0000000010101001

word: 0110110101000000

combo: 0000000010101000

word: 0111110111000000

combo: 0000000010111000

word: 1101010111001000

combo: 0000000010111001

temp: 0000000010111001

orbit_checks[temp>>log2radix]= 10010010110100101000001000010

word: 1110110111011000

combo: 0000000010111011

word: 0100010111010000

combo: 0000000010111010

word: 1101110111110000

combo: 0000000010111110

word: 0111010111111000

combo: 0000000010111111

word: 0100110111101000

combo: 0000000010111101

word: 1110010111100000

combo: 0000000010111100

temp: 0000000010111100

orbit_checks[temp>>log2radix]= 10010010110100101000001000010

word: 1101110110100000

combo: 0000000010110100

temp: 0000000010110100

orbit_checks[temp>>log2radix]= 10010010110100101000001000010

word: 0111010110101000

combo: 0000000010110101

word: 0100110110111000

combo: 0000000010110111

word: 1110010110110000

combo: 0000000010110110

temp: 0000000010110110

orbit_checks[temp>>log2radix]= 10010010110100101000001000010

word: 0111110110010000

combo: 0000000010110010

word: 1101010110011000

combo: 0000000010110011

temp: 0000000010110011

orbit_checks[temp>>log2radix]= 10010010110100101000001000010

word: 1110110110001000

combo: 0000000010110001

temp: 0000000010110001

orbit_checks[temp>>log2radix]= 10010010110100101000001000010

word: 0100010110000000

combo: 0000000010110000

word: 1111010010000000

combo: 0000000010010000

word: 0101110010001000

combo: 0000000010010001

word: 0110010010011000

combo: 0000000010010011

word: 1100110010010000

combo: 0000000010010010

word: 0101010010110000

combo: 0000000010010110

word: 1111110010111000

combo: 0000000010010111

word: 1100010010101000

combo: 0000000010010101

word: 0110110010100000

combo: 0000000010010100

word: 0101010011100000

combo: 0000000010011100

word: 1111110011101000

combo: 0000000010011101

word: 1100010011111000

combo: 0000000010011111

temp: 0000000010011111

orbit_checks[temp>>log2radix]= 10000100000000001010000010000001

word: 0110110011110000

combo: 0000000010011110

word: 1111010011010000

combo: 0000000010011010

temp: 0000000010011010

orbit_checks[temp>>log2radix]= 10000100000000001010000010000001

word: 0101110011011000

combo: 0000000010011011

word: 0110010011001000

combo: 0000000010011001

word: 1100110011000000

combo: 0000000010011000

word: 1101110001000000

combo: 0000000010001000

word: 0111010001001000

combo: 0000000010001001

word: 0100110001011000

combo: 0000000010001011

word: 1110010001010000

combo: 0000000010001010

word: 0111110001110000

combo: 0000000010001110

word: 1101010001111000

combo: 0000000010001111

temp: 0000000010001111

orbit_checks[temp>>log2radix]= 10000100000000001010000010000001

word: 1110110001101000

combo: 0000000010001101

temp: 0000000010001101

orbit_checks[temp>>log2radix]= 10000100000000001010000010000001

word: 0100010001100000

combo: 0000000010001100

word: 0111110000100000

combo: 0000000010000100

word: 1101010000101000

combo: 0000000010000101

word: 1110110000111000

combo: 0000000010000111

temp: 0000000010000111

orbit_checks[temp>>log2radix]= 10000100000000001010000010000001

word: 0100010000110000

combo: 0000000010000110

word: 1101110000010000

combo: 0000000010000010

word: 0111010000011000

combo: 0000000010000011

word: 0100110000001000

combo: 0000000010000001

word: 1110010000000000

combo: 0000000010000000

temp: 0000000010000000

orbit_checks[temp>>log2radix]= 10000100000000001010000010000001

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 0 1 1 1 1]
[0 1 1 1 0 0 0 1 1 1 1 1]
limit on degree (length): 15
ortho basis:
000010000000100
000010000001000
100110000010000
100110000100000
100110001000000
000100010000000
000100100000000
000101000000000
101000000000000
110000000000000

B_can_lab before row reduction:
000000111101111
000111111110000

B_can_lab after row reduction:
000000111101111
000111111110000

word generated as sum over rows of ortho_basis starting at 8: 011000000000000
gate: 000000000000011
k_gate: 000000011111111
nonzero_gate: 111000000000000
radix_gate: 000000000011111

Starting main loop:
word: 011000000000000

combo: 000000000000000

word: 011010000000100

combo: 000000000000001

word: 011000000001100

combo: 000000000000011

word: 011010000001000

combo: 000000000000010

word: 111100000011000

combo: 000000000000110

word: 111110000011100

combo: 000000000000111

temp: 000000000000111

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
000101111110001
000111110001110
rs list:
1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 
0 1 1 1 0 0 0 1 1 1 1 1 0 0 0 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0 0]
[0 1 1 1 0 0 0 1 1 1 1 1 0 0 0]
[0 0 1 1 1 0 0 0 0 0 1 1 1 1 1]
m:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0 0]
[0 1 1 1 0 0 0 1 1 1 1 1 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (8,9), ( 8,10), ( 3, 4)( 8,10), ( 3, 4,11)( 8,10), ( 3, 4,11)( 8,10)(13,15), ( 3, 4,11)( 8,10)(13,14), ( 3, 4,11)( 6, 7)( 8,10)(13,14), ( 1, 6)( 3, 4,11)( 8,10)(13,14), ( 1, 8, 7,10)( 3, 4,11)( 5,12)( 6, 9)(13,14), ( 1, 8,11)( 2, 5,12)( 3, 6, 9, 4, 7,10)(13,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 12, 13, 11, 5, 6, 7, 8, 9, 14, 4, 2, 3, 10]
[0, 4, 2, 3, 1, 5, 6, 12, 13, 14, 10, 11, 7, 8, 9]
[2, 1, 7, 8, 11, 3, 10, 12, 13, 14, 9, 4, 0, 5, 6]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
111110000011100
111011000011100
111001110010100
111111100010000
111110000101100
111100001110100
111010100011100
111100110010100
111101100011000
111011000101100
111001001110100
111001110011000
111111010010000
111001110100100
111111100100000
111101101000100
111110001001100
111100001111000
111011111111100
111010101110000
111010010011100
111101010010100
111101100010100
111010100101100
111000101110100
111100110011000
111101010011000
111100110100100
111101100101000
111101100100100
111011001001100
111001001111000
111110111111100
111000101111000
111011110010000
111110110010000
111001110101000
111111010100000
111101011000100
111001111000100
111111101000000
111101101001000
111010011001100
111010101001100
111110001110000
111011001110000
111010011110000
111010010101100
111000011110100
111101010100100
111111011111100
111100110101000
111101010101000
111100111000100
111000011111000
111011110100000
111110110100000
111001111001000
111111011000000
111101011001000
111111101111100
111100111001000
111011111000000
111110111000000
word: 111100000010100

combo: 000000000000101

word: 111110000010000

combo: 000000000000100

word: 011000000110000

combo: 000000000001100

word: 011010000110100

combo: 000000000001101

word: 011000000111100

combo: 000000000001111

word: 011010000111000

combo: 000000000001110

word: 111100000101000

combo: 000000000001010

word: 111110000101100

combo: 000000000001011

temp: 000000000001011

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 111100000100100

combo: 000000000001001

word: 111110000100000

combo: 000000000001000

word: 011000001100000

combo: 000000000011000

word: 011010001100100

combo: 000000000011001

word: 011000001101100

combo: 000000000011011

word: 011010001101000

combo: 000000000011010

word: 111100001111000

combo: 000000000011110

temp: 000000000011110

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 111110001111100

combo: 000000000011111

word: 111100001110100

combo: 000000000011101

temp: 000000000011101

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 111110001110000

combo: 000000000011100

temp: 000000000011100

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 011000001010000

combo: 000000000010100

word: 011010001010100

combo: 000000000010101

word: 011000001011100

combo: 000000000010111

word: 011010001011000

combo: 000000000010110

word: 111100001001000

combo: 000000000010010

word: 111110001001100

combo: 000000000010011

temp: 000000000010011

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 111100001000100

combo: 000000000010001

word: 111110001000000

combo: 000000000010000

word: 111010011000000

combo: 000000000110000

word: 111000011000100

combo: 000000000110001

word: 111010011001100

combo: 000000000110011

temp: 000000000110011

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 111000011001000

combo: 000000000110010

word: 011110011011000

combo: 000000000110110

word: 011100011011100

combo: 000000000110111

word: 011110011010100

combo: 000000000110101

word: 011100011010000

combo: 000000000110100

word: 111010011110000

combo: 000000000111100

temp: 000000000111100

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 111000011110100

combo: 000000000111101

temp: 000000000111101

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 111010011111100

combo: 000000000111111

word: 111000011111000

combo: 000000000111110

temp: 000000000111110

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 011110011101000

combo: 000000000111010

word: 011100011101100

combo: 000000000111011

word: 011110011100100

combo: 000000000111001

word: 011100011100000

combo: 000000000111000

word: 111010010100000

combo: 000000000101000

word: 111000010100100

combo: 000000000101001

word: 111010010101100

combo: 000000000101011

temp: 000000000101011

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 111000010101000

combo: 000000000101010

word: 011110010111000

combo: 000000000101110

word: 011100010111100

combo: 000000000101111

word: 011110010110100

combo: 000000000101101

word: 011100010110000

combo: 000000000101100

word: 111010010010000

combo: 000000000100100

word: 111000010010100

combo: 000000000100101

word: 111010010011100

combo: 000000000100111

temp: 000000000100111

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 111000010011000

combo: 000000000100110

word: 011110010001000

combo: 000000000100010

word: 011100010001100

combo: 000000000100011

word: 011110010000100

combo: 000000000100001

word: 011100010000000

combo: 000000000100000

word: 011000110000000

combo: 000000001100000

word: 011010110000100

combo: 000000001100001

word: 011000110001100

combo: 000000001100011

word: 011010110001000

combo: 000000001100010

word: 111100110011000

combo: 000000001100110

temp: 000000001100110

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111110110011100

combo: 000000001100111

word: 111100110010100

combo: 000000001100101

temp: 000000001100101

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111110110010000

combo: 000000001100100

temp: 000000001100100

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 011000110110000

combo: 000000001101100

word: 011010110110100

combo: 000000001101101

word: 011000110111100

combo: 000000001101111

word: 011010110111000

combo: 000000001101110

word: 111100110101000

combo: 000000001101010

temp: 000000001101010

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111110110101100

combo: 000000001101011

word: 111100110100100

combo: 000000001101001

temp: 000000001101001

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111110110100000

combo: 000000001101000

temp: 000000001101000

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 011000111100000

combo: 000000001111000

word: 011010111100100

combo: 000000001111001

word: 011000111101100

combo: 000000001111011

word: 011010111101000

combo: 000000001111010

word: 111100111111000

combo: 000000001111110

word: 111110111111100

combo: 000000001111111

temp: 000000001111111

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111100111110100

combo: 000000001111101

word: 111110111110000

combo: 000000001111100

word: 011000111010000

combo: 000000001110100

word: 011010111010100

combo: 000000001110101

word: 011000111011100

combo: 000000001110111

word: 011010111011000

combo: 000000001110110

word: 111100111001000

combo: 000000001110010

temp: 000000001110010

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111110111001100

combo: 000000001110011

word: 111100111000100

combo: 000000001110001

temp: 000000001110001

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111110111000000

combo: 000000001110000

temp: 000000001110000

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111010101000000

combo: 000000001010000

word: 111000101000100

combo: 000000001010001

word: 111010101001100

combo: 000000001010011

temp: 000000001010011

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 111000101001000

combo: 000000001010010

word: 011110101011000

combo: 000000001010110

word: 011100101011100

combo: 000000001010111

word: 011110101010100

combo: 000000001010101

word: 011100101010000

combo: 000000001010100

word: 111010101110000

combo: 000000001011100

temp: 000000001011100

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 111000101110100

combo: 000000001011101

temp: 000000001011101

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 111010101111100

combo: 000000001011111

word: 111000101111000

combo: 000000001011110

temp: 000000001011110

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 011110101101000

combo: 000000001011010

word: 011100101101100

combo: 000000001011011

word: 011110101100100

combo: 000000001011001

word: 011100101100000

combo: 000000001011000

word: 111010100100000

combo: 000000001001000

word: 111000100100100

combo: 000000001001001

word: 111010100101100

combo: 000000001001011

temp: 000000001001011

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 111000100101000

combo: 000000001001010

word: 011110100111000

combo: 000000001001110

word: 011100100111100

combo: 000000001001111

word: 011110100110100

combo: 000000001001101

word: 011100100110000

combo: 000000001001100

word: 111010100010000

combo: 000000001000100

word: 111000100010100

combo: 000000001000101

word: 111010100011100

combo: 000000001000111

temp: 000000001000111

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 111000100011000

combo: 000000001000110

word: 011110100001000

combo: 000000001000010

word: 011100100001100

combo: 000000001000011

word: 011110100000100

combo: 000000001000001

word: 011100100000000

combo: 000000001000000

word: 011001100000000

combo: 000000011000000

word: 011011100000100

combo: 000000011000001

word: 011001100001100

combo: 000000011000011

word: 011011100001000

combo: 000000011000010

word: 111101100011000

combo: 000000011000110

temp: 000000011000110

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111111100011100

combo: 000000011000111

word: 111101100010100

combo: 000000011000101

temp: 000000011000101

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111111100010000

combo: 000000011000100

temp: 000000011000100

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 011001100110000

combo: 000000011001100

word: 011011100110100

combo: 000000011001101

word: 011001100111100

combo: 000000011001111

word: 011011100111000

combo: 000000011001110

word: 111101100101000

combo: 000000011001010

temp: 000000011001010

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111111100101100

combo: 000000011001011

word: 111101100100100

combo: 000000011001001

temp: 000000011001001

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111111100100000

combo: 000000011001000

temp: 000000011001000

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 011001101100000

combo: 000000011011000

word: 011011101100100

combo: 000000011011001

word: 011001101101100

combo: 000000011011011

word: 011011101101000

combo: 000000011011010

word: 111101101111000

combo: 000000011011110

word: 111111101111100

combo: 000000011011111

temp: 000000011011111

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111101101110100

combo: 000000011011101

word: 111111101110000

combo: 000000011011100

word: 011001101010000

combo: 000000011010100

word: 011011101010100

combo: 000000011010101

word: 011001101011100

combo: 000000011010111

word: 011011101011000

combo: 000000011010110

word: 111101101001000

combo: 000000011010010

temp: 000000011010010

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111111101001100

combo: 000000011010011

word: 111101101000100

combo: 000000011010001

temp: 000000011010001

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111111101000000

combo: 000000011010000

temp: 000000011010000

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111011111000000

combo: 000000011110000

temp: 000000011110000

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111001111000100

combo: 000000011110001

temp: 000000011110001

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111011111001100

combo: 000000011110011

word: 111001111001000

combo: 000000011110010

temp: 000000011110010

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 011111111011000

combo: 000000011110110

word: 011101111011100

combo: 000000011110111

word: 011111111010100

combo: 000000011110101

word: 011101111010000

combo: 000000011110100

word: 111011111110000

combo: 000000011111100

word: 111001111110100

combo: 000000011111101

word: 111011111111100

combo: 000000011111111

temp: 000000011111111

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111001111111000

combo: 000000011111110

word: 011111111101000

combo: 000000011111010

word: 011101111101100

combo: 000000011111011

word: 011111111100100

combo: 000000011111001

word: 011101111100000

combo: 000000011111000

word: 111011110100000

combo: 000000011101000

temp: 000000011101000

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111001110100100

combo: 000000011101001

temp: 000000011101001

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111011110101100

combo: 000000011101011

word: 111001110101000

combo: 000000011101010

temp: 000000011101010

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 011111110111000

combo: 000000011101110

word: 011101110111100

combo: 000000011101111

word: 011111110110100

combo: 000000011101101

word: 011101110110000

combo: 000000011101100

word: 111011110010000

combo: 000000011100100

temp: 000000011100100

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111001110010100

combo: 000000011100101

temp: 000000011100101

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111011110011100

combo: 000000011100111

word: 111001110011000

combo: 000000011100110

temp: 000000011100110

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 011111110001000

combo: 000000011100010

word: 011101110001100

combo: 000000011100011

word: 011111110000100

combo: 000000011100001

word: 011101110000000

combo: 000000011100000

word: 011001010000000

combo: 000000010100000

word: 011011010000100

combo: 000000010100001

word: 011001010001100

combo: 000000010100011

word: 011011010001000

combo: 000000010100010

word: 111101010011000

combo: 000000010100110

temp: 000000010100110

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111111010011100

combo: 000000010100111

word: 111101010010100

combo: 000000010100101

temp: 000000010100101

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111111010010000

combo: 000000010100100

temp: 000000010100100

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 011001010110000

combo: 000000010101100

word: 011011010110100

combo: 000000010101101

word: 011001010111100

combo: 000000010101111

word: 011011010111000

combo: 000000010101110

word: 111101010101000

combo: 000000010101010

temp: 000000010101010

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111111010101100

combo: 000000010101011

word: 111101010100100

combo: 000000010101001

temp: 000000010101001

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111111010100000

combo: 000000010101000

temp: 000000010101000

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 011001011100000

combo: 000000010111000

word: 011011011100100

combo: 000000010111001

word: 011001011101100

combo: 000000010111011

word: 011011011101000

combo: 000000010111010

word: 111101011111000

combo: 000000010111110

word: 111111011111100

combo: 000000010111111

temp: 000000010111111

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111101011110100

combo: 000000010111101

word: 111111011110000

combo: 000000010111100

word: 011001011010000

combo: 000000010110100

word: 011011011010100

combo: 000000010110101

word: 011001011011100

combo: 000000010110111

word: 011011011011000

combo: 000000010110110

word: 111101011001000

combo: 000000010110010

temp: 000000010110010

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111111011001100

combo: 000000010110011

word: 111101011000100

combo: 000000010110001

temp: 000000010110001

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111111011000000

combo: 000000010110000

temp: 000000010110000

orbit_checks[temp>>log2radix]= 10000000000001110000011101110000

word: 111011001000000

combo: 000000010010000

word: 111001001000100

combo: 000000010010001

word: 111011001001100

combo: 000000010010011

temp: 000000010010011

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 111001001001000

combo: 000000010010010

word: 011111001011000

combo: 000000010010110

word: 011101001011100

combo: 000000010010111

word: 011111001010100

combo: 000000010010101

word: 011101001010000

combo: 000000010010100

word: 111011001110000

combo: 000000010011100

temp: 000000010011100

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 111001001110100

combo: 000000010011101

temp: 000000010011101

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 111011001111100

combo: 000000010011111

word: 111001001111000

combo: 000000010011110

temp: 000000010011110

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 011111001101000

combo: 000000010011010

word: 011101001101100

combo: 000000010011011

word: 011111001100100

combo: 000000010011001

word: 011101001100000

combo: 000000010011000

word: 111011000100000

combo: 000000010001000

word: 111001000100100

combo: 000000010001001

word: 111011000101100

combo: 000000010001011

temp: 000000010001011

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 111001000101000

combo: 000000010001010

word: 011111000111000

combo: 000000010001110

word: 011101000111100

combo: 000000010001111

word: 011111000110100

combo: 000000010001101

word: 011101000110000

combo: 000000010001100

word: 111011000010000

combo: 000000010000100

word: 111001000010100

combo: 000000010000101

word: 111011000011100

combo: 000000010000111

temp: 000000010000111

orbit_checks[temp>>log2radix]= 1110000000010000000100010000000

word: 111001000011000

combo: 000000010000110

word: 011111000001000

combo: 000000010000010

word: 011101000001100

combo: 000000010000011

word: 011111000000100

combo: 000000010000001

word: 011101000000000

combo: 000000010000000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0 0]
[0 1 0 0 1 0 0 1 1 1 0 0 1 1 1]
[0 0 1 1 1 0 0 0 0 0 1 1 1 1 1]
limit on degree (length): 16
ortho basis:
0001000000001000
0111000000010000
1011000000100000
1011000001000000
1110000010000000
1110000100000000
1110001000000000
0100010000000000
0100100000000000

B_can_lab before row reduction:
0110111110000001
0011001111110000
0110000001111110

B_can_lab after row reduction:
0110111110000001
0101001110001110
0011001111110000

word generated as sum over rows of ortho_basis starting at 9: 0000000000000000
gate: 0000000000000111
k_gate: 0000000111111111
nonzero_gate: 1000000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 0000000000000000

combo: 0000000000000000

word: 0001000000001000

combo: 0000000000000001

word: 0110000000011000

combo: 0000000000000011

word: 0111000000010000

combo: 0000000000000010

word: 1100000000110000

combo: 0000000000000110

temp: 0000000000000110

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1110001111000001
1101000001001111
1010110001010011
rs list:
1 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 
1 1 1 1 0 0 1 0 0 0 0 0 1 0 1 1 
1 1 0 0 1 0 1 0 0 0 1 1 0 1 0 1 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 0 0 1 0 0]
[0 1 0 0 1 0 0 1 1 1 1 1 0 0 1 0]
[0 0 1 1 1 0 0 0 0 0 1 1 1 1 1 0]
[0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1]
m:
[1 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1]
[1 1 1 1 0 0 1 0 0 0 0 0 1 0 1 1]
[1 1 0 0 1 0 1 0 0 0 1 1 0 1 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,12), ( 9,10), (8,9), ( 4,13), (3,4), ( 2,14)( 3, 8)( 4, 9)(10,13), (1,7), ( 1,11)( 3, 8)( 4, 9)( 5,16)( 7,12)(10,13) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14]
[10, 1, 7, 8, 4, 14, 11, 2, 3, 12, 0, 6, 9, 13, 5, 15]
[10, 1, 7, 8, 5, 15, 11, 2, 3, 12, 0, 6, 9, 13, 4, 14]
orbits:
1100000000110000
1000100000110000
1100000001010000
1000001000011000
1001000100010000
1011000000100000
1100110110110000
1000010000110000
1000100001010000
1000000100011000
1010000000101000
1100111010110000
1001001000010000
1011000001000000
1100110111010000
1111111000001000
1010101000000000
1000111110011000
1001000010010000
1110000100000000
1101011110010000
1010000001001000
1100111011010000
1000010001010000
1000000010011000
1111110100001000
1101110000111000
1100111100110000
1010100100000000
1100011110011000
1110001000000000
1001111110010000
1110001111100000
1010011000000000
1111001110001000
1110000010000000
1101101110010000
1101110001011000
1100111101010000
1111110010001000
1010101111100000
1010100010000000
1100101110011000
1010010100000000
1011101110001000
1000001111111000
1110110101100000
1001001111110000
1110111001100000
1010011111100000
1010010010000000
1011011110001000
1111111111101000
1110110011100000
word: 1101000000111000

combo: 0000000000000111

word: 1010000000101000

combo: 0000000000000101

temp: 0000000000000101

orbit_checks[temp>>log2radix]= 11010000011101110000

word: 1011000000100000

combo: 0000000000000100

temp: 0000000000000100

orbit_checks[temp>>log2radix]= 11010000011101110000

word: 0000000001100000

combo: 0000000000001100

word: 0001000001101000

combo: 0000000000001101

word: 0110000001111000

combo: 0000000000001111

word: 0111000001110000

combo: 0000000000001110

word: 1100000001010000

combo: 0000000000001010

temp: 0000000000001010

orbit_checks[temp>>log2radix]= 11010000011101110000

word: 1101000001011000

combo: 0000000000001011

word: 1010000001001000

combo: 0000000000001001

temp: 0000000000001001

orbit_checks[temp>>log2radix]= 11010000011101110000

word: 1011000001000000

combo: 0000000000001000

temp: 0000000000001000

orbit_checks[temp>>log2radix]= 11010000011101110000

word: 0101000011000000

combo: 0000000000011000

word: 0100000011001000

combo: 0000000000011001

word: 0011000011011000

combo: 0000000000011011

word: 0010000011010000

combo: 0000000000011010

word: 1001000011110000

combo: 0000000000011110

word: 1000000011111000

combo: 0000000000011111

word: 1111000011101000

combo: 0000000000011101

temp: 0000000000011101

orbit_checks[temp>>log2radix]= 11010000011101110000

passed if statements
temp basis:
0111110000011100
1000110011110100
0100111110010010
rs list:
0 0 1 1 1 0 0 0 0 0 1 1 1 1 1 0 
0 0 1 0 1 1 1 1 0 0 1 1 0 0 0 1 
0 1 0 0 1 0 0 1 1 1 1 1 0 0 1 0 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 0 0 1 0 0]
[0 1 0 0 1 0 0 1 1 1 1 1 0 0 1 0]
[0 0 1 1 1 0 0 0 0 0 1 1 1 1 1 0]
[0 0 0 1 0 1 1 1 0 0 0 0 1 1 1 1]
m:
[0 0 1 1 1 0 0 0 0 0 1 1 1 1 1 0]
[0 0 1 0 1 1 1 1 0 0 1 1 0 0 0 1]
[0 1 0 0 1 0 0 1 1 1 1 1 0 0 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,12), ( 9,10), (6,7), ( 4, 6)( 7,13)( 8,15)(14,16), ( 2, 5)( 8,15)( 9,11)(10,12), ( 2,16)( 3,15)( 6, 9)( 7,10) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 4, 3, 2, 5, 6, 15, 8, 9, 10, 11, 12, 14, 13, 7]
[2, 4, 0, 3, 1, 5, 6, 14, 8, 9, 10, 11, 12, 15, 7, 13]
[7, 15, 14, 3, 13, 5, 6, 0, 8, 9, 10, 11, 12, 4, 2, 1]
[4, 0, 1, 3, 2, 5, 6, 15, 10, 11, 8, 9, 12, 7, 13, 14]
[15, 0, 4, 3, 14, 8, 9, 1, 5, 6, 10, 11, 12, 2, 13, 7]
orbits:
1111000011101000
1111000101101000
1011100011101000
1000110011111000
1011011001101000
1101100011110000
1111001001101000
1011100101101000
1000110101111000
1011101001101000
1111101100100000
1101100101110000
1011010011101000
1100010011111000
1011010101101000
1100100011111000
1001110011110000
1001010110111000
1101010011110000
1100101001111000
1001011101011000
1000111001111000
1111101101000000
1101101001110000
1100010101111000
1110101100101000
1100100101111000
1001110101110000
1001100110111000
1111011100100000
1101010101110000
1100011001111000
1110101101001000
1111101010100000
1101001100111000
1001101101011000
1001011010111000
1001011100111000
1001010111011000
1110100110101000
1001011011011000
1001111001110000
1101000110111000
1111011101000000
1101011001110000
1111101011000000
1101001101011000
1001101010111000
1110011100101000
1110101010101000
1001101100111000
1001100111011000
1011111100100000
1110010110101000
1110101011001000
1101001010111000
1111011010100000
1010111100101000
1001101011011000
1110011101001000
1111100110100000
1110100111001000
1101000111011000
1011111101000000
1010110110101000
1111011011000000
1010111101001000
1101001011011000
1111100111000000
1110011010101000
1110010111001000
1011111010100000
1111010110100000
1010111010101000
1110011011001000
1010110111001000
1011111011000000
1011110110100000
1111010111000000
1010111011001000
1011110111000000
word: 1110000011100000

combo: 0000000000011100

word: 0101000010100000

combo: 0000000000010100

word: 0100000010101000

combo: 0000000000010101

word: 0011000010111000

combo: 0000000000010111

word: 0010000010110000

combo: 0000000000010110

word: 1001000010010000

combo: 0000000000010010

temp: 0000000000010010

orbit_checks[temp>>log2radix]= 100000000011010000011101110000

word: 1000000010011000

combo: 0000000000010011

temp: 0000000000010011

orbit_checks[temp>>log2radix]= 100000000011010000011101110000

word: 1111000010001000

combo: 0000000000010001

word: 1110000010000000

combo: 0000000000010000

temp: 0000000000010000

orbit_checks[temp>>log2radix]= 100000000011010000011101110000

word: 0000000110000000

combo: 0000000000110000

word: 0001000110001000

combo: 0000000000110001

word: 0110000110011000

combo: 0000000000110011

word: 0111000110010000

combo: 0000000000110010

word: 1100000110110000

combo: 0000000000110110

word: 1101000110111000

combo: 0000000000110111

temp: 0000000000110111

orbit_checks[temp>>log2radix]= 1000100000000010000000001101

word: 1010000110101000

combo: 0000000000110101

word: 1011000110100000

combo: 0000000000110100

word: 0000000111100000

combo: 0000000000111100

word: 0001000111101000

combo: 0000000000111101

word: 0110000111111000

combo: 0000000000111111

word: 0111000111110000

combo: 0000000000111110

word: 1100000111010000

combo: 0000000000111010

word: 1101000111011000

combo: 0000000000111011

temp: 0000000000111011

orbit_checks[temp>>log2radix]= 1000100000000010000000001101

word: 1010000111001000

combo: 0000000000111001

word: 1011000111000000

combo: 0000000000111000

word: 0101000101000000

combo: 0000000000101000

word: 0100000101001000

combo: 0000000000101001

word: 0011000101011000

combo: 0000000000101011

word: 0010000101010000

combo: 0000000000101010

word: 1001000101110000

combo: 0000000000101110

word: 1000000101111000

combo: 0000000000101111

word: 1111000101101000

combo: 0000000000101101

temp: 0000000000101101

orbit_checks[temp>>log2radix]= 1000100000000010000000001101

word: 1110000101100000

combo: 0000000000101100

word: 0101000100100000

combo: 0000000000100100

word: 0100000100101000

combo: 0000000000100101

word: 0011000100111000

combo: 0000000000100111

word: 0010000100110000

combo: 0000000000100110

word: 1001000100010000

combo: 0000000000100010

temp: 0000000000100010

orbit_checks[temp>>log2radix]= 1000100000000010000000001101

word: 1000000100011000

combo: 0000000000100011

temp: 0000000000100011

orbit_checks[temp>>log2radix]= 1000100000000010000000001101

word: 1111000100001000

combo: 0000000000100001

word: 1110000100000000

combo: 0000000000100000

temp: 0000000000100000

orbit_checks[temp>>log2radix]= 1000100000000010000000001101

word: 0000001100000000

combo: 0000000001100000

word: 0001001100001000

combo: 0000000001100001

word: 0110001100011000

combo: 0000000001100011

word: 0111001100010000

combo: 0000000001100010

word: 1100001100110000

combo: 0000000001100110

word: 1101001100111000

combo: 0000000001100111

temp: 0000000001100111

orbit_checks[temp>>log2radix]= 11010000000000100000100010000000

word: 1010001100101000

combo: 0000000001100101

word: 1011001100100000

combo: 0000000001100100

word: 0000001101100000

combo: 0000000001101100

word: 0001001101101000

combo: 0000000001101101

word: 0110001101111000

combo: 0000000001101111

word: 0111001101110000

combo: 0000000001101110

word: 1100001101010000

combo: 0000000001101010

word: 1101001101011000

combo: 0000000001101011

temp: 0000000001101011

orbit_checks[temp>>log2radix]= 11010000000000100000100010000000

word: 1010001101001000

combo: 0000000001101001

word: 1011001101000000

combo: 0000000001101000

word: 0101001111000000

combo: 0000000001111000

word: 0100001111001000

combo: 0000000001111001

word: 0011001111011000

combo: 0000000001111011

word: 0010001111010000

combo: 0000000001111010

word: 1001001111110000

combo: 0000000001111110

temp: 0000000001111110

orbit_checks[temp>>log2radix]= 11010000000000100000100010000000

word: 1000001111111000

combo: 0000000001111111

temp: 0000000001111111

orbit_checks[temp>>log2radix]= 11010000000000100000100010000000

word: 1111001111101000

combo: 0000000001111101

word: 1110001111100000

combo: 0000000001111100

temp: 0000000001111100

orbit_checks[temp>>log2radix]= 11010000000000100000100010000000

word: 0101001110100000

combo: 0000000001110100

word: 0100001110101000

combo: 0000000001110101

word: 0011001110111000

combo: 0000000001110111

word: 0010001110110000

combo: 0000000001110110

word: 1001001110010000

combo: 0000000001110010

word: 1000001110011000

combo: 0000000001110011

word: 1111001110001000

combo: 0000000001110001

temp: 0000000001110001

orbit_checks[temp>>log2radix]= 11010000000000100000100010000000

word: 1110001110000000

combo: 0000000001110000

word: 0000001010000000

combo: 0000000001010000

word: 0001001010001000

combo: 0000000001010001

word: 0110001010011000

combo: 0000000001010011

word: 0111001010010000

combo: 0000000001010010

word: 1100001010110000

combo: 0000000001010110

word: 1101001010111000

combo: 0000000001010111

temp: 0000000001010111

orbit_checks[temp>>log2radix]= 1000100000000010000000001101

word: 1010001010101000

combo: 0000000001010101

word: 1011001010100000

combo: 0000000001010100

word: 0000001011100000

combo: 0000000001011100

word: 0001001011101000

combo: 0000000001011101

word: 0110001011111000

combo: 0000000001011111

word: 0111001011110000

combo: 0000000001011110

word: 1100001011010000

combo: 0000000001011010

word: 1101001011011000

combo: 0000000001011011

temp: 0000000001011011

orbit_checks[temp>>log2radix]= 1000100000000010000000001101

word: 1010001011001000

combo: 0000000001011001

word: 1011001011000000

combo: 0000000001011000

word: 0101001001000000

combo: 0000000001001000

word: 0100001001001000

combo: 0000000001001001

word: 0011001001011000

combo: 0000000001001011

word: 0010001001010000

combo: 0000000001001010

word: 1001001001110000

combo: 0000000001001110

word: 1000001001111000

combo: 0000000001001111

word: 1111001001101000

combo: 0000000001001101

temp: 0000000001001101

orbit_checks[temp>>log2radix]= 1000100000000010000000001101

word: 1110001001100000

combo: 0000000001001100

word: 0101001000100000

combo: 0000000001000100

word: 0100001000101000

combo: 0000000001000101

word: 0011001000111000

combo: 0000000001000111

word: 0010001000110000

combo: 0000000001000110

word: 1001001000010000

combo: 0000000001000010

temp: 0000000001000010

orbit_checks[temp>>log2radix]= 1000100000000010000000001101

word: 1000001000011000

combo: 0000000001000011

temp: 0000000001000011

orbit_checks[temp>>log2radix]= 1000100000000010000000001101

word: 1111001000001000

combo: 0000000001000001

word: 1110001000000000

combo: 0000000001000000

temp: 0000000001000000

orbit_checks[temp>>log2radix]= 1000100000000010000000001101

word: 1010011000000000

combo: 0000000011000000

temp: 0000000011000000

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1011011000001000

combo: 0000000011000001

word: 1100011000011000

combo: 0000000011000011

word: 1101011000010000

combo: 0000000011000010

word: 0110011000110000

combo: 0000000011000110

word: 0111011000111000

combo: 0000000011000111

word: 0000011000101000

combo: 0000000011000101

word: 0001011000100000

combo: 0000000011000100

word: 1010011001100000

combo: 0000000011001100

word: 1011011001101000

combo: 0000000011001101

temp: 0000000011001101

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1100011001111000

combo: 0000000011001111

temp: 0000000011001111

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1101011001110000

combo: 0000000011001110

temp: 0000000011001110

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 0110011001010000

combo: 0000000011001010

word: 0111011001011000

combo: 0000000011001011

word: 0000011001001000

combo: 0000000011001001

word: 0001011001000000

combo: 0000000011001000

word: 1111011011000000

combo: 0000000011011000

temp: 0000000011011000

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1110011011001000

combo: 0000000011011001

temp: 0000000011011001

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1001011011011000

combo: 0000000011011011

temp: 0000000011011011

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1000011011010000

combo: 0000000011011010

word: 0011011011110000

combo: 0000000011011110

word: 0010011011111000

combo: 0000000011011111

word: 0101011011101000

combo: 0000000011011101

word: 0100011011100000

combo: 0000000011011100

word: 1111011010100000

combo: 0000000011010100

temp: 0000000011010100

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1110011010101000

combo: 0000000011010101

temp: 0000000011010101

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1001011010111000

combo: 0000000011010111

temp: 0000000011010111

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1000011010110000

combo: 0000000011010110

word: 0011011010010000

combo: 0000000011010010

word: 0010011010011000

combo: 0000000011010011

word: 0101011010001000

combo: 0000000011010001

word: 0100011010000000

combo: 0000000011010000

word: 1010011110000000

combo: 0000000011110000

word: 1011011110001000

combo: 0000000011110001

temp: 0000000011110001

orbit_checks[temp>>log2radix]= 10000000011100000101110110000

word: 1100011110011000

combo: 0000000011110011

temp: 0000000011110011

orbit_checks[temp>>log2radix]= 10000000011100000101110110000

word: 1101011110010000

combo: 0000000011110010

temp: 0000000011110010

orbit_checks[temp>>log2radix]= 10000000011100000101110110000

word: 0110011110110000

combo: 0000000011110110

word: 0111011110111000

combo: 0000000011110111

word: 0000011110101000

combo: 0000000011110101

word: 0001011110100000

combo: 0000000011110100

word: 1010011111100000

combo: 0000000011111100

temp: 0000000011111100

orbit_checks[temp>>log2radix]= 10000000011100000101110110000

word: 1011011111101000

combo: 0000000011111101

word: 1100011111111000

combo: 0000000011111111

word: 1101011111110000

combo: 0000000011111110

word: 0110011111010000

combo: 0000000011111010

word: 0111011111011000

combo: 0000000011111011

word: 0000011111001000

combo: 0000000011111001

word: 0001011111000000

combo: 0000000011111000

word: 1111011101000000

combo: 0000000011101000

temp: 0000000011101000

orbit_checks[temp>>log2radix]= 10000000011100000101110110000

word: 1110011101001000

combo: 0000000011101001

temp: 0000000011101001

orbit_checks[temp>>log2radix]= 10000000011100000101110110000

word: 1001011101011000

combo: 0000000011101011

temp: 0000000011101011

orbit_checks[temp>>log2radix]= 10000000011100000101110110000

word: 1000011101010000

combo: 0000000011101010

word: 0011011101110000

combo: 0000000011101110

word: 0010011101111000

combo: 0000000011101111

word: 0101011101101000

combo: 0000000011101101

word: 0100011101100000

combo: 0000000011101100

word: 1111011100100000

combo: 0000000011100100

temp: 0000000011100100

orbit_checks[temp>>log2radix]= 10000000011100000101110110000

word: 1110011100101000

combo: 0000000011100101

temp: 0000000011100101

orbit_checks[temp>>log2radix]= 10000000011100000101110110000

word: 1001011100111000

combo: 0000000011100111

temp: 0000000011100111

orbit_checks[temp>>log2radix]= 10000000011100000101110110000

word: 1000011100110000

combo: 0000000011100110

word: 0011011100010000

combo: 0000000011100010

word: 0010011100011000

combo: 0000000011100011

word: 0101011100001000

combo: 0000000011100001

word: 0100011100000000

combo: 0000000011100000

word: 1010010100000000

combo: 0000000010100000

temp: 0000000010100000

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1011010100001000

combo: 0000000010100001

word: 1100010100011000

combo: 0000000010100011

word: 1101010100010000

combo: 0000000010100010

word: 0110010100110000

combo: 0000000010100110

word: 0111010100111000

combo: 0000000010100111

word: 0000010100101000

combo: 0000000010100101

word: 0001010100100000

combo: 0000000010100100

word: 1010010101100000

combo: 0000000010101100

word: 1011010101101000

combo: 0000000010101101

temp: 0000000010101101

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1100010101111000

combo: 0000000010101111

temp: 0000000010101111

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1101010101110000

combo: 0000000010101110

temp: 0000000010101110

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 0110010101010000

combo: 0000000010101010

word: 0111010101011000

combo: 0000000010101011

word: 0000010101001000

combo: 0000000010101001

word: 0001010101000000

combo: 0000000010101000

word: 1111010111000000

combo: 0000000010111000

temp: 0000000010111000

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1110010111001000

combo: 0000000010111001

temp: 0000000010111001

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1001010111011000

combo: 0000000010111011

temp: 0000000010111011

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1000010111010000

combo: 0000000010111010

word: 0011010111110000

combo: 0000000010111110

word: 0010010111111000

combo: 0000000010111111

word: 0101010111101000

combo: 0000000010111101

word: 0100010111100000

combo: 0000000010111100

word: 1111010110100000

combo: 0000000010110100

temp: 0000000010110100

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1110010110101000

combo: 0000000010110101

temp: 0000000010110101

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1001010110111000

combo: 0000000010110111

temp: 0000000010110111

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1000010110110000

combo: 0000000010110110

word: 0011010110010000

combo: 0000000010110010

word: 0010010110011000

combo: 0000000010110011

word: 0101010110001000

combo: 0000000010110001

word: 0100010110000000

combo: 0000000010110000

word: 1010010010000000

combo: 0000000010010000

temp: 0000000010010000

orbit_checks[temp>>log2radix]= 11100000000000010000010001000000

word: 1011010010001000

combo: 0000000010010001

word: 1100010010011000

combo: 0000000010010011

word: 1101010010010000

combo: 0000000010010010

word: 0110010010110000

combo: 0000000010010110

word: 0111010010111000

combo: 0000000010010111

word: 0000010010101000

combo: 0000000010010101

word: 0001010010100000

combo: 0000000010010100

word: 1010010011100000

combo: 0000000010011100

word: 1011010011101000

combo: 0000000010011101

temp: 0000000010011101

orbit_checks[temp>>log2radix]= 11100000000000010000010001000000

word: 1100010011111000

combo: 0000000010011111

temp: 0000000010011111

orbit_checks[temp>>log2radix]= 11100000000000010000010001000000

word: 1101010011110000

combo: 0000000010011110

temp: 0000000010011110

orbit_checks[temp>>log2radix]= 11100000000000010000010001000000

word: 0110010011010000

combo: 0000000010011010

word: 0111010011011000

combo: 0000000010011011

word: 0000010011001000

combo: 0000000010011001

word: 0001010011000000

combo: 0000000010011000

word: 1111010001000000

combo: 0000000010001000

word: 1110010001001000

combo: 0000000010001001

word: 1001010001011000

combo: 0000000010001011

word: 1000010001010000

combo: 0000000010001010

temp: 0000000010001010

orbit_checks[temp>>log2radix]= 11100000000000010000010001000000

word: 0011010001110000

combo: 0000000010001110

word: 0010010001111000

combo: 0000000010001111

word: 0101010001101000

combo: 0000000010001101

word: 0100010001100000

combo: 0000000010001100

word: 1111010000100000

combo: 0000000010000100

word: 1110010000101000

combo: 0000000010000101

word: 1001010000111000

combo: 0000000010000111

word: 1000010000110000

combo: 0000000010000110

temp: 0000000010000110

orbit_checks[temp>>log2radix]= 11100000000000010000010001000000

word: 0011010000010000

combo: 0000000010000010

word: 0010010000011000

combo: 0000000010000011

word: 0101010000001000

combo: 0000000010000001

word: 0100010000000000

combo: 0000000010000000

word: 0000110000000000

combo: 0000000110000000

word: 0001110000001000

combo: 0000000110000001

word: 0110110000011000

combo: 0000000110000011

word: 0111110000010000

combo: 0000000110000010

word: 1100110000110000

combo: 0000000110000110

word: 1101110000111000

combo: 0000000110000111

temp: 0000000110000111

orbit_checks[temp>>log2radix]= 11010000000000100000100010000000

word: 1010110000101000

combo: 0000000110000101

word: 1011110000100000

combo: 0000000110000100

word: 0000110001100000

combo: 0000000110001100

word: 0001110001101000

combo: 0000000110001101

word: 0110110001111000

combo: 0000000110001111

word: 0111110001110000

combo: 0000000110001110

word: 1100110001010000

combo: 0000000110001010

word: 1101110001011000

combo: 0000000110001011

temp: 0000000110001011

orbit_checks[temp>>log2radix]= 11010000000000100000100010000000

word: 1010110001001000

combo: 0000000110001001

word: 1011110001000000

combo: 0000000110001000

word: 0101110011000000

combo: 0000000110011000

word: 0100110011001000

combo: 0000000110011001

word: 0011110011011000

combo: 0000000110011011

word: 0010110011010000

combo: 0000000110011010

word: 1001110011110000

combo: 0000000110011110

temp: 0000000110011110

orbit_checks[temp>>log2radix]= 11010000000000100000100010000000

word: 1000110011111000

combo: 0000000110011111

temp: 0000000110011111

orbit_checks[temp>>log2radix]= 11010000000000100000100010000000

word: 1111110011101000

combo: 0000000110011101

word: 1110110011100000

combo: 0000000110011100

temp: 0000000110011100

orbit_checks[temp>>log2radix]= 11010000000000100000100010000000

word: 0101110010100000

combo: 0000000110010100

word: 0100110010101000

combo: 0000000110010101

word: 0011110010111000

combo: 0000000110010111

word: 0010110010110000

combo: 0000000110010110

word: 1001110010010000

combo: 0000000110010010

word: 1000110010011000

combo: 0000000110010011

word: 1111110010001000

combo: 0000000110010001

temp: 0000000110010001

orbit_checks[temp>>log2radix]= 11010000000000100000100010000000

word: 1110110010000000

combo: 0000000110010000

word: 0000110110000000

combo: 0000000110110000

word: 0001110110001000

combo: 0000000110110001

word: 0110110110011000

combo: 0000000110110011

word: 0111110110010000

combo: 0000000110110010

word: 1100110110110000

combo: 0000000110110110

temp: 0000000110110110

orbit_checks[temp>>log2radix]= 111011100001101000000000010

word: 1101110110111000

combo: 0000000110110111

word: 1010110110101000

combo: 0000000110110101

temp: 0000000110110101

orbit_checks[temp>>log2radix]= 111011100001101000000000010

word: 1011110110100000

combo: 0000000110110100

temp: 0000000110110100

orbit_checks[temp>>log2radix]= 111011100001101000000000010

word: 0000110111100000

combo: 0000000110111100

word: 0001110111101000

combo: 0000000110111101

word: 0110110111111000

combo: 0000000110111111

word: 0111110111110000

combo: 0000000110111110

word: 1100110111010000

combo: 0000000110111010

temp: 0000000110111010

orbit_checks[temp>>log2radix]= 111011100001101000000000010

word: 1101110111011000

combo: 0000000110111011

word: 1010110111001000

combo: 0000000110111001

temp: 0000000110111001

orbit_checks[temp>>log2radix]= 111011100001101000000000010

word: 1011110111000000

combo: 0000000110111000

temp: 0000000110111000

orbit_checks[temp>>log2radix]= 111011100001101000000000010

word: 0101110101000000

combo: 0000000110101000

word: 0100110101001000

combo: 0000000110101001

word: 0011110101011000

combo: 0000000110101011

word: 0010110101010000

combo: 0000000110101010

word: 1001110101110000

combo: 0000000110101110

temp: 0000000110101110

orbit_checks[temp>>log2radix]= 111011100001101000000000010

word: 1000110101111000

combo: 0000000110101111

temp: 0000000110101111

orbit_checks[temp>>log2radix]= 111011100001101000000000010

word: 1111110101101000

combo: 0000000110101101

word: 1110110101100000

combo: 0000000110101100

temp: 0000000110101100

orbit_checks[temp>>log2radix]= 111011100001101000000000010

word: 0101110100100000

combo: 0000000110100100

word: 0100110100101000

combo: 0000000110100101

word: 0011110100111000

combo: 0000000110100111

word: 0010110100110000

combo: 0000000110100110

word: 1001110100010000

combo: 0000000110100010

word: 1000110100011000

combo: 0000000110100011

word: 1111110100001000

combo: 0000000110100001

temp: 0000000110100001

orbit_checks[temp>>log2radix]= 111011100001101000000000010

word: 1110110100000000

combo: 0000000110100000

word: 0000111100000000

combo: 0000000111100000

word: 0001111100001000

combo: 0000000111100001

word: 0110111100011000

combo: 0000000111100011

word: 0111111100010000

combo: 0000000111100010

word: 1100111100110000

combo: 0000000111100110

temp: 0000000111100110

orbit_checks[temp>>log2radix]= 100000000011000000011101110000

word: 1101111100111000

combo: 0000000111100111

word: 1010111100101000

combo: 0000000111100101

temp: 0000000111100101

orbit_checks[temp>>log2radix]= 100000000011000000011101110000

word: 1011111100100000

combo: 0000000111100100

temp: 0000000111100100

orbit_checks[temp>>log2radix]= 100000000011000000011101110000

word: 0000111101100000

combo: 0000000111101100

word: 0001111101101000

combo: 0000000111101101

word: 0110111101111000

combo: 0000000111101111

word: 0111111101110000

combo: 0000000111101110

word: 1100111101010000

combo: 0000000111101010

temp: 0000000111101010

orbit_checks[temp>>log2radix]= 100000000011000000011101110000

word: 1101111101011000

combo: 0000000111101011

word: 1010111101001000

combo: 0000000111101001

temp: 0000000111101001

orbit_checks[temp>>log2radix]= 100000000011000000011101110000

word: 1011111101000000

combo: 0000000111101000

temp: 0000000111101000

orbit_checks[temp>>log2radix]= 100000000011000000011101110000

word: 0101111111000000

combo: 0000000111111000

word: 0100111111001000

combo: 0000000111111001

word: 0011111111011000

combo: 0000000111111011

word: 0010111111010000

combo: 0000000111111010

word: 1001111111110000

combo: 0000000111111110

word: 1000111111111000

combo: 0000000111111111

word: 1111111111101000

combo: 0000000111111101

temp: 0000000111111101

orbit_checks[temp>>log2radix]= 100000000011000000011101110000

word: 1110111111100000

combo: 0000000111111100

word: 0101111110100000

combo: 0000000111110100

word: 0100111110101000

combo: 0000000111110101

word: 0011111110111000

combo: 0000000111110111

word: 0010111110110000

combo: 0000000111110110

word: 1001111110010000

combo: 0000000111110010

temp: 0000000111110010

orbit_checks[temp>>log2radix]= 100000000011000000011101110000

word: 1000111110011000

combo: 0000000111110011

temp: 0000000111110011

orbit_checks[temp>>log2radix]= 100000000011000000011101110000

word: 1111111110001000

combo: 0000000111110001

word: 1110111110000000

combo: 0000000111110000

temp: 0000000111110000

orbit_checks[temp>>log2radix]= 100000000011000000011101110000

passed if statements
temp basis:
1011000001101101
1001001110011100
0111110000011100
rs list:
1 0 1 1 0 1 1 0 0 0 0 0 1 1 0 1 
0 0 1 1 1 0 0 1 1 1 0 0 1 0 0 1 
0 0 1 1 1 0 0 0 0 0 1 1 1 1 1 0 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 0 0 1 0 0]
[0 1 0 0 1 0 0 1 1 1 1 1 0 0 1 0]
[0 0 1 1 1 0 0 0 0 0 1 1 1 1 1 0]
[0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1]
m:
[1 0 1 1 0 1 1 0 0 0 0 0 1 1 0 1]
[0 0 1 1 1 0 0 1 1 1 0 0 1 0 0 1]
[0 0 1 1 1 0 0 0 0 0 1 1 1 1 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (12,15), (11,12), ( 9,10), (8,9), ( 8,11)( 9,12)(10,15)(14,16), (6,7), ( 4,13), (3,4), ( 3,11)( 4,12)( 5,14)(13,15), ( 1, 3)( 4, 6)( 7,13)( 8,11)( 9,12)(10,15), ( 1, 8)( 3,11)( 4,12)( 6, 9)( 7,10)(13,15) ] )
Right transversal of automorphism group of B_aug:
[0, 4, 2, 3, 1, 5, 6, 10, 11, 14, 7, 8, 12, 13, 9, 15]
[0, 13, 10, 11, 1, 5, 6, 2, 3, 12, 7, 8, 14, 4, 9, 15]
[0, 15, 7, 8, 1, 5, 6, 2, 3, 12, 10, 11, 9, 4, 14, 13]
orbits:
1110111110000000
word: 0000111010000000

combo: 0000000111010000

word: 0001111010001000

combo: 0000000111010001

word: 0110111010011000

combo: 0000000111010011

word: 0111111010010000

combo: 0000000111010010

word: 1100111010110000

combo: 0000000111010110

temp: 0000000111010110

orbit_checks[temp>>log2radix]= 111011100001101000000000010

word: 1101111010111000

combo: 0000000111010111

word: 1010111010101000

combo: 0000000111010101

temp: 0000000111010101

orbit_checks[temp>>log2radix]= 111011100001101000000000010

word: 1011111010100000

combo: 0000000111010100

temp: 0000000111010100

orbit_checks[temp>>log2radix]= 111011100001101000000000010

word: 0000111011100000

combo: 0000000111011100

word: 0001111011101000

combo: 0000000111011101

word: 0110111011111000

combo: 0000000111011111

word: 0111111011110000

combo: 0000000111011110

word: 1100111011010000

combo: 0000000111011010

temp: 0000000111011010

orbit_checks[temp>>log2radix]= 111011100001101000000000010

word: 1101111011011000

combo: 0000000111011011

word: 1010111011001000

combo: 0000000111011001

temp: 0000000111011001

orbit_checks[temp>>log2radix]= 111011100001101000000000010

word: 1011111011000000

combo: 0000000111011000

temp: 0000000111011000

orbit_checks[temp>>log2radix]= 111011100001101000000000010

word: 0101111001000000

combo: 0000000111001000

word: 0100111001001000

combo: 0000000111001001

word: 0011111001011000

combo: 0000000111001011

word: 0010111001010000

combo: 0000000111001010

word: 1001111001110000

combo: 0000000111001110

temp: 0000000111001110

orbit_checks[temp>>log2radix]= 111011100001101000000000010

word: 1000111001111000

combo: 0000000111001111

temp: 0000000111001111

orbit_checks[temp>>log2radix]= 111011100001101000000000010

word: 1111111001101000

combo: 0000000111001101

word: 1110111001100000

combo: 0000000111001100

temp: 0000000111001100

orbit_checks[temp>>log2radix]= 111011100001101000000000010

word: 0101111000100000

combo: 0000000111000100

word: 0100111000101000

combo: 0000000111000101

word: 0011111000111000

combo: 0000000111000111

word: 0010111000110000

combo: 0000000111000110

word: 1001111000010000

combo: 0000000111000010

word: 1000111000011000

combo: 0000000111000011

word: 1111111000001000

combo: 0000000111000001

temp: 0000000111000001

orbit_checks[temp>>log2radix]= 111011100001101000000000010

word: 1110111000000000

combo: 0000000111000000

word: 1010101000000000

combo: 0000000101000000

temp: 0000000101000000

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1011101000001000

combo: 0000000101000001

word: 1100101000011000

combo: 0000000101000011

word: 1101101000010000

combo: 0000000101000010

word: 0110101000110000

combo: 0000000101000110

word: 0111101000111000

combo: 0000000101000111

word: 0000101000101000

combo: 0000000101000101

word: 0001101000100000

combo: 0000000101000100

word: 1010101001100000

combo: 0000000101001100

word: 1011101001101000

combo: 0000000101001101

temp: 0000000101001101

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1100101001111000

combo: 0000000101001111

temp: 0000000101001111

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1101101001110000

combo: 0000000101001110

temp: 0000000101001110

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 0110101001010000

combo: 0000000101001010

word: 0111101001011000

combo: 0000000101001011

word: 0000101001001000

combo: 0000000101001001

word: 0001101001000000

combo: 0000000101001000

word: 1111101011000000

combo: 0000000101011000

temp: 0000000101011000

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1110101011001000

combo: 0000000101011001

temp: 0000000101011001

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1001101011011000

combo: 0000000101011011

temp: 0000000101011011

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1000101011010000

combo: 0000000101011010

word: 0011101011110000

combo: 0000000101011110

word: 0010101011111000

combo: 0000000101011111

word: 0101101011101000

combo: 0000000101011101

word: 0100101011100000

combo: 0000000101011100

word: 1111101010100000

combo: 0000000101010100

temp: 0000000101010100

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1110101010101000

combo: 0000000101010101

temp: 0000000101010101

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1001101010111000

combo: 0000000101010111

temp: 0000000101010111

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1000101010110000

combo: 0000000101010110

word: 0011101010010000

combo: 0000000101010010

word: 0010101010011000

combo: 0000000101010011

word: 0101101010001000

combo: 0000000101010001

word: 0100101010000000

combo: 0000000101010000

word: 1010101110000000

combo: 0000000101110000

word: 1011101110001000

combo: 0000000101110001

temp: 0000000101110001

orbit_checks[temp>>log2radix]= 10000000011100000101110110000

word: 1100101110011000

combo: 0000000101110011

temp: 0000000101110011

orbit_checks[temp>>log2radix]= 10000000011100000101110110000

word: 1101101110010000

combo: 0000000101110010

temp: 0000000101110010

orbit_checks[temp>>log2radix]= 10000000011100000101110110000

word: 0110101110110000

combo: 0000000101110110

word: 0111101110111000

combo: 0000000101110111

word: 0000101110101000

combo: 0000000101110101

word: 0001101110100000

combo: 0000000101110100

word: 1010101111100000

combo: 0000000101111100

temp: 0000000101111100

orbit_checks[temp>>log2radix]= 10000000011100000101110110000

word: 1011101111101000

combo: 0000000101111101

word: 1100101111111000

combo: 0000000101111111

word: 1101101111110000

combo: 0000000101111110

word: 0110101111010000

combo: 0000000101111010

word: 0111101111011000

combo: 0000000101111011

word: 0000101111001000

combo: 0000000101111001

word: 0001101111000000

combo: 0000000101111000

word: 1111101101000000

combo: 0000000101101000

temp: 0000000101101000

orbit_checks[temp>>log2radix]= 10000000011100000101110110000

word: 1110101101001000

combo: 0000000101101001

temp: 0000000101101001

orbit_checks[temp>>log2radix]= 10000000011100000101110110000

word: 1001101101011000

combo: 0000000101101011

temp: 0000000101101011

orbit_checks[temp>>log2radix]= 10000000011100000101110110000

word: 1000101101010000

combo: 0000000101101010

word: 0011101101110000

combo: 0000000101101110

word: 0010101101111000

combo: 0000000101101111

word: 0101101101101000

combo: 0000000101101101

word: 0100101101100000

combo: 0000000101101100

word: 1111101100100000

combo: 0000000101100100

temp: 0000000101100100

orbit_checks[temp>>log2radix]= 10000000011100000101110110000

word: 1110101100101000

combo: 0000000101100101

temp: 0000000101100101

orbit_checks[temp>>log2radix]= 10000000011100000101110110000

word: 1001101100111000

combo: 0000000101100111

temp: 0000000101100111

orbit_checks[temp>>log2radix]= 10000000011100000101110110000

word: 1000101100110000

combo: 0000000101100110

word: 0011101100010000

combo: 0000000101100010

word: 0010101100011000

combo: 0000000101100011

word: 0101101100001000

combo: 0000000101100001

word: 0100101100000000

combo: 0000000101100000

word: 1010100100000000

combo: 0000000100100000

temp: 0000000100100000

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1011100100001000

combo: 0000000100100001

word: 1100100100011000

combo: 0000000100100011

word: 1101100100010000

combo: 0000000100100010

word: 0110100100110000

combo: 0000000100100110

word: 0111100100111000

combo: 0000000100100111

word: 0000100100101000

combo: 0000000100100101

word: 0001100100100000

combo: 0000000100100100

word: 1010100101100000

combo: 0000000100101100

word: 1011100101101000

combo: 0000000100101101

temp: 0000000100101101

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1100100101111000

combo: 0000000100101111

temp: 0000000100101111

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1101100101110000

combo: 0000000100101110

temp: 0000000100101110

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 0110100101010000

combo: 0000000100101010

word: 0111100101011000

combo: 0000000100101011

word: 0000100101001000

combo: 0000000100101001

word: 0001100101000000

combo: 0000000100101000

word: 1111100111000000

combo: 0000000100111000

temp: 0000000100111000

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1110100111001000

combo: 0000000100111001

temp: 0000000100111001

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1001100111011000

combo: 0000000100111011

temp: 0000000100111011

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1000100111010000

combo: 0000000100111010

word: 0011100111110000

combo: 0000000100111110

word: 0010100111111000

combo: 0000000100111111

word: 0101100111101000

combo: 0000000100111101

word: 0100100111100000

combo: 0000000100111100

word: 1111100110100000

combo: 0000000100110100

temp: 0000000100110100

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1110100110101000

combo: 0000000100110101

temp: 0000000100110101

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1001100110111000

combo: 0000000100110111

temp: 0000000100110111

orbit_checks[temp>>log2radix]= 1011101100001110000000000001

word: 1000100110110000

combo: 0000000100110110

word: 0011100110010000

combo: 0000000100110010

word: 0010100110011000

combo: 0000000100110011

word: 0101100110001000

combo: 0000000100110001

word: 0100100110000000

combo: 0000000100110000

word: 1010100010000000

combo: 0000000100010000

temp: 0000000100010000

orbit_checks[temp>>log2radix]= 11100000000000010000010001000000

word: 1011100010001000

combo: 0000000100010001

word: 1100100010011000

combo: 0000000100010011

word: 1101100010010000

combo: 0000000100010010

word: 0110100010110000

combo: 0000000100010110

word: 0111100010111000

combo: 0000000100010111

word: 0000100010101000

combo: 0000000100010101

word: 0001100010100000

combo: 0000000100010100

word: 1010100011100000

combo: 0000000100011100

word: 1011100011101000

combo: 0000000100011101

temp: 0000000100011101

orbit_checks[temp>>log2radix]= 11100000000000010000010001000000

word: 1100100011111000

combo: 0000000100011111

temp: 0000000100011111

orbit_checks[temp>>log2radix]= 11100000000000010000010001000000

word: 1101100011110000

combo: 0000000100011110

temp: 0000000100011110

orbit_checks[temp>>log2radix]= 11100000000000010000010001000000

word: 0110100011010000

combo: 0000000100011010

word: 0111100011011000

combo: 0000000100011011

word: 0000100011001000

combo: 0000000100011001

word: 0001100011000000

combo: 0000000100011000

word: 1111100001000000

combo: 0000000100001000

word: 1110100001001000

combo: 0000000100001001

word: 1001100001011000

combo: 0000000100001011

word: 1000100001010000

combo: 0000000100001010

temp: 0000000100001010

orbit_checks[temp>>log2radix]= 11100000000000010000010001000000

word: 0011100001110000

combo: 0000000100001110

word: 0010100001111000

combo: 0000000100001111

word: 0101100001101000

combo: 0000000100001101

word: 0100100001100000

combo: 0000000100001100

word: 1111100000100000

combo: 0000000100000100

word: 1110100000101000

combo: 0000000100000101

word: 1001100000111000

combo: 0000000100000111

word: 1000100000110000

combo: 0000000100000110

temp: 0000000100000110

orbit_checks[temp>>log2radix]= 11100000000000010000010001000000

word: 0011100000010000

combo: 0000000100000010

word: 0010100000011000

combo: 0000000100000011

word: 0101100000001000

combo: 0000000100000001

word: 0100100000000000

combo: 0000000100000000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 0 1 1 1 0 1 1 1 1]
[0 1 1 1 0 0 0 1 1 1 1 1]
limit on degree (length): 16
ortho basis:
0000010000000100
0000010000001000
1000110000010000
1000110000100000
1000110001000000
0000100010000000
0000100100000000
0000101000000000
1001000000000000
1010000000000000
1100000000000000

B_can_lab before row reduction:
0000000111101111
0000111111110000

B_can_lab after row reduction:
0000000111101111
0000111111110000

word generated as sum over rows of ortho_basis starting at 8: 1111000000000000
gate: 0000000000000011
k_gate: 0000000011111111
nonzero_gate: 1111000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1111000000000000

combo: 0000000000000000

temp: 0000000000000000

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
1111000000000000
0000101111110001
rs list:
0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 0 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 0]
[0 1 1 1 0 0 0 1 1 1 1 1 0 0 0 0]
[0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1]
m:
[0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1]
[1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 4,11), (2,4), (2,3), ( 2, 3)( 9,10), ( 2, 3)( 9,10,12), ( 2, 3)( 8, 9,10,12), ( 2, 3)( 5, 6)( 9,10,12), ( 2, 3)( 5, 6, 7)( 9,10,12), ( 1, 5, 6, 7)( 2, 3)( 9,10,12), ( 1, 8)( 2, 3)( 5,10, 7, 9, 6,12), ( 2, 3)( 5, 6, 7)( 9,10,12)(14,15), ( 2, 3)( 5, 6, 7)( 9,10,12)(14,16), ( 2, 3)( 5, 6, 7)( 9,10,12)(13,14,16) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 4, 5, 2, 3, 10, 7, 8, 9, 6, 11, 12, 13, 14, 15]
[1, 7, 8, 9, 2, 3, 10, 0, 4, 5, 11, 6, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111000000000000
word: 1111010000000100

combo: 0000000000000001

word: 1111000000001100

combo: 0000000000000011

word: 1111010000001000

combo: 0000000000000010

word: 0111100000011000

combo: 0000000000000110

word: 0111110000011100

combo: 0000000000000111

word: 0111100000010100

combo: 0000000000000101

word: 0111110000010000

combo: 0000000000000100

word: 1111000000110000

combo: 0000000000001100

word: 1111010000110100

combo: 0000000000001101

temp: 0000000000001101

orbit_checks[temp>>log2radix]= 0000000000000001

passed if statements
temp basis:
0000111110001110
1111010000110100
rs list:
0 1 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
0 0 1 0 1 1 0 0 0 0 1 0 1 1 1 1 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 0]
[0 1 1 1 0 0 0 1 1 1 1 1 0 0 0 0]
[0 0 1 0 1 1 0 0 0 0 1 0 1 1 1 1]
m:
[0 1 1 1 0 0 0 1 1 1 1 1 0 0 0 0]
[0 0 1 0 1 1 0 0 0 0 1 0 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,12), (8,9), ( 8, 9,10), ( 8, 9,10)(13,15), ( 8, 9,10)(13,14), ( 8, 9,10)(13,15,16), ( 5, 6)( 8, 9,10)(13,15,16), ( 2, 4)( 5, 6)( 8, 9,10)(13,15,16), ( 2, 6)( 4, 5)( 8,14, 9,15,12,16)(10,13), ( 2, 4)( 3,11)( 5, 6)( 8, 9,10)(13,15,16), ( 1, 7)( 2, 4)( 3,11)( 5, 6)( 8, 9,10)(13,15,16) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 4, 6, 2, 10, 3, 7, 8, 9, 5, 11, 12, 13, 14, 15]
[2, 4, 0, 5, 1, 3, 10, 7, 8, 9, 6, 11, 12, 13, 14, 15]
[4, 0, 1, 6, 2, 10, 5, 12, 13, 14, 3, 15, 7, 8, 9, 11]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111010000110100
1111000000111100
1111010000111000
1111101110111100
1111100100110000
1111010001010100
1111000001011100
1111111110110100
1111001100110000
1111101000110000
1111010001011000
1111000001101100
1111100010110000
1111101111011100
1111100101010000
1111100100001100
1111010001100100
1111111111010100
1111001101010000
1111111110111000
1111001010110000
1111001100001100
1111101001010000
1111101000001100
1111010001101000
1111111111100100
1111001101100000
1111100011010000
1111100010001100
1111101111101100
1111100101100000
1111110100000100
1111011010000100
1111011100000100
1111111111011000
1111001011010000
1111000110110000
1111001010001100
1111110010000100
1111101001100000
1111111000000100
1111010110000100
1111011100001000
1111111111101000
1111001011100000
1111100011100000
1111110100001000
1111011010001000
1111000111010000
1111000110001100
1111110010001000
1111111000001000
1111010110001000
1111000111100000
word: 1111000000111100

combo: 0000000000001111

temp: 0000000000001111

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 1111010000111000

combo: 0000000000001110

temp: 0000000000001110

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 0111100000101000

combo: 0000000000001010

word: 0111110000101100

combo: 0000000000001011

word: 0111100000100100

combo: 0000000000001001

word: 0111110000100000

combo: 0000000000001000

word: 1111000001100000

combo: 0000000000011000

word: 1111010001100100

combo: 0000000000011001

temp: 0000000000011001

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 1111000001101100

combo: 0000000000011011

temp: 0000000000011011

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 1111010001101000

combo: 0000000000011010

temp: 0000000000011010

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 0111100001111000

combo: 0000000000011110

word: 0111110001111100

combo: 0000000000011111

word: 0111100001110100

combo: 0000000000011101

word: 0111110001110000

combo: 0000000000011100

word: 1111000001010000

combo: 0000000000010100

word: 1111010001010100

combo: 0000000000010101

temp: 0000000000010101

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 1111000001011100

combo: 0000000000010111

temp: 0000000000010111

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 1111010001011000

combo: 0000000000010110

temp: 0000000000010110

orbit_checks[temp>>log2radix]= 1110111000001110000000000001

word: 0111100001001000

combo: 0000000000010010

word: 0111110001001100

combo: 0000000000010011

word: 0111100001000100

combo: 0000000000010001

word: 0111110001000000

combo: 0000000000010000

word: 0111010011000000

combo: 0000000000110000

word: 0111000011000100

combo: 0000000000110001

word: 0111010011001100

combo: 0000000000110011

word: 0111000011001000

combo: 0000000000110010

word: 1111110011011000

combo: 0000000000110110

word: 1111100011011100

combo: 0000000000110111

word: 1111110011010100

combo: 0000000000110101

word: 1111100011010000

combo: 0000000000110100

temp: 0000000000110100

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 0111010011110000

combo: 0000000000111100

word: 0111000011110100

combo: 0000000000111101

word: 0111010011111100

combo: 0000000000111111

word: 0111000011111000

combo: 0000000000111110

word: 1111110011101000

combo: 0000000000111010

word: 1111100011101100

combo: 0000000000111011

word: 1111110011100100

combo: 0000000000111001

word: 1111100011100000

combo: 0000000000111000

temp: 0000000000111000

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 0111010010100000

combo: 0000000000101000

word: 0111000010100100

combo: 0000000000101001

word: 0111010010101100

combo: 0000000000101011

word: 0111000010101000

combo: 0000000000101010

word: 1111110010111000

combo: 0000000000101110

word: 1111100010111100

combo: 0000000000101111

word: 1111110010110100

combo: 0000000000101101

word: 1111100010110000

combo: 0000000000101100

temp: 0000000000101100

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 0111010010010000

combo: 0000000000100100

word: 0111000010010100

combo: 0000000000100101

word: 0111010010011100

combo: 0000000000100111

word: 0111000010011000

combo: 0000000000100110

word: 1111110010001000

combo: 0000000000100010

temp: 0000000000100010

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 1111100010001100

combo: 0000000000100011

temp: 0000000000100011

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 1111110010000100

combo: 0000000000100001

temp: 0000000000100001

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 1111100010000000

combo: 0000000000100000

word: 1111000110000000

combo: 0000000001100000

word: 1111010110000100

combo: 0000000001100001

temp: 0000000001100001

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 1111000110001100

combo: 0000000001100011

temp: 0000000001100011

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 1111010110001000

combo: 0000000001100010

temp: 0000000001100010

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 0111100110011000

combo: 0000000001100110

word: 0111110110011100

combo: 0000000001100111

word: 0111100110010100

combo: 0000000001100101

word: 0111110110010000

combo: 0000000001100100

word: 1111000110110000

combo: 0000000001101100

temp: 0000000001101100

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 1111010110110100

combo: 0000000001101101

word: 1111000110111100

combo: 0000000001101111

word: 1111010110111000

combo: 0000000001101110

word: 0111100110101000

combo: 0000000001101010

word: 0111110110101100

combo: 0000000001101011

word: 0111100110100100

combo: 0000000001101001

word: 0111110110100000

combo: 0000000001101000

word: 1111000111100000

combo: 0000000001111000

temp: 0000000001111000

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 1111010111100100

combo: 0000000001111001

word: 1111000111101100

combo: 0000000001111011

word: 1111010111101000

combo: 0000000001111010

word: 0111100111111000

combo: 0000000001111110

word: 0111110111111100

combo: 0000000001111111

word: 0111100111110100

combo: 0000000001111101

word: 0111110111110000

combo: 0000000001111100

word: 1111000111010000

combo: 0000000001110100

temp: 0000000001110100

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 1111010111010100

combo: 0000000001110101

word: 1111000111011100

combo: 0000000001110111

word: 1111010111011000

combo: 0000000001110110

word: 0111100111001000

combo: 0000000001110010

word: 0111110111001100

combo: 0000000001110011

word: 0111100111000100

combo: 0000000001110001

word: 0111110111000000

combo: 0000000001110000

word: 0111010101000000

combo: 0000000001010000

word: 0111000101000100

combo: 0000000001010001

word: 0111010101001100

combo: 0000000001010011

word: 0111000101001000

combo: 0000000001010010

word: 1111110101011000

combo: 0000000001010110

word: 1111100101011100

combo: 0000000001010111

word: 1111110101010100

combo: 0000000001010101

word: 1111100101010000

combo: 0000000001010100

temp: 0000000001010100

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 0111010101110000

combo: 0000000001011100

word: 0111000101110100

combo: 0000000001011101

word: 0111010101111100

combo: 0000000001011111

word: 0111000101111000

combo: 0000000001011110

word: 1111110101101000

combo: 0000000001011010

word: 1111100101101100

combo: 0000000001011011

word: 1111110101100100

combo: 0000000001011001

word: 1111100101100000

combo: 0000000001011000

temp: 0000000001011000

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 0111010100100000

combo: 0000000001001000

word: 0111000100100100

combo: 0000000001001001

word: 0111010100101100

combo: 0000000001001011

word: 0111000100101000

combo: 0000000001001010

word: 1111110100111000

combo: 0000000001001110

word: 1111100100111100

combo: 0000000001001111

word: 1111110100110100

combo: 0000000001001101

word: 1111100100110000

combo: 0000000001001100

temp: 0000000001001100

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 0111010100010000

combo: 0000000001000100

word: 0111000100010100

combo: 0000000001000101

word: 0111010100011100

combo: 0000000001000111

word: 0111000100011000

combo: 0000000001000110

word: 1111110100001000

combo: 0000000001000010

temp: 0000000001000010

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 1111100100001100

combo: 0000000001000011

temp: 0000000001000011

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 1111110100000100

combo: 0000000001000001

temp: 0000000001000001

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 1111100100000000

combo: 0000000001000000

word: 1111001100000000

combo: 0000000011000000

word: 1111011100000100

combo: 0000000011000001

temp: 0000000011000001

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 1111001100001100

combo: 0000000011000011

temp: 0000000011000011

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 1111011100001000

combo: 0000000011000010

temp: 0000000011000010

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 0111101100011000

combo: 0000000011000110

word: 0111111100011100

combo: 0000000011000111

word: 0111101100010100

combo: 0000000011000101

word: 0111111100010000

combo: 0000000011000100

word: 1111001100110000

combo: 0000000011001100

temp: 0000000011001100

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 1111011100110100

combo: 0000000011001101

word: 1111001100111100

combo: 0000000011001111

word: 1111011100111000

combo: 0000000011001110

word: 0111101100101000

combo: 0000000011001010

word: 0111111100101100

combo: 0000000011001011

word: 0111101100100100

combo: 0000000011001001

word: 0111111100100000

combo: 0000000011001000

word: 1111001101100000

combo: 0000000011011000

temp: 0000000011011000

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 1111011101100100

combo: 0000000011011001

word: 1111001101101100

combo: 0000000011011011

word: 1111011101101000

combo: 0000000011011010

word: 0111101101111000

combo: 0000000011011110

word: 0111111101111100

combo: 0000000011011111

word: 0111101101110100

combo: 0000000011011101

word: 0111111101110000

combo: 0000000011011100

word: 1111001101010000

combo: 0000000011010100

temp: 0000000011010100

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 1111011101010100

combo: 0000000011010101

word: 1111001101011100

combo: 0000000011010111

word: 1111011101011000

combo: 0000000011010110

word: 0111101101001000

combo: 0000000011010010

word: 0111111101001100

combo: 0000000011010011

word: 0111101101000100

combo: 0000000011010001

word: 0111111101000000

combo: 0000000011010000

word: 0111011111000000

combo: 0000000011110000

word: 0111001111000100

combo: 0000000011110001

word: 0111011111001100

combo: 0000000011110011

word: 0111001111001000

combo: 0000000011110010

word: 1111111111011000

combo: 0000000011110110

temp: 0000000011110110

orbit_checks[temp>>log2radix]= 1110111000001110000000000000

word: 1111101111011100

combo: 0000000011110111

temp: 0000000011110111

orbit_checks[temp>>log2radix]= 1110111000001110000000000000

word: 1111111111010100

combo: 0000000011110101

temp: 0000000011110101

orbit_checks[temp>>log2radix]= 1110111000001110000000000000

word: 1111101111010000

combo: 0000000011110100

word: 0111011111110000

combo: 0000000011111100

word: 0111001111110100

combo: 0000000011111101

word: 0111011111111100

combo: 0000000011111111

word: 0111001111111000

combo: 0000000011111110

word: 1111111111101000

combo: 0000000011111010

temp: 0000000011111010

orbit_checks[temp>>log2radix]= 1110111000001110000000000000

word: 1111101111101100

combo: 0000000011111011

temp: 0000000011111011

orbit_checks[temp>>log2radix]= 1110111000001110000000000000

word: 1111111111100100

combo: 0000000011111001

temp: 0000000011111001

orbit_checks[temp>>log2radix]= 1110111000001110000000000000

word: 1111101111100000

combo: 0000000011111000

word: 0111011110100000

combo: 0000000011101000

word: 0111001110100100

combo: 0000000011101001

word: 0111011110101100

combo: 0000000011101011

word: 0111001110101000

combo: 0000000011101010

word: 1111111110111000

combo: 0000000011101110

temp: 0000000011101110

orbit_checks[temp>>log2radix]= 1110111000001110000000000000

word: 1111101110111100

combo: 0000000011101111

temp: 0000000011101111

orbit_checks[temp>>log2radix]= 1110111000001110000000000000

word: 1111111110110100

combo: 0000000011101101

temp: 0000000011101101

orbit_checks[temp>>log2radix]= 1110111000001110000000000000

word: 1111101110110000

combo: 0000000011101100

word: 0111011110010000

combo: 0000000011100100

word: 0111001110010100

combo: 0000000011100101

word: 0111011110011100

combo: 0000000011100111

word: 0111001110011000

combo: 0000000011100110

word: 1111111110001000

combo: 0000000011100010

word: 1111101110001100

combo: 0000000011100011

word: 1111111110000100

combo: 0000000011100001

word: 1111101110000000

combo: 0000000011100000

temp: 0000000011100000

orbit_checks[temp>>log2radix]= 1110111000001110000000000000

passed if statements
temp basis:
1111000001110001
1111010000001110
rs list:
1 0 0 0 1 1 1 0 0 0 0 0 1 1 1 1 
0 1 1 1 0 0 0 0 0 0 1 0 1 1 1 1 
B_aug:
[1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 0]
[0 1 1 1 0 0 0 1 1 1 1 1 0 0 0 0]
[0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1]
m:
[1 0 0 0 1 1 1 0 0 0 0 0 1 1 1 1]
[0 1 1 1 0 0 0 0 0 0 1 0 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), (10,12), ( 9,10), (8,9), (6,7), (5,6), ( 4,11), (3,4), (2,3), ( 2,13)( 3,14)( 4,15)(11,16), ( 1, 2)( 3, 5)( 4, 6)( 7,11) ] )
Right transversal of automorphism group of B_aug:
[7, 1, 2, 3, 8, 9, 11, 0, 4, 5, 10, 6, 12, 13, 14, 15]
[7, 0, 4, 5, 8, 9, 11, 1, 2, 3, 6, 10, 12, 13, 14, 15]
[7, 0, 4, 5, 8, 9, 11, 12, 13, 14, 6, 15, 1, 2, 3, 10]
orbits:
1111101110000000
word: 1111001010000000

combo: 0000000010100000

word: 1111011010000100

combo: 0000000010100001

temp: 0000000010100001

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 1111001010001100

combo: 0000000010100011

temp: 0000000010100011

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 1111011010001000

combo: 0000000010100010

temp: 0000000010100010

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 0111101010011000

combo: 0000000010100110

word: 0111111010011100

combo: 0000000010100111

word: 0111101010010100

combo: 0000000010100101

word: 0111111010010000

combo: 0000000010100100

word: 1111001010110000

combo: 0000000010101100

temp: 0000000010101100

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 1111011010110100

combo: 0000000010101101

word: 1111001010111100

combo: 0000000010101111

word: 1111011010111000

combo: 0000000010101110

word: 0111101010101000

combo: 0000000010101010

word: 0111111010101100

combo: 0000000010101011

word: 0111101010100100

combo: 0000000010101001

word: 0111111010100000

combo: 0000000010101000

word: 1111001011100000

combo: 0000000010111000

temp: 0000000010111000

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 1111011011100100

combo: 0000000010111001

word: 1111001011101100

combo: 0000000010111011

word: 1111011011101000

combo: 0000000010111010

word: 0111101011111000

combo: 0000000010111110

word: 0111111011111100

combo: 0000000010111111

word: 0111101011110100

combo: 0000000010111101

word: 0111111011110000

combo: 0000000010111100

word: 1111001011010000

combo: 0000000010110100

temp: 0000000010110100

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 1111011011010100

combo: 0000000010110101

word: 1111001011011100

combo: 0000000010110111

word: 1111011011011000

combo: 0000000010110110

word: 0111101011001000

combo: 0000000010110010

word: 0111111011001100

combo: 0000000010110011

word: 0111101011000100

combo: 0000000010110001

word: 0111111011000000

combo: 0000000010110000

word: 0111011001000000

combo: 0000000010010000

word: 0111001001000100

combo: 0000000010010001

word: 0111011001001100

combo: 0000000010010011

word: 0111001001001000

combo: 0000000010010010

word: 1111111001011000

combo: 0000000010010110

word: 1111101001011100

combo: 0000000010010111

word: 1111111001010100

combo: 0000000010010101

word: 1111101001010000

combo: 0000000010010100

temp: 0000000010010100

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 0111011001110000

combo: 0000000010011100

word: 0111001001110100

combo: 0000000010011101

word: 0111011001111100

combo: 0000000010011111

word: 0111001001111000

combo: 0000000010011110

word: 1111111001101000

combo: 0000000010011010

word: 1111101001101100

combo: 0000000010011011

word: 1111111001100100

combo: 0000000010011001

word: 1111101001100000

combo: 0000000010011000

temp: 0000000010011000

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 0111011000100000

combo: 0000000010001000

word: 0111001000100100

combo: 0000000010001001

word: 0111011000101100

combo: 0000000010001011

word: 0111001000101000

combo: 0000000010001010

word: 1111111000111000

combo: 0000000010001110

word: 1111101000111100

combo: 0000000010001111

word: 1111111000110100

combo: 0000000010001101

word: 1111101000110000

combo: 0000000010001100

temp: 0000000010001100

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 0111011000010000

combo: 0000000010000100

word: 0111001000010100

combo: 0000000010000101

word: 0111011000011100

combo: 0000000010000111

word: 0111001000011000

combo: 0000000010000110

word: 1111111000001000

combo: 0000000010000010

temp: 0000000010000010

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 1111101000001100

combo: 0000000010000011

temp: 0000000010000011

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 1111111000000100

combo: 0000000010000001

temp: 0000000010000001

orbit_checks[temp>>log2radix]= 1000100000001000000001110

word: 1111101000000000

combo: 0000000010000000

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1 1 1 1 1]
limit on degree (length): 13
ortho basis:
0000010000010
0000010000100
0000010001000
0000010010000
0000010100000
0000011000000
1000100000000
1001000000000
1010000000000
1100000000000

B_can_lab before row reduction:
0000011111111

B_can_lab after row reduction:
0000011111111
101011001000011

word generated as sum over rows of ortho_basis starting at 6: 0111100000000
gate: 0000000000001
k_gate: 0000000111111
nonzero_gate: 1111100000000
radix_gate: 0000000011111

Starting main loop:
word: 0111100000000

combo: 0000000000000

word: 0111110000010

combo: 0000000000001

word: 0111100000110

combo: 0000000000011

word: 0111110000100

combo: 0000000000010

word: 0111100001100

combo: 0000000000110

word: 0111110001110

combo: 0000000000111

word: 0111100001010

combo: 0000000000101

word: 0111110001000

combo: 0000000000100

word: 0111100011000

combo: 0000000001100

word: 0111110011010

combo: 0000000001101

word: 0111100011110

combo: 0000000001111

word: 0111110011100

combo: 0000000001110

word: 0111100010100

combo: 0000000001010

word: 0111110010110

combo: 0000000001011

word: 0111100010010

combo: 0000000001001

word: 0111110010000

combo: 0000000001000

word: 0111100110000

combo: 0000000011000

word: 0111110110010

combo: 0000000011001

word: 0111100110110

combo: 0000000011011

word: 0111110110100

combo: 0000000011010

word: 0111100111100

combo: 0000000011110

word: 0111110111110

combo: 0000000011111

word: 0111100111010

combo: 0000000011101

word: 0111110111000

combo: 0000000011100

word: 0111100101000

combo: 0000000010100

word: 0111110101010

combo: 0000000010101

word: 0111100101110

combo: 0000000010111

word: 0111110101100

combo: 0000000010110

word: 0111100100100

combo: 0000000010010

word: 0111110100110

combo: 0000000010011

word: 0111100100010

combo: 0000000010001

word: 0111110100000

combo: 0000000010000

word: 0111101100000

combo: 0000000110000

word: 0111111100010

combo: 0000000110001

word: 0111101100110

combo: 0000000110011

word: 0111111100100

combo: 0000000110010

word: 0111101101100

combo: 0000000110110

word: 0111111101110

combo: 0000000110111

word: 0111101101010

combo: 0000000110101

word: 0111111101000

combo: 0000000110100

word: 0111101111000

combo: 0000000111100

word: 0111111111010

combo: 0000000111101

word: 0111101111110

combo: 0000000111111

word: 0111111111100

combo: 0000000111110

word: 0111101110100

combo: 0000000111010

word: 0111111110110

combo: 0000000111011

word: 0111101110010

combo: 0000000111001

word: 0111111110000

combo: 0000000111000

word: 0111101010000

combo: 0000000101000

word: 0111111010010

combo: 0000000101001

word: 0111101010110

combo: 0000000101011

word: 0111111010100

combo: 0000000101010

word: 0111101011100

combo: 0000000101110

word: 0111111011110

combo: 0000000101111

word: 0111101011010

combo: 0000000101101

word: 0111111011000

combo: 0000000101100

word: 0111101001000

combo: 0000000100100

word: 0111111001010

combo: 0000000100101

word: 0111101001110

combo: 0000000100111

word: 0111111001100

combo: 0000000100110

word: 0111101000100

combo: 0000000100010

word: 0111111000110

combo: 0000000100011

word: 0111101000010

combo: 0000000100001

word: 0111111000000

combo: 0000000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1 1 1 1 1]
limit on degree (length): 14
ortho basis:
00000010000010
00000010000100
00000010001000
00000010010000
00000010100000
00000011000000
10000100000000
10001000000000
10010000000000
10100000000000
11000000000000

B_can_lab before row reduction:
00000011111111

B_can_lab after row reduction:
00000011111111
101011001000011

word generated as sum over rows of ortho_basis starting at 6: 11111100000000
gate: 00000000000001
k_gate: 00000000111111
nonzero_gate: 11111100000000
radix_gate: 00000000011111

Starting main loop:
word: 11111100000000

combo: 00000000000000

word: 11111110000010

combo: 00000000000001

temp: 00000000000001

orbit_checks[temp>>log2radix]= 00000000000000

passed if statements
temp basis:
00000011111111
rs list:
1 1 1 1 1 1 1 1 0 0 0 0 0 0 
B_aug:
[1 1 1 1 1 1 1 1 0 0 0 0 0 0]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1]
m:
[1 1 1 1 1 1 1 1 0 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,13), ( 9,12), ( 9,12,10), ( 9,12,11), ( 9,13,14)(10,11), ( 4, 6)( 9,13,14)(10,11), ( 4, 6, 7)( 9,13,14)(10,11), ( 3, 4, 6, 7)( 9,13,14)(10,11), ( 3, 4, 6, 7, 5)( 9,13,14)(10,11), ( 1, 3, 4, 6, 7, 5)( 9,13,14)(10,11), ( 2, 8)( 3, 4, 6, 7, 5)( 9,13,14)(10,11) ] )
Right transversal of automorphism group of B_aug:
[8, 1, 9, 10, 11, 12, 13, 7, 0, 2, 3, 4, 5, 6]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
orbits:
11111110000010
11111101000010
11111110000100
11111101111110
11111100100010
11111101000100
11111110111110
11111110001000
11111100010010
11111100100100
11111111011110
11111101001000
11111110010000
11111100001010
11111100010100
11111111101110
11111100101000
11111101010000
11111110100000
11111100000110
11111100001100
11111111110110
11111100011000
11111100110000
11111101100000
11111111000000
11111111111010
11111111111100
word: 11111100000110

combo: 00000000000011

temp: 00000000000011

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11111110000100

combo: 00000000000010

temp: 00000000000010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11111100001100

combo: 00000000000110

temp: 00000000000110

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11111110001110

combo: 00000000000111

word: 11111100001010

combo: 00000000000101

temp: 00000000000101

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11111110001000

combo: 00000000000100

temp: 00000000000100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11111100011000

combo: 00000000001100

temp: 00000000001100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11111110011010

combo: 00000000001101

word: 11111100011110

combo: 00000000001111

word: 11111110011100

combo: 00000000001110

word: 11111100010100

combo: 00000000001010

temp: 00000000001010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11111110010110

combo: 00000000001011

word: 11111100010010

combo: 00000000001001

temp: 00000000001001

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11111110010000

combo: 00000000001000

temp: 00000000001000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11111100110000

combo: 00000000011000

temp: 00000000011000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11111110110010

combo: 00000000011001

word: 11111100110110

combo: 00000000011011

word: 11111110110100

combo: 00000000011010

word: 11111100111100

combo: 00000000011110

word: 11111110111110

combo: 00000000011111

temp: 00000000011111

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11111100111010

combo: 00000000011101

word: 11111110111000

combo: 00000000011100

word: 11111100101000

combo: 00000000010100

temp: 00000000010100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11111110101010

combo: 00000000010101

word: 11111100101110

combo: 00000000010111

word: 11111110101100

combo: 00000000010110

word: 11111100100100

combo: 00000000010010

temp: 00000000010010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11111110100110

combo: 00000000010011

word: 11111100100010

combo: 00000000010001

temp: 00000000010001

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11111110100000

combo: 00000000010000

temp: 00000000010000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 11111101100000

combo: 00000000110000

temp: 00000000110000

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 11111111100010

combo: 00000000110001

word: 11111101100110

combo: 00000000110011

word: 11111111100100

combo: 00000000110010

word: 11111101101100

combo: 00000000110110

word: 11111111101110

combo: 00000000110111

temp: 00000000110111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 11111101101010

combo: 00000000110101

word: 11111111101000

combo: 00000000110100

word: 11111101111000

combo: 00000000111100

word: 11111111111010

combo: 00000000111101

temp: 00000000111101

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 11111101111110

combo: 00000000111111

temp: 00000000111111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 11111111111100

combo: 00000000111110

temp: 00000000111110

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 11111101110100

combo: 00000000111010

word: 11111111110110

combo: 00000000111011

temp: 00000000111011

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 11111101110010

combo: 00000000111001

word: 11111111110000

combo: 00000000111000

word: 11111101010000

combo: 00000000101000

temp: 00000000101000

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 11111111010010

combo: 00000000101001

word: 11111101010110

combo: 00000000101011

word: 11111111010100

combo: 00000000101010

word: 11111101011100

combo: 00000000101110

word: 11111111011110

combo: 00000000101111

temp: 00000000101111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 11111101011010

combo: 00000000101101

word: 11111111011000

combo: 00000000101100

word: 11111101001000

combo: 00000000100100

temp: 00000000100100

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 11111111001010

combo: 00000000100101

word: 11111101001110

combo: 00000000100111

word: 11111111001100

combo: 00000000100110

word: 11111101000100

combo: 00000000100010

temp: 00000000100010

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 11111111000110

combo: 00000000100011

word: 11111101000010

combo: 00000000100001

temp: 00000000100001

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 11111111000000

combo: 00000000100000

temp: 00000000100000

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 1 1 1 1 0 1 1 1 1 1 1]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1]
limit on degree (length): 15
ortho basis:
111000000000100
111000000001000
111000000010000
111000000100000
111000001000000
010000010000000
010000100000000
010001000000000
010010000000000
010100000000000

B_can_lab before row reduction:
000111111111111
011000001111110

B_can_lab after row reduction:
011111110000001
011000001111110

word generated as sum over rows of ortho_basis starting at 10: 000000000000000
gate: 000000000000011
k_gate: 000001111111111
nonzero_gate: 100000000000000
radix_gate: 000000000011111

Starting main loop:
word: 000000000000000

combo: 000000000000000

word: 111000000000100

combo: 000000000000001

temp: 000000000000001

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
110000001111011
011111110000010
rs list:
1 1 0 1 1 1 1 0 0 0 0 0 0 1 1 
0 1 0 0 0 0 0 1 1 1 1 1 1 1 0 
B_aug:
[1 0 1 1 1 1 1 1 1 1 1 1 0 1 0]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0]
[0 0 1 0 0 0 0 0 0 0 0 0 1 1 1]
m:
[1 1 0 1 1 1 1 0 0 0 0 0 0 1 1]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,12), (10,11), ( 9,10), (8,9), (6,7), (5,6), (4,5), (1,4), ( 1, 8)( 4, 9)( 5,10)( 6,11)( 7,12)(13,15) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 12, 3, 4, 5, 6, 7, 8, 9, 10, 11, 2, 14, 13]
[7, 1, 14, 8, 9, 10, 11, 0, 3, 4, 5, 6, 2, 12, 13]
orbits:
111000000000100
101100000000100
111000000001000
101111111111100
101000101000000
101111110000100
101010000000100
101100000001000
111011111111100
101000100100000
111011110000100
111000000010000
101001001000000
101111110001000
101000011000000
111000001111100
111111011000000
101001000000100
101010000001000
111101111111100
101000100010000
111101110000100
101100000010000
101001000100000
111011110001000
101000010100000
101100001111100
111111010100000
111000000100000
101010001000000
101111110010000
111110111000000
111111101000000
101000100000100
101001000001000
111110111111100
101000100001000
111110110000100
101010000010000
101001000010000
111101110001000
101000010010000
101010001111100
111111010010000
101100000100000
101010000100000
111011110010000
111110110100000
111111100100000
111000001000000
101100001000000
101111110100000
111101111000000
101000010000100
111111011111100
111111010000100
111110110001000
101000010001000
101001001111100
111111010001000
111101110010000
111110110010000
111111100010000
111011110100000
111101110100000
101111111000000
111011111000000
111111101111100
111111100000100
101000101111100
111111100001000
101000011111100
word: 000000000001100

combo: 000000000000011

word: 111000000001000

combo: 000000000000010

temp: 000000000000010

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000000000011000

combo: 000000000000110

word: 111000000011100

combo: 000000000000111

word: 000000000010100

combo: 000000000000101

word: 111000000010000

combo: 000000000000100

temp: 000000000000100

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000000000110000

combo: 000000000001100

word: 111000000110100

combo: 000000000001101

word: 000000000111100

combo: 000000000001111

word: 111000000111000

combo: 000000000001110

word: 000000000101000

combo: 000000000001010

word: 111000000101100

combo: 000000000001011

word: 000000000100100

combo: 000000000001001

word: 111000000100000

combo: 000000000001000

temp: 000000000001000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000000001100000

combo: 000000000011000

word: 111000001100100

combo: 000000000011001

word: 000000001101100

combo: 000000000011011

word: 111000001101000

combo: 000000000011010

word: 000000001111000

combo: 000000000011110

word: 111000001111100

combo: 000000000011111

temp: 000000000011111

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000000001110100

combo: 000000000011101

word: 111000001110000

combo: 000000000011100

word: 000000001010000

combo: 000000000010100

word: 111000001010100

combo: 000000000010101

word: 000000001011100

combo: 000000000010111

word: 111000001011000

combo: 000000000010110

word: 000000001001000

combo: 000000000010010

word: 111000001001100

combo: 000000000010011

word: 000000001000100

combo: 000000000010001

word: 111000001000000

combo: 000000000010000

temp: 000000000010000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 101000011000000

combo: 000000000110000

temp: 000000000110000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010000011000100

combo: 000000000110001

word: 101000011001100

combo: 000000000110011

word: 010000011001000

combo: 000000000110010

word: 101000011011000

combo: 000000000110110

word: 010000011011100

combo: 000000000110111

word: 101000011010100

combo: 000000000110101

word: 010000011010000

combo: 000000000110100

word: 101000011110000

combo: 000000000111100

word: 010000011110100

combo: 000000000111101

word: 101000011111100

combo: 000000000111111

temp: 000000000111111

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010000011111000

combo: 000000000111110

word: 101000011101000

combo: 000000000111010

word: 010000011101100

combo: 000000000111011

word: 101000011100100

combo: 000000000111001

word: 010000011100000

combo: 000000000111000

word: 101000010100000

combo: 000000000101000

temp: 000000000101000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010000010100100

combo: 000000000101001

word: 101000010101100

combo: 000000000101011

word: 010000010101000

combo: 000000000101010

word: 101000010111000

combo: 000000000101110

word: 010000010111100

combo: 000000000101111

word: 101000010110100

combo: 000000000101101

word: 010000010110000

combo: 000000000101100

word: 101000010010000

combo: 000000000100100

temp: 000000000100100

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010000010010100

combo: 000000000100101

word: 101000010011100

combo: 000000000100111

word: 010000010011000

combo: 000000000100110

word: 101000010001000

combo: 000000000100010

temp: 000000000100010

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010000010001100

combo: 000000000100011

word: 101000010000100

combo: 000000000100001

temp: 000000000100001

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010000010000000

combo: 000000000100000

word: 000000110000000

combo: 000000001100000

word: 111000110000100

combo: 000000001100001

word: 000000110001100

combo: 000000001100011

word: 111000110001000

combo: 000000001100010

word: 000000110011000

combo: 000000001100110

word: 111000110011100

combo: 000000001100111

temp: 000000001100111

orbit_checks[temp>>log2radix]= 000000000000000

passed if statements
temp basis:
101111001100001
100111000011110
rs list:
1 0 0 0 0 1 1 0 0 1 1 1 1 0 1 
0 1 1 1 1 0 0 0 0 1 1 1 0 0 1 
B_aug:
[1 0 1 1 1 1 1 1 1 1 1 1 0 1 0]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0]
[0 0 1 1 1 0 0 1 1 0 0 0 1 1 1]
m:
[1 0 0 0 0 1 1 0 0 1 1 1 1 0 1]
[0 1 1 1 1 0 0 0 0 1 1 1 0 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (8,9), ( 8,14), ( 3, 4)( 8,14), ( 3, 4, 5)( 8,14), ( 3, 4, 5)( 8,14)(10,11), ( 3, 4, 5)( 8,14)(10,11,12), ( 3, 4, 5)( 6, 7)( 8,14)(10,11,12), ( 1, 6, 7)( 3, 4, 5)( 8,14)(10,11,12), ( 1,10, 6,12)( 3, 4, 5)( 7,11)( 8,14)(13,15), ( 1,10, 4, 7,11, 5)( 2,13,15)( 3, 6,12)( 8,14) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 7, 8, 13, 5, 6, 2, 3, 9, 10, 11, 14, 4, 12]
[0, 12, 2, 3, 4, 5, 6, 9, 10, 7, 8, 13, 1, 11, 14]
[2, 1, 9, 10, 11, 3, 4, 0, 5, 7, 8, 13, 14, 6, 12]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
orbits:
111000110011100
101100110011100
111001010011100
111000110101100
101111001100100
111100010111000
101111000011100
101010110011100
101101010011100
101100110101100
111011001100100
111100011011000
111011000011100
111010010011100
111001100011100
111001010101100
101110101100100
111100010110100
101110100011100
111000111001100
111000110110100
101111001010100
111010010111000
101111000101100
101111001101000
111100100111000
111000111100100
101011100111000
101001110011100
101011010011100
101010110101100
111101001100100
111100011101000
111101000011100
101110010011100
101101100011100
101101010101100
111010101100100
111100011010100
111010100011100
101100111001100
101100110110100
111011001010100
111010011011000
111011000101100
111011001101000
111100101011000
101100111100100
101011101011000
111100010011100
111010010101100
101101101100100
111100010101100
111001100101100
101110011100100
101011101001100
111001011001100
111001010110100
101110101010100
111010010110100
101110100101100
101110101101000
111100100110100
111001011100100
101011100110100
111000111010100
101111000110100
101110010111000
101111001001100
111000110111000
111001010111000
101111001011000
111010100111000
101101100111000
101111001110000
111101000111000
111000111101000
101011010111000
101001110101100
111110001100100
111100011110000
111110000011100
101011100011100
101011010101100
111100101100100
111100011100100
111100100011100
101010111001100
101010110110100
111101001010100
111010011101000
111101000101100
111101001101000
111100101101000
101010111100100
101011101101000
101110010101100
111001101100100
111100011001100
101101100101100
111010011100100
101011100101100
101101011001100
101101010110100
111010101010100
111010011010100
111010100101100
111010101101000
111100101010100
101101011100100
101011101010100
101100111010100
111011000110100
101110011011000
111011001001100
101100110111000
111001011011000
111011001011000
111010101011000
101101101011000
111011001110000
111101001011000
101100111101000
101011011011000
101011101100100
111010011001100
101101101010100
101101101101000
111100100101100
111001101001100
111001100110100
101110011010100
101101101001100
101110011101000
101011011001100
111001011010100
101110100110100
101110010110100
101110101001100
101110101011000
111010100110100
101101100110100
101110101110000
111101000110100
111001011101000
101011010110100
111000111011000
101101010111000
101111000111000
101110100111000
111001100111000
111011000111000
111110000111000
111000111110000
101010110111000
101001111001100
101001110110100
111110001010100
111010011110000
111110000101100
111110001101000
111100101110000
101001111100100
101011101110000
101011011100100
101010111010100
111101001001100
111101001110000
101010111101000
101011011101000
101110011001100
111001101010100
111001101101000
111100101001100
101101011010100
111010101001100
111010101110000
101101011101000
101011011010100
101100111011000
101101011011000
111001101011000
111110001011000
101100111110000
101010111011000
101101101110000
101110011110000
111110000110100
111001011110000
101001110111000
101001111010100
111110001001100
111110001110000
101001111101000
101011011110000
101010111110000
111001101110000
101101011110000
101001111011000
101001111110000
word: 000000110010100

combo: 000000001100101

word: 111000110010000

combo: 000000001100100

word: 000000110110000

combo: 000000001101100

word: 111000110110100

combo: 000000001101101

temp: 000000001101101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000000110111100

combo: 000000001101111

word: 111000110111000

combo: 000000001101110

temp: 000000001101110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000000110101000

combo: 000000001101010

word: 111000110101100

combo: 000000001101011

temp: 000000001101011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000000110100100

combo: 000000001101001

word: 111000110100000

combo: 000000001101000

word: 000000111100000

combo: 000000001111000

word: 111000111100100

combo: 000000001111001

temp: 000000001111001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000000111101100

combo: 000000001111011

word: 111000111101000

combo: 000000001111010

temp: 000000001111010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000000111111000

combo: 000000001111110

word: 111000111111100

combo: 000000001111111

word: 000000111110100

combo: 000000001111101

word: 111000111110000

combo: 000000001111100

temp: 000000001111100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000000111010000

combo: 000000001110100

word: 111000111010100

combo: 000000001110101

temp: 000000001110101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000000111011100

combo: 000000001110111

word: 111000111011000

combo: 000000001110110

temp: 000000001110110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000000111001000

combo: 000000001110010

word: 111000111001100

combo: 000000001110011

temp: 000000001110011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000000111000100

combo: 000000001110001

word: 111000111000000

combo: 000000001110000

word: 101000101000000

combo: 000000001010000

temp: 000000001010000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010000101000100

combo: 000000001010001

word: 101000101001100

combo: 000000001010011

word: 010000101001000

combo: 000000001010010

word: 101000101011000

combo: 000000001010110

word: 010000101011100

combo: 000000001010111

word: 101000101010100

combo: 000000001010101

word: 010000101010000

combo: 000000001010100

word: 101000101110000

combo: 000000001011100

word: 010000101110100

combo: 000000001011101

word: 101000101111100

combo: 000000001011111

temp: 000000001011111

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010000101111000

combo: 000000001011110

word: 101000101101000

combo: 000000001011010

word: 010000101101100

combo: 000000001011011

word: 101000101100100

combo: 000000001011001

word: 010000101100000

combo: 000000001011000

word: 101000100100000

combo: 000000001001000

temp: 000000001001000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010000100100100

combo: 000000001001001

word: 101000100101100

combo: 000000001001011

word: 010000100101000

combo: 000000001001010

word: 101000100111000

combo: 000000001001110

word: 010000100111100

combo: 000000001001111

word: 101000100110100

combo: 000000001001101

word: 010000100110000

combo: 000000001001100

word: 101000100010000

combo: 000000001000100

temp: 000000001000100

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010000100010100

combo: 000000001000101

word: 101000100011100

combo: 000000001000111

word: 010000100011000

combo: 000000001000110

word: 101000100001000

combo: 000000001000010

temp: 000000001000010

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010000100001100

combo: 000000001000011

word: 101000100000100

combo: 000000001000001

temp: 000000001000001

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010000100000000

combo: 000000001000000

word: 000001100000000

combo: 000000011000000

word: 111001100000100

combo: 000000011000001

word: 000001100001100

combo: 000000011000011

word: 111001100001000

combo: 000000011000010

word: 000001100011000

combo: 000000011000110

word: 111001100011100

combo: 000000011000111

temp: 000000011000111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001100010100

combo: 000000011000101

word: 111001100010000

combo: 000000011000100

word: 000001100110000

combo: 000000011001100

word: 111001100110100

combo: 000000011001101

temp: 000000011001101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001100111100

combo: 000000011001111

word: 111001100111000

combo: 000000011001110

temp: 000000011001110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001100101000

combo: 000000011001010

word: 111001100101100

combo: 000000011001011

temp: 000000011001011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001100100100

combo: 000000011001001

word: 111001100100000

combo: 000000011001000

word: 000001101100000

combo: 000000011011000

word: 111001101100100

combo: 000000011011001

temp: 000000011011001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001101101100

combo: 000000011011011

word: 111001101101000

combo: 000000011011010

temp: 000000011011010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001101111000

combo: 000000011011110

word: 111001101111100

combo: 000000011011111

word: 000001101110100

combo: 000000011011101

word: 111001101110000

combo: 000000011011100

temp: 000000011011100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001101010000

combo: 000000011010100

word: 111001101010100

combo: 000000011010101

temp: 000000011010101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001101011100

combo: 000000011010111

word: 111001101011000

combo: 000000011010110

temp: 000000011010110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001101001000

combo: 000000011010010

word: 111001101001100

combo: 000000011010011

temp: 000000011010011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001101000100

combo: 000000011010001

word: 111001101000000

combo: 000000011010000

word: 101001111000000

combo: 000000011110000

word: 010001111000100

combo: 000000011110001

word: 101001111001100

combo: 000000011110011

temp: 000000011110011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010001111001000

combo: 000000011110010

word: 101001111011000

combo: 000000011110110

temp: 000000011110110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010001111011100

combo: 000000011110111

word: 101001111010100

combo: 000000011110101

temp: 000000011110101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010001111010000

combo: 000000011110100

word: 101001111110000

combo: 000000011111100

temp: 000000011111100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010001111110100

combo: 000000011111101

word: 101001111111100

combo: 000000011111111

word: 010001111111000

combo: 000000011111110

word: 101001111101000

combo: 000000011111010

temp: 000000011111010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010001111101100

combo: 000000011111011

word: 101001111100100

combo: 000000011111001

temp: 000000011111001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010001111100000

combo: 000000011111000

word: 101001110100000

combo: 000000011101000

word: 010001110100100

combo: 000000011101001

word: 101001110101100

combo: 000000011101011

temp: 000000011101011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010001110101000

combo: 000000011101010

word: 101001110111000

combo: 000000011101110

temp: 000000011101110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010001110111100

combo: 000000011101111

word: 101001110110100

combo: 000000011101101

temp: 000000011101101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010001110110000

combo: 000000011101100

word: 101001110010000

combo: 000000011100100

word: 010001110010100

combo: 000000011100101

word: 101001110011100

combo: 000000011100111

temp: 000000011100111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010001110011000

combo: 000000011100110

word: 101001110001000

combo: 000000011100010

word: 010001110001100

combo: 000000011100011

word: 101001110000100

combo: 000000011100001

word: 010001110000000

combo: 000000011100000

word: 000001010000000

combo: 000000010100000

word: 111001010000100

combo: 000000010100001

word: 000001010001100

combo: 000000010100011

word: 111001010001000

combo: 000000010100010

word: 000001010011000

combo: 000000010100110

word: 111001010011100

combo: 000000010100111

temp: 000000010100111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001010010100

combo: 000000010100101

word: 111001010010000

combo: 000000010100100

word: 000001010110000

combo: 000000010101100

word: 111001010110100

combo: 000000010101101

temp: 000000010101101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001010111100

combo: 000000010101111

word: 111001010111000

combo: 000000010101110

temp: 000000010101110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001010101000

combo: 000000010101010

word: 111001010101100

combo: 000000010101011

temp: 000000010101011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001010100100

combo: 000000010101001

word: 111001010100000

combo: 000000010101000

word: 000001011100000

combo: 000000010111000

word: 111001011100100

combo: 000000010111001

temp: 000000010111001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001011101100

combo: 000000010111011

word: 111001011101000

combo: 000000010111010

temp: 000000010111010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001011111000

combo: 000000010111110

word: 111001011111100

combo: 000000010111111

word: 000001011110100

combo: 000000010111101

word: 111001011110000

combo: 000000010111100

temp: 000000010111100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001011010000

combo: 000000010110100

word: 111001011010100

combo: 000000010110101

temp: 000000010110101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001011011100

combo: 000000010110111

word: 111001011011000

combo: 000000010110110

temp: 000000010110110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001011001000

combo: 000000010110010

word: 111001011001100

combo: 000000010110011

temp: 000000010110011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000001011000100

combo: 000000010110001

word: 111001011000000

combo: 000000010110000

word: 101001001000000

combo: 000000010010000

temp: 000000010010000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010001001000100

combo: 000000010010001

word: 101001001001100

combo: 000000010010011

word: 010001001001000

combo: 000000010010010

word: 101001001011000

combo: 000000010010110

word: 010001001011100

combo: 000000010010111

word: 101001001010100

combo: 000000010010101

word: 010001001010000

combo: 000000010010100

word: 101001001110000

combo: 000000010011100

word: 010001001110100

combo: 000000010011101

word: 101001001111100

combo: 000000010011111

temp: 000000010011111

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010001001111000

combo: 000000010011110

word: 101001001101000

combo: 000000010011010

word: 010001001101100

combo: 000000010011011

word: 101001001100100

combo: 000000010011001

word: 010001001100000

combo: 000000010011000

word: 101001000100000

combo: 000000010001000

temp: 000000010001000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010001000100100

combo: 000000010001001

word: 101001000101100

combo: 000000010001011

word: 010001000101000

combo: 000000010001010

word: 101001000111000

combo: 000000010001110

word: 010001000111100

combo: 000000010001111

word: 101001000110100

combo: 000000010001101

word: 010001000110000

combo: 000000010001100

word: 101001000010000

combo: 000000010000100

temp: 000000010000100

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010001000010100

combo: 000000010000101

word: 101001000011100

combo: 000000010000111

word: 010001000011000

combo: 000000010000110

word: 101001000001000

combo: 000000010000010

temp: 000000010000010

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010001000001100

combo: 000000010000011

word: 101001000000100

combo: 000000010000001

temp: 000000010000001

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010001000000000

combo: 000000010000000

word: 000011000000000

combo: 000000110000000

word: 111011000000100

combo: 000000110000001

word: 000011000001100

combo: 000000110000011

word: 111011000001000

combo: 000000110000010

word: 000011000011000

combo: 000000110000110

word: 111011000011100

combo: 000000110000111

temp: 000000110000111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000011000010100

combo: 000000110000101

word: 111011000010000

combo: 000000110000100

word: 000011000110000

combo: 000000110001100

word: 111011000110100

combo: 000000110001101

temp: 000000110001101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000011000111100

combo: 000000110001111

word: 111011000111000

combo: 000000110001110

temp: 000000110001110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000011000101000

combo: 000000110001010

word: 111011000101100

combo: 000000110001011

temp: 000000110001011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000011000100100

combo: 000000110001001

word: 111011000100000

combo: 000000110001000

word: 000011001100000

combo: 000000110011000

word: 111011001100100

combo: 000000110011001

temp: 000000110011001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000011001101100

combo: 000000110011011

word: 111011001101000

combo: 000000110011010

temp: 000000110011010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000011001111000

combo: 000000110011110

word: 111011001111100

combo: 000000110011111

word: 000011001110100

combo: 000000110011101

word: 111011001110000

combo: 000000110011100

temp: 000000110011100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000011001010000

combo: 000000110010100

word: 111011001010100

combo: 000000110010101

temp: 000000110010101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000011001011100

combo: 000000110010111

word: 111011001011000

combo: 000000110010110

temp: 000000110010110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000011001001000

combo: 000000110010010

word: 111011001001100

combo: 000000110010011

temp: 000000110010011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000011001000100

combo: 000000110010001

word: 111011001000000

combo: 000000110010000

word: 101011011000000

combo: 000000110110000

word: 010011011000100

combo: 000000110110001

word: 101011011001100

combo: 000000110110011

temp: 000000110110011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011011001000

combo: 000000110110010

word: 101011011011000

combo: 000000110110110

temp: 000000110110110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011011011100

combo: 000000110110111

word: 101011011010100

combo: 000000110110101

temp: 000000110110101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011011010000

combo: 000000110110100

word: 101011011110000

combo: 000000110111100

temp: 000000110111100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011011110100

combo: 000000110111101

word: 101011011111100

combo: 000000110111111

word: 010011011111000

combo: 000000110111110

word: 101011011101000

combo: 000000110111010

temp: 000000110111010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011011101100

combo: 000000110111011

word: 101011011100100

combo: 000000110111001

temp: 000000110111001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011011100000

combo: 000000110111000

word: 101011010100000

combo: 000000110101000

word: 010011010100100

combo: 000000110101001

word: 101011010101100

combo: 000000110101011

temp: 000000110101011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011010101000

combo: 000000110101010

word: 101011010111000

combo: 000000110101110

temp: 000000110101110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011010111100

combo: 000000110101111

word: 101011010110100

combo: 000000110101101

temp: 000000110101101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011010110000

combo: 000000110101100

word: 101011010010000

combo: 000000110100100

word: 010011010010100

combo: 000000110100101

word: 101011010011100

combo: 000000110100111

temp: 000000110100111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011010011000

combo: 000000110100110

word: 101011010001000

combo: 000000110100010

word: 010011010001100

combo: 000000110100011

word: 101011010000100

combo: 000000110100001

word: 010011010000000

combo: 000000110100000

word: 000011110000000

combo: 000000111100000

word: 111011110000100

combo: 000000111100001

temp: 000000111100001

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000011110001100

combo: 000000111100011

word: 111011110001000

combo: 000000111100010

temp: 000000111100010

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000011110011000

combo: 000000111100110

word: 111011110011100

combo: 000000111100111

word: 000011110010100

combo: 000000111100101

word: 111011110010000

combo: 000000111100100

temp: 000000111100100

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000011110110000

combo: 000000111101100

word: 111011110110100

combo: 000000111101101

word: 000011110111100

combo: 000000111101111

word: 111011110111000

combo: 000000111101110

word: 000011110101000

combo: 000000111101010

word: 111011110101100

combo: 000000111101011

word: 000011110100100

combo: 000000111101001

word: 111011110100000

combo: 000000111101000

temp: 000000111101000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000011111100000

combo: 000000111111000

word: 111011111100100

combo: 000000111111001

word: 000011111101100

combo: 000000111111011

word: 111011111101000

combo: 000000111111010

word: 000011111111000

combo: 000000111111110

word: 111011111111100

combo: 000000111111111

temp: 000000111111111

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000011111110100

combo: 000000111111101

word: 111011111110000

combo: 000000111111100

word: 000011111010000

combo: 000000111110100

word: 111011111010100

combo: 000000111110101

word: 000011111011100

combo: 000000111110111

word: 111011111011000

combo: 000000111110110

word: 000011111001000

combo: 000000111110010

word: 111011111001100

combo: 000000111110011

word: 000011111000100

combo: 000000111110001

word: 111011111000000

combo: 000000111110000

temp: 000000111110000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 101011101000000

combo: 000000111010000

word: 010011101000100

combo: 000000111010001

word: 101011101001100

combo: 000000111010011

temp: 000000111010011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011101001000

combo: 000000111010010

word: 101011101011000

combo: 000000111010110

temp: 000000111010110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011101011100

combo: 000000111010111

word: 101011101010100

combo: 000000111010101

temp: 000000111010101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011101010000

combo: 000000111010100

word: 101011101110000

combo: 000000111011100

temp: 000000111011100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011101110100

combo: 000000111011101

word: 101011101111100

combo: 000000111011111

word: 010011101111000

combo: 000000111011110

word: 101011101101000

combo: 000000111011010

temp: 000000111011010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011101101100

combo: 000000111011011

word: 101011101100100

combo: 000000111011001

temp: 000000111011001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011101100000

combo: 000000111011000

word: 101011100100000

combo: 000000111001000

word: 010011100100100

combo: 000000111001001

word: 101011100101100

combo: 000000111001011

temp: 000000111001011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011100101000

combo: 000000111001010

word: 101011100111000

combo: 000000111001110

temp: 000000111001110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011100111100

combo: 000000111001111

word: 101011100110100

combo: 000000111001101

temp: 000000111001101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011100110000

combo: 000000111001100

word: 101011100010000

combo: 000000111000100

word: 010011100010100

combo: 000000111000101

word: 101011100011100

combo: 000000111000111

temp: 000000111000111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010011100011000

combo: 000000111000110

word: 101011100001000

combo: 000000111000010

word: 010011100001100

combo: 000000111000011

word: 101011100000100

combo: 000000111000001

word: 010011100000000

combo: 000000111000000

word: 000010100000000

combo: 000000101000000

word: 111010100000100

combo: 000000101000001

word: 000010100001100

combo: 000000101000011

word: 111010100001000

combo: 000000101000010

word: 000010100011000

combo: 000000101000110

word: 111010100011100

combo: 000000101000111

temp: 000000101000111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000010100010100

combo: 000000101000101

word: 111010100010000

combo: 000000101000100

word: 000010100110000

combo: 000000101001100

word: 111010100110100

combo: 000000101001101

temp: 000000101001101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000010100111100

combo: 000000101001111

word: 111010100111000

combo: 000000101001110

temp: 000000101001110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000010100101000

combo: 000000101001010

word: 111010100101100

combo: 000000101001011

temp: 000000101001011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000010100100100

combo: 000000101001001

word: 111010100100000

combo: 000000101001000

word: 000010101100000

combo: 000000101011000

word: 111010101100100

combo: 000000101011001

temp: 000000101011001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000010101101100

combo: 000000101011011

word: 111010101101000

combo: 000000101011010

temp: 000000101011010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000010101111000

combo: 000000101011110

word: 111010101111100

combo: 000000101011111

word: 000010101110100

combo: 000000101011101

word: 111010101110000

combo: 000000101011100

temp: 000000101011100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000010101010000

combo: 000000101010100

word: 111010101010100

combo: 000000101010101

temp: 000000101010101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000010101011100

combo: 000000101010111

word: 111010101011000

combo: 000000101010110

temp: 000000101010110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000010101001000

combo: 000000101010010

word: 111010101001100

combo: 000000101010011

temp: 000000101010011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000010101000100

combo: 000000101010001

word: 111010101000000

combo: 000000101010000

word: 101010111000000

combo: 000000101110000

word: 010010111000100

combo: 000000101110001

word: 101010111001100

combo: 000000101110011

temp: 000000101110011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010010111001000

combo: 000000101110010

word: 101010111011000

combo: 000000101110110

temp: 000000101110110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010010111011100

combo: 000000101110111

word: 101010111010100

combo: 000000101110101

temp: 000000101110101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010010111010000

combo: 000000101110100

word: 101010111110000

combo: 000000101111100

temp: 000000101111100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010010111110100

combo: 000000101111101

word: 101010111111100

combo: 000000101111111

word: 010010111111000

combo: 000000101111110

word: 101010111101000

combo: 000000101111010

temp: 000000101111010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010010111101100

combo: 000000101111011

word: 101010111100100

combo: 000000101111001

temp: 000000101111001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010010111100000

combo: 000000101111000

word: 101010110100000

combo: 000000101101000

word: 010010110100100

combo: 000000101101001

word: 101010110101100

combo: 000000101101011

temp: 000000101101011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010010110101000

combo: 000000101101010

word: 101010110111000

combo: 000000101101110

temp: 000000101101110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010010110111100

combo: 000000101101111

word: 101010110110100

combo: 000000101101101

temp: 000000101101101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010010110110000

combo: 000000101101100

word: 101010110010000

combo: 000000101100100

word: 010010110010100

combo: 000000101100101

word: 101010110011100

combo: 000000101100111

temp: 000000101100111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010010110011000

combo: 000000101100110

word: 101010110001000

combo: 000000101100010

word: 010010110001100

combo: 000000101100011

word: 101010110000100

combo: 000000101100001

word: 010010110000000

combo: 000000101100000

word: 000010010000000

combo: 000000100100000

word: 111010010000100

combo: 000000100100001

word: 000010010001100

combo: 000000100100011

word: 111010010001000

combo: 000000100100010

word: 000010010011000

combo: 000000100100110

word: 111010010011100

combo: 000000100100111

temp: 000000100100111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000010010010100

combo: 000000100100101

word: 111010010010000

combo: 000000100100100

word: 000010010110000

combo: 000000100101100

word: 111010010110100

combo: 000000100101101

temp: 000000100101101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000010010111100

combo: 000000100101111

word: 111010010111000

combo: 000000100101110

temp: 000000100101110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000010010101000

combo: 000000100101010

word: 111010010101100

combo: 000000100101011

temp: 000000100101011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000010010100100

combo: 000000100101001

word: 111010010100000

combo: 000000100101000

word: 000010011100000

combo: 000000100111000

word: 111010011100100

combo: 000000100111001

temp: 000000100111001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000010011101100

combo: 000000100111011

word: 111010011101000

combo: 000000100111010

temp: 000000100111010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000010011111000

combo: 000000100111110

word: 111010011111100

combo: 000000100111111

word: 000010011110100

combo: 000000100111101

word: 111010011110000

combo: 000000100111100

temp: 000000100111100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000010011010000

combo: 000000100110100

word: 111010011010100

combo: 000000100110101

temp: 000000100110101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000010011011100

combo: 000000100110111

word: 111010011011000

combo: 000000100110110

temp: 000000100110110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000010011001000

combo: 000000100110010

word: 111010011001100

combo: 000000100110011

temp: 000000100110011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000010011000100

combo: 000000100110001

word: 111010011000000

combo: 000000100110000

word: 101010001000000

combo: 000000100010000

temp: 000000100010000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010010001000100

combo: 000000100010001

word: 101010001001100

combo: 000000100010011

word: 010010001001000

combo: 000000100010010

word: 101010001011000

combo: 000000100010110

word: 010010001011100

combo: 000000100010111

word: 101010001010100

combo: 000000100010101

word: 010010001010000

combo: 000000100010100

word: 101010001110000

combo: 000000100011100

word: 010010001110100

combo: 000000100011101

word: 101010001111100

combo: 000000100011111

temp: 000000100011111

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010010001111000

combo: 000000100011110

word: 101010001101000

combo: 000000100011010

word: 010010001101100

combo: 000000100011011

word: 101010001100100

combo: 000000100011001

word: 010010001100000

combo: 000000100011000

word: 101010000100000

combo: 000000100001000

temp: 000000100001000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010010000100100

combo: 000000100001001

word: 101010000101100

combo: 000000100001011

word: 010010000101000

combo: 000000100001010

word: 101010000111000

combo: 000000100001110

word: 010010000111100

combo: 000000100001111

word: 101010000110100

combo: 000000100001101

word: 010010000110000

combo: 000000100001100

word: 101010000010000

combo: 000000100000100

temp: 000000100000100

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010010000010100

combo: 000000100000101

word: 101010000011100

combo: 000000100000111

word: 010010000011000

combo: 000000100000110

word: 101010000001000

combo: 000000100000010

temp: 000000100000010

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010010000001100

combo: 000000100000011

word: 101010000000100

combo: 000000100000001

temp: 000000100000001

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010010000000000

combo: 000000100000000

word: 000110000000000

combo: 000001100000000

word: 111110000000100

combo: 000001100000001

word: 000110000001100

combo: 000001100000011

word: 111110000001000

combo: 000001100000010

word: 000110000011000

combo: 000001100000110

word: 111110000011100

combo: 000001100000111

temp: 000001100000111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000110000010100

combo: 000001100000101

word: 111110000010000

combo: 000001100000100

word: 000110000110000

combo: 000001100001100

word: 111110000110100

combo: 000001100001101

temp: 000001100001101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000110000111100

combo: 000001100001111

word: 111110000111000

combo: 000001100001110

temp: 000001100001110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000110000101000

combo: 000001100001010

word: 111110000101100

combo: 000001100001011

temp: 000001100001011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000110000100100

combo: 000001100001001

word: 111110000100000

combo: 000001100001000

word: 000110001100000

combo: 000001100011000

word: 111110001100100

combo: 000001100011001

temp: 000001100011001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000110001101100

combo: 000001100011011

word: 111110001101000

combo: 000001100011010

temp: 000001100011010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000110001111000

combo: 000001100011110

word: 111110001111100

combo: 000001100011111

word: 000110001110100

combo: 000001100011101

word: 111110001110000

combo: 000001100011100

temp: 000001100011100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000110001010000

combo: 000001100010100

word: 111110001010100

combo: 000001100010101

temp: 000001100010101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000110001011100

combo: 000001100010111

word: 111110001011000

combo: 000001100010110

temp: 000001100010110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000110001001000

combo: 000001100010010

word: 111110001001100

combo: 000001100010011

temp: 000001100010011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000110001000100

combo: 000001100010001

word: 111110001000000

combo: 000001100010000

word: 101110011000000

combo: 000001100110000

word: 010110011000100

combo: 000001100110001

word: 101110011001100

combo: 000001100110011

temp: 000001100110011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010110011001000

combo: 000001100110010

word: 101110011011000

combo: 000001100110110

temp: 000001100110110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010110011011100

combo: 000001100110111

word: 101110011010100

combo: 000001100110101

temp: 000001100110101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010110011010000

combo: 000001100110100

word: 101110011110000

combo: 000001100111100

temp: 000001100111100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010110011110100

combo: 000001100111101

word: 101110011111100

combo: 000001100111111

word: 010110011111000

combo: 000001100111110

word: 101110011101000

combo: 000001100111010

temp: 000001100111010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010110011101100

combo: 000001100111011

word: 101110011100100

combo: 000001100111001

temp: 000001100111001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010110011100000

combo: 000001100111000

word: 101110010100000

combo: 000001100101000

word: 010110010100100

combo: 000001100101001

word: 101110010101100

combo: 000001100101011

temp: 000001100101011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010110010101000

combo: 000001100101010

word: 101110010111000

combo: 000001100101110

temp: 000001100101110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010110010111100

combo: 000001100101111

word: 101110010110100

combo: 000001100101101

temp: 000001100101101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010110010110000

combo: 000001100101100

word: 101110010010000

combo: 000001100100100

word: 010110010010100

combo: 000001100100101

word: 101110010011100

combo: 000001100100111

temp: 000001100100111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010110010011000

combo: 000001100100110

word: 101110010001000

combo: 000001100100010

word: 010110010001100

combo: 000001100100011

word: 101110010000100

combo: 000001100100001

word: 010110010000000

combo: 000001100100000

word: 000110110000000

combo: 000001101100000

word: 111110110000100

combo: 000001101100001

temp: 000001101100001

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000110110001100

combo: 000001101100011

word: 111110110001000

combo: 000001101100010

temp: 000001101100010

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000110110011000

combo: 000001101100110

word: 111110110011100

combo: 000001101100111

word: 000110110010100

combo: 000001101100101

word: 111110110010000

combo: 000001101100100

temp: 000001101100100

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000110110110000

combo: 000001101101100

word: 111110110110100

combo: 000001101101101

word: 000110110111100

combo: 000001101101111

word: 111110110111000

combo: 000001101101110

word: 000110110101000

combo: 000001101101010

word: 111110110101100

combo: 000001101101011

word: 000110110100100

combo: 000001101101001

word: 111110110100000

combo: 000001101101000

temp: 000001101101000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000110111100000

combo: 000001101111000

word: 111110111100100

combo: 000001101111001

word: 000110111101100

combo: 000001101111011

word: 111110111101000

combo: 000001101111010

word: 000110111111000

combo: 000001101111110

word: 111110111111100

combo: 000001101111111

temp: 000001101111111

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000110111110100

combo: 000001101111101

word: 111110111110000

combo: 000001101111100

word: 000110111010000

combo: 000001101110100

word: 111110111010100

combo: 000001101110101

word: 000110111011100

combo: 000001101110111

word: 111110111011000

combo: 000001101110110

word: 000110111001000

combo: 000001101110010

word: 111110111001100

combo: 000001101110011

word: 000110111000100

combo: 000001101110001

word: 111110111000000

combo: 000001101110000

temp: 000001101110000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 101110101000000

combo: 000001101010000

word: 010110101000100

combo: 000001101010001

word: 101110101001100

combo: 000001101010011

temp: 000001101010011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010110101001000

combo: 000001101010010

word: 101110101011000

combo: 000001101010110

temp: 000001101010110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010110101011100

combo: 000001101010111

word: 101110101010100

combo: 000001101010101

temp: 000001101010101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010110101010000

combo: 000001101010100

word: 101110101110000

combo: 000001101011100

temp: 000001101011100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010110101110100

combo: 000001101011101

word: 101110101111100

combo: 000001101011111

word: 010110101111000

combo: 000001101011110

word: 101110101101000

combo: 000001101011010

temp: 000001101011010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010110101101100

combo: 000001101011011

word: 101110101100100

combo: 000001101011001

temp: 000001101011001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010110101100000

combo: 000001101011000

word: 101110100100000

combo: 000001101001000

word: 010110100100100

combo: 000001101001001

word: 101110100101100

combo: 000001101001011

temp: 000001101001011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010110100101000

combo: 000001101001010

word: 101110100111000

combo: 000001101001110

temp: 000001101001110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010110100111100

combo: 000001101001111

word: 101110100110100

combo: 000001101001101

temp: 000001101001101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010110100110000

combo: 000001101001100

word: 101110100010000

combo: 000001101000100

word: 010110100010100

combo: 000001101000101

word: 101110100011100

combo: 000001101000111

temp: 000001101000111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010110100011000

combo: 000001101000110

word: 101110100001000

combo: 000001101000010

word: 010110100001100

combo: 000001101000011

word: 101110100000100

combo: 000001101000001

word: 010110100000000

combo: 000001101000000

word: 000111100000000

combo: 000001111000000

word: 111111100000100

combo: 000001111000001

temp: 000001111000001

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000111100001100

combo: 000001111000011

word: 111111100001000

combo: 000001111000010

temp: 000001111000010

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000111100011000

combo: 000001111000110

word: 111111100011100

combo: 000001111000111

word: 000111100010100

combo: 000001111000101

word: 111111100010000

combo: 000001111000100

temp: 000001111000100

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000111100110000

combo: 000001111001100

word: 111111100110100

combo: 000001111001101

word: 000111100111100

combo: 000001111001111

word: 111111100111000

combo: 000001111001110

word: 000111100101000

combo: 000001111001010

word: 111111100101100

combo: 000001111001011

word: 000111100100100

combo: 000001111001001

word: 111111100100000

combo: 000001111001000

temp: 000001111001000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000111101100000

combo: 000001111011000

word: 111111101100100

combo: 000001111011001

word: 000111101101100

combo: 000001111011011

word: 111111101101000

combo: 000001111011010

word: 000111101111000

combo: 000001111011110

word: 111111101111100

combo: 000001111011111

temp: 000001111011111

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000111101110100

combo: 000001111011101

word: 111111101110000

combo: 000001111011100

word: 000111101010000

combo: 000001111010100

word: 111111101010100

combo: 000001111010101

word: 000111101011100

combo: 000001111010111

word: 111111101011000

combo: 000001111010110

word: 000111101001000

combo: 000001111010010

word: 111111101001100

combo: 000001111010011

word: 000111101000100

combo: 000001111010001

word: 111111101000000

combo: 000001111010000

temp: 000001111010000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 101111111000000

combo: 000001111110000

temp: 000001111110000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010111111000100

combo: 000001111110001

word: 101111111001100

combo: 000001111110011

word: 010111111001000

combo: 000001111110010

word: 101111111011000

combo: 000001111110110

word: 010111111011100

combo: 000001111110111

word: 101111111010100

combo: 000001111110101

word: 010111111010000

combo: 000001111110100

word: 101111111110000

combo: 000001111111100

word: 010111111110100

combo: 000001111111101

word: 101111111111100

combo: 000001111111111

temp: 000001111111111

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010111111111000

combo: 000001111111110

word: 101111111101000

combo: 000001111111010

word: 010111111101100

combo: 000001111111011

word: 101111111100100

combo: 000001111111001

word: 010111111100000

combo: 000001111111000

word: 101111110100000

combo: 000001111101000

temp: 000001111101000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010111110100100

combo: 000001111101001

word: 101111110101100

combo: 000001111101011

word: 010111110101000

combo: 000001111101010

word: 101111110111000

combo: 000001111101110

word: 010111110111100

combo: 000001111101111

word: 101111110110100

combo: 000001111101101

word: 010111110110000

combo: 000001111101100

word: 101111110010000

combo: 000001111100100

temp: 000001111100100

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010111110010100

combo: 000001111100101

word: 101111110011100

combo: 000001111100111

word: 010111110011000

combo: 000001111100110

word: 101111110001000

combo: 000001111100010

temp: 000001111100010

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010111110001100

combo: 000001111100011

word: 101111110000100

combo: 000001111100001

temp: 000001111100001

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010111110000000

combo: 000001111100000

word: 000111010000000

combo: 000001110100000

word: 111111010000100

combo: 000001110100001

temp: 000001110100001

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000111010001100

combo: 000001110100011

word: 111111010001000

combo: 000001110100010

temp: 000001110100010

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000111010011000

combo: 000001110100110

word: 111111010011100

combo: 000001110100111

word: 000111010010100

combo: 000001110100101

word: 111111010010000

combo: 000001110100100

temp: 000001110100100

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000111010110000

combo: 000001110101100

word: 111111010110100

combo: 000001110101101

word: 000111010111100

combo: 000001110101111

word: 111111010111000

combo: 000001110101110

word: 000111010101000

combo: 000001110101010

word: 111111010101100

combo: 000001110101011

word: 000111010100100

combo: 000001110101001

word: 111111010100000

combo: 000001110101000

temp: 000001110101000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000111011100000

combo: 000001110111000

word: 111111011100100

combo: 000001110111001

word: 000111011101100

combo: 000001110111011

word: 111111011101000

combo: 000001110111010

word: 000111011111000

combo: 000001110111110

word: 111111011111100

combo: 000001110111111

temp: 000001110111111

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000111011110100

combo: 000001110111101

word: 111111011110000

combo: 000001110111100

word: 000111011010000

combo: 000001110110100

word: 111111011010100

combo: 000001110110101

word: 000111011011100

combo: 000001110110111

word: 111111011011000

combo: 000001110110110

word: 000111011001000

combo: 000001110110010

word: 111111011001100

combo: 000001110110011

word: 000111011000100

combo: 000001110110001

word: 111111011000000

combo: 000001110110000

temp: 000001110110000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 101111001000000

combo: 000001110010000

word: 010111001000100

combo: 000001110010001

word: 101111001001100

combo: 000001110010011

temp: 000001110010011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010111001001000

combo: 000001110010010

word: 101111001011000

combo: 000001110010110

temp: 000001110010110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010111001011100

combo: 000001110010111

word: 101111001010100

combo: 000001110010101

temp: 000001110010101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010111001010000

combo: 000001110010100

word: 101111001110000

combo: 000001110011100

temp: 000001110011100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010111001110100

combo: 000001110011101

word: 101111001111100

combo: 000001110011111

word: 010111001111000

combo: 000001110011110

word: 101111001101000

combo: 000001110011010

temp: 000001110011010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010111001101100

combo: 000001110011011

word: 101111001100100

combo: 000001110011001

temp: 000001110011001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010111001100000

combo: 000001110011000

word: 101111000100000

combo: 000001110001000

word: 010111000100100

combo: 000001110001001

word: 101111000101100

combo: 000001110001011

temp: 000001110001011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010111000101000

combo: 000001110001010

word: 101111000111000

combo: 000001110001110

temp: 000001110001110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010111000111100

combo: 000001110001111

word: 101111000110100

combo: 000001110001101

temp: 000001110001101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010111000110000

combo: 000001110001100

word: 101111000010000

combo: 000001110000100

word: 010111000010100

combo: 000001110000101

word: 101111000011100

combo: 000001110000111

temp: 000001110000111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010111000011000

combo: 000001110000110

word: 101111000001000

combo: 000001110000010

word: 010111000001100

combo: 000001110000011

word: 101111000000100

combo: 000001110000001

word: 010111000000000

combo: 000001110000000

word: 000101000000000

combo: 000001010000000

word: 111101000000100

combo: 000001010000001

word: 000101000001100

combo: 000001010000011

word: 111101000001000

combo: 000001010000010

word: 000101000011000

combo: 000001010000110

word: 111101000011100

combo: 000001010000111

temp: 000001010000111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000101000010100

combo: 000001010000101

word: 111101000010000

combo: 000001010000100

word: 000101000110000

combo: 000001010001100

word: 111101000110100

combo: 000001010001101

temp: 000001010001101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000101000111100

combo: 000001010001111

word: 111101000111000

combo: 000001010001110

temp: 000001010001110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000101000101000

combo: 000001010001010

word: 111101000101100

combo: 000001010001011

temp: 000001010001011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000101000100100

combo: 000001010001001

word: 111101000100000

combo: 000001010001000

word: 000101001100000

combo: 000001010011000

word: 111101001100100

combo: 000001010011001

temp: 000001010011001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000101001101100

combo: 000001010011011

word: 111101001101000

combo: 000001010011010

temp: 000001010011010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000101001111000

combo: 000001010011110

word: 111101001111100

combo: 000001010011111

word: 000101001110100

combo: 000001010011101

word: 111101001110000

combo: 000001010011100

temp: 000001010011100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000101001010000

combo: 000001010010100

word: 111101001010100

combo: 000001010010101

temp: 000001010010101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000101001011100

combo: 000001010010111

word: 111101001011000

combo: 000001010010110

temp: 000001010010110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000101001001000

combo: 000001010010010

word: 111101001001100

combo: 000001010010011

temp: 000001010010011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000101001000100

combo: 000001010010001

word: 111101001000000

combo: 000001010010000

word: 101101011000000

combo: 000001010110000

word: 010101011000100

combo: 000001010110001

word: 101101011001100

combo: 000001010110011

temp: 000001010110011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010101011001000

combo: 000001010110010

word: 101101011011000

combo: 000001010110110

temp: 000001010110110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010101011011100

combo: 000001010110111

word: 101101011010100

combo: 000001010110101

temp: 000001010110101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010101011010000

combo: 000001010110100

word: 101101011110000

combo: 000001010111100

temp: 000001010111100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010101011110100

combo: 000001010111101

word: 101101011111100

combo: 000001010111111

word: 010101011111000

combo: 000001010111110

word: 101101011101000

combo: 000001010111010

temp: 000001010111010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010101011101100

combo: 000001010111011

word: 101101011100100

combo: 000001010111001

temp: 000001010111001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010101011100000

combo: 000001010111000

word: 101101010100000

combo: 000001010101000

word: 010101010100100

combo: 000001010101001

word: 101101010101100

combo: 000001010101011

temp: 000001010101011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010101010101000

combo: 000001010101010

word: 101101010111000

combo: 000001010101110

temp: 000001010101110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010101010111100

combo: 000001010101111

word: 101101010110100

combo: 000001010101101

temp: 000001010101101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010101010110000

combo: 000001010101100

word: 101101010010000

combo: 000001010100100

word: 010101010010100

combo: 000001010100101

word: 101101010011100

combo: 000001010100111

temp: 000001010100111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010101010011000

combo: 000001010100110

word: 101101010001000

combo: 000001010100010

word: 010101010001100

combo: 000001010100011

word: 101101010000100

combo: 000001010100001

word: 010101010000000

combo: 000001010100000

word: 000101110000000

combo: 000001011100000

word: 111101110000100

combo: 000001011100001

temp: 000001011100001

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000101110001100

combo: 000001011100011

word: 111101110001000

combo: 000001011100010

temp: 000001011100010

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000101110011000

combo: 000001011100110

word: 111101110011100

combo: 000001011100111

word: 000101110010100

combo: 000001011100101

word: 111101110010000

combo: 000001011100100

temp: 000001011100100

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000101110110000

combo: 000001011101100

word: 111101110110100

combo: 000001011101101

word: 000101110111100

combo: 000001011101111

word: 111101110111000

combo: 000001011101110

word: 000101110101000

combo: 000001011101010

word: 111101110101100

combo: 000001011101011

word: 000101110100100

combo: 000001011101001

word: 111101110100000

combo: 000001011101000

temp: 000001011101000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000101111100000

combo: 000001011111000

word: 111101111100100

combo: 000001011111001

word: 000101111101100

combo: 000001011111011

word: 111101111101000

combo: 000001011111010

word: 000101111111000

combo: 000001011111110

word: 111101111111100

combo: 000001011111111

temp: 000001011111111

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 000101111110100

combo: 000001011111101

word: 111101111110000

combo: 000001011111100

word: 000101111010000

combo: 000001011110100

word: 111101111010100

combo: 000001011110101

word: 000101111011100

combo: 000001011110111

word: 111101111011000

combo: 000001011110110

word: 000101111001000

combo: 000001011110010

word: 111101111001100

combo: 000001011110011

word: 000101111000100

combo: 000001011110001

word: 111101111000000

combo: 000001011110000

temp: 000001011110000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 101101101000000

combo: 000001011010000

word: 010101101000100

combo: 000001011010001

word: 101101101001100

combo: 000001011010011

temp: 000001011010011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010101101001000

combo: 000001011010010

word: 101101101011000

combo: 000001011010110

temp: 000001011010110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010101101011100

combo: 000001011010111

word: 101101101010100

combo: 000001011010101

temp: 000001011010101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010101101010000

combo: 000001011010100

word: 101101101110000

combo: 000001011011100

temp: 000001011011100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010101101110100

combo: 000001011011101

word: 101101101111100

combo: 000001011011111

word: 010101101111000

combo: 000001011011110

word: 101101101101000

combo: 000001011011010

temp: 000001011011010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010101101101100

combo: 000001011011011

word: 101101101100100

combo: 000001011011001

temp: 000001011011001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010101101100000

combo: 000001011011000

word: 101101100100000

combo: 000001011001000

word: 010101100100100

combo: 000001011001001

word: 101101100101100

combo: 000001011001011

temp: 000001011001011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010101100101000

combo: 000001011001010

word: 101101100111000

combo: 000001011001110

temp: 000001011001110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010101100111100

combo: 000001011001111

word: 101101100110100

combo: 000001011001101

temp: 000001011001101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010101100110000

combo: 000001011001100

word: 101101100010000

combo: 000001011000100

word: 010101100010100

combo: 000001011000101

word: 101101100011100

combo: 000001011000111

temp: 000001011000111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010101100011000

combo: 000001011000110

word: 101101100001000

combo: 000001011000010

word: 010101100001100

combo: 000001011000011

word: 101101100000100

combo: 000001011000001

word: 010101100000000

combo: 000001011000000

word: 000100100000000

combo: 000001001000000

word: 111100100000100

combo: 000001001000001

word: 000100100001100

combo: 000001001000011

word: 111100100001000

combo: 000001001000010

word: 000100100011000

combo: 000001001000110

word: 111100100011100

combo: 000001001000111

temp: 000001001000111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000100100010100

combo: 000001001000101

word: 111100100010000

combo: 000001001000100

word: 000100100110000

combo: 000001001001100

word: 111100100110100

combo: 000001001001101

temp: 000001001001101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000100100111100

combo: 000001001001111

word: 111100100111000

combo: 000001001001110

temp: 000001001001110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000100100101000

combo: 000001001001010

word: 111100100101100

combo: 000001001001011

temp: 000001001001011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000100100100100

combo: 000001001001001

word: 111100100100000

combo: 000001001001000

word: 000100101100000

combo: 000001001011000

word: 111100101100100

combo: 000001001011001

temp: 000001001011001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000100101101100

combo: 000001001011011

word: 111100101101000

combo: 000001001011010

temp: 000001001011010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000100101111000

combo: 000001001011110

word: 111100101111100

combo: 000001001011111

word: 000100101110100

combo: 000001001011101

word: 111100101110000

combo: 000001001011100

temp: 000001001011100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000100101010000

combo: 000001001010100

word: 111100101010100

combo: 000001001010101

temp: 000001001010101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000100101011100

combo: 000001001010111

word: 111100101011000

combo: 000001001010110

temp: 000001001010110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000100101001000

combo: 000001001010010

word: 111100101001100

combo: 000001001010011

temp: 000001001010011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000100101000100

combo: 000001001010001

word: 111100101000000

combo: 000001001010000

word: 101100111000000

combo: 000001001110000

word: 010100111000100

combo: 000001001110001

word: 101100111001100

combo: 000001001110011

temp: 000001001110011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010100111001000

combo: 000001001110010

word: 101100111011000

combo: 000001001110110

temp: 000001001110110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010100111011100

combo: 000001001110111

word: 101100111010100

combo: 000001001110101

temp: 000001001110101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010100111010000

combo: 000001001110100

word: 101100111110000

combo: 000001001111100

temp: 000001001111100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010100111110100

combo: 000001001111101

word: 101100111111100

combo: 000001001111111

word: 010100111111000

combo: 000001001111110

word: 101100111101000

combo: 000001001111010

temp: 000001001111010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010100111101100

combo: 000001001111011

word: 101100111100100

combo: 000001001111001

temp: 000001001111001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010100111100000

combo: 000001001111000

word: 101100110100000

combo: 000001001101000

word: 010100110100100

combo: 000001001101001

word: 101100110101100

combo: 000001001101011

temp: 000001001101011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010100110101000

combo: 000001001101010

word: 101100110111000

combo: 000001001101110

temp: 000001001101110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010100110111100

combo: 000001001101111

word: 101100110110100

combo: 000001001101101

temp: 000001001101101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010100110110000

combo: 000001001101100

word: 101100110010000

combo: 000001001100100

word: 010100110010100

combo: 000001001100101

word: 101100110011100

combo: 000001001100111

temp: 000001001100111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 010100110011000

combo: 000001001100110

word: 101100110001000

combo: 000001001100010

word: 010100110001100

combo: 000001001100011

word: 101100110000100

combo: 000001001100001

word: 010100110000000

combo: 000001001100000

word: 000100010000000

combo: 000001000100000

word: 111100010000100

combo: 000001000100001

word: 000100010001100

combo: 000001000100011

word: 111100010001000

combo: 000001000100010

word: 000100010011000

combo: 000001000100110

word: 111100010011100

combo: 000001000100111

temp: 000001000100111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000100010010100

combo: 000001000100101

word: 111100010010000

combo: 000001000100100

word: 000100010110000

combo: 000001000101100

word: 111100010110100

combo: 000001000101101

temp: 000001000101101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000100010111100

combo: 000001000101111

word: 111100010111000

combo: 000001000101110

temp: 000001000101110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000100010101000

combo: 000001000101010

word: 111100010101100

combo: 000001000101011

temp: 000001000101011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000100010100100

combo: 000001000101001

word: 111100010100000

combo: 000001000101000

word: 000100011100000

combo: 000001000111000

word: 111100011100100

combo: 000001000111001

temp: 000001000111001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000100011101100

combo: 000001000111011

word: 111100011101000

combo: 000001000111010

temp: 000001000111010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000100011111000

combo: 000001000111110

word: 111100011111100

combo: 000001000111111

word: 000100011110100

combo: 000001000111101

word: 111100011110000

combo: 000001000111100

temp: 000001000111100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000100011010000

combo: 000001000110100

word: 111100011010100

combo: 000001000110101

temp: 000001000110101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000100011011100

combo: 000001000110111

word: 111100011011000

combo: 000001000110110

temp: 000001000110110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000100011001000

combo: 000001000110010

word: 111100011001100

combo: 000001000110011

temp: 000001000110011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 000100011000100

combo: 000001000110001

word: 111100011000000

combo: 000001000110000

word: 101100001000000

combo: 000001000010000

temp: 000001000010000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010100001000100

combo: 000001000010001

word: 101100001001100

combo: 000001000010011

word: 010100001001000

combo: 000001000010010

word: 101100001011000

combo: 000001000010110

word: 010100001011100

combo: 000001000010111

word: 101100001010100

combo: 000001000010101

word: 010100001010000

combo: 000001000010100

word: 101100001110000

combo: 000001000011100

word: 010100001110100

combo: 000001000011101

word: 101100001111100

combo: 000001000011111

temp: 000001000011111

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010100001111000

combo: 000001000011110

word: 101100001101000

combo: 000001000011010

word: 010100001101100

combo: 000001000011011

word: 101100001100100

combo: 000001000011001

word: 010100001100000

combo: 000001000011000

word: 101100000100000

combo: 000001000001000

temp: 000001000001000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010100000100100

combo: 000001000001001

word: 101100000101100

combo: 000001000001011

word: 010100000101000

combo: 000001000001010

word: 101100000111000

combo: 000001000001110

word: 010100000111100

combo: 000001000001111

word: 101100000110100

combo: 000001000001101

word: 010100000110000

combo: 000001000001100

word: 101100000010000

combo: 000001000000100

temp: 000001000000100

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010100000010100

combo: 000001000000101

word: 101100000011100

combo: 000001000000111

word: 010100000011000

combo: 000001000000110

word: 101100000001000

combo: 000001000000010

temp: 000001000000010

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010100000001100

combo: 000001000000011

word: 101100000000100

combo: 000001000000001

temp: 000001000000001

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 010100000000000

combo: 000001000000000

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 1 1 1 1 1 1 1 1 1 0 1]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0]
[0 0 1 0 0 0 0 0 0 0 0 0 1 1 1]
limit on degree (length): 16
ortho basis:
1011000000001000
1011000000010000
1011000000100000
1011000001000000
1110000010000000
1110000100000000
1110001000000000
1110010000000000
1110100000000000

B_can_lab before row reduction:
0011001111111111
0101101111100000
0011110000000000

B_can_lab after row reduction:
0110100000011111
0101101111100000
0011110000000000

word generated as sum over rows of ortho_basis starting at 9: 0000000000000000
gate: 0000000000000111
k_gate: 0000000111111111
nonzero_gate: 1000000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 0000000000000000

combo: 0000000000000000

word: 1011000000001000

combo: 0000000000000001

temp: 0000000000000001

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
0011111110000010
1010000001110111
1101000001110011
rs list:
0 1 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
1 1 1 0 1 1 1 0 0 0 0 0 0 1 0 1 
1 1 0 0 1 1 1 0 0 0 0 0 1 0 1 1 
B_aug:
[1 0 0 1 1 1 1 1 1 1 1 1 1 0 1 0]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0 0]
[0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 0]
[0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 1]
m:
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0 0]
[1 1 1 0 1 1 1 0 0 0 0 0 0 1 0 1]
[1 1 0 0 1 1 1 0 0 0 0 0 1 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,12), (10,11), ( 9,10), (8,9), (6,7), (5,6), (1,5), ( 3,14)(13,15), ( 3,13)(14,15) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 12, 4, 5, 6, 7, 8, 9, 10, 11, 3, 15, 14, 13]
[0, 1, 2, 13, 4, 5, 6, 7, 8, 9, 10, 11, 15, 3, 14, 12]
[0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14]
[0, 1, 2, 15, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 3]
orbits:
1011000000001000
1011000000010000
1110111111111000
1110000100000000
1011000000100000
1110001000000000
1110000010000000
1011000001000000
1110010000000000
1110100000000000
word: 0000000000011000

combo: 0000000000000011

word: 1011000000010000

combo: 0000000000000010

temp: 0000000000000010

orbit_checks[temp>>log2radix]= 10000000100010110

word: 0000000000110000

combo: 0000000000000110

word: 1011000000111000

combo: 0000000000000111

word: 0000000000101000

combo: 0000000000000101

word: 1011000000100000

combo: 0000000000000100

temp: 0000000000000100

orbit_checks[temp>>log2radix]= 10000000100010110

word: 0000000001100000

combo: 0000000000001100

word: 1011000001101000

combo: 0000000000001101

word: 0000000001111000

combo: 0000000000001111

word: 1011000001110000

combo: 0000000000001110

word: 0000000001010000

combo: 0000000000001010

word: 1011000001011000

combo: 0000000000001011

word: 0000000001001000

combo: 0000000000001001

word: 1011000001000000

combo: 0000000000001000

temp: 0000000000001000

orbit_checks[temp>>log2radix]= 10000000100010110

word: 0101000011000000

combo: 0000000000011000

word: 1110000011001000

combo: 0000000000011001

word: 0101000011011000

combo: 0000000000011011

word: 1110000011010000

combo: 0000000000011010

word: 0101000011110000

combo: 0000000000011110

word: 1110000011111000

combo: 0000000000011111

temp: 0000000000011111

orbit_checks[temp>>log2radix]= 10000000100010110

passed if statements
temp basis:
1110000011111000
0011111110000010
1000000010000011
rs list:
0 0 0 1 1 1 1 1 0 0 0 0 0 1 1 1 
0 1 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 
B_aug:
[1 0 0 1 1 1 1 1 1 1 1 1 1 0 1 0]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0 0]
[0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 0]
[0 0 0 1 1 1 1 1 0 0 0 0 0 1 1 1]
m:
[0 0 0 1 1 1 1 1 0 0 0 0 0 1 1 1]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0 0]
[1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,12), (10,11), ( 9,10), (6,7), (5,6), (4,5), ( 2,16)( 4, 9)( 5,10)( 6,11)( 7,12)(13,15), ( 1, 2)( 8,16) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 12, 3, 4, 5, 6, 7, 8, 9, 10, 11, 2, 14, 13, 15]
[0, 1, 13, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 2, 12, 15]
[2, 12, 0, 3, 4, 5, 6, 13, 8, 9, 10, 11, 1, 7, 15, 14]
[0, 1, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 2, 15]
[2, 12, 1, 3, 4, 5, 6, 13, 8, 9, 10, 11, 0, 15, 7, 14]
[2, 12, 7, 3, 4, 5, 6, 13, 8, 9, 10, 11, 15, 0, 1, 14]
[2, 12, 15, 3, 4, 5, 6, 13, 8, 9, 10, 11, 7, 1, 0, 14]
orbits:
1110000011111000
1110000101111000
1011111100001000
1110001001111000
1011111010001000
1011111100010000
1110010001111000
1011110110001000
1011111010010000
1011111100100000
1110100001111000
1011101110001000
1011110110010000
1011111010100000
1011111101000000
1011011110001000
1011101110010000
1011110110100000
1011111011000000
1011011110010000
1011101110100000
1011110111000000
1011011110100000
1011101111000000
1011011111000000
word: 0101000011101000

combo: 0000000000011101

word: 1110000011100000

combo: 0000000000011100

word: 0101000010100000

combo: 0000000000010100

word: 1110000010101000

combo: 0000000000010101

word: 0101000010111000

combo: 0000000000010111

word: 1110000010110000

combo: 0000000000010110

word: 0101000010010000

combo: 0000000000010010

word: 1110000010011000

combo: 0000000000010011

word: 0101000010001000

combo: 0000000000010001

word: 1110000010000000

combo: 0000000000010000

temp: 0000000000010000

orbit_checks[temp>>log2radix]= 10000000000000010000000100010110

word: 0000000110000000

combo: 0000000000110000

word: 1011000110001000

combo: 0000000000110001

word: 0000000110011000

combo: 0000000000110011

word: 1011000110010000

combo: 0000000000110010

word: 0000000110110000

combo: 0000000000110110

word: 1011000110111000

combo: 0000000000110111

temp: 0000000000110111

orbit_checks[temp>>log2radix]= 1000000000000001

passed if statements
temp basis:
1110111001000001
0110000001111011
1010000111000111
rs list:
1 0 0 0 0 0 1 0 0 1 1 1 0 1 1 1 
1 1 0 1 1 1 1 0 0 0 0 0 0 1 1 0 
1 1 1 0 0 0 1 1 1 0 0 0 0 1 0 1 
B_aug:
[1 0 0 1 1 1 1 1 1 1 1 1 1 0 1 0]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0 0]
[0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 0]
[0 0 0 1 1 1 0 1 1 0 0 0 1 1 0 1]
m:
[1 0 0 0 0 0 1 0 0 1 1 1 0 1 1 1]
[1 1 0 1 1 1 1 0 0 0 0 0 0 1 1 0]
[1 1 1 0 0 0 1 1 1 0 0 0 0 1 0 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,12), (10,11), (8,9), (5,6), (4,5), ( 2,16)( 4,10)( 5,11)( 6,12), (1,7), ( 1, 8)( 3,14)( 4,10)( 5,11)( 6,12)( 7, 9) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 12, 3, 4, 5, 6, 7, 8, 9, 10, 11, 2, 14, 13, 15]
[7, 1, 2, 9, 10, 11, 8, 0, 6, 3, 4, 5, 14, 13, 12, 15]
[7, 1, 12, 9, 10, 11, 8, 0, 6, 3, 4, 5, 13, 14, 2, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1011000110111000
1011001010111000
1011000111011000
1110111001001000
1011100011110000
1011010010111000
1011001100111000
1011001011011000
1110110101001000
1011100011101000
1011000111101000
1110111000101000
1011010011110000
1110111001010000
1011100101110000
1011100010111000
1011010100111000
1011010011011000
1110101101001000
1011100011011000
1011001101011000
1110110011001000
1110011100011000
1011001011101000
1110110100101000
1011010011101000
1110110101010000
1011100101101000
1011000111110000
1110111000011000
1011001011110000
1110111000110000
1011010101110000
1110111001100000
1011101001110000
1011100100111000
1110011101001000
1011011000111000
1011010101011000
1110101011001000
1110011100101000
1110101100101000
1110101101010000
1011100101011000
1011001101101000
1110110010101000
1110101100011000
1110110011010000
1110011010011000
1110110100011000
1110110100110000
1011010101101000
1110110101100000
1011101001101000
1011001101110000
1011011001110000
1011110001110000
1011101000111000
1110011011001000
1110011101010000
1011011001011000
1110100111001000
1110011100110000
1110101010101000
1110101011010000
1110011010101000
1110101100110000
1110101101100000
1011101001011000
1110110010011000
1110110010110000
1110101010011000
1110110011100000
1110010110011000
1011011001101000
1011110001101000
1011110000111000
1110010111001000
1110011011010000
1110011101100000
1110100110101000
1110100111010000
1110011010110000
1110101010110000
1110101011100000
1110010110101000
1011110001011000
1110100110011000
1110001110011000
1110001111001000
1110010111010000
1110011011100000
1110100110110000
1110100111100000
1110010110110000
1110001110101000
1110001111010000
1110010111100000
1110001110110000
1110001111100000
word: 0000000110101000

combo: 0000000000110101

word: 1011000110100000

combo: 0000000000110100

word: 0000000111100000

combo: 0000000000111100

word: 1011000111101000

combo: 0000000000111101

temp: 0000000000111101

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0000000111111000

combo: 0000000000111111

word: 1011000111110000

combo: 0000000000111110

temp: 0000000000111110

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0000000111010000

combo: 0000000000111010

word: 1011000111011000

combo: 0000000000111011

temp: 0000000000111011

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0000000111001000

combo: 0000000000111001

word: 1011000111000000

combo: 0000000000111000

word: 0101000101000000

combo: 0000000000101000

word: 1110000101001000

combo: 0000000000101001

word: 0101000101011000

combo: 0000000000101011

word: 1110000101010000

combo: 0000000000101010

word: 0101000101110000

combo: 0000000000101110

word: 1110000101111000

combo: 0000000000101111

temp: 0000000000101111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0101000101101000

combo: 0000000000101101

word: 1110000101100000

combo: 0000000000101100

word: 0101000100100000

combo: 0000000000100100

word: 1110000100101000

combo: 0000000000100101

word: 0101000100111000

combo: 0000000000100111

word: 1110000100110000

combo: 0000000000100110

word: 0101000100010000

combo: 0000000000100010

word: 1110000100011000

combo: 0000000000100011

word: 0101000100001000

combo: 0000000000100001

word: 1110000100000000

combo: 0000000000100000

temp: 0000000000100000

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0000001100000000

combo: 0000000001100000

word: 1011001100001000

combo: 0000000001100001

word: 0000001100011000

combo: 0000000001100011

word: 1011001100010000

combo: 0000000001100010

word: 0000001100110000

combo: 0000000001100110

word: 1011001100111000

combo: 0000000001100111

temp: 0000000001100111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0000001100101000

combo: 0000000001100101

word: 1011001100100000

combo: 0000000001100100

word: 0000001101100000

combo: 0000000001101100

word: 1011001101101000

combo: 0000000001101101

temp: 0000000001101101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0000001101111000

combo: 0000000001101111

word: 1011001101110000

combo: 0000000001101110

temp: 0000000001101110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0000001101010000

combo: 0000000001101010

word: 1011001101011000

combo: 0000000001101011

temp: 0000000001101011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0000001101001000

combo: 0000000001101001

word: 1011001101000000

combo: 0000000001101000

word: 0101001111000000

combo: 0000000001111000

word: 1110001111001000

combo: 0000000001111001

temp: 0000000001111001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101001111011000

combo: 0000000001111011

word: 1110001111010000

combo: 0000000001111010

temp: 0000000001111010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101001111110000

combo: 0000000001111110

word: 1110001111111000

combo: 0000000001111111

word: 0101001111101000

combo: 0000000001111101

word: 1110001111100000

combo: 0000000001111100

temp: 0000000001111100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101001110100000

combo: 0000000001110100

word: 1110001110101000

combo: 0000000001110101

temp: 0000000001110101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101001110111000

combo: 0000000001110111

word: 1110001110110000

combo: 0000000001110110

temp: 0000000001110110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101001110010000

combo: 0000000001110010

word: 1110001110011000

combo: 0000000001110011

temp: 0000000001110011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101001110001000

combo: 0000000001110001

word: 1110001110000000

combo: 0000000001110000

word: 0000001010000000

combo: 0000000001010000

word: 1011001010001000

combo: 0000000001010001

word: 0000001010011000

combo: 0000000001010011

word: 1011001010010000

combo: 0000000001010010

word: 0000001010110000

combo: 0000000001010110

word: 1011001010111000

combo: 0000000001010111

temp: 0000000001010111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0000001010101000

combo: 0000000001010101

word: 1011001010100000

combo: 0000000001010100

word: 0000001011100000

combo: 0000000001011100

word: 1011001011101000

combo: 0000000001011101

temp: 0000000001011101

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0000001011111000

combo: 0000000001011111

word: 1011001011110000

combo: 0000000001011110

temp: 0000000001011110

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0000001011010000

combo: 0000000001011010

word: 1011001011011000

combo: 0000000001011011

temp: 0000000001011011

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0000001011001000

combo: 0000000001011001

word: 1011001011000000

combo: 0000000001011000

word: 0101001001000000

combo: 0000000001001000

word: 1110001001001000

combo: 0000000001001001

word: 0101001001011000

combo: 0000000001001011

word: 1110001001010000

combo: 0000000001001010

word: 0101001001110000

combo: 0000000001001110

word: 1110001001111000

combo: 0000000001001111

temp: 0000000001001111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0101001001101000

combo: 0000000001001101

word: 1110001001100000

combo: 0000000001001100

word: 0101001000100000

combo: 0000000001000100

word: 1110001000101000

combo: 0000000001000101

word: 0101001000111000

combo: 0000000001000111

word: 1110001000110000

combo: 0000000001000110

word: 0101001000010000

combo: 0000000001000010

word: 1110001000011000

combo: 0000000001000011

word: 0101001000001000

combo: 0000000001000001

word: 1110001000000000

combo: 0000000001000000

temp: 0000000001000000

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0000011000000000

combo: 0000000011000000

word: 1011011000001000

combo: 0000000011000001

word: 0000011000011000

combo: 0000000011000011

word: 1011011000010000

combo: 0000000011000010

word: 0000011000110000

combo: 0000000011000110

word: 1011011000111000

combo: 0000000011000111

temp: 0000000011000111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0000011000101000

combo: 0000000011000101

word: 1011011000100000

combo: 0000000011000100

word: 0000011001100000

combo: 0000000011001100

word: 1011011001101000

combo: 0000000011001101

temp: 0000000011001101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0000011001111000

combo: 0000000011001111

word: 1011011001110000

combo: 0000000011001110

temp: 0000000011001110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0000011001010000

combo: 0000000011001010

word: 1011011001011000

combo: 0000000011001011

temp: 0000000011001011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0000011001001000

combo: 0000000011001001

word: 1011011001000000

combo: 0000000011001000

word: 0101011011000000

combo: 0000000011011000

word: 1110011011001000

combo: 0000000011011001

temp: 0000000011011001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101011011011000

combo: 0000000011011011

word: 1110011011010000

combo: 0000000011011010

temp: 0000000011011010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101011011110000

combo: 0000000011011110

word: 1110011011111000

combo: 0000000011011111

word: 0101011011101000

combo: 0000000011011101

word: 1110011011100000

combo: 0000000011011100

temp: 0000000011011100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101011010100000

combo: 0000000011010100

word: 1110011010101000

combo: 0000000011010101

temp: 0000000011010101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101011010111000

combo: 0000000011010111

word: 1110011010110000

combo: 0000000011010110

temp: 0000000011010110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101011010010000

combo: 0000000011010010

word: 1110011010011000

combo: 0000000011010011

temp: 0000000011010011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101011010001000

combo: 0000000011010001

word: 1110011010000000

combo: 0000000011010000

word: 0000011110000000

combo: 0000000011110000

word: 1011011110001000

combo: 0000000011110001

temp: 0000000011110001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0000011110011000

combo: 0000000011110011

word: 1011011110010000

combo: 0000000011110010

temp: 0000000011110010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0000011110110000

combo: 0000000011110110

word: 1011011110111000

combo: 0000000011110111

word: 0000011110101000

combo: 0000000011110101

word: 1011011110100000

combo: 0000000011110100

temp: 0000000011110100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0000011111100000

combo: 0000000011111100

word: 1011011111101000

combo: 0000000011111101

word: 0000011111111000

combo: 0000000011111111

word: 1011011111110000

combo: 0000000011111110

word: 0000011111010000

combo: 0000000011111010

word: 1011011111011000

combo: 0000000011111011

word: 0000011111001000

combo: 0000000011111001

word: 1011011111000000

combo: 0000000011111000

temp: 0000000011111000

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101011101000000

combo: 0000000011101000

word: 1110011101001000

combo: 0000000011101001

temp: 0000000011101001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101011101011000

combo: 0000000011101011

word: 1110011101010000

combo: 0000000011101010

temp: 0000000011101010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101011101110000

combo: 0000000011101110

word: 1110011101111000

combo: 0000000011101111

word: 0101011101101000

combo: 0000000011101101

word: 1110011101100000

combo: 0000000011101100

temp: 0000000011101100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101011100100000

combo: 0000000011100100

word: 1110011100101000

combo: 0000000011100101

temp: 0000000011100101

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101011100111000

combo: 0000000011100111

word: 1110011100110000

combo: 0000000011100110

temp: 0000000011100110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101011100010000

combo: 0000000011100010

word: 1110011100011000

combo: 0000000011100011

temp: 0000000011100011

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101011100001000

combo: 0000000011100001

word: 1110011100000000

combo: 0000000011100000

word: 0000010100000000

combo: 0000000010100000

word: 1011010100001000

combo: 0000000010100001

word: 0000010100011000

combo: 0000000010100011

word: 1011010100010000

combo: 0000000010100010

word: 0000010100110000

combo: 0000000010100110

word: 1011010100111000

combo: 0000000010100111

temp: 0000000010100111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0000010100101000

combo: 0000000010100101

word: 1011010100100000

combo: 0000000010100100

word: 0000010101100000

combo: 0000000010101100

word: 1011010101101000

combo: 0000000010101101

temp: 0000000010101101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0000010101111000

combo: 0000000010101111

word: 1011010101110000

combo: 0000000010101110

temp: 0000000010101110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0000010101010000

combo: 0000000010101010

word: 1011010101011000

combo: 0000000010101011

temp: 0000000010101011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0000010101001000

combo: 0000000010101001

word: 1011010101000000

combo: 0000000010101000

word: 0101010111000000

combo: 0000000010111000

word: 1110010111001000

combo: 0000000010111001

temp: 0000000010111001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101010111011000

combo: 0000000010111011

word: 1110010111010000

combo: 0000000010111010

temp: 0000000010111010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101010111110000

combo: 0000000010111110

word: 1110010111111000

combo: 0000000010111111

word: 0101010111101000

combo: 0000000010111101

word: 1110010111100000

combo: 0000000010111100

temp: 0000000010111100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101010110100000

combo: 0000000010110100

word: 1110010110101000

combo: 0000000010110101

temp: 0000000010110101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101010110111000

combo: 0000000010110111

word: 1110010110110000

combo: 0000000010110110

temp: 0000000010110110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101010110010000

combo: 0000000010110010

word: 1110010110011000

combo: 0000000010110011

temp: 0000000010110011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101010110001000

combo: 0000000010110001

word: 1110010110000000

combo: 0000000010110000

word: 0000010010000000

combo: 0000000010010000

word: 1011010010001000

combo: 0000000010010001

word: 0000010010011000

combo: 0000000010010011

word: 1011010010010000

combo: 0000000010010010

word: 0000010010110000

combo: 0000000010010110

word: 1011010010111000

combo: 0000000010010111

temp: 0000000010010111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0000010010101000

combo: 0000000010010101

word: 1011010010100000

combo: 0000000010010100

word: 0000010011100000

combo: 0000000010011100

word: 1011010011101000

combo: 0000000010011101

temp: 0000000010011101

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0000010011111000

combo: 0000000010011111

word: 1011010011110000

combo: 0000000010011110

temp: 0000000010011110

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0000010011010000

combo: 0000000010011010

word: 1011010011011000

combo: 0000000010011011

temp: 0000000010011011

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0000010011001000

combo: 0000000010011001

word: 1011010011000000

combo: 0000000010011000

word: 0101010001000000

combo: 0000000010001000

word: 1110010001001000

combo: 0000000010001001

word: 0101010001011000

combo: 0000000010001011

word: 1110010001010000

combo: 0000000010001010

word: 0101010001110000

combo: 0000000010001110

word: 1110010001111000

combo: 0000000010001111

temp: 0000000010001111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0101010001101000

combo: 0000000010001101

word: 1110010001100000

combo: 0000000010001100

word: 0101010000100000

combo: 0000000010000100

word: 1110010000101000

combo: 0000000010000101

word: 0101010000111000

combo: 0000000010000111

word: 1110010000110000

combo: 0000000010000110

word: 0101010000010000

combo: 0000000010000010

word: 1110010000011000

combo: 0000000010000011

word: 0101010000001000

combo: 0000000010000001

word: 1110010000000000

combo: 0000000010000000

temp: 0000000010000000

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0000110000000000

combo: 0000000110000000

word: 1011110000001000

combo: 0000000110000001

word: 0000110000011000

combo: 0000000110000011

word: 1011110000010000

combo: 0000000110000010

word: 0000110000110000

combo: 0000000110000110

word: 1011110000111000

combo: 0000000110000111

temp: 0000000110000111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0000110000101000

combo: 0000000110000101

word: 1011110000100000

combo: 0000000110000100

word: 0000110001100000

combo: 0000000110001100

word: 1011110001101000

combo: 0000000110001101

temp: 0000000110001101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0000110001111000

combo: 0000000110001111

word: 1011110001110000

combo: 0000000110001110

temp: 0000000110001110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0000110001010000

combo: 0000000110001010

word: 1011110001011000

combo: 0000000110001011

temp: 0000000110001011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0000110001001000

combo: 0000000110001001

word: 1011110001000000

combo: 0000000110001000

word: 0101110011000000

combo: 0000000110011000

word: 1110110011001000

combo: 0000000110011001

temp: 0000000110011001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101110011011000

combo: 0000000110011011

word: 1110110011010000

combo: 0000000110011010

temp: 0000000110011010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101110011110000

combo: 0000000110011110

word: 1110110011111000

combo: 0000000110011111

word: 0101110011101000

combo: 0000000110011101

word: 1110110011100000

combo: 0000000110011100

temp: 0000000110011100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101110010100000

combo: 0000000110010100

word: 1110110010101000

combo: 0000000110010101

temp: 0000000110010101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101110010111000

combo: 0000000110010111

word: 1110110010110000

combo: 0000000110010110

temp: 0000000110010110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101110010010000

combo: 0000000110010010

word: 1110110010011000

combo: 0000000110010011

temp: 0000000110010011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101110010001000

combo: 0000000110010001

word: 1110110010000000

combo: 0000000110010000

word: 0000110110000000

combo: 0000000110110000

word: 1011110110001000

combo: 0000000110110001

temp: 0000000110110001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0000110110011000

combo: 0000000110110011

word: 1011110110010000

combo: 0000000110110010

temp: 0000000110110010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0000110110110000

combo: 0000000110110110

word: 1011110110111000

combo: 0000000110110111

word: 0000110110101000

combo: 0000000110110101

word: 1011110110100000

combo: 0000000110110100

temp: 0000000110110100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0000110111100000

combo: 0000000110111100

word: 1011110111101000

combo: 0000000110111101

word: 0000110111111000

combo: 0000000110111111

word: 1011110111110000

combo: 0000000110111110

word: 0000110111010000

combo: 0000000110111010

word: 1011110111011000

combo: 0000000110111011

word: 0000110111001000

combo: 0000000110111001

word: 1011110111000000

combo: 0000000110111000

temp: 0000000110111000

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110101000000

combo: 0000000110101000

word: 1110110101001000

combo: 0000000110101001

temp: 0000000110101001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110101011000

combo: 0000000110101011

word: 1110110101010000

combo: 0000000110101010

temp: 0000000110101010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110101110000

combo: 0000000110101110

word: 1110110101111000

combo: 0000000110101111

word: 0101110101101000

combo: 0000000110101101

word: 1110110101100000

combo: 0000000110101100

temp: 0000000110101100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110100100000

combo: 0000000110100100

word: 1110110100101000

combo: 0000000110100101

temp: 0000000110100101

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110100111000

combo: 0000000110100111

word: 1110110100110000

combo: 0000000110100110

temp: 0000000110100110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110100010000

combo: 0000000110100010

word: 1110110100011000

combo: 0000000110100011

temp: 0000000110100011

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110100001000

combo: 0000000110100001

word: 1110110100000000

combo: 0000000110100000

word: 0000111100000000

combo: 0000000111100000

word: 1011111100001000

combo: 0000000111100001

temp: 0000000111100001

orbit_checks[temp>>log2radix]= 10000000000000000000000100010110

word: 0000111100011000

combo: 0000000111100011

word: 1011111100010000

combo: 0000000111100010

temp: 0000000111100010

orbit_checks[temp>>log2radix]= 10000000000000000000000100010110

word: 0000111100110000

combo: 0000000111100110

word: 1011111100111000

combo: 0000000111100111

word: 0000111100101000

combo: 0000000111100101

word: 1011111100100000

combo: 0000000111100100

temp: 0000000111100100

orbit_checks[temp>>log2radix]= 10000000000000000000000100010110

word: 0000111101100000

combo: 0000000111101100

word: 1011111101101000

combo: 0000000111101101

word: 0000111101111000

combo: 0000000111101111

word: 1011111101110000

combo: 0000000111101110

word: 0000111101010000

combo: 0000000111101010

word: 1011111101011000

combo: 0000000111101011

word: 0000111101001000

combo: 0000000111101001

word: 1011111101000000

combo: 0000000111101000

temp: 0000000111101000

orbit_checks[temp>>log2radix]= 10000000000000000000000100010110

word: 0101111111000000

combo: 0000000111111000

word: 1110111111001000

combo: 0000000111111001

word: 0101111111011000

combo: 0000000111111011

word: 1110111111010000

combo: 0000000111111010

word: 0101111111110000

combo: 0000000111111110

word: 1110111111111000

combo: 0000000111111111

temp: 0000000111111111

orbit_checks[temp>>log2radix]= 10000000000000000000000100010110

word: 0101111111101000

combo: 0000000111111101

word: 1110111111100000

combo: 0000000111111100

word: 0101111110100000

combo: 0000000111110100

word: 1110111110101000

combo: 0000000111110101

word: 0101111110111000

combo: 0000000111110111

word: 1110111110110000

combo: 0000000111110110

word: 0101111110010000

combo: 0000000111110010

word: 1110111110011000

combo: 0000000111110011

word: 0101111110001000

combo: 0000000111110001

word: 1110111110000000

combo: 0000000111110000

temp: 0000000111110000

orbit_checks[temp>>log2radix]= 10000000000000000000000100010110

passed if statements
temp basis:
1110111110000000
1011000001111001
1101000000000010
rs list:
0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 
1 0 0 1 1 1 1 0 0 0 0 0 1 1 0 1 
0 1 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
B_aug:
[1 0 0 1 1 1 1 1 1 1 1 1 1 0 1 0]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0 0]
[0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 0]
[0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1]
m:
[0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1]
[1 0 0 1 1 1 1 0 0 0 0 0 1 1 0 1]
[0 1 0 0 0 0 0 0 0 0 0 0 1 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,12), (10,11), ( 9,10), (8,9), (6,7), (5,6), (4,5), (1,4), ( 1, 8)( 4, 9)( 5,10)( 6,11)( 7,12)(13,15), ( 2,13)(15,16) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 12, 3, 4, 5, 6, 7, 8, 9, 10, 11, 2, 14, 13, 15]
[0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 14, 13]
[7, 1, 14, 8, 9, 10, 11, 0, 3, 4, 5, 6, 2, 12, 13, 15]
[7, 1, 13, 8, 9, 10, 11, 0, 3, 4, 5, 6, 12, 2, 14, 15]
[7, 2, 15, 8, 9, 10, 11, 0, 3, 4, 5, 6, 12, 1, 14, 13]
orbits:
1110111110000000
word: 0000111010000000

combo: 0000000111010000

word: 1011111010001000

combo: 0000000111010001

temp: 0000000111010001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0000111010011000

combo: 0000000111010011

word: 1011111010010000

combo: 0000000111010010

temp: 0000000111010010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0000111010110000

combo: 0000000111010110

word: 1011111010111000

combo: 0000000111010111

word: 0000111010101000

combo: 0000000111010101

word: 1011111010100000

combo: 0000000111010100

temp: 0000000111010100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0000111011100000

combo: 0000000111011100

word: 1011111011101000

combo: 0000000111011101

word: 0000111011111000

combo: 0000000111011111

word: 1011111011110000

combo: 0000000111011110

word: 0000111011010000

combo: 0000000111011010

word: 1011111011011000

combo: 0000000111011011

word: 0000111011001000

combo: 0000000111011001

word: 1011111011000000

combo: 0000000111011000

temp: 0000000111011000

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101111001000000

combo: 0000000111001000

word: 1110111001001000

combo: 0000000111001001

temp: 0000000111001001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101111001011000

combo: 0000000111001011

word: 1110111001010000

combo: 0000000111001010

temp: 0000000111001010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101111001110000

combo: 0000000111001110

word: 1110111001111000

combo: 0000000111001111

word: 0101111001101000

combo: 0000000111001101

word: 1110111001100000

combo: 0000000111001100

temp: 0000000111001100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101111000100000

combo: 0000000111000100

word: 1110111000101000

combo: 0000000111000101

temp: 0000000111000101

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101111000111000

combo: 0000000111000111

word: 1110111000110000

combo: 0000000111000110

temp: 0000000111000110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101111000010000

combo: 0000000111000010

word: 1110111000011000

combo: 0000000111000011

temp: 0000000111000011

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101111000001000

combo: 0000000111000001

word: 1110111000000000

combo: 0000000111000000

word: 0000101000000000

combo: 0000000101000000

word: 1011101000001000

combo: 0000000101000001

word: 0000101000011000

combo: 0000000101000011

word: 1011101000010000

combo: 0000000101000010

word: 0000101000110000

combo: 0000000101000110

word: 1011101000111000

combo: 0000000101000111

temp: 0000000101000111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0000101000101000

combo: 0000000101000101

word: 1011101000100000

combo: 0000000101000100

word: 0000101001100000

combo: 0000000101001100

word: 1011101001101000

combo: 0000000101001101

temp: 0000000101001101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0000101001111000

combo: 0000000101001111

word: 1011101001110000

combo: 0000000101001110

temp: 0000000101001110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0000101001010000

combo: 0000000101001010

word: 1011101001011000

combo: 0000000101001011

temp: 0000000101001011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0000101001001000

combo: 0000000101001001

word: 1011101001000000

combo: 0000000101001000

word: 0101101011000000

combo: 0000000101011000

word: 1110101011001000

combo: 0000000101011001

temp: 0000000101011001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101101011011000

combo: 0000000101011011

word: 1110101011010000

combo: 0000000101011010

temp: 0000000101011010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101101011110000

combo: 0000000101011110

word: 1110101011111000

combo: 0000000101011111

word: 0101101011101000

combo: 0000000101011101

word: 1110101011100000

combo: 0000000101011100

temp: 0000000101011100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101101010100000

combo: 0000000101010100

word: 1110101010101000

combo: 0000000101010101

temp: 0000000101010101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101101010111000

combo: 0000000101010111

word: 1110101010110000

combo: 0000000101010110

temp: 0000000101010110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101101010010000

combo: 0000000101010010

word: 1110101010011000

combo: 0000000101010011

temp: 0000000101010011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101101010001000

combo: 0000000101010001

word: 1110101010000000

combo: 0000000101010000

word: 0000101110000000

combo: 0000000101110000

word: 1011101110001000

combo: 0000000101110001

temp: 0000000101110001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0000101110011000

combo: 0000000101110011

word: 1011101110010000

combo: 0000000101110010

temp: 0000000101110010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0000101110110000

combo: 0000000101110110

word: 1011101110111000

combo: 0000000101110111

word: 0000101110101000

combo: 0000000101110101

word: 1011101110100000

combo: 0000000101110100

temp: 0000000101110100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0000101111100000

combo: 0000000101111100

word: 1011101111101000

combo: 0000000101111101

word: 0000101111111000

combo: 0000000101111111

word: 1011101111110000

combo: 0000000101111110

word: 0000101111010000

combo: 0000000101111010

word: 1011101111011000

combo: 0000000101111011

word: 0000101111001000

combo: 0000000101111001

word: 1011101111000000

combo: 0000000101111000

temp: 0000000101111000

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101101101000000

combo: 0000000101101000

word: 1110101101001000

combo: 0000000101101001

temp: 0000000101101001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101101101011000

combo: 0000000101101011

word: 1110101101010000

combo: 0000000101101010

temp: 0000000101101010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101101101110000

combo: 0000000101101110

word: 1110101101111000

combo: 0000000101101111

word: 0101101101101000

combo: 0000000101101101

word: 1110101101100000

combo: 0000000101101100

temp: 0000000101101100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101101100100000

combo: 0000000101100100

word: 1110101100101000

combo: 0000000101100101

temp: 0000000101100101

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101101100111000

combo: 0000000101100111

word: 1110101100110000

combo: 0000000101100110

temp: 0000000101100110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101101100010000

combo: 0000000101100010

word: 1110101100011000

combo: 0000000101100011

temp: 0000000101100011

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101101100001000

combo: 0000000101100001

word: 1110101100000000

combo: 0000000101100000

word: 0000100100000000

combo: 0000000100100000

word: 1011100100001000

combo: 0000000100100001

word: 0000100100011000

combo: 0000000100100011

word: 1011100100010000

combo: 0000000100100010

word: 0000100100110000

combo: 0000000100100110

word: 1011100100111000

combo: 0000000100100111

temp: 0000000100100111

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0000100100101000

combo: 0000000100100101

word: 1011100100100000

combo: 0000000100100100

word: 0000100101100000

combo: 0000000100101100

word: 1011100101101000

combo: 0000000100101101

temp: 0000000100101101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0000100101111000

combo: 0000000100101111

word: 1011100101110000

combo: 0000000100101110

temp: 0000000100101110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0000100101010000

combo: 0000000100101010

word: 1011100101011000

combo: 0000000100101011

temp: 0000000100101011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0000100101001000

combo: 0000000100101001

word: 1011100101000000

combo: 0000000100101000

word: 0101100111000000

combo: 0000000100111000

word: 1110100111001000

combo: 0000000100111001

temp: 0000000100111001

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101100111011000

combo: 0000000100111011

word: 1110100111010000

combo: 0000000100111010

temp: 0000000100111010

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101100111110000

combo: 0000000100111110

word: 1110100111111000

combo: 0000000100111111

word: 0101100111101000

combo: 0000000100111101

word: 1110100111100000

combo: 0000000100111100

temp: 0000000100111100

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101100110100000

combo: 0000000100110100

word: 1110100110101000

combo: 0000000100110101

temp: 0000000100110101

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101100110111000

combo: 0000000100110111

word: 1110100110110000

combo: 0000000100110110

temp: 0000000100110110

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101100110010000

combo: 0000000100110010

word: 1110100110011000

combo: 0000000100110011

temp: 0000000100110011

orbit_checks[temp>>log2radix]= 10110011010000110100010000000

word: 0101100110001000

combo: 0000000100110001

word: 1110100110000000

combo: 0000000100110000

word: 0000100010000000

combo: 0000000100010000

word: 1011100010001000

combo: 0000000100010001

word: 0000100010011000

combo: 0000000100010011

word: 1011100010010000

combo: 0000000100010010

word: 0000100010110000

combo: 0000000100010110

word: 1011100010111000

combo: 0000000100010111

temp: 0000000100010111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0000100010101000

combo: 0000000100010101

word: 1011100010100000

combo: 0000000100010100

word: 0000100011100000

combo: 0000000100011100

word: 1011100011101000

combo: 0000000100011101

temp: 0000000100011101

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0000100011111000

combo: 0000000100011111

word: 1011100011110000

combo: 0000000100011110

temp: 0000000100011110

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0000100011010000

combo: 0000000100011010

word: 1011100011011000

combo: 0000000100011011

temp: 0000000100011011

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0000100011001000

combo: 0000000100011001

word: 1011100011000000

combo: 0000000100011000

word: 0101100001000000

combo: 0000000100001000

word: 1110100001001000

combo: 0000000100001001

word: 0101100001011000

combo: 0000000100001011

word: 1110100001010000

combo: 0000000100001010

word: 0101100001110000

combo: 0000000100001110

word: 1110100001111000

combo: 0000000100001111

temp: 0000000100001111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0101100001101000

combo: 0000000100001101

word: 1110100001100000

combo: 0000000100001100

word: 0101100000100000

combo: 0000000100000100

word: 1110100000101000

combo: 0000000100000101

word: 0101100000111000

combo: 0000000100000111

word: 1110100000110000

combo: 0000000100000110

word: 0101100000010000

combo: 0000000100000010

word: 1110100000011000

combo: 0000000100000011

word: 0101100000001000

combo: 0000000100000001

word: 1110100000000000

combo: 0000000100000000

temp: 0000000100000000

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 1 1 1 1 0 1 1 1 1 1 1]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1]
limit on degree (length): 16
ortho basis:
1011000000000100
1011000000001000
1011000000010000
1011000000100000
1011000001000000
0010000010000000
0010000100000000
0010001000000000
0010010000000000
0010100000000000
1100000000000000

B_can_lab before row reduction:
0000111111111111
0011000001111110

B_can_lab after row reduction:
0011111110000001
0011000001111110

word generated as sum over rows of ortho_basis starting at 10: 1100000000000000
gate: 0000000000000011
k_gate: 0000001111111111
nonzero_gate: 1100000000000000
radix_gate: 0000000000011111

Starting main loop:
word: 1100000000000000

combo: 0000000000000000

word: 0111000000000100

combo: 0000000000000001

word: 1100000000001100

combo: 0000000000000011

temp: 0000000000000011

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
0011111110000010
0001000001111111
rs list:
0 1 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
1 1 1 1 1 1 1 0 0 0 0 0 1 0 0 0 
B_aug:
[1 0 1 1 1 1 1 1 1 1 1 1 0 1 0 0]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0 0]
[0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1]
m:
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0 0]
[1 1 1 1 1 1 1 0 0 0 0 0 1 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ ( 9,10), ( 9,11), ( 9,12)(10,11), ( 9,14)(10,12), ( 8, 9,14)(10,12), ( 9,14)(10,12)(15,16), ( 3, 4)( 9,14)(10,12)(15,16), ( 5, 6)( 9,14)(10,12)(15,16), ( 5, 7)( 9,14)(10,12)(15,16), ( 1, 5, 7)( 9,14)(10,12)(15,16), ( 2,13)( 5, 7)( 9,14)(10,12)(15,16) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 14, 15, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 2, 3]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1100000000001100
1100000000010100
1110111111110100
1100001100000000
1100000000100100
1100000000011000
1110111111101100
1100010100000000
1110111111111000
1100001010000000
1100000001000100
1100000000101000
1110111111011100
1100100100000000
1100011000000000
1100010010000000
1100000110000000
1100000001001000
1110111110111100
1110000100000000
1100000000110000
1100101000000000
1100100010000000
1100000001010000
1110001000000000
1110000010000000
1100110000000000
1100000001100000
1110010000000000
1110100000000000
word: 0111000000001000

combo: 0000000000000010

word: 1100000000011000

combo: 0000000000000110

temp: 0000000000000110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111000000011100

combo: 0000000000000111

word: 1100000000010100

combo: 0000000000000101

temp: 0000000000000101

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111000000010000

combo: 0000000000000100

word: 1100000000110000

combo: 0000000000001100

temp: 0000000000001100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111000000110100

combo: 0000000000001101

word: 1100000000111100

combo: 0000000000001111

word: 0111000000111000

combo: 0000000000001110

word: 1100000000101000

combo: 0000000000001010

temp: 0000000000001010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111000000101100

combo: 0000000000001011

word: 1100000000100100

combo: 0000000000001001

temp: 0000000000001001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111000000100000

combo: 0000000000001000

word: 1100000001100000

combo: 0000000000011000

temp: 0000000000011000

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111000001100100

combo: 0000000000011001

word: 1100000001101100

combo: 0000000000011011

word: 0111000001101000

combo: 0000000000011010

word: 1100000001111000

combo: 0000000000011110

word: 0111000001111100

combo: 0000000000011111

word: 1100000001110100

combo: 0000000000011101

word: 0111000001110000

combo: 0000000000011100

word: 1100000001010000

combo: 0000000000010100

temp: 0000000000010100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111000001010100

combo: 0000000000010101

word: 1100000001011100

combo: 0000000000010111

word: 0111000001011000

combo: 0000000000010110

word: 1100000001001000

combo: 0000000000010010

temp: 0000000000010010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111000001001100

combo: 0000000000010011

word: 1100000001000100

combo: 0000000000010001

temp: 0000000000010001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111000001000000

combo: 0000000000010000

word: 0101000011000000

combo: 0000000000110000

word: 1110000011000100

combo: 0000000000110001

word: 0101000011001100

combo: 0000000000110011

word: 1110000011001000

combo: 0000000000110010

word: 0101000011011000

combo: 0000000000110110

word: 1110000011011100

combo: 0000000000110111

temp: 0000000000110111

orbit_checks[temp>>log2radix]= 0000000000000001

passed if statements
temp basis:
1110000011011100
0011111110000010
rs list:
0 0 1 1 1 0 1 1 0 0 0 0 0 1 1 1 
0 1 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
B_aug:
[1 0 1 1 1 1 1 1 1 1 1 1 0 1 0 0]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0 0]
[0 0 1 1 1 0 1 1 0 0 0 0 0 1 1 1]
m:
[0 0 1 1 1 0 1 1 0 0 0 0 0 1 1 1]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (4,7), (3,4), (3,4,5), ( 3, 4, 5)( 9,11), ( 3, 4, 5)( 9,10), ( 3, 4, 5)( 9,11,12), ( 3, 4, 5)( 9,11,12)(15,16), ( 2,13)( 3, 4, 5)( 9,11,12)(15,16), ( 2,16)( 3,10, 4,11, 7,12)( 5, 9)(13,15), ( 2,13)( 3, 4, 5)( 8,14)( 9,11,12)(15,16), ( 1, 6)( 2,13)( 3, 4, 5)( 9,11,12)(15,16) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 2, 3, 4, 12, 6, 14, 8, 9, 10, 11, 5, 15, 7, 13]
[7, 14, 2, 3, 4, 13, 6, 0, 8, 9, 10, 11, 15, 5, 1, 12]
[14, 0, 8, 9, 10, 15, 11, 1, 2, 3, 4, 6, 5, 12, 7, 13]
orbits:
1110000011011100
1100100011011100
1110000101011100
1110000010111100
1110000011101100
1100111100100100
1100100010111100
1100010011011100
1100100101011100
1100100011101100
1110011100100100
1110001001011100
1110000100111100
1110000101101100
1100111010100100
1110011101000100
1100111101000100
1110000011110100
1100111100010100
1100010010111100
1100111100101000
1100100100111100
1100001011011100
1100010101011100
1100010011101100
1110101100100100
1100101001011100
1100100101101100
1110011010100100
1100100011110100
1110011100010100
1110011100101000
1110010001011100
1110001000111100
1110001001101100
1100110110100100
1110011101001000
1100111011000100
1110000101110100
1100111010010100
1110101101000100
1100111010101000
1110011011000100
1100111101001000
1110000011111000
1100111100001100
1100001010111100
1100111100011000
1100010100111100
1100111100110000
1100101000111100
1100000111011100
1100001101011100
1100001011101100
1110110100100100
1100011001011100
1100010101101100
1110101010100100
1100010011110100
1110101100010100
1110101100101000
1100110001011100
1100101001101100
1110010110100100
1100100101110100
1110011010010100
1110011010101000
1100100011111000
1110011100001100
1110011100011000
1110011100110000
1110100001011100
1110010000111100
1110010001101100
1100101110100100
1110011101010000
1100110111000100
1110001001110100
1100110110010100
1110101101001000
1100110110101000
1110011011001000
1100111011001000
1110000101111000
1100111010001100
1110110101000100
1100111010011000
1110101011000100
1100111010110000
1110010111000100
1100111101010000
1100000110111100
1100001100111100
1100011000111100
1100110000111100
1100000111101100
1110111000100100
1100001101101100
1110110010100100
1100001011110100
1110110100010100
1110110100101000
1100011001101100
1110100110100100
1100010101110100
1110101010010100
1110101010101000
1100010011111000
1110101100001100
1110101100011000
1110101100110000
1100110001101100
1110001110100100
1100101001110100
1110010110010100
1110010110101000
1100100101111000
1110011010001100
1110011010011000
1110011010110000
1110100000111100
1110100001101100
1100011110100100
1110011101100000
1100101111000100
1110010001110100
1100101110010100
1110101101010000
1100101110101000
1110011011010000
1100110111001000
1110001001111000
1100110110001100
1110110101001000
1100110110011000
1110101011001000
1100110110110000
1110010111001000
1100111011010000
1110111001000100
1110110011000100
1110100111000100
1110001111000100
1100111101100000
1100000111110100
1110111000010100
1110111000101000
1100001101110100
1110110010010100
1110110010101000
1100001011111000
1110110100001100
1110110100011000
1110110100110000
1100011001110100
1110100110010100
1110100110101000
1100010101111000
1110101010001100
1110101010011000
1110101010110000
1100110001110100
1110001110010100
1110001110101000
1100101001111000
1110010110001100
1110010110011000
1110010110110000
1100011111000100
1110100001110100
1100011110010100
1110101101100000
1100011110101000
1110011011100000
1100101111001000
1110010001111000
1100101110001100
1110110101010000
1100101110011000
1110101011010000
1100101110110000
1110010111010000
1100110111010000
1110111001001000
1110110011001000
1110100111001000
1110001111001000
1100111011100000
1100000111111000
1110111000001100
1110111000011000
1110111000110000
1100001101111000
1110110010001100
1110110010011000
1110110010110000
1100011001111000
1110100110001100
1110100110011000
1110100110110000
1100110001111000
1110001110001100
1110001110011000
1110001110110000
1100011111001000
1110100001111000
1100011110001100
1110110101100000
1100011110011000
1110101011100000
1100011110110000
1110010111100000
1100101111010000
1110111001010000
1110110011010000
1110100111010000
1110001111010000
1100110111100000
1100011111010000
1110111001100000
1110110011100000
1110100111100000
1110001111100000
1100101111100000
1100011111100000
word: 0101000011010100

combo: 0000000000110101

word: 1110000011010000

combo: 0000000000110100

word: 0101000011110000

combo: 0000000000111100

word: 1110000011110100

combo: 0000000000111101

temp: 0000000000111101

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0101000011111100

combo: 0000000000111111

word: 1110000011111000

combo: 0000000000111110

temp: 0000000000111110

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0101000011101000

combo: 0000000000111010

word: 1110000011101100

combo: 0000000000111011

temp: 0000000000111011

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0101000011100100

combo: 0000000000111001

word: 1110000011100000

combo: 0000000000111000

word: 0101000010100000

combo: 0000000000101000

word: 1110000010100100

combo: 0000000000101001

word: 0101000010101100

combo: 0000000000101011

word: 1110000010101000

combo: 0000000000101010

word: 0101000010111000

combo: 0000000000101110

word: 1110000010111100

combo: 0000000000101111

temp: 0000000000101111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0101000010110100

combo: 0000000000101101

word: 1110000010110000

combo: 0000000000101100

word: 0101000010010000

combo: 0000000000100100

word: 1110000010010100

combo: 0000000000100101

word: 0101000010011100

combo: 0000000000100111

word: 1110000010011000

combo: 0000000000100110

word: 0101000010001000

combo: 0000000000100010

word: 1110000010001100

combo: 0000000000100011

word: 0101000010000100

combo: 0000000000100001

word: 1110000010000000

combo: 0000000000100000

temp: 0000000000100000

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 1100000110000000

combo: 0000000001100000

temp: 0000000001100000

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111000110000100

combo: 0000000001100001

word: 1100000110001100

combo: 0000000001100011

word: 0111000110001000

combo: 0000000001100010

word: 1100000110011000

combo: 0000000001100110

word: 0111000110011100

combo: 0000000001100111

word: 1100000110010100

combo: 0000000001100101

word: 0111000110010000

combo: 0000000001100100

word: 1100000110110000

combo: 0000000001101100

word: 0111000110110100

combo: 0000000001101101

word: 1100000110111100

combo: 0000000001101111

temp: 0000000001101111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111000110111000

combo: 0000000001101110

word: 1100000110101000

combo: 0000000001101010

word: 0111000110101100

combo: 0000000001101011

word: 1100000110100100

combo: 0000000001101001

word: 0111000110100000

combo: 0000000001101000

word: 1100000111100000

combo: 0000000001111000

word: 0111000111100100

combo: 0000000001111001

word: 1100000111101100

combo: 0000000001111011

temp: 0000000001111011

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111000111101000

combo: 0000000001111010

word: 1100000111111000

combo: 0000000001111110

temp: 0000000001111110

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111000111111100

combo: 0000000001111111

word: 1100000111110100

combo: 0000000001111101

temp: 0000000001111101

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111000111110000

combo: 0000000001111100

word: 1100000111010000

combo: 0000000001110100

word: 0111000111010100

combo: 0000000001110101

word: 1100000111011100

combo: 0000000001110111

temp: 0000000001110111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111000111011000

combo: 0000000001110110

word: 1100000111001000

combo: 0000000001110010

word: 0111000111001100

combo: 0000000001110011

word: 1100000111000100

combo: 0000000001110001

word: 0111000111000000

combo: 0000000001110000

word: 0101000101000000

combo: 0000000001010000

word: 1110000101000100

combo: 0000000001010001

word: 0101000101001100

combo: 0000000001010011

word: 1110000101001000

combo: 0000000001010010

word: 0101000101011000

combo: 0000000001010110

word: 1110000101011100

combo: 0000000001010111

temp: 0000000001010111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0101000101010100

combo: 0000000001010101

word: 1110000101010000

combo: 0000000001010100

word: 0101000101110000

combo: 0000000001011100

word: 1110000101110100

combo: 0000000001011101

temp: 0000000001011101

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0101000101111100

combo: 0000000001011111

word: 1110000101111000

combo: 0000000001011110

temp: 0000000001011110

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0101000101101000

combo: 0000000001011010

word: 1110000101101100

combo: 0000000001011011

temp: 0000000001011011

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0101000101100100

combo: 0000000001011001

word: 1110000101100000

combo: 0000000001011000

word: 0101000100100000

combo: 0000000001001000

word: 1110000100100100

combo: 0000000001001001

word: 0101000100101100

combo: 0000000001001011

word: 1110000100101000

combo: 0000000001001010

word: 0101000100111000

combo: 0000000001001110

word: 1110000100111100

combo: 0000000001001111

temp: 0000000001001111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0101000100110100

combo: 0000000001001101

word: 1110000100110000

combo: 0000000001001100

word: 0101000100010000

combo: 0000000001000100

word: 1110000100010100

combo: 0000000001000101

word: 0101000100011100

combo: 0000000001000111

word: 1110000100011000

combo: 0000000001000110

word: 0101000100001000

combo: 0000000001000010

word: 1110000100001100

combo: 0000000001000011

word: 0101000100000100

combo: 0000000001000001

word: 1110000100000000

combo: 0000000001000000

temp: 0000000001000000

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 1100001100000000

combo: 0000000011000000

temp: 0000000011000000

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111001100000100

combo: 0000000011000001

word: 1100001100001100

combo: 0000000011000011

word: 0111001100001000

combo: 0000000011000010

word: 1100001100011000

combo: 0000000011000110

word: 0111001100011100

combo: 0000000011000111

word: 1100001100010100

combo: 0000000011000101

word: 0111001100010000

combo: 0000000011000100

word: 1100001100110000

combo: 0000000011001100

word: 0111001100110100

combo: 0000000011001101

word: 1100001100111100

combo: 0000000011001111

temp: 0000000011001111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111001100111000

combo: 0000000011001110

word: 1100001100101000

combo: 0000000011001010

word: 0111001100101100

combo: 0000000011001011

word: 1100001100100100

combo: 0000000011001001

word: 0111001100100000

combo: 0000000011001000

word: 1100001101100000

combo: 0000000011011000

word: 0111001101100100

combo: 0000000011011001

word: 1100001101101100

combo: 0000000011011011

temp: 0000000011011011

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111001101101000

combo: 0000000011011010

word: 1100001101111000

combo: 0000000011011110

temp: 0000000011011110

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111001101111100

combo: 0000000011011111

word: 1100001101110100

combo: 0000000011011101

temp: 0000000011011101

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111001101110000

combo: 0000000011011100

word: 1100001101010000

combo: 0000000011010100

word: 0111001101010100

combo: 0000000011010101

word: 1100001101011100

combo: 0000000011010111

temp: 0000000011010111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111001101011000

combo: 0000000011010110

word: 1100001101001000

combo: 0000000011010010

word: 0111001101001100

combo: 0000000011010011

word: 1100001101000100

combo: 0000000011010001

word: 0111001101000000

combo: 0000000011010000

word: 0101001111000000

combo: 0000000011110000

word: 1110001111000100

combo: 0000000011110001

temp: 0000000011110001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101001111001100

combo: 0000000011110011

word: 1110001111001000

combo: 0000000011110010

temp: 0000000011110010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101001111011000

combo: 0000000011110110

word: 1110001111011100

combo: 0000000011110111

word: 0101001111010100

combo: 0000000011110101

word: 1110001111010000

combo: 0000000011110100

temp: 0000000011110100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101001111110000

combo: 0000000011111100

word: 1110001111110100

combo: 0000000011111101

word: 0101001111111100

combo: 0000000011111111

word: 1110001111111000

combo: 0000000011111110

word: 0101001111101000

combo: 0000000011111010

word: 1110001111101100

combo: 0000000011111011

word: 0101001111100100

combo: 0000000011111001

word: 1110001111100000

combo: 0000000011111000

temp: 0000000011111000

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101001110100000

combo: 0000000011101000

word: 1110001110100100

combo: 0000000011101001

temp: 0000000011101001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101001110101100

combo: 0000000011101011

word: 1110001110101000

combo: 0000000011101010

temp: 0000000011101010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101001110111000

combo: 0000000011101110

word: 1110001110111100

combo: 0000000011101111

word: 0101001110110100

combo: 0000000011101101

word: 1110001110110000

combo: 0000000011101100

temp: 0000000011101100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101001110010000

combo: 0000000011100100

word: 1110001110010100

combo: 0000000011100101

temp: 0000000011100101

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101001110011100

combo: 0000000011100111

word: 1110001110011000

combo: 0000000011100110

temp: 0000000011100110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101001110001000

combo: 0000000011100010

word: 1110001110001100

combo: 0000000011100011

temp: 0000000011100011

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101001110000100

combo: 0000000011100001

word: 1110001110000000

combo: 0000000011100000

word: 1100001010000000

combo: 0000000010100000

temp: 0000000010100000

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111001010000100

combo: 0000000010100001

word: 1100001010001100

combo: 0000000010100011

word: 0111001010001000

combo: 0000000010100010

word: 1100001010011000

combo: 0000000010100110

word: 0111001010011100

combo: 0000000010100111

word: 1100001010010100

combo: 0000000010100101

word: 0111001010010000

combo: 0000000010100100

word: 1100001010110000

combo: 0000000010101100

word: 0111001010110100

combo: 0000000010101101

word: 1100001010111100

combo: 0000000010101111

temp: 0000000010101111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111001010111000

combo: 0000000010101110

word: 1100001010101000

combo: 0000000010101010

word: 0111001010101100

combo: 0000000010101011

word: 1100001010100100

combo: 0000000010101001

word: 0111001010100000

combo: 0000000010101000

word: 1100001011100000

combo: 0000000010111000

word: 0111001011100100

combo: 0000000010111001

word: 1100001011101100

combo: 0000000010111011

temp: 0000000010111011

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111001011101000

combo: 0000000010111010

word: 1100001011111000

combo: 0000000010111110

temp: 0000000010111110

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111001011111100

combo: 0000000010111111

word: 1100001011110100

combo: 0000000010111101

temp: 0000000010111101

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111001011110000

combo: 0000000010111100

word: 1100001011010000

combo: 0000000010110100

word: 0111001011010100

combo: 0000000010110101

word: 1100001011011100

combo: 0000000010110111

temp: 0000000010110111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111001011011000

combo: 0000000010110110

word: 1100001011001000

combo: 0000000010110010

word: 0111001011001100

combo: 0000000010110011

word: 1100001011000100

combo: 0000000010110001

word: 0111001011000000

combo: 0000000010110000

word: 0101001001000000

combo: 0000000010010000

word: 1110001001000100

combo: 0000000010010001

word: 0101001001001100

combo: 0000000010010011

word: 1110001001001000

combo: 0000000010010010

word: 0101001001011000

combo: 0000000010010110

word: 1110001001011100

combo: 0000000010010111

temp: 0000000010010111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0101001001010100

combo: 0000000010010101

word: 1110001001010000

combo: 0000000010010100

word: 0101001001110000

combo: 0000000010011100

word: 1110001001110100

combo: 0000000010011101

temp: 0000000010011101

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0101001001111100

combo: 0000000010011111

word: 1110001001111000

combo: 0000000010011110

temp: 0000000010011110

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0101001001101000

combo: 0000000010011010

word: 1110001001101100

combo: 0000000010011011

temp: 0000000010011011

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0101001001100100

combo: 0000000010011001

word: 1110001001100000

combo: 0000000010011000

word: 0101001000100000

combo: 0000000010001000

word: 1110001000100100

combo: 0000000010001001

word: 0101001000101100

combo: 0000000010001011

word: 1110001000101000

combo: 0000000010001010

word: 0101001000111000

combo: 0000000010001110

word: 1110001000111100

combo: 0000000010001111

temp: 0000000010001111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0101001000110100

combo: 0000000010001101

word: 1110001000110000

combo: 0000000010001100

word: 0101001000010000

combo: 0000000010000100

word: 1110001000010100

combo: 0000000010000101

word: 0101001000011100

combo: 0000000010000111

word: 1110001000011000

combo: 0000000010000110

word: 0101001000001000

combo: 0000000010000010

word: 1110001000001100

combo: 0000000010000011

word: 0101001000000100

combo: 0000000010000001

word: 1110001000000000

combo: 0000000010000000

temp: 0000000010000000

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 1100011000000000

combo: 0000000110000000

temp: 0000000110000000

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111011000000100

combo: 0000000110000001

word: 1100011000001100

combo: 0000000110000011

word: 0111011000001000

combo: 0000000110000010

word: 1100011000011000

combo: 0000000110000110

word: 0111011000011100

combo: 0000000110000111

word: 1100011000010100

combo: 0000000110000101

word: 0111011000010000

combo: 0000000110000100

word: 1100011000110000

combo: 0000000110001100

word: 0111011000110100

combo: 0000000110001101

word: 1100011000111100

combo: 0000000110001111

temp: 0000000110001111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111011000111000

combo: 0000000110001110

word: 1100011000101000

combo: 0000000110001010

word: 0111011000101100

combo: 0000000110001011

word: 1100011000100100

combo: 0000000110001001

word: 0111011000100000

combo: 0000000110001000

word: 1100011001100000

combo: 0000000110011000

word: 0111011001100100

combo: 0000000110011001

word: 1100011001101100

combo: 0000000110011011

temp: 0000000110011011

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111011001101000

combo: 0000000110011010

word: 1100011001111000

combo: 0000000110011110

temp: 0000000110011110

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111011001111100

combo: 0000000110011111

word: 1100011001110100

combo: 0000000110011101

temp: 0000000110011101

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111011001110000

combo: 0000000110011100

word: 1100011001010000

combo: 0000000110010100

word: 0111011001010100

combo: 0000000110010101

word: 1100011001011100

combo: 0000000110010111

temp: 0000000110010111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111011001011000

combo: 0000000110010110

word: 1100011001001000

combo: 0000000110010010

word: 0111011001001100

combo: 0000000110010011

word: 1100011001000100

combo: 0000000110010001

word: 0111011001000000

combo: 0000000110010000

word: 0101011011000000

combo: 0000000110110000

word: 1110011011000100

combo: 0000000110110001

temp: 0000000110110001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101011011001100

combo: 0000000110110011

word: 1110011011001000

combo: 0000000110110010

temp: 0000000110110010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101011011011000

combo: 0000000110110110

word: 1110011011011100

combo: 0000000110110111

word: 0101011011010100

combo: 0000000110110101

word: 1110011011010000

combo: 0000000110110100

temp: 0000000110110100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101011011110000

combo: 0000000110111100

word: 1110011011110100

combo: 0000000110111101

word: 0101011011111100

combo: 0000000110111111

word: 1110011011111000

combo: 0000000110111110

word: 0101011011101000

combo: 0000000110111010

word: 1110011011101100

combo: 0000000110111011

word: 0101011011100100

combo: 0000000110111001

word: 1110011011100000

combo: 0000000110111000

temp: 0000000110111000

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101011010100000

combo: 0000000110101000

word: 1110011010100100

combo: 0000000110101001

temp: 0000000110101001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101011010101100

combo: 0000000110101011

word: 1110011010101000

combo: 0000000110101010

temp: 0000000110101010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101011010111000

combo: 0000000110101110

word: 1110011010111100

combo: 0000000110101111

word: 0101011010110100

combo: 0000000110101101

word: 1110011010110000

combo: 0000000110101100

temp: 0000000110101100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101011010010000

combo: 0000000110100100

word: 1110011010010100

combo: 0000000110100101

temp: 0000000110100101

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101011010011100

combo: 0000000110100111

word: 1110011010011000

combo: 0000000110100110

temp: 0000000110100110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101011010001000

combo: 0000000110100010

word: 1110011010001100

combo: 0000000110100011

temp: 0000000110100011

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101011010000100

combo: 0000000110100001

word: 1110011010000000

combo: 0000000110100000

word: 1100011110000000

combo: 0000000111100000

word: 0111011110000100

combo: 0000000111100001

word: 1100011110001100

combo: 0000000111100011

temp: 0000000111100011

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111011110001000

combo: 0000000111100010

word: 1100011110011000

combo: 0000000111100110

temp: 0000000111100110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111011110011100

combo: 0000000111100111

word: 1100011110010100

combo: 0000000111100101

temp: 0000000111100101

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111011110010000

combo: 0000000111100100

word: 1100011110110000

combo: 0000000111101100

temp: 0000000111101100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111011110110100

combo: 0000000111101101

word: 1100011110111100

combo: 0000000111101111

word: 0111011110111000

combo: 0000000111101110

word: 1100011110101000

combo: 0000000111101010

temp: 0000000111101010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111011110101100

combo: 0000000111101011

word: 1100011110100100

combo: 0000000111101001

temp: 0000000111101001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111011110100000

combo: 0000000111101000

word: 1100011111100000

combo: 0000000111111000

temp: 0000000111111000

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111011111100100

combo: 0000000111111001

word: 1100011111101100

combo: 0000000111111011

word: 0111011111101000

combo: 0000000111111010

word: 1100011111111000

combo: 0000000111111110

word: 0111011111111100

combo: 0000000111111111

word: 1100011111110100

combo: 0000000111111101

word: 0111011111110000

combo: 0000000111111100

word: 1100011111010000

combo: 0000000111110100

temp: 0000000111110100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111011111010100

combo: 0000000111110101

word: 1100011111011100

combo: 0000000111110111

word: 0111011111011000

combo: 0000000111110110

word: 1100011111001000

combo: 0000000111110010

temp: 0000000111110010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111011111001100

combo: 0000000111110011

word: 1100011111000100

combo: 0000000111110001

temp: 0000000111110001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111011111000000

combo: 0000000111110000

word: 0101011101000000

combo: 0000000111010000

word: 1110011101000100

combo: 0000000111010001

temp: 0000000111010001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101011101001100

combo: 0000000111010011

word: 1110011101001000

combo: 0000000111010010

temp: 0000000111010010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101011101011000

combo: 0000000111010110

word: 1110011101011100

combo: 0000000111010111

word: 0101011101010100

combo: 0000000111010101

word: 1110011101010000

combo: 0000000111010100

temp: 0000000111010100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101011101110000

combo: 0000000111011100

word: 1110011101110100

combo: 0000000111011101

word: 0101011101111100

combo: 0000000111011111

word: 1110011101111000

combo: 0000000111011110

word: 0101011101101000

combo: 0000000111011010

word: 1110011101101100

combo: 0000000111011011

word: 0101011101100100

combo: 0000000111011001

word: 1110011101100000

combo: 0000000111011000

temp: 0000000111011000

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101011100100000

combo: 0000000111001000

word: 1110011100100100

combo: 0000000111001001

temp: 0000000111001001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101011100101100

combo: 0000000111001011

word: 1110011100101000

combo: 0000000111001010

temp: 0000000111001010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101011100111000

combo: 0000000111001110

word: 1110011100111100

combo: 0000000111001111

word: 0101011100110100

combo: 0000000111001101

word: 1110011100110000

combo: 0000000111001100

temp: 0000000111001100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101011100010000

combo: 0000000111000100

word: 1110011100010100

combo: 0000000111000101

temp: 0000000111000101

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101011100011100

combo: 0000000111000111

word: 1110011100011000

combo: 0000000111000110

temp: 0000000111000110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101011100001000

combo: 0000000111000010

word: 1110011100001100

combo: 0000000111000011

temp: 0000000111000011

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101011100000100

combo: 0000000111000001

word: 1110011100000000

combo: 0000000111000000

word: 1100010100000000

combo: 0000000101000000

temp: 0000000101000000

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111010100000100

combo: 0000000101000001

word: 1100010100001100

combo: 0000000101000011

word: 0111010100001000

combo: 0000000101000010

word: 1100010100011000

combo: 0000000101000110

word: 0111010100011100

combo: 0000000101000111

word: 1100010100010100

combo: 0000000101000101

word: 0111010100010000

combo: 0000000101000100

word: 1100010100110000

combo: 0000000101001100

word: 0111010100110100

combo: 0000000101001101

word: 1100010100111100

combo: 0000000101001111

temp: 0000000101001111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111010100111000

combo: 0000000101001110

word: 1100010100101000

combo: 0000000101001010

word: 0111010100101100

combo: 0000000101001011

word: 1100010100100100

combo: 0000000101001001

word: 0111010100100000

combo: 0000000101001000

word: 1100010101100000

combo: 0000000101011000

word: 0111010101100100

combo: 0000000101011001

word: 1100010101101100

combo: 0000000101011011

temp: 0000000101011011

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111010101101000

combo: 0000000101011010

word: 1100010101111000

combo: 0000000101011110

temp: 0000000101011110

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111010101111100

combo: 0000000101011111

word: 1100010101110100

combo: 0000000101011101

temp: 0000000101011101

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111010101110000

combo: 0000000101011100

word: 1100010101010000

combo: 0000000101010100

word: 0111010101010100

combo: 0000000101010101

word: 1100010101011100

combo: 0000000101010111

temp: 0000000101010111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111010101011000

combo: 0000000101010110

word: 1100010101001000

combo: 0000000101010010

word: 0111010101001100

combo: 0000000101010011

word: 1100010101000100

combo: 0000000101010001

word: 0111010101000000

combo: 0000000101010000

word: 0101010111000000

combo: 0000000101110000

word: 1110010111000100

combo: 0000000101110001

temp: 0000000101110001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101010111001100

combo: 0000000101110011

word: 1110010111001000

combo: 0000000101110010

temp: 0000000101110010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101010111011000

combo: 0000000101110110

word: 1110010111011100

combo: 0000000101110111

word: 0101010111010100

combo: 0000000101110101

word: 1110010111010000

combo: 0000000101110100

temp: 0000000101110100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101010111110000

combo: 0000000101111100

word: 1110010111110100

combo: 0000000101111101

word: 0101010111111100

combo: 0000000101111111

word: 1110010111111000

combo: 0000000101111110

word: 0101010111101000

combo: 0000000101111010

word: 1110010111101100

combo: 0000000101111011

word: 0101010111100100

combo: 0000000101111001

word: 1110010111100000

combo: 0000000101111000

temp: 0000000101111000

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101010110100000

combo: 0000000101101000

word: 1110010110100100

combo: 0000000101101001

temp: 0000000101101001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101010110101100

combo: 0000000101101011

word: 1110010110101000

combo: 0000000101101010

temp: 0000000101101010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101010110111000

combo: 0000000101101110

word: 1110010110111100

combo: 0000000101101111

word: 0101010110110100

combo: 0000000101101101

word: 1110010110110000

combo: 0000000101101100

temp: 0000000101101100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101010110010000

combo: 0000000101100100

word: 1110010110010100

combo: 0000000101100101

temp: 0000000101100101

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101010110011100

combo: 0000000101100111

word: 1110010110011000

combo: 0000000101100110

temp: 0000000101100110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101010110001000

combo: 0000000101100010

word: 1110010110001100

combo: 0000000101100011

temp: 0000000101100011

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101010110000100

combo: 0000000101100001

word: 1110010110000000

combo: 0000000101100000

word: 1100010010000000

combo: 0000000100100000

temp: 0000000100100000

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111010010000100

combo: 0000000100100001

word: 1100010010001100

combo: 0000000100100011

word: 0111010010001000

combo: 0000000100100010

word: 1100010010011000

combo: 0000000100100110

word: 0111010010011100

combo: 0000000100100111

word: 1100010010010100

combo: 0000000100100101

word: 0111010010010000

combo: 0000000100100100

word: 1100010010110000

combo: 0000000100101100

word: 0111010010110100

combo: 0000000100101101

word: 1100010010111100

combo: 0000000100101111

temp: 0000000100101111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111010010111000

combo: 0000000100101110

word: 1100010010101000

combo: 0000000100101010

word: 0111010010101100

combo: 0000000100101011

word: 1100010010100100

combo: 0000000100101001

word: 0111010010100000

combo: 0000000100101000

word: 1100010011100000

combo: 0000000100111000

word: 0111010011100100

combo: 0000000100111001

word: 1100010011101100

combo: 0000000100111011

temp: 0000000100111011

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111010011101000

combo: 0000000100111010

word: 1100010011111000

combo: 0000000100111110

temp: 0000000100111110

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111010011111100

combo: 0000000100111111

word: 1100010011110100

combo: 0000000100111101

temp: 0000000100111101

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111010011110000

combo: 0000000100111100

word: 1100010011010000

combo: 0000000100110100

word: 0111010011010100

combo: 0000000100110101

word: 1100010011011100

combo: 0000000100110111

temp: 0000000100110111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111010011011000

combo: 0000000100110110

word: 1100010011001000

combo: 0000000100110010

word: 0111010011001100

combo: 0000000100110011

word: 1100010011000100

combo: 0000000100110001

word: 0111010011000000

combo: 0000000100110000

word: 0101010001000000

combo: 0000000100010000

word: 1110010001000100

combo: 0000000100010001

word: 0101010001001100

combo: 0000000100010011

word: 1110010001001000

combo: 0000000100010010

word: 0101010001011000

combo: 0000000100010110

word: 1110010001011100

combo: 0000000100010111

temp: 0000000100010111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0101010001010100

combo: 0000000100010101

word: 1110010001010000

combo: 0000000100010100

word: 0101010001110000

combo: 0000000100011100

word: 1110010001110100

combo: 0000000100011101

temp: 0000000100011101

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0101010001111100

combo: 0000000100011111

word: 1110010001111000

combo: 0000000100011110

temp: 0000000100011110

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0101010001101000

combo: 0000000100011010

word: 1110010001101100

combo: 0000000100011011

temp: 0000000100011011

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0101010001100100

combo: 0000000100011001

word: 1110010001100000

combo: 0000000100011000

word: 0101010000100000

combo: 0000000100001000

word: 1110010000100100

combo: 0000000100001001

word: 0101010000101100

combo: 0000000100001011

word: 1110010000101000

combo: 0000000100001010

word: 0101010000111000

combo: 0000000100001110

word: 1110010000111100

combo: 0000000100001111

temp: 0000000100001111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0101010000110100

combo: 0000000100001101

word: 1110010000110000

combo: 0000000100001100

word: 0101010000010000

combo: 0000000100000100

word: 1110010000010100

combo: 0000000100000101

word: 0101010000011100

combo: 0000000100000111

word: 1110010000011000

combo: 0000000100000110

word: 0101010000001000

combo: 0000000100000010

word: 1110010000001100

combo: 0000000100000011

word: 0101010000000100

combo: 0000000100000001

word: 1110010000000000

combo: 0000000100000000

temp: 0000000100000000

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 1100110000000000

combo: 0000001100000000

temp: 0000001100000000

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111110000000100

combo: 0000001100000001

word: 1100110000001100

combo: 0000001100000011

word: 0111110000001000

combo: 0000001100000010

word: 1100110000011000

combo: 0000001100000110

word: 0111110000011100

combo: 0000001100000111

word: 1100110000010100

combo: 0000001100000101

word: 0111110000010000

combo: 0000001100000100

word: 1100110000110000

combo: 0000001100001100

word: 0111110000110100

combo: 0000001100001101

word: 1100110000111100

combo: 0000001100001111

temp: 0000001100001111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111110000111000

combo: 0000001100001110

word: 1100110000101000

combo: 0000001100001010

word: 0111110000101100

combo: 0000001100001011

word: 1100110000100100

combo: 0000001100001001

word: 0111110000100000

combo: 0000001100001000

word: 1100110001100000

combo: 0000001100011000

word: 0111110001100100

combo: 0000001100011001

word: 1100110001101100

combo: 0000001100011011

temp: 0000001100011011

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111110001101000

combo: 0000001100011010

word: 1100110001111000

combo: 0000001100011110

temp: 0000001100011110

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111110001111100

combo: 0000001100011111

word: 1100110001110100

combo: 0000001100011101

temp: 0000001100011101

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111110001110000

combo: 0000001100011100

word: 1100110001010000

combo: 0000001100010100

word: 0111110001010100

combo: 0000001100010101

word: 1100110001011100

combo: 0000001100010111

temp: 0000001100010111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111110001011000

combo: 0000001100010110

word: 1100110001001000

combo: 0000001100010010

word: 0111110001001100

combo: 0000001100010011

word: 1100110001000100

combo: 0000001100010001

word: 0111110001000000

combo: 0000001100010000

word: 0101110011000000

combo: 0000001100110000

word: 1110110011000100

combo: 0000001100110001

temp: 0000001100110001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110011001100

combo: 0000001100110011

word: 1110110011001000

combo: 0000001100110010

temp: 0000001100110010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110011011000

combo: 0000001100110110

word: 1110110011011100

combo: 0000001100110111

word: 0101110011010100

combo: 0000001100110101

word: 1110110011010000

combo: 0000001100110100

temp: 0000001100110100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110011110000

combo: 0000001100111100

word: 1110110011110100

combo: 0000001100111101

word: 0101110011111100

combo: 0000001100111111

word: 1110110011111000

combo: 0000001100111110

word: 0101110011101000

combo: 0000001100111010

word: 1110110011101100

combo: 0000001100111011

word: 0101110011100100

combo: 0000001100111001

word: 1110110011100000

combo: 0000001100111000

temp: 0000001100111000

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110010100000

combo: 0000001100101000

word: 1110110010100100

combo: 0000001100101001

temp: 0000001100101001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110010101100

combo: 0000001100101011

word: 1110110010101000

combo: 0000001100101010

temp: 0000001100101010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110010111000

combo: 0000001100101110

word: 1110110010111100

combo: 0000001100101111

word: 0101110010110100

combo: 0000001100101101

word: 1110110010110000

combo: 0000001100101100

temp: 0000001100101100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110010010000

combo: 0000001100100100

word: 1110110010010100

combo: 0000001100100101

temp: 0000001100100101

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110010011100

combo: 0000001100100111

word: 1110110010011000

combo: 0000001100100110

temp: 0000001100100110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110010001000

combo: 0000001100100010

word: 1110110010001100

combo: 0000001100100011

temp: 0000001100100011

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110010000100

combo: 0000001100100001

word: 1110110010000000

combo: 0000001100100000

word: 1100110110000000

combo: 0000001101100000

word: 0111110110000100

combo: 0000001101100001

word: 1100110110001100

combo: 0000001101100011

temp: 0000001101100011

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111110110001000

combo: 0000001101100010

word: 1100110110011000

combo: 0000001101100110

temp: 0000001101100110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111110110011100

combo: 0000001101100111

word: 1100110110010100

combo: 0000001101100101

temp: 0000001101100101

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111110110010000

combo: 0000001101100100

word: 1100110110110000

combo: 0000001101101100

temp: 0000001101101100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111110110110100

combo: 0000001101101101

word: 1100110110111100

combo: 0000001101101111

word: 0111110110111000

combo: 0000001101101110

word: 1100110110101000

combo: 0000001101101010

temp: 0000001101101010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111110110101100

combo: 0000001101101011

word: 1100110110100100

combo: 0000001101101001

temp: 0000001101101001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111110110100000

combo: 0000001101101000

word: 1100110111100000

combo: 0000001101111000

temp: 0000001101111000

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111110111100100

combo: 0000001101111001

word: 1100110111101100

combo: 0000001101111011

word: 0111110111101000

combo: 0000001101111010

word: 1100110111111000

combo: 0000001101111110

word: 0111110111111100

combo: 0000001101111111

word: 1100110111110100

combo: 0000001101111101

word: 0111110111110000

combo: 0000001101111100

word: 1100110111010000

combo: 0000001101110100

temp: 0000001101110100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111110111010100

combo: 0000001101110101

word: 1100110111011100

combo: 0000001101110111

word: 0111110111011000

combo: 0000001101110110

word: 1100110111001000

combo: 0000001101110010

temp: 0000001101110010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111110111001100

combo: 0000001101110011

word: 1100110111000100

combo: 0000001101110001

temp: 0000001101110001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111110111000000

combo: 0000001101110000

word: 0101110101000000

combo: 0000001101010000

word: 1110110101000100

combo: 0000001101010001

temp: 0000001101010001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110101001100

combo: 0000001101010011

word: 1110110101001000

combo: 0000001101010010

temp: 0000001101010010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110101011000

combo: 0000001101010110

word: 1110110101011100

combo: 0000001101010111

word: 0101110101010100

combo: 0000001101010101

word: 1110110101010000

combo: 0000001101010100

temp: 0000001101010100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110101110000

combo: 0000001101011100

word: 1110110101110100

combo: 0000001101011101

word: 0101110101111100

combo: 0000001101011111

word: 1110110101111000

combo: 0000001101011110

word: 0101110101101000

combo: 0000001101011010

word: 1110110101101100

combo: 0000001101011011

word: 0101110101100100

combo: 0000001101011001

word: 1110110101100000

combo: 0000001101011000

temp: 0000001101011000

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110100100000

combo: 0000001101001000

word: 1110110100100100

combo: 0000001101001001

temp: 0000001101001001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110100101100

combo: 0000001101001011

word: 1110110100101000

combo: 0000001101001010

temp: 0000001101001010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110100111000

combo: 0000001101001110

word: 1110110100111100

combo: 0000001101001111

word: 0101110100110100

combo: 0000001101001101

word: 1110110100110000

combo: 0000001101001100

temp: 0000001101001100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110100010000

combo: 0000001101000100

word: 1110110100010100

combo: 0000001101000101

temp: 0000001101000101

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110100011100

combo: 0000001101000111

word: 1110110100011000

combo: 0000001101000110

temp: 0000001101000110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110100001000

combo: 0000001101000010

word: 1110110100001100

combo: 0000001101000011

temp: 0000001101000011

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101110100000100

combo: 0000001101000001

word: 1110110100000000

combo: 0000001101000000

word: 1100111100000000

combo: 0000001111000000

word: 0111111100000100

combo: 0000001111000001

word: 1100111100001100

combo: 0000001111000011

temp: 0000001111000011

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111100001000

combo: 0000001111000010

word: 1100111100011000

combo: 0000001111000110

temp: 0000001111000110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111100011100

combo: 0000001111000111

word: 1100111100010100

combo: 0000001111000101

temp: 0000001111000101

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111100010000

combo: 0000001111000100

word: 1100111100110000

combo: 0000001111001100

temp: 0000001111001100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111100110100

combo: 0000001111001101

word: 1100111100111100

combo: 0000001111001111

word: 0111111100111000

combo: 0000001111001110

word: 1100111100101000

combo: 0000001111001010

temp: 0000001111001010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111100101100

combo: 0000001111001011

word: 1100111100100100

combo: 0000001111001001

temp: 0000001111001001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111100100000

combo: 0000001111001000

word: 1100111101100000

combo: 0000001111011000

temp: 0000001111011000

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111101100100

combo: 0000001111011001

word: 1100111101101100

combo: 0000001111011011

word: 0111111101101000

combo: 0000001111011010

word: 1100111101111000

combo: 0000001111011110

word: 0111111101111100

combo: 0000001111011111

word: 1100111101110100

combo: 0000001111011101

word: 0111111101110000

combo: 0000001111011100

word: 1100111101010000

combo: 0000001111010100

temp: 0000001111010100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111101010100

combo: 0000001111010101

word: 1100111101011100

combo: 0000001111010111

word: 0111111101011000

combo: 0000001111010110

word: 1100111101001000

combo: 0000001111010010

temp: 0000001111010010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111101001100

combo: 0000001111010011

word: 1100111101000100

combo: 0000001111010001

temp: 0000001111010001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111101000000

combo: 0000001111010000

word: 0101111111000000

combo: 0000001111110000

word: 1110111111000100

combo: 0000001111110001

word: 0101111111001100

combo: 0000001111110011

word: 1110111111001000

combo: 0000001111110010

word: 0101111111011000

combo: 0000001111110110

word: 1110111111011100

combo: 0000001111110111

temp: 0000001111110111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 0101111111010100

combo: 0000001111110101

word: 1110111111010000

combo: 0000001111110100

word: 0101111111110000

combo: 0000001111111100

word: 1110111111110100

combo: 0000001111111101

temp: 0000001111111101

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 0101111111111100

combo: 0000001111111111

word: 1110111111111000

combo: 0000001111111110

temp: 0000001111111110

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 0101111111101000

combo: 0000001111111010

word: 1110111111101100

combo: 0000001111111011

temp: 0000001111111011

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 0101111111100100

combo: 0000001111111001

word: 1110111111100000

combo: 0000001111111000

word: 0101111110100000

combo: 0000001111101000

word: 1110111110100100

combo: 0000001111101001

word: 0101111110101100

combo: 0000001111101011

word: 1110111110101000

combo: 0000001111101010

word: 0101111110111000

combo: 0000001111101110

word: 1110111110111100

combo: 0000001111101111

temp: 0000001111101111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

word: 0101111110110100

combo: 0000001111101101

word: 1110111110110000

combo: 0000001111101100

word: 0101111110010000

combo: 0000001111100100

word: 1110111110010100

combo: 0000001111100101

word: 0101111110011100

combo: 0000001111100111

word: 1110111110011000

combo: 0000001111100110

word: 0101111110001000

combo: 0000001111100010

word: 1110111110001100

combo: 0000001111100011

word: 0101111110000100

combo: 0000001111100001

word: 1110111110000000

combo: 0000001111100000

temp: 0000001111100000

orbit_checks[temp>>log2radix]= 1101000100000001000000000000000

passed if statements
temp basis:
1100000001111101
1110111110000000
rs list:
1 0 1 1 1 1 1 0 0 0 0 0 0 0 1 1 
0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 
B_aug:
[1 0 1 1 1 1 1 1 1 1 1 1 0 1 0 0]
[0 1 0 0 0 0 0 1 1 1 1 1 1 1 0 0]
[0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1]
m:
[1 0 1 1 1 1 1 0 0 0 0 0 0 0 1 1]
[0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (12,14), (11,12), (10,11), ( 9,10), (8,9), (6,7), (5,6), (4,5), (3,4), ( 2,13), (1,3), ( 1, 8)( 3, 9)( 4,10)( 5,11)( 6,12)( 7,14) ] )
Right transversal of automorphism group of B_aug:
[0, 14, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 13, 1, 12]
orbits:
1110111110000000
word: 1100111010000000

combo: 0000001110100000

word: 0111111010000100

combo: 0000001110100001

word: 1100111010001100

combo: 0000001110100011

temp: 0000001110100011

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111010001000

combo: 0000001110100010

word: 1100111010011000

combo: 0000001110100110

temp: 0000001110100110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111010011100

combo: 0000001110100111

word: 1100111010010100

combo: 0000001110100101

temp: 0000001110100101

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111010010000

combo: 0000001110100100

word: 1100111010110000

combo: 0000001110101100

temp: 0000001110101100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111010110100

combo: 0000001110101101

word: 1100111010111100

combo: 0000001110101111

word: 0111111010111000

combo: 0000001110101110

word: 1100111010101000

combo: 0000001110101010

temp: 0000001110101010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111010101100

combo: 0000001110101011

word: 1100111010100100

combo: 0000001110101001

temp: 0000001110101001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111010100000

combo: 0000001110101000

word: 1100111011100000

combo: 0000001110111000

temp: 0000001110111000

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111011100100

combo: 0000001110111001

word: 1100111011101100

combo: 0000001110111011

word: 0111111011101000

combo: 0000001110111010

word: 1100111011111000

combo: 0000001110111110

word: 0111111011111100

combo: 0000001110111111

word: 1100111011110100

combo: 0000001110111101

word: 0111111011110000

combo: 0000001110111100

word: 1100111011010000

combo: 0000001110110100

temp: 0000001110110100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111011010100

combo: 0000001110110101

word: 1100111011011100

combo: 0000001110110111

word: 0111111011011000

combo: 0000001110110110

word: 1100111011001000

combo: 0000001110110010

temp: 0000001110110010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111011001100

combo: 0000001110110011

word: 1100111011000100

combo: 0000001110110001

temp: 0000001110110001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111111011000000

combo: 0000001110110000

word: 0101111001000000

combo: 0000001110010000

word: 1110111001000100

combo: 0000001110010001

temp: 0000001110010001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101111001001100

combo: 0000001110010011

word: 1110111001001000

combo: 0000001110010010

temp: 0000001110010010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101111001011000

combo: 0000001110010110

word: 1110111001011100

combo: 0000001110010111

word: 0101111001010100

combo: 0000001110010101

word: 1110111001010000

combo: 0000001110010100

temp: 0000001110010100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101111001110000

combo: 0000001110011100

word: 1110111001110100

combo: 0000001110011101

word: 0101111001111100

combo: 0000001110011111

word: 1110111001111000

combo: 0000001110011110

word: 0101111001101000

combo: 0000001110011010

word: 1110111001101100

combo: 0000001110011011

word: 0101111001100100

combo: 0000001110011001

word: 1110111001100000

combo: 0000001110011000

temp: 0000001110011000

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101111000100000

combo: 0000001110001000

word: 1110111000100100

combo: 0000001110001001

temp: 0000001110001001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101111000101100

combo: 0000001110001011

word: 1110111000101000

combo: 0000001110001010

temp: 0000001110001010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101111000111000

combo: 0000001110001110

word: 1110111000111100

combo: 0000001110001111

word: 0101111000110100

combo: 0000001110001101

word: 1110111000110000

combo: 0000001110001100

temp: 0000001110001100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101111000010000

combo: 0000001110000100

word: 1110111000010100

combo: 0000001110000101

temp: 0000001110000101

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101111000011100

combo: 0000001110000111

word: 1110111000011000

combo: 0000001110000110

temp: 0000001110000110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101111000001000

combo: 0000001110000010

word: 1110111000001100

combo: 0000001110000011

temp: 0000001110000011

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101111000000100

combo: 0000001110000001

word: 1110111000000000

combo: 0000001110000000

word: 1100101000000000

combo: 0000001010000000

temp: 0000001010000000

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111101000000100

combo: 0000001010000001

word: 1100101000001100

combo: 0000001010000011

word: 0111101000001000

combo: 0000001010000010

word: 1100101000011000

combo: 0000001010000110

word: 0111101000011100

combo: 0000001010000111

word: 1100101000010100

combo: 0000001010000101

word: 0111101000010000

combo: 0000001010000100

word: 1100101000110000

combo: 0000001010001100

word: 0111101000110100

combo: 0000001010001101

word: 1100101000111100

combo: 0000001010001111

temp: 0000001010001111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111101000111000

combo: 0000001010001110

word: 1100101000101000

combo: 0000001010001010

word: 0111101000101100

combo: 0000001010001011

word: 1100101000100100

combo: 0000001010001001

word: 0111101000100000

combo: 0000001010001000

word: 1100101001100000

combo: 0000001010011000

word: 0111101001100100

combo: 0000001010011001

word: 1100101001101100

combo: 0000001010011011

temp: 0000001010011011

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111101001101000

combo: 0000001010011010

word: 1100101001111000

combo: 0000001010011110

temp: 0000001010011110

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111101001111100

combo: 0000001010011111

word: 1100101001110100

combo: 0000001010011101

temp: 0000001010011101

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111101001110000

combo: 0000001010011100

word: 1100101001010000

combo: 0000001010010100

word: 0111101001010100

combo: 0000001010010101

word: 1100101001011100

combo: 0000001010010111

temp: 0000001010010111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111101001011000

combo: 0000001010010110

word: 1100101001001000

combo: 0000001010010010

word: 0111101001001100

combo: 0000001010010011

word: 1100101001000100

combo: 0000001010010001

word: 0111101001000000

combo: 0000001010010000

word: 0101101011000000

combo: 0000001010110000

word: 1110101011000100

combo: 0000001010110001

temp: 0000001010110001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101101011001100

combo: 0000001010110011

word: 1110101011001000

combo: 0000001010110010

temp: 0000001010110010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101101011011000

combo: 0000001010110110

word: 1110101011011100

combo: 0000001010110111

word: 0101101011010100

combo: 0000001010110101

word: 1110101011010000

combo: 0000001010110100

temp: 0000001010110100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101101011110000

combo: 0000001010111100

word: 1110101011110100

combo: 0000001010111101

word: 0101101011111100

combo: 0000001010111111

word: 1110101011111000

combo: 0000001010111110

word: 0101101011101000

combo: 0000001010111010

word: 1110101011101100

combo: 0000001010111011

word: 0101101011100100

combo: 0000001010111001

word: 1110101011100000

combo: 0000001010111000

temp: 0000001010111000

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101101010100000

combo: 0000001010101000

word: 1110101010100100

combo: 0000001010101001

temp: 0000001010101001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101101010101100

combo: 0000001010101011

word: 1110101010101000

combo: 0000001010101010

temp: 0000001010101010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101101010111000

combo: 0000001010101110

word: 1110101010111100

combo: 0000001010101111

word: 0101101010110100

combo: 0000001010101101

word: 1110101010110000

combo: 0000001010101100

temp: 0000001010101100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101101010010000

combo: 0000001010100100

word: 1110101010010100

combo: 0000001010100101

temp: 0000001010100101

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101101010011100

combo: 0000001010100111

word: 1110101010011000

combo: 0000001010100110

temp: 0000001010100110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101101010001000

combo: 0000001010100010

word: 1110101010001100

combo: 0000001010100011

temp: 0000001010100011

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101101010000100

combo: 0000001010100001

word: 1110101010000000

combo: 0000001010100000

word: 1100101110000000

combo: 0000001011100000

word: 0111101110000100

combo: 0000001011100001

word: 1100101110001100

combo: 0000001011100011

temp: 0000001011100011

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111101110001000

combo: 0000001011100010

word: 1100101110011000

combo: 0000001011100110

temp: 0000001011100110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111101110011100

combo: 0000001011100111

word: 1100101110010100

combo: 0000001011100101

temp: 0000001011100101

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111101110010000

combo: 0000001011100100

word: 1100101110110000

combo: 0000001011101100

temp: 0000001011101100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111101110110100

combo: 0000001011101101

word: 1100101110111100

combo: 0000001011101111

word: 0111101110111000

combo: 0000001011101110

word: 1100101110101000

combo: 0000001011101010

temp: 0000001011101010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111101110101100

combo: 0000001011101011

word: 1100101110100100

combo: 0000001011101001

temp: 0000001011101001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111101110100000

combo: 0000001011101000

word: 1100101111100000

combo: 0000001011111000

temp: 0000001011111000

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111101111100100

combo: 0000001011111001

word: 1100101111101100

combo: 0000001011111011

word: 0111101111101000

combo: 0000001011111010

word: 1100101111111000

combo: 0000001011111110

word: 0111101111111100

combo: 0000001011111111

word: 1100101111110100

combo: 0000001011111101

word: 0111101111110000

combo: 0000001011111100

word: 1100101111010000

combo: 0000001011110100

temp: 0000001011110100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111101111010100

combo: 0000001011110101

word: 1100101111011100

combo: 0000001011110111

word: 0111101111011000

combo: 0000001011110110

word: 1100101111001000

combo: 0000001011110010

temp: 0000001011110010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111101111001100

combo: 0000001011110011

word: 1100101111000100

combo: 0000001011110001

temp: 0000001011110001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0111101111000000

combo: 0000001011110000

word: 0101101101000000

combo: 0000001011010000

word: 1110101101000100

combo: 0000001011010001

temp: 0000001011010001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101101101001100

combo: 0000001011010011

word: 1110101101001000

combo: 0000001011010010

temp: 0000001011010010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101101101011000

combo: 0000001011010110

word: 1110101101011100

combo: 0000001011010111

word: 0101101101010100

combo: 0000001011010101

word: 1110101101010000

combo: 0000001011010100

temp: 0000001011010100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101101101110000

combo: 0000001011011100

word: 1110101101110100

combo: 0000001011011101

word: 0101101101111100

combo: 0000001011011111

word: 1110101101111000

combo: 0000001011011110

word: 0101101101101000

combo: 0000001011011010

word: 1110101101101100

combo: 0000001011011011

word: 0101101101100100

combo: 0000001011011001

word: 1110101101100000

combo: 0000001011011000

temp: 0000001011011000

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101101100100000

combo: 0000001011001000

word: 1110101100100100

combo: 0000001011001001

temp: 0000001011001001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101101100101100

combo: 0000001011001011

word: 1110101100101000

combo: 0000001011001010

temp: 0000001011001010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101101100111000

combo: 0000001011001110

word: 1110101100111100

combo: 0000001011001111

word: 0101101100110100

combo: 0000001011001101

word: 1110101100110000

combo: 0000001011001100

temp: 0000001011001100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101101100010000

combo: 0000001011000100

word: 1110101100010100

combo: 0000001011000101

temp: 0000001011000101

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101101100011100

combo: 0000001011000111

word: 1110101100011000

combo: 0000001011000110

temp: 0000001011000110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101101100001000

combo: 0000001011000010

word: 1110101100001100

combo: 0000001011000011

temp: 0000001011000011

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101101100000100

combo: 0000001011000001

word: 1110101100000000

combo: 0000001011000000

word: 1100100100000000

combo: 0000001001000000

temp: 0000001001000000

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111100100000100

combo: 0000001001000001

word: 1100100100001100

combo: 0000001001000011

word: 0111100100001000

combo: 0000001001000010

word: 1100100100011000

combo: 0000001001000110

word: 0111100100011100

combo: 0000001001000111

word: 1100100100010100

combo: 0000001001000101

word: 0111100100010000

combo: 0000001001000100

word: 1100100100110000

combo: 0000001001001100

word: 0111100100110100

combo: 0000001001001101

word: 1100100100111100

combo: 0000001001001111

temp: 0000001001001111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111100100111000

combo: 0000001001001110

word: 1100100100101000

combo: 0000001001001010

word: 0111100100101100

combo: 0000001001001011

word: 1100100100100100

combo: 0000001001001001

word: 0111100100100000

combo: 0000001001001000

word: 1100100101100000

combo: 0000001001011000

word: 0111100101100100

combo: 0000001001011001

word: 1100100101101100

combo: 0000001001011011

temp: 0000001001011011

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111100101101000

combo: 0000001001011010

word: 1100100101111000

combo: 0000001001011110

temp: 0000001001011110

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111100101111100

combo: 0000001001011111

word: 1100100101110100

combo: 0000001001011101

temp: 0000001001011101

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111100101110000

combo: 0000001001011100

word: 1100100101010000

combo: 0000001001010100

word: 0111100101010100

combo: 0000001001010101

word: 1100100101011100

combo: 0000001001010111

temp: 0000001001010111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111100101011000

combo: 0000001001010110

word: 1100100101001000

combo: 0000001001010010

word: 0111100101001100

combo: 0000001001010011

word: 1100100101000100

combo: 0000001001010001

word: 0111100101000000

combo: 0000001001010000

word: 0101100111000000

combo: 0000001001110000

word: 1110100111000100

combo: 0000001001110001

temp: 0000001001110001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101100111001100

combo: 0000001001110011

word: 1110100111001000

combo: 0000001001110010

temp: 0000001001110010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101100111011000

combo: 0000001001110110

word: 1110100111011100

combo: 0000001001110111

word: 0101100111010100

combo: 0000001001110101

word: 1110100111010000

combo: 0000001001110100

temp: 0000001001110100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101100111110000

combo: 0000001001111100

word: 1110100111110100

combo: 0000001001111101

word: 0101100111111100

combo: 0000001001111111

word: 1110100111111000

combo: 0000001001111110

word: 0101100111101000

combo: 0000001001111010

word: 1110100111101100

combo: 0000001001111011

word: 0101100111100100

combo: 0000001001111001

word: 1110100111100000

combo: 0000001001111000

temp: 0000001001111000

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101100110100000

combo: 0000001001101000

word: 1110100110100100

combo: 0000001001101001

temp: 0000001001101001

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101100110101100

combo: 0000001001101011

word: 1110100110101000

combo: 0000001001101010

temp: 0000001001101010

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101100110111000

combo: 0000001001101110

word: 1110100110111100

combo: 0000001001101111

word: 0101100110110100

combo: 0000001001101101

word: 1110100110110000

combo: 0000001001101100

temp: 0000001001101100

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101100110010000

combo: 0000001001100100

word: 1110100110010100

combo: 0000001001100101

temp: 0000001001100101

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101100110011100

combo: 0000001001100111

word: 1110100110011000

combo: 0000001001100110

temp: 0000001001100110

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101100110001000

combo: 0000001001100010

word: 1110100110001100

combo: 0000001001100011

temp: 0000001001100011

orbit_checks[temp>>log2radix]= 1000101100001011001101000

word: 0101100110000100

combo: 0000001001100001

word: 1110100110000000

combo: 0000001001100000

word: 1100100010000000

combo: 0000001000100000

temp: 0000001000100000

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111100010000100

combo: 0000001000100001

word: 1100100010001100

combo: 0000001000100011

word: 0111100010001000

combo: 0000001000100010

word: 1100100010011000

combo: 0000001000100110

word: 0111100010011100

combo: 0000001000100111

word: 1100100010010100

combo: 0000001000100101

word: 0111100010010000

combo: 0000001000100100

word: 1100100010110000

combo: 0000001000101100

word: 0111100010110100

combo: 0000001000101101

word: 1100100010111100

combo: 0000001000101111

temp: 0000001000101111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111100010111000

combo: 0000001000101110

word: 1100100010101000

combo: 0000001000101010

word: 0111100010101100

combo: 0000001000101011

word: 1100100010100100

combo: 0000001000101001

word: 0111100010100000

combo: 0000001000101000

word: 1100100011100000

combo: 0000001000111000

word: 0111100011100100

combo: 0000001000111001

word: 1100100011101100

combo: 0000001000111011

temp: 0000001000111011

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111100011101000

combo: 0000001000111010

word: 1100100011111000

combo: 0000001000111110

temp: 0000001000111110

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111100011111100

combo: 0000001000111111

word: 1100100011110100

combo: 0000001000111101

temp: 0000001000111101

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111100011110000

combo: 0000001000111100

word: 1100100011010000

combo: 0000001000110100

word: 0111100011010100

combo: 0000001000110101

word: 1100100011011100

combo: 0000001000110111

temp: 0000001000110111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0111100011011000

combo: 0000001000110110

word: 1100100011001000

combo: 0000001000110010

word: 0111100011001100

combo: 0000001000110011

word: 1100100011000100

combo: 0000001000110001

word: 0111100011000000

combo: 0000001000110000

word: 0101100001000000

combo: 0000001000010000

word: 1110100001000100

combo: 0000001000010001

word: 0101100001001100

combo: 0000001000010011

word: 1110100001001000

combo: 0000001000010010

word: 0101100001011000

combo: 0000001000010110

word: 1110100001011100

combo: 0000001000010111

temp: 0000001000010111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0101100001010100

combo: 0000001000010101

word: 1110100001010000

combo: 0000001000010100

word: 0101100001110000

combo: 0000001000011100

word: 1110100001110100

combo: 0000001000011101

temp: 0000001000011101

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0101100001111100

combo: 0000001000011111

word: 1110100001111000

combo: 0000001000011110

temp: 0000001000011110

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0101100001101000

combo: 0000001000011010

word: 1110100001101100

combo: 0000001000011011

temp: 0000001000011011

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0101100001100100

combo: 0000001000011001

word: 1110100001100000

combo: 0000001000011000

word: 0101100000100000

combo: 0000001000001000

word: 1110100000100100

combo: 0000001000001001

word: 0101100000101100

combo: 0000001000001011

word: 1110100000101000

combo: 0000001000001010

word: 0101100000111000

combo: 0000001000001110

word: 1110100000111100

combo: 0000001000001111

temp: 0000001000001111

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

word: 0101100000110100

combo: 0000001000001101

word: 1110100000110000

combo: 0000001000001100

word: 0101100000010000

combo: 0000001000000100

word: 1110100000010100

combo: 0000001000000101

word: 0101100000011100

combo: 0000001000000111

word: 1110100000011000

combo: 0000001000000110

word: 0101100000001000

combo: 0000001000000010

word: 1110100000001100

combo: 0000001000000011

word: 0101100000000100

combo: 0000001000000001

word: 1110100000000000

combo: 0000001000000000

temp: 0000001000000000

orbit_checks[temp>>log2radix]= 1101000100000001000000000000001

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1 1 1 1 1]
limit on degree (length): 15
ortho basis:
000000010000010
000000010000100
000000010001000
000000010010000
000000010100000
000000011000000
100000100000000
100001000000000
100010000000000
100100000000000
101000000000000
110000000000000

B_can_lab before row reduction:
000000011111111

B_can_lab after row reduction:
000000011111111
101011001000011

word generated as sum over rows of ortho_basis starting at 6: 011111100000000
gate: 000000000000001
k_gate: 000000000111111
nonzero_gate: 111111100000000
radix_gate: 000000000011111

Starting main loop:
word: 011111100000000

combo: 000000000000000

word: 011111110000010

combo: 000000000000001

word: 011111100000110

combo: 000000000000011

word: 011111110000100

combo: 000000000000010

word: 011111100001100

combo: 000000000000110

word: 011111110001110

combo: 000000000000111

word: 011111100001010

combo: 000000000000101

word: 011111110001000

combo: 000000000000100

word: 011111100011000

combo: 000000000001100

word: 011111110011010

combo: 000000000001101

word: 011111100011110

combo: 000000000001111

word: 011111110011100

combo: 000000000001110

word: 011111100010100

combo: 000000000001010

word: 011111110010110

combo: 000000000001011

word: 011111100010010

combo: 000000000001001

word: 011111110010000

combo: 000000000001000

word: 011111100110000

combo: 000000000011000

word: 011111110110010

combo: 000000000011001

word: 011111100110110

combo: 000000000011011

word: 011111110110100

combo: 000000000011010

word: 011111100111100

combo: 000000000011110

word: 011111110111110

combo: 000000000011111

word: 011111100111010

combo: 000000000011101

word: 011111110111000

combo: 000000000011100

word: 011111100101000

combo: 000000000010100

word: 011111110101010

combo: 000000000010101

word: 011111100101110

combo: 000000000010111

word: 011111110101100

combo: 000000000010110

word: 011111100100100

combo: 000000000010010

word: 011111110100110

combo: 000000000010011

word: 011111100100010

combo: 000000000010001

word: 011111110100000

combo: 000000000010000

word: 011111101100000

combo: 000000000110000

word: 011111111100010

combo: 000000000110001

word: 011111101100110

combo: 000000000110011

word: 011111111100100

combo: 000000000110010

word: 011111101101100

combo: 000000000110110

word: 011111111101110

combo: 000000000110111

word: 011111101101010

combo: 000000000110101

word: 011111111101000

combo: 000000000110100

word: 011111101111000

combo: 000000000111100

word: 011111111111010

combo: 000000000111101

word: 011111101111110

combo: 000000000111111

word: 011111111111100

combo: 000000000111110

word: 011111101110100

combo: 000000000111010

word: 011111111110110

combo: 000000000111011

word: 011111101110010

combo: 000000000111001

word: 011111111110000

combo: 000000000111000

word: 011111101010000

combo: 000000000101000

word: 011111111010010

combo: 000000000101001

word: 011111101010110

combo: 000000000101011

word: 011111111010100

combo: 000000000101010

word: 011111101011100

combo: 000000000101110

word: 011111111011110

combo: 000000000101111

word: 011111101011010

combo: 000000000101101

word: 011111111011000

combo: 000000000101100

word: 011111101001000

combo: 000000000100100

word: 011111111001010

combo: 000000000100101

word: 011111101001110

combo: 000000000100111

word: 011111111001100

combo: 000000000100110

word: 011111101000100

combo: 000000000100010

word: 011111111000110

combo: 000000000100011

word: 011111101000010

combo: 000000000100001

word: 011111111000000

combo: 000000000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1 1 1 1 1]
limit on degree (length): 16
ortho basis:
0000000010000010
0000000010000100
0000000010001000
0000000010010000
0000000010100000
0000000011000000
1000000100000000
1000001000000000
1000010000000000
1000100000000000
1001000000000000
1010000000000000
1100000000000000

B_can_lab before row reduction:
0000000011111111

B_can_lab after row reduction:
0000000011111111
0101011001000011

word generated as sum over rows of ortho_basis starting at 6: 1111111100000000
gate: 0000000000000001
k_gate: 0000000000111111
nonzero_gate: 1111111100000000
radix_gate: 0000000000011111

Starting main loop:
word: 1111111100000000

combo: 0000000000000000

temp: 0000000000000000

orbit_checks[temp>>log2radix]= 0000000000000000

passed if statements
temp basis:
0000000011111111
rs list:
1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
B_aug:
[1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0]
[0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1]
m:
[1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (15,16), (14,15), (13,14), (12,13), (11,12), (10,11), ( 9,10), (7,8), (6,7), (5,6), (4,5), (3,4), (2,3), (1,2) ] )
Right transversal of automorphism group of B_aug:
[8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 6, 7]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111111100000000
word: 1111111110000010

combo: 0000000000000001

word: 1111111100000110

combo: 0000000000000011

word: 1111111110000100

combo: 0000000000000010

word: 1111111100001100

combo: 0000000000000110

word: 1111111110001110

combo: 0000000000000111

temp: 0000000000000111

orbit_checks[temp>>log2radix]= 0000000000000001

passed if statements
temp basis:
1111111101110001
rs list:
1 0 0 0 1 1 1 0 1 1 1 1 1 1 1 1 
B_aug:
[1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0]
[0 1 1 1 0 0 0 1 1 1 1 1 1 1 1 1]
m:
[1 0 0 0 1 1 1 0 1 1 1 1 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (10,11), (10,12), (10,13)(11,12), (10,14)(11,13), (10,15)(11,14)(12,13), (10,16)(11,15)(12,14), ( 9,10,16)(11,15)(12,14), ( 3, 8)(10,16)(11,15)(12,14), ( 2, 3, 8)(10,16)(11,15)(12,14), ( 2, 3, 8, 4)(10,16)(11,15)(12,14), ( 2, 3, 8, 4)( 5, 6)(10,16)(11,15)(12,14), ( 2, 3, 8, 4)( 5, 6, 7)(10,16)(11,15)(12,14), ( 1, 5, 6, 7)( 2, 3, 8, 4)(10,16)(11,15)(12,14) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 4, 5, 2, 3, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
orbits:
1111111110001110
1111111101001110
1111111110010110
1111111101110010
1111111100101110
1111111101010110
1111111110110010
1111111110100110
1111111110011010
1111111101101010
1111111101110100
1111111100011110
1111111100110110
1111111111010010
1111111101100110
1111111101011010
1111111110101010
1111111110110100
1111111111000110
1111111110011100
1111111101101100
1111111101111000
1111111111100010
1111111100111010
1111111111001010
1111111111010100
1111111101011100
1111111110101100
1111111110111000
1111111111100100
1111111100111100
1111111111001100
1111111111011000
1111111111101000
1111111111110000
word: 1111111100001010

combo: 0000000000000101

word: 1111111110001000

combo: 0000000000000100

word: 1111111100011000

combo: 0000000000001100

word: 1111111110011010

combo: 0000000000001101

temp: 0000000000001101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 1111111100011110

combo: 0000000000001111

temp: 0000000000001111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 1111111110011100

combo: 0000000000001110

temp: 0000000000001110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 1111111100010100

combo: 0000000000001010

word: 1111111110010110

combo: 0000000000001011

temp: 0000000000001011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 1111111100010010

combo: 0000000000001001

word: 1111111110010000

combo: 0000000000001000

word: 1111111100110000

combo: 0000000000011000

word: 1111111110110010

combo: 0000000000011001

temp: 0000000000011001

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 1111111100110110

combo: 0000000000011011

temp: 0000000000011011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 1111111110110100

combo: 0000000000011010

temp: 0000000000011010

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 1111111100111100

combo: 0000000000011110

temp: 0000000000011110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 1111111110111110

combo: 0000000000011111

word: 1111111100111010

combo: 0000000000011101

temp: 0000000000011101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 1111111110111000

combo: 0000000000011100

temp: 0000000000011100

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 1111111100101000

combo: 0000000000010100

word: 1111111110101010

combo: 0000000000010101

temp: 0000000000010101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 1111111100101110

combo: 0000000000010111

temp: 0000000000010111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 1111111110101100

combo: 0000000000010110

temp: 0000000000010110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 1111111100100100

combo: 0000000000010010

word: 1111111110100110

combo: 0000000000010011

temp: 0000000000010011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 1111111100100010

combo: 0000000000010001

word: 1111111110100000

combo: 0000000000010000

word: 1111111101100000

combo: 0000000000110000

word: 1111111111100010

combo: 0000000000110001

temp: 0000000000110001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111111101100110

combo: 0000000000110011

temp: 0000000000110011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111111111100100

combo: 0000000000110010

temp: 0000000000110010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111111101101100

combo: 0000000000110110

temp: 0000000000110110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111111111101110

combo: 0000000000110111

word: 1111111101101010

combo: 0000000000110101

temp: 0000000000110101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111111111101000

combo: 0000000000110100

temp: 0000000000110100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111111101111000

combo: 0000000000111100

temp: 0000000000111100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111111111111010

combo: 0000000000111101

word: 1111111101111110

combo: 0000000000111111

word: 1111111111111100

combo: 0000000000111110

word: 1111111101110100

combo: 0000000000111010

temp: 0000000000111010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111111111110110

combo: 0000000000111011

word: 1111111101110010

combo: 0000000000111001

temp: 0000000000111001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111111111110000

combo: 0000000000111000

temp: 0000000000111000

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111111101010000

combo: 0000000000101000

word: 1111111111010010

combo: 0000000000101001

temp: 0000000000101001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111111101010110

combo: 0000000000101011

temp: 0000000000101011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111111111010100

combo: 0000000000101010

temp: 0000000000101010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111111101011100

combo: 0000000000101110

temp: 0000000000101110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111111111011110

combo: 0000000000101111

word: 1111111101011010

combo: 0000000000101101

temp: 0000000000101101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111111111011000

combo: 0000000000101100

temp: 0000000000101100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111111101001000

combo: 0000000000100100

word: 1111111111001010

combo: 0000000000100101

temp: 0000000000100101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111111101001110

combo: 0000000000100111

temp: 0000000000100111

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111111111001100

combo: 0000000000100110

temp: 0000000000100110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111111101000100

combo: 0000000000100010

word: 1111111111000110

combo: 0000000000100011

temp: 0000000000100011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 1111111101000010

combo: 0000000000100001

word: 1111111111000000

combo: 0000000000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 5
ortho basis:
01010
01100

B_can_lab before row reduction:
01111

B_can_lab after row reduction:
01111
101011001000011

word generated as sum over rows of ortho_basis starting at 2: 00000
gate: 00001
k_gate: 00011
nonzero_gate: 10000
radix_gate: 11111

Starting main loop:
word: 00000

combo: 00000

word: 01010

combo: 00001

word: 00110

combo: 00011

word: 01100

combo: 00010

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 6
ortho basis:
001010
001100
110000

B_can_lab before row reduction:
001111

B_can_lab after row reduction:
001111
101011001000011

word generated as sum over rows of ortho_basis starting at 2: 110000
gate: 000001
k_gate: 000011
nonzero_gate: 110000
radix_gate: 011111

Starting main loop:
word: 110000

combo: 000000

word: 111010

combo: 000001

temp: 000001

orbit_checks[temp>>log2radix]= 000000

passed if statements
temp basis:
110101
rs list:
1 0 1 0 1 1 
B_aug:
[1 1 1 1 0 0]
[0 1 0 1 1 1]
m:
[1 0 1 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (5,6), (2,4)(5,6), (1,3)(5,6), (1,5,3,6) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 3, 2, 4, 5]
[1, 4, 3, 5, 0, 2]
orbits:
111010
110110
111100
word: 110110

combo: 000011

temp: 000011

orbit_checks[temp>>log2radix]= 001110

word: 111100

combo: 000010

temp: 000010

orbit_checks[temp>>log2radix]= 001110

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 5
ortho basis:
01010
01100

B_can_lab before row reduction:
01111

B_can_lab after row reduction:
01111
101011000011001

word generated as sum over rows of ortho_basis starting at 2: 00000
gate: 00001
k_gate: 00011
nonzero_gate: 10000
radix_gate: 11111

Starting main loop:
word: 00000

combo: 00000

word: 01010

combo: 00001

word: 00110

combo: 00011

word: 01100

combo: 00010

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 6
ortho basis:
001010
001100
110000

B_can_lab before row reduction:
001111

B_can_lab after row reduction:
001111
101011000011001

word generated as sum over rows of ortho_basis starting at 2: 110000
gate: 000001
k_gate: 000011
nonzero_gate: 110000
radix_gate: 011111

Starting main loop:
word: 110000

combo: 000000

word: 111010

combo: 000001

temp: 000001

orbit_checks[temp>>log2radix]= 000000

passed if statements
temp basis:
110101
rs list:
1 0 1 0 1 1 
B_aug:
[1 1 1 1 0 0]
[0 1 0 1 1 1]
m:
[1 0 1 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (5,6), (2,4)(5,6), (1,3)(5,6), (1,5,3,6) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 3, 2, 4, 5]
[1, 4, 3, 5, 0, 2]
orbits:
111010
110110
111100
word: 110110

combo: 000011

temp: 000011

orbit_checks[temp>>log2radix]= 001110

word: 111100

combo: 000010

temp: 000010

orbit_checks[temp>>log2radix]= 001110

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 5
ortho basis:
01010
01100

B_can_lab before row reduction:
01111

B_can_lab after row reduction:
01111
101011000011001

word generated as sum over rows of ortho_basis starting at 2: 00000
gate: 00001
k_gate: 00011
nonzero_gate: 10000
radix_gate: 11111

Starting main loop:
word: 00000

combo: 00000

word: 01010

combo: 00001

word: 00110

combo: 00011

word: 01100

combo: 00010

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 6
ortho basis:
001010
001100
110000

B_can_lab before row reduction:
001111

B_can_lab after row reduction:
001111
101011000011001

word generated as sum over rows of ortho_basis starting at 2: 110000
gate: 000001
k_gate: 000011
nonzero_gate: 110000
radix_gate: 011111

Starting main loop:
word: 110000

combo: 000000

word: 111010

combo: 000001

temp: 000001

orbit_checks[temp>>log2radix]= 000000

passed if statements
temp basis:
110101
rs list:
1 0 1 0 1 1 
B_aug:
[1 1 1 1 0 0]
[0 1 0 1 1 1]
m:
[1 0 1 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (5,6), (2,4)(5,6), (1,3)(5,6), (1,5,3,6) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 3, 2, 4, 5]
[1, 4, 3, 5, 0, 2]
orbits:
111010
110110
111100
word: 110110

combo: 000011

temp: 000011

orbit_checks[temp>>log2radix]= 001110

word: 111100

combo: 000010

temp: 000010

orbit_checks[temp>>log2radix]= 001110

exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 0 1 1]
[0 1 0 1 1 1]
limit on degree (length): 7
ortho basis:
1110100
0101000

B_can_lab before row reduction:
0011011
0111100

B_can_lab after row reduction:
0011011
0111100

word generated as sum over rows of ortho_basis starting at 2: 0000000
gate: 0000011
k_gate: 0000011
nonzero_gate: 1000000
radix_gate: 0011111

Starting main loop:
word: 0000000

combo: 0000000

word: 1110100

combo: 0000001

temp: 0000001

orbit_checks[temp>>log2radix]= 0000000

passed if statements
temp basis:
1011001
0111010
rs list:
1 0 0 1 1 0 1 
0 1 0 1 1 1 0 
B_aug:
[1 0 1 1 0 1 0]
[0 1 0 1 1 1 0]
[0 0 1 0 1 1 1]
m:
[1 0 0 1 1 0 1]
[0 1 0 1 1 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (1,2)(6,7), (2,6)(4,5), (2,5)(4,6) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 4, 3, 2, 6, 5]
[0, 1, 5, 3, 6, 2, 4]
[0, 2, 1, 6, 4, 5, 3]
[0, 1, 6, 3, 5, 4, 2]
orbits:
1110100
1011100
word: 1011100

combo: 0000011

temp: 0000011

orbit_checks[temp>>log2radix]= 0001010

word: 0101000

combo: 0000010

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 7
ortho basis:
0001010
0001100
1010000
1100000

B_can_lab before row reduction:
0001111

B_can_lab after row reduction:
0001111
101011000011001

word generated as sum over rows of ortho_basis starting at 2: 0110000
gate: 0000001
k_gate: 0000011
nonzero_gate: 1110000
radix_gate: 0011111

Starting main loop:
word: 0110000

combo: 0000000

word: 0111010

combo: 0000001

word: 0110110

combo: 0000011

word: 0111100

combo: 0000010

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 5
ortho basis:
01010
01100

B_can_lab before row reduction:
01111

B_can_lab after row reduction:
01111
101011000011001

word generated as sum over rows of ortho_basis starting at 2: 00000
gate: 00001
k_gate: 00011
nonzero_gate: 10000
radix_gate: 11111

Starting main loop:
word: 00000

combo: 00000

word: 01010

combo: 00001

word: 00110

combo: 00011

word: 01100

combo: 00010

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 6
ortho basis:
001010
001100
110000

B_can_lab before row reduction:
001111

B_can_lab after row reduction:
001111
101011000011001

word generated as sum over rows of ortho_basis starting at 2: 110000
gate: 000001
k_gate: 000011
nonzero_gate: 110000
radix_gate: 011111

Starting main loop:
word: 110000

combo: 000000

word: 111010

combo: 000001

temp: 000001

orbit_checks[temp>>log2radix]= 000000

passed if statements
temp basis:
110101
rs list:
1 0 1 0 1 1 
B_aug:
[1 1 1 1 0 0]
[0 1 0 1 1 1]
m:
[1 0 1 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (5,6), (2,4)(5,6), (1,3)(5,6), (1,5,3,6) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 3, 2, 4, 5]
[1, 4, 3, 5, 0, 2]
orbits:
111010
110110
111100
word: 110110

combo: 000011

temp: 000011

orbit_checks[temp>>log2radix]= 001110

word: 111100

combo: 000010

temp: 000010

orbit_checks[temp>>log2radix]= 001110

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 7
ortho basis:
0001010
0001100
1010000
1100000

B_can_lab before row reduction:
0001111

B_can_lab after row reduction:
0001111
101011000011001

word generated as sum over rows of ortho_basis starting at 2: 0110000
gate: 0000001
k_gate: 0000011
nonzero_gate: 1110000
radix_gate: 0011111

Starting main loop:
word: 0110000

combo: 0000000

word: 0111010

combo: 0000001

word: 0110110

combo: 0000011

word: 0111100

combo: 0000010

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 8
ortho basis:
00001010
00001100
10010000
10100000
11000000

B_can_lab before row reduction:
00001111

B_can_lab after row reduction:
00001111
101011000011001

word generated as sum over rows of ortho_basis starting at 2: 11110000
gate: 00000001
k_gate: 00000011
nonzero_gate: 11110000
radix_gate: 00011111

Starting main loop:
word: 11110000

combo: 00000000

temp: 00000000

orbit_checks[temp>>log2radix]= 00000000

passed if statements
temp basis:
00001111
rs list:
1 1 1 1 0 0 0 0 
B_aug:
[1 1 1 1 0 0 0 0]
[0 0 0 0 1 1 1 1]
m:
[1 1 1 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (7,8), (6,7), (5,6), (3,4), (2,3), (1,2) ] )
Right transversal of automorphism group of B_aug:
[4, 5, 6, 7, 0, 1, 2, 3]
[0, 1, 2, 3, 4, 5, 6, 7]
orbits:
11110000
word: 11111010

combo: 00000001

word: 11110110

combo: 00000011

word: 11111100

combo: 00000010

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 9
ortho basis:
000001010
000001100
100010000
100100000
101000000
110000000

B_can_lab before row reduction:
000001111

B_can_lab after row reduction:
000001111
101011000011001

word generated as sum over rows of ortho_basis starting at 2: 011110000
gate: 000000001
k_gate: 000000011
nonzero_gate: 111110000
radix_gate: 000011111

Starting main loop:
word: 011110000

combo: 000000000

word: 011111010

combo: 000000001

word: 011110110

combo: 000000011

word: 011111100

combo: 000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 10
ortho basis:
0000001010
0000001100
1000010000
1000100000
1001000000
1010000000
1100000000

B_can_lab before row reduction:
0000001111

B_can_lab after row reduction:
0000001111
101011000011001

word generated as sum over rows of ortho_basis starting at 2: 1111110000
gate: 0000000001
k_gate: 0000000011
nonzero_gate: 1111110000
radix_gate: 0000011111

Starting main loop:
word: 1111110000

combo: 0000000000

word: 1111111010

combo: 0000000001

temp: 0000000001

orbit_checks[temp>>log2radix]= 0000000000

passed if statements
temp basis:
1111110101
rs list:
1 0 1 0 1 1 1 1 1 1 
B_aug:
[1 1 1 1 0 0 0 0 0 0]
[0 1 0 1 1 1 1 1 1 1]
m:
[1 0 1 0 1 1 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (6,7), (6,8), (6,9)(7,8), ( 6,10)( 7, 9), ( 5, 6,10)( 7, 9), ( 2, 4)( 6,10)( 7, 9), ( 1, 3)( 6,10)( 7, 9) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 3, 2, 4, 5, 6, 7, 8, 9]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
orbits:
1111111010
1111110110
1111111100
word: 1111110110

combo: 0000000011

temp: 0000000011

orbit_checks[temp>>log2radix]= 0000001110

word: 1111111100

combo: 0000000010

temp: 0000000010

orbit_checks[temp>>log2radix]= 0000001110

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 11
ortho basis:
00000001010
00000001100
10000010000
10000100000
10001000000
10010000000
10100000000
11000000000

B_can_lab before row reduction:
00000001111

B_can_lab after row reduction:
00000001111
101011000011001

word generated as sum over rows of ortho_basis starting at 2: 01111110000
gate: 00000000001
k_gate: 00000000011
nonzero_gate: 11111110000
radix_gate: 00000011111

Starting main loop:
word: 01111110000

combo: 00000000000

word: 01111111010

combo: 00000000001

word: 01111110110

combo: 00000000011

word: 01111111100

combo: 00000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 12
ortho basis:
000000001010
000000001100
100000010000
100000100000
100001000000
100010000000
100100000000
101000000000
110000000000

B_can_lab before row reduction:
000000001111

B_can_lab after row reduction:
000000001111
101011000011001

word generated as sum over rows of ortho_basis starting at 2: 111111110000
gate: 000000000001
k_gate: 000000000011
nonzero_gate: 111111110000
radix_gate: 000000011111

Starting main loop:
word: 111111110000

combo: 000000000000

temp: 000000000000

orbit_checks[temp>>log2radix]= 000000000000

passed if statements
temp basis:
111111110000
rs list:
0 0 0 0 1 1 1 1 1 1 1 1 
B_aug:
[1 1 1 1 0 0 0 0 0 0 0 0]
[0 0 0 0 1 1 1 1 1 1 1 1]
m:
[0 0 0 0 1 1 1 1 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,12), (10,11), ( 9,10), (8,9), (7,8), (6,7), (5,6), (3,4), (2,3), (1,2) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
orbits:
111111110000
word: 111111111010

combo: 000000000001

word: 111111110110

combo: 000000000011

word: 111111111100

combo: 000000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1 1 1 1 1]
limit on degree (length): 9
ortho basis:
010000010
010000100
010001000
010010000
010100000
011000000

B_can_lab before row reduction:
011111111

B_can_lab after row reduction:
011111111
101011000011001

word generated as sum over rows of ortho_basis starting at 6: 000000000
gate: 000000001
k_gate: 000111111
nonzero_gate: 100000000
radix_gate: 000011111

Starting main loop:
word: 000000000

combo: 000000000

word: 010000010

combo: 000000001

word: 000000110

combo: 000000011

word: 010000100

combo: 000000010

word: 000001100

combo: 000000110

word: 010001110

combo: 000000111

word: 000001010

combo: 000000101

word: 010001000

combo: 000000100

word: 000011000

combo: 000001100

word: 010011010

combo: 000001101

word: 000011110

combo: 000001111

word: 010011100

combo: 000001110

word: 000010100

combo: 000001010

word: 010010110

combo: 000001011

word: 000010010

combo: 000001001

word: 010010000

combo: 000001000

word: 000110000

combo: 000011000

word: 010110010

combo: 000011001

word: 000110110

combo: 000011011

word: 010110100

combo: 000011010

word: 000111100

combo: 000011110

word: 010111110

combo: 000011111

word: 000111010

combo: 000011101

word: 010111000

combo: 000011100

word: 000101000

combo: 000010100

word: 010101010

combo: 000010101

word: 000101110

combo: 000010111

word: 010101100

combo: 000010110

word: 000100100

combo: 000010010

word: 010100110

combo: 000010011

word: 000100010

combo: 000010001

word: 010100000

combo: 000010000

word: 001100000

combo: 000110000

word: 011100010

combo: 000110001

word: 001100110

combo: 000110011

word: 011100100

combo: 000110010

word: 001101100

combo: 000110110

word: 011101110

combo: 000110111

word: 001101010

combo: 000110101

word: 011101000

combo: 000110100

word: 001111000

combo: 000111100

word: 011111010

combo: 000111101

word: 001111110

combo: 000111111

word: 011111100

combo: 000111110

word: 001110100

combo: 000111010

word: 011110110

combo: 000111011

word: 001110010

combo: 000111001

word: 011110000

combo: 000111000

word: 001010000

combo: 000101000

word: 011010010

combo: 000101001

word: 001010110

combo: 000101011

word: 011010100

combo: 000101010

word: 001011100

combo: 000101110

word: 011011110

combo: 000101111

word: 001011010

combo: 000101101

word: 011011000

combo: 000101100

word: 001001000

combo: 000100100

word: 011001010

combo: 000100101

word: 001001110

combo: 000100111

word: 011001100

combo: 000100110

word: 001000100

combo: 000100010

word: 011000110

combo: 000100011

word: 001000010

combo: 000100001

word: 011000000

combo: 000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1 1 1 1 1]
limit on degree (length): 10
ortho basis:
0010000010
0010000100
0010001000
0010010000
0010100000
0011000000
1100000000

B_can_lab before row reduction:
0011111111

B_can_lab after row reduction:
0011111111
101011000011001

word generated as sum over rows of ortho_basis starting at 6: 1100000000
gate: 0000000001
k_gate: 0000111111
nonzero_gate: 1100000000
radix_gate: 0000011111

Starting main loop:
word: 1100000000

combo: 0000000000

word: 1110000010

combo: 0000000001

temp: 0000000001

orbit_checks[temp>>log2radix]= 0000000000

passed if statements
temp basis:
0011111111
rs list:
1 1 1 1 1 1 1 1 0 0 
B_aug:
[1 1 1 1 1 1 1 1 0 0]
[0 1 0 0 0 0 0 1 1 1]
m:
[1 1 1 1 1 1 1 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (3,4), (3,5), (3,6)(4,5), (3,7)(4,6), (1,3,7)(4,6), ( 3, 7)( 4, 6)( 9,10), ( 2, 8)( 3, 7)( 4, 6)( 9,10) ] )
Right transversal of automorphism group of B_aug:
[0, 8, 2, 3, 4, 5, 6, 9, 1, 7]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
orbits:
1110000010
1101000010
1110000100
1101111110
1100100010
1101000100
1110111110
1110001000
1100010010
1100100100
1111011110
1101001000
1110010000
1100001010
1100010100
1111101110
1100101000
1101010000
1110100000
1100000110
1100001100
1111110110
1100011000
1100110000
1101100000
1111000000
1111111010
1111111100
word: 1100000110

combo: 0000000011

temp: 0000000011

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110000100

combo: 0000000010

temp: 0000000010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1100001100

combo: 0000000110

temp: 0000000110

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110001110

combo: 0000000111

word: 1100001010

combo: 0000000101

temp: 0000000101

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110001000

combo: 0000000100

temp: 0000000100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1100011000

combo: 0000001100

temp: 0000001100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110011010

combo: 0000001101

word: 1100011110

combo: 0000001111

word: 1110011100

combo: 0000001110

word: 1100010100

combo: 0000001010

temp: 0000001010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110010110

combo: 0000001011

word: 1100010010

combo: 0000001001

temp: 0000001001

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110010000

combo: 0000001000

temp: 0000001000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1100110000

combo: 0000011000

temp: 0000011000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110110010

combo: 0000011001

word: 1100110110

combo: 0000011011

word: 1110110100

combo: 0000011010

word: 1100111100

combo: 0000011110

word: 1110111110

combo: 0000011111

temp: 0000011111

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1100111010

combo: 0000011101

word: 1110111000

combo: 0000011100

word: 1100101000

combo: 0000010100

temp: 0000010100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110101010

combo: 0000010101

word: 1100101110

combo: 0000010111

word: 1110101100

combo: 0000010110

word: 1100100100

combo: 0000010010

temp: 0000010010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110100110

combo: 0000010011

word: 1100100010

combo: 0000010001

temp: 0000010001

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110100000

combo: 0000010000

temp: 0000010000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1101100000

combo: 0000110000

temp: 0000110000

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111100010

combo: 0000110001

word: 1101100110

combo: 0000110011

word: 1111100100

combo: 0000110010

word: 1101101100

combo: 0000110110

word: 1111101110

combo: 0000110111

temp: 0000110111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1101101010

combo: 0000110101

word: 1111101000

combo: 0000110100

word: 1101111000

combo: 0000111100

word: 1111111010

combo: 0000111101

temp: 0000111101

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1101111110

combo: 0000111111

temp: 0000111111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111111100

combo: 0000111110

temp: 0000111110

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1101110100

combo: 0000111010

word: 1111110110

combo: 0000111011

temp: 0000111011

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1101110010

combo: 0000111001

word: 1111110000

combo: 0000111000

word: 1101010000

combo: 0000101000

temp: 0000101000

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111010010

combo: 0000101001

word: 1101010110

combo: 0000101011

word: 1111010100

combo: 0000101010

word: 1101011100

combo: 0000101110

word: 1111011110

combo: 0000101111

temp: 0000101111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1101011010

combo: 0000101101

word: 1111011000

combo: 0000101100

word: 1101001000

combo: 0000100100

temp: 0000100100

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111001010

combo: 0000100101

word: 1101001110

combo: 0000100111

word: 1111001100

combo: 0000100110

word: 1101000100

combo: 0000100010

temp: 0000100010

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111000110

combo: 0000100011

word: 1101000010

combo: 0000100001

temp: 0000100001

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111000000

combo: 0000100000

temp: 0000100000

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1 1 1 1 1]
limit on degree (length): 11
ortho basis:
00010000010
00010000100
00010001000
00010010000
00010100000
00011000000
10100000000
11000000000

B_can_lab before row reduction:
00011111111

B_can_lab after row reduction:
00011111111
101011000011001

word generated as sum over rows of ortho_basis starting at 6: 01100000000
gate: 00000000001
k_gate: 00000111111
nonzero_gate: 11100000000
radix_gate: 00000011111

Starting main loop:
word: 01100000000

combo: 00000000000

word: 01110000010

combo: 00000000001

word: 01100000110

combo: 00000000011

word: 01110000100

combo: 00000000010

word: 01100001100

combo: 00000000110

word: 01110001110

combo: 00000000111

word: 01100001010

combo: 00000000101

word: 01110001000

combo: 00000000100

word: 01100011000

combo: 00000001100

word: 01110011010

combo: 00000001101

word: 01100011110

combo: 00000001111

word: 01110011100

combo: 00000001110

word: 01100010100

combo: 00000001010

word: 01110010110

combo: 00000001011

word: 01100010010

combo: 00000001001

word: 01110010000

combo: 00000001000

word: 01100110000

combo: 00000011000

word: 01110110010

combo: 00000011001

word: 01100110110

combo: 00000011011

word: 01110110100

combo: 00000011010

word: 01100111100

combo: 00000011110

word: 01110111110

combo: 00000011111

word: 01100111010

combo: 00000011101

word: 01110111000

combo: 00000011100

word: 01100101000

combo: 00000010100

word: 01110101010

combo: 00000010101

word: 01100101110

combo: 00000010111

word: 01110101100

combo: 00000010110

word: 01100100100

combo: 00000010010

word: 01110100110

combo: 00000010011

word: 01100100010

combo: 00000010001

word: 01110100000

combo: 00000010000

word: 01101100000

combo: 00000110000

word: 01111100010

combo: 00000110001

word: 01101100110

combo: 00000110011

word: 01111100100

combo: 00000110010

word: 01101101100

combo: 00000110110

word: 01111101110

combo: 00000110111

word: 01101101010

combo: 00000110101

word: 01111101000

combo: 00000110100

word: 01101111000

combo: 00000111100

word: 01111111010

combo: 00000111101

word: 01101111110

combo: 00000111111

word: 01111111100

combo: 00000111110

word: 01101110100

combo: 00000111010

word: 01111110110

combo: 00000111011

word: 01101110010

combo: 00000111001

word: 01111110000

combo: 00000111000

word: 01101010000

combo: 00000101000

word: 01111010010

combo: 00000101001

word: 01101010110

combo: 00000101011

word: 01111010100

combo: 00000101010

word: 01101011100

combo: 00000101110

word: 01111011110

combo: 00000101111

word: 01101011010

combo: 00000101101

word: 01111011000

combo: 00000101100

word: 01101001000

combo: 00000100100

word: 01111001010

combo: 00000100101

word: 01101001110

combo: 00000100111

word: 01111001100

combo: 00000100110

word: 01101000100

combo: 00000100010

word: 01111000110

combo: 00000100011

word: 01101000010

combo: 00000100001

word: 01111000000

combo: 00000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1 1 1 1 1]
limit on degree (length): 12
ortho basis:
000010000010
000010000100
000010001000
000010010000
000010100000
000011000000
100100000000
101000000000
110000000000

B_can_lab before row reduction:
000011111111

B_can_lab after row reduction:
000011111111
101011000011001

word generated as sum over rows of ortho_basis starting at 6: 111100000000
gate: 000000000001
k_gate: 000000111111
nonzero_gate: 111100000000
radix_gate: 000000011111

Starting main loop:
word: 111100000000

combo: 000000000000

temp: 000000000000

orbit_checks[temp>>log2radix]= 000000000000

passed if statements
temp basis:
000011111111
rs list:
1 1 1 1 1 1 1 1 0 0 0 0 
B_aug:
[1 1 1 1 1 1 1 1 0 0 0 0]
[0 0 0 0 0 0 0 0 1 1 1 1]
m:
[1 1 1 1 1 1 1 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,12), (10,11), ( 9,10), (7,8), (6,7), (5,6), (4,5), (3,4), (2,3), (1,2) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
orbits:
111100000000
word: 111110000010

combo: 000000000001

word: 111100000110

combo: 000000000011

word: 111110000100

combo: 000000000010

word: 111100001100

combo: 000000000110

word: 111110001110

combo: 000000000111

temp: 000000000111

orbit_checks[temp>>log2radix]= 000000000001

passed if statements
temp basis:
111101110001
rs list:
1 0 0 0 1 1 1 0 1 1 1 1 
B_aug:
[1 1 1 1 1 1 1 1 0 0 0 0]
[0 1 1 1 0 0 0 1 1 1 1 1]
m:
[1 0 0 0 1 1 1 0 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (4,8), (2,4), (2,3), ( 2, 3)(10,11), ( 2, 3)(10,11,12), ( 2, 3)( 9,10,11,12), ( 2, 3)( 5, 6)(10,11,12), ( 2, 3)( 5, 6, 7)(10,11,12), ( 1, 5, 6, 7)( 2, 3)(10,11,12), ( 1, 9)( 2, 3)( 5,11, 7,10, 6,12) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 4, 5, 2, 3, 7, 6, 8, 9, 10, 11]
[1, 8, 9, 10, 2, 3, 7, 11, 0, 4, 5, 6]
orbits:
111110001110
111101001110
111110010110
111101110010
111100101110
111101010110
111110110010
111110100110
111110011010
111101101010
111101110100
111100011110
111100110110
111111010010
111101100110
111101011010
111110101010
111110110100
111111000110
111110011100
111101101100
111101111000
111111100010
111100111010
111111001010
111111010100
111101011100
111110101100
111110111000
111111100100
111100111100
111111001100
111111011000
111111101000
111111110000
word: 111100001010

combo: 000000000101

word: 111110001000

combo: 000000000100

word: 111100011000

combo: 000000001100

word: 111110011010

combo: 000000001101

temp: 000000001101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111100011110

combo: 000000001111

temp: 000000001111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111110011100

combo: 000000001110

temp: 000000001110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111100010100

combo: 000000001010

word: 111110010110

combo: 000000001011

temp: 000000001011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111100010010

combo: 000000001001

word: 111110010000

combo: 000000001000

word: 111100110000

combo: 000000011000

word: 111110110010

combo: 000000011001

temp: 000000011001

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111100110110

combo: 000000011011

temp: 000000011011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111110110100

combo: 000000011010

temp: 000000011010

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111100111100

combo: 000000011110

temp: 000000011110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111110111110

combo: 000000011111

word: 111100111010

combo: 000000011101

temp: 000000011101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111110111000

combo: 000000011100

temp: 000000011100

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111100101000

combo: 000000010100

word: 111110101010

combo: 000000010101

temp: 000000010101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111100101110

combo: 000000010111

temp: 000000010111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111110101100

combo: 000000010110

temp: 000000010110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111100100100

combo: 000000010010

word: 111110100110

combo: 000000010011

temp: 000000010011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111100100010

combo: 000000010001

word: 111110100000

combo: 000000010000

word: 111101100000

combo: 000000110000

word: 111111100010

combo: 000000110001

temp: 000000110001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101100110

combo: 000000110011

temp: 000000110011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111100100

combo: 000000110010

temp: 000000110010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101101100

combo: 000000110110

temp: 000000110110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111101110

combo: 000000110111

word: 111101101010

combo: 000000110101

temp: 000000110101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111101000

combo: 000000110100

temp: 000000110100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101111000

combo: 000000111100

temp: 000000111100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111111010

combo: 000000111101

word: 111101111110

combo: 000000111111

word: 111111111100

combo: 000000111110

word: 111101110100

combo: 000000111010

temp: 000000111010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111110110

combo: 000000111011

word: 111101110010

combo: 000000111001

temp: 000000111001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111110000

combo: 000000111000

temp: 000000111000

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101010000

combo: 000000101000

word: 111111010010

combo: 000000101001

temp: 000000101001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101010110

combo: 000000101011

temp: 000000101011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111010100

combo: 000000101010

temp: 000000101010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101011100

combo: 000000101110

temp: 000000101110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111011110

combo: 000000101111

word: 111101011010

combo: 000000101101

temp: 000000101101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111011000

combo: 000000101100

temp: 000000101100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101001000

combo: 000000100100

word: 111111001010

combo: 000000100101

temp: 000000100101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101001110

combo: 000000100111

temp: 000000100111

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111001100

combo: 000000100110

temp: 000000100110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101000100

combo: 000000100010

word: 111111000110

combo: 000000100011

temp: 000000100011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101000010

combo: 000000100001

word: 111111000000

combo: 000000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 5
ortho basis:
01010
01100

B_can_lab before row reduction:
01111

B_can_lab after row reduction:
01111
101011000011001

word generated as sum over rows of ortho_basis starting at 2: 00000
gate: 00001
k_gate: 00011
nonzero_gate: 10000
radix_gate: 11111

Starting main loop:
word: 00000

combo: 00000

word: 01010

combo: 00001

word: 00110

combo: 00011

word: 01100

combo: 00010

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 6
ortho basis:
001010
001100
110000

B_can_lab before row reduction:
001111

B_can_lab after row reduction:
001111
101011000011001

word generated as sum over rows of ortho_basis starting at 2: 110000
gate: 000001
k_gate: 000011
nonzero_gate: 110000
radix_gate: 011111

Starting main loop:
word: 110000

combo: 000000

word: 111010

combo: 000001

temp: 000001

orbit_checks[temp>>log2radix]= 000000

passed if statements
temp basis:
110101
rs list:
1 0 1 0 1 1 
B_aug:
[1 1 1 1 0 0]
[0 1 0 1 1 1]
m:
[1 0 1 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (5,6), (2,4)(5,6), (1,3)(5,6), (1,5,3,6) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 3, 2, 4, 5]
[1, 4, 3, 5, 0, 2]
orbits:
111010
110110
111100
word: 110110

combo: 000011

temp: 000011

orbit_checks[temp>>log2radix]= 001110

word: 111100

combo: 000010

temp: 000010

orbit_checks[temp>>log2radix]= 001110

exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 0 1 1]
[0 1 0 1 1 1]
limit on degree (length): 7
ortho basis:
1110100
0101000

B_can_lab before row reduction:
0011011
0111100

B_can_lab after row reduction:
0011011
0111100

word generated as sum over rows of ortho_basis starting at 2: 0000000
gate: 0000011
k_gate: 0000011
nonzero_gate: 1000000
radix_gate: 0011111

Starting main loop:
word: 0000000

combo: 0000000

word: 1110100

combo: 0000001

temp: 0000001

orbit_checks[temp>>log2radix]= 0000000

passed if statements
temp basis:
1011001
0111010
rs list:
1 0 0 1 1 0 1 
0 1 0 1 1 1 0 
B_aug:
[1 0 1 1 0 1 0]
[0 1 0 1 1 1 0]
[0 0 1 0 1 1 1]
m:
[1 0 0 1 1 0 1]
[0 1 0 1 1 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (1,2)(6,7), (2,6)(4,5), (2,5)(4,6) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 4, 3, 2, 6, 5]
[0, 1, 5, 3, 6, 2, 4]
[0, 2, 1, 6, 4, 5, 3]
[0, 1, 6, 3, 5, 4, 2]
orbits:
1110100
1011100
word: 1011100

combo: 0000011

temp: 0000011

orbit_checks[temp>>log2radix]= 0001010

word: 0101000

combo: 0000010

exiting generate_children
in generate_children
Given code in standard form:
[1 0 0 1 1 0 1]
[0 1 0 1 1 1 0]
[0 0 1 0 1 1 1]
limit on degree (length): 8
ortho basis:
11101000

B_can_lab before row reduction:
01010101
00110110
01111000

B_can_lab after row reduction:
01010101
00110110
01111000

word generated as sum over rows of ortho_basis starting at 1: 00000000
gate: 00000111
k_gate: 00000001
nonzero_gate: 10000000
radix_gate: 00011111

Starting main loop:
word: 00000000

combo: 00000000

word: 11101000

combo: 00000001

temp: 00000001

orbit_checks[temp>>log2radix]= 00000000

passed if statements
temp basis:
10110001
11010010
01110100
rs list:
1 0 0 0 1 1 0 1 
0 1 0 0 1 0 1 1 
0 0 1 0 1 1 1 0 
B_aug:
[1 0 0 1 1 0 1 0]
[0 1 0 1 1 1 0 0]
[0 0 1 0 1 1 1 0]
[0 0 0 1 0 1 1 1]
m:
[1 0 0 0 1 1 0 1]
[0 1 0 0 1 0 1 1]
[0 0 1 0 1 1 1 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (2,3)(6,8), (1,2)(6,7), (3,7)(5,6) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 5, 4, 3, 7, 6]
[0, 1, 2, 6, 4, 7, 3, 5]
[0, 1, 3, 2, 7, 5, 6, 4]
[0, 1, 2, 7, 4, 6, 5, 3]
orbits:
11101000
exiting generate_children
in generate_children
Given code in standard form:
[1 0 1 0 1 1]
[0 1 0 1 1 1]
limit on degree (length): 8
ortho basis:
10110100
00101000
11000000

B_can_lab before row reduction:
00011011
00111100

B_can_lab after row reduction:
00011011
00111100

word generated as sum over rows of ortho_basis starting at 2: 11000000
gate: 00000011
k_gate: 00000011
nonzero_gate: 11000000
radix_gate: 00011111

Starting main loop:
word: 11000000

combo: 00000000

word: 01110100

combo: 00000001

word: 01011100

combo: 00000011

word: 11101000

combo: 00000010

temp: 00000010

orbit_checks[temp>>log2radix]= 00000000

passed if statements
temp basis:
11000101
11010010
rs list:
1 0 1 0 0 0 1 1 
0 1 0 0 1 0 1 1 
B_aug:
[1 0 1 1 0 1 0 0]
[0 1 0 1 1 1 0 0]
[0 0 0 1 0 1 1 1]
m:
[1 0 1 0 0 0 1 1]
[0 1 0 0 1 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (7,8), (4,6), (2,5), (2,7)(5,8), (1,2)(3,5) ] )
Right transversal of automorphism group of B_aug:
[3, 1, 5, 0, 4, 2, 6, 7]
[3, 0, 5, 1, 2, 4, 6, 7]
[3, 0, 5, 6, 2, 7, 1, 4]
orbits:
11101000
exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 7
ortho basis:
0001010
0001100
1010000
1100000

B_can_lab before row reduction:
0001111

B_can_lab after row reduction:
0001111
101011000011001

word generated as sum over rows of ortho_basis starting at 2: 0110000
gate: 0000001
k_gate: 0000011
nonzero_gate: 1110000
radix_gate: 0011111

Starting main loop:
word: 0110000

combo: 0000000

word: 0111010

combo: 0000001

word: 0110110

combo: 0000011

word: 0111100

combo: 0000010

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 8
ortho basis:
00001010
00001100
10010000
10100000
11000000

B_can_lab before row reduction:
00001111

B_can_lab after row reduction:
00001111
101011000011001

word generated as sum over rows of ortho_basis starting at 2: 11110000
gate: 00000001
k_gate: 00000011
nonzero_gate: 11110000
radix_gate: 00011111

Starting main loop:
word: 11110000

combo: 00000000

temp: 00000000

orbit_checks[temp>>log2radix]= 00000000

passed if statements
temp basis:
00001111
rs list:
1 1 1 1 0 0 0 0 
B_aug:
[1 1 1 1 0 0 0 0]
[0 0 0 0 1 1 1 1]
m:
[1 1 1 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (7,8), (6,7), (5,6), (3,4), (2,3), (1,2) ] )
Right transversal of automorphism group of B_aug:
[4, 5, 6, 7, 0, 1, 2, 3]
[0, 1, 2, 3, 4, 5, 6, 7]
orbits:
11110000
word: 11111010

combo: 00000001

word: 11110110

combo: 00000011

word: 11111100

combo: 00000010

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 5
ortho basis:
01010
01100

B_can_lab before row reduction:
01111

B_can_lab after row reduction:
01111
101011000011001

word generated as sum over rows of ortho_basis starting at 2: 00000
gate: 00001
k_gate: 00011
nonzero_gate: 10000
radix_gate: 11111

Starting main loop:
word: 00000

combo: 00000

word: 01010

combo: 00001

word: 00110

combo: 00011

word: 01100

combo: 00010

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 6
ortho basis:
001010
001100
110000

B_can_lab before row reduction:
001111

B_can_lab after row reduction:
001111
101011000011001

word generated as sum over rows of ortho_basis starting at 2: 110000
gate: 000001
k_gate: 000011
nonzero_gate: 110000
radix_gate: 011111

Starting main loop:
word: 110000

combo: 000000

word: 111010

combo: 000001

temp: 000001

orbit_checks[temp>>log2radix]= 000000

passed if statements
temp basis:
110101
rs list:
1 0 1 0 1 1 
B_aug:
[1 1 1 1 0 0]
[0 1 0 1 1 1]
m:
[1 0 1 0 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (5,6), (2,4)(5,6), (1,3)(5,6), (1,5,3,6) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 3, 2, 4, 5]
[1, 4, 3, 5, 0, 2]
orbits:
111010
110110
111100
word: 110110

combo: 000011

temp: 000011

orbit_checks[temp>>log2radix]= 001110

word: 111100

combo: 000010

temp: 000010

orbit_checks[temp>>log2radix]= 001110

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 7
ortho basis:
0001010
0001100
1010000
1100000

B_can_lab before row reduction:
0001111

B_can_lab after row reduction:
0001111
101011000011001

word generated as sum over rows of ortho_basis starting at 2: 0110000
gate: 0000001
k_gate: 0000011
nonzero_gate: 1110000
radix_gate: 0011111

Starting main loop:
word: 0110000

combo: 0000000

word: 0111010

combo: 0000001

word: 0110110

combo: 0000011

word: 0111100

combo: 0000010

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 8
ortho basis:
00001010
00001100
10010000
10100000
11000000

B_can_lab before row reduction:
00001111

B_can_lab after row reduction:
00001111
101011000011001

word generated as sum over rows of ortho_basis starting at 2: 11110000
gate: 00000001
k_gate: 00000011
nonzero_gate: 11110000
radix_gate: 00011111

Starting main loop:
word: 11110000

combo: 00000000

temp: 00000000

orbit_checks[temp>>log2radix]= 00000000

passed if statements
temp basis:
00001111
rs list:
1 1 1 1 0 0 0 0 
B_aug:
[1 1 1 1 0 0 0 0]
[0 0 0 0 1 1 1 1]
m:
[1 1 1 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (7,8), (6,7), (5,6), (3,4), (2,3), (1,2) ] )
Right transversal of automorphism group of B_aug:
[4, 5, 6, 7, 0, 1, 2, 3]
[0, 1, 2, 3, 4, 5, 6, 7]
orbits:
11110000
word: 11111010

combo: 00000001

word: 11110110

combo: 00000011

word: 11111100

combo: 00000010

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 9
ortho basis:
000001010
000001100
100010000
100100000
101000000
110000000

B_can_lab before row reduction:
000001111

B_can_lab after row reduction:
000001111
101011000011001

word generated as sum over rows of ortho_basis starting at 2: 011110000
gate: 000000001
k_gate: 000000011
nonzero_gate: 111110000
radix_gate: 000011111

Starting main loop:
word: 011110000

combo: 000000000

word: 011111010

combo: 000000001

word: 011110110

combo: 000000011

word: 011111100

combo: 000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 10
ortho basis:
0000001010
0000001100
1000010000
1000100000
1001000000
1010000000
1100000000

B_can_lab before row reduction:
0000001111

B_can_lab after row reduction:
0000001111
101011000011001

word generated as sum over rows of ortho_basis starting at 2: 1111110000
gate: 0000000001
k_gate: 0000000011
nonzero_gate: 1111110000
radix_gate: 0000011111

Starting main loop:
word: 1111110000

combo: 0000000000

word: 1111111010

combo: 0000000001

temp: 0000000001

orbit_checks[temp>>log2radix]= 0000000000

passed if statements
temp basis:
1111110101
rs list:
1 0 1 0 1 1 1 1 1 1 
B_aug:
[1 1 1 1 0 0 0 0 0 0]
[0 1 0 1 1 1 1 1 1 1]
m:
[1 0 1 0 1 1 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (6,7), (6,8), (6,9)(7,8), ( 6,10)( 7, 9), ( 5, 6,10)( 7, 9), ( 2, 4)( 6,10)( 7, 9), ( 1, 3)( 6,10)( 7, 9) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 3, 2, 4, 5, 6, 7, 8, 9]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
orbits:
1111111010
1111110110
1111111100
word: 1111110110

combo: 0000000011

temp: 0000000011

orbit_checks[temp>>log2radix]= 0000001110

word: 1111111100

combo: 0000000010

temp: 0000000010

orbit_checks[temp>>log2radix]= 0000001110

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 11
ortho basis:
00000001010
00000001100
10000010000
10000100000
10001000000
10010000000
10100000000
11000000000

B_can_lab before row reduction:
00000001111

B_can_lab after row reduction:
00000001111
101011000011001

word generated as sum over rows of ortho_basis starting at 2: 01111110000
gate: 00000000001
k_gate: 00000000011
nonzero_gate: 11111110000
radix_gate: 00000011111

Starting main loop:
word: 01111110000

combo: 00000000000

word: 01111111010

combo: 00000000001

word: 01111110110

combo: 00000000011

word: 01111111100

combo: 00000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1]
limit on degree (length): 12
ortho basis:
000000001010
000000001100
100000010000
100000100000
100001000000
100010000000
100100000000
101000000000
110000000000

B_can_lab before row reduction:
000000001111

B_can_lab after row reduction:
000000001111
101011000011001

word generated as sum over rows of ortho_basis starting at 2: 111111110000
gate: 000000000001
k_gate: 000000000011
nonzero_gate: 111111110000
radix_gate: 000000011111

Starting main loop:
word: 111111110000

combo: 000000000000

temp: 000000000000

orbit_checks[temp>>log2radix]= 000000000000

passed if statements
temp basis:
111111110000
rs list:
0 0 0 0 1 1 1 1 1 1 1 1 
B_aug:
[1 1 1 1 0 0 0 0 0 0 0 0]
[0 0 0 0 1 1 1 1 1 1 1 1]
m:
[0 0 0 0 1 1 1 1 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,12), (10,11), ( 9,10), (8,9), (7,8), (6,7), (5,6), (3,4), (2,3), (1,2) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
orbits:
111111110000
word: 111111111010

combo: 000000000001

word: 111111110110

combo: 000000000011

word: 111111111100

combo: 000000000010

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1 1 1 1 1]
limit on degree (length): 9
ortho basis:
010000010
010000100
010001000
010010000
010100000
011000000

B_can_lab before row reduction:
011111111

B_can_lab after row reduction:
011111111
101011000011001

word generated as sum over rows of ortho_basis starting at 6: 000000000
gate: 000000001
k_gate: 000111111
nonzero_gate: 100000000
radix_gate: 000011111

Starting main loop:
word: 000000000

combo: 000000000

word: 010000010

combo: 000000001

word: 000000110

combo: 000000011

word: 010000100

combo: 000000010

word: 000001100

combo: 000000110

word: 010001110

combo: 000000111

word: 000001010

combo: 000000101

word: 010001000

combo: 000000100

word: 000011000

combo: 000001100

word: 010011010

combo: 000001101

word: 000011110

combo: 000001111

word: 010011100

combo: 000001110

word: 000010100

combo: 000001010

word: 010010110

combo: 000001011

word: 000010010

combo: 000001001

word: 010010000

combo: 000001000

word: 000110000

combo: 000011000

word: 010110010

combo: 000011001

word: 000110110

combo: 000011011

word: 010110100

combo: 000011010

word: 000111100

combo: 000011110

word: 010111110

combo: 000011111

word: 000111010

combo: 000011101

word: 010111000

combo: 000011100

word: 000101000

combo: 000010100

word: 010101010

combo: 000010101

word: 000101110

combo: 000010111

word: 010101100

combo: 000010110

word: 000100100

combo: 000010010

word: 010100110

combo: 000010011

word: 000100010

combo: 000010001

word: 010100000

combo: 000010000

word: 001100000

combo: 000110000

word: 011100010

combo: 000110001

word: 001100110

combo: 000110011

word: 011100100

combo: 000110010

word: 001101100

combo: 000110110

word: 011101110

combo: 000110111

word: 001101010

combo: 000110101

word: 011101000

combo: 000110100

word: 001111000

combo: 000111100

word: 011111010

combo: 000111101

word: 001111110

combo: 000111111

word: 011111100

combo: 000111110

word: 001110100

combo: 000111010

word: 011110110

combo: 000111011

word: 001110010

combo: 000111001

word: 011110000

combo: 000111000

word: 001010000

combo: 000101000

word: 011010010

combo: 000101001

word: 001010110

combo: 000101011

word: 011010100

combo: 000101010

word: 001011100

combo: 000101110

word: 011011110

combo: 000101111

word: 001011010

combo: 000101101

word: 011011000

combo: 000101100

word: 001001000

combo: 000100100

word: 011001010

combo: 000100101

word: 001001110

combo: 000100111

word: 011001100

combo: 000100110

word: 001000100

combo: 000100010

word: 011000110

combo: 000100011

word: 001000010

combo: 000100001

word: 011000000

combo: 000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1 1 1 1 1]
limit on degree (length): 10
ortho basis:
0010000010
0010000100
0010001000
0010010000
0010100000
0011000000
1100000000

B_can_lab before row reduction:
0011111111

B_can_lab after row reduction:
0011111111
101011000011001

word generated as sum over rows of ortho_basis starting at 6: 1100000000
gate: 0000000001
k_gate: 0000111111
nonzero_gate: 1100000000
radix_gate: 0000011111

Starting main loop:
word: 1100000000

combo: 0000000000

word: 1110000010

combo: 0000000001

temp: 0000000001

orbit_checks[temp>>log2radix]= 0000000000

passed if statements
temp basis:
0011111111
rs list:
1 1 1 1 1 1 1 1 0 0 
B_aug:
[1 1 1 1 1 1 1 1 0 0]
[0 1 0 0 0 0 0 1 1 1]
m:
[1 1 1 1 1 1 1 1 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (3,4), (3,5), (3,6)(4,5), (3,7)(4,6), (1,3,7)(4,6), ( 3, 7)( 4, 6)( 9,10), ( 2, 8)( 3, 7)( 4, 6)( 9,10) ] )
Right transversal of automorphism group of B_aug:
[0, 8, 2, 3, 4, 5, 6, 9, 1, 7]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
orbits:
1110000010
1101000010
1110000100
1101111110
1100100010
1101000100
1110111110
1110001000
1100010010
1100100100
1111011110
1101001000
1110010000
1100001010
1100010100
1111101110
1100101000
1101010000
1110100000
1100000110
1100001100
1111110110
1100011000
1100110000
1101100000
1111000000
1111111010
1111111100
word: 1100000110

combo: 0000000011

temp: 0000000011

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110000100

combo: 0000000010

temp: 0000000010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1100001100

combo: 0000000110

temp: 0000000110

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110001110

combo: 0000000111

word: 1100001010

combo: 0000000101

temp: 0000000101

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110001000

combo: 0000000100

temp: 0000000100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1100011000

combo: 0000001100

temp: 0000001100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110011010

combo: 0000001101

word: 1100011110

combo: 0000001111

word: 1110011100

combo: 0000001110

word: 1100010100

combo: 0000001010

temp: 0000001010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110010110

combo: 0000001011

word: 1100010010

combo: 0000001001

temp: 0000001001

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110010000

combo: 0000001000

temp: 0000001000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1100110000

combo: 0000011000

temp: 0000011000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110110010

combo: 0000011001

word: 1100110110

combo: 0000011011

word: 1110110100

combo: 0000011010

word: 1100111100

combo: 0000011110

word: 1110111110

combo: 0000011111

temp: 0000011111

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1100111010

combo: 0000011101

word: 1110111000

combo: 0000011100

word: 1100101000

combo: 0000010100

temp: 0000010100

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110101010

combo: 0000010101

word: 1100101110

combo: 0000010111

word: 1110101100

combo: 0000010110

word: 1100100100

combo: 0000010010

temp: 0000010010

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110100110

combo: 0000010011

word: 1100100010

combo: 0000010001

temp: 0000010001

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1110100000

combo: 0000010000

temp: 0000010000

orbit_checks[temp>>log2radix]= 10000001000101110001011101111110

word: 1101100000

combo: 0000110000

temp: 0000110000

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111100010

combo: 0000110001

word: 1101100110

combo: 0000110011

word: 1111100100

combo: 0000110010

word: 1101101100

combo: 0000110110

word: 1111101110

combo: 0000110111

temp: 0000110111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1101101010

combo: 0000110101

word: 1111101000

combo: 0000110100

word: 1101111000

combo: 0000111100

word: 1111111010

combo: 0000111101

temp: 0000111101

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1101111110

combo: 0000111111

temp: 0000111111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111111100

combo: 0000111110

temp: 0000111110

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1101110100

combo: 0000111010

word: 1111110110

combo: 0000111011

temp: 0000111011

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1101110010

combo: 0000111001

word: 1111110000

combo: 0000111000

word: 1101010000

combo: 0000101000

temp: 0000101000

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111010010

combo: 0000101001

word: 1101010110

combo: 0000101011

word: 1111010100

combo: 0000101010

word: 1101011100

combo: 0000101110

word: 1111011110

combo: 0000101111

temp: 0000101111

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1101011010

combo: 0000101101

word: 1111011000

combo: 0000101100

word: 1101001000

combo: 0000100100

temp: 0000100100

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111001010

combo: 0000100101

word: 1101001110

combo: 0000100111

word: 1111001100

combo: 0000100110

word: 1101000100

combo: 0000100010

temp: 0000100010

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111000110

combo: 0000100011

word: 1101000010

combo: 0000100001

temp: 0000100001

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

word: 1111000000

combo: 0000100000

temp: 0000100000

orbit_checks[temp>>log2radix]= 11101000100000011000000100010111

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1 1 1 1 1]
limit on degree (length): 11
ortho basis:
00010000010
00010000100
00010001000
00010010000
00010100000
00011000000
10100000000
11000000000

B_can_lab before row reduction:
00011111111

B_can_lab after row reduction:
00011111111
101011000011001

word generated as sum over rows of ortho_basis starting at 6: 01100000000
gate: 00000000001
k_gate: 00000111111
nonzero_gate: 11100000000
radix_gate: 00000011111

Starting main loop:
word: 01100000000

combo: 00000000000

word: 01110000010

combo: 00000000001

word: 01100000110

combo: 00000000011

word: 01110000100

combo: 00000000010

word: 01100001100

combo: 00000000110

word: 01110001110

combo: 00000000111

word: 01100001010

combo: 00000000101

word: 01110001000

combo: 00000000100

word: 01100011000

combo: 00000001100

word: 01110011010

combo: 00000001101

word: 01100011110

combo: 00000001111

word: 01110011100

combo: 00000001110

word: 01100010100

combo: 00000001010

word: 01110010110

combo: 00000001011

word: 01100010010

combo: 00000001001

word: 01110010000

combo: 00000001000

word: 01100110000

combo: 00000011000

word: 01110110010

combo: 00000011001

word: 01100110110

combo: 00000011011

word: 01110110100

combo: 00000011010

word: 01100111100

combo: 00000011110

word: 01110111110

combo: 00000011111

word: 01100111010

combo: 00000011101

word: 01110111000

combo: 00000011100

word: 01100101000

combo: 00000010100

word: 01110101010

combo: 00000010101

word: 01100101110

combo: 00000010111

word: 01110101100

combo: 00000010110

word: 01100100100

combo: 00000010010

word: 01110100110

combo: 00000010011

word: 01100100010

combo: 00000010001

word: 01110100000

combo: 00000010000

word: 01101100000

combo: 00000110000

word: 01111100010

combo: 00000110001

word: 01101100110

combo: 00000110011

word: 01111100100

combo: 00000110010

word: 01101101100

combo: 00000110110

word: 01111101110

combo: 00000110111

word: 01101101010

combo: 00000110101

word: 01111101000

combo: 00000110100

word: 01101111000

combo: 00000111100

word: 01111111010

combo: 00000111101

word: 01101111110

combo: 00000111111

word: 01111111100

combo: 00000111110

word: 01101110100

combo: 00000111010

word: 01111110110

combo: 00000111011

word: 01101110010

combo: 00000111001

word: 01111110000

combo: 00000111000

word: 01101010000

combo: 00000101000

word: 01111010010

combo: 00000101001

word: 01101010110

combo: 00000101011

word: 01111010100

combo: 00000101010

word: 01101011100

combo: 00000101110

word: 01111011110

combo: 00000101111

word: 01101011010

combo: 00000101101

word: 01111011000

combo: 00000101100

word: 01101001000

combo: 00000100100

word: 01111001010

combo: 00000100101

word: 01101001110

combo: 00000100111

word: 01111001100

combo: 00000100110

word: 01101000100

combo: 00000100010

word: 01111000110

combo: 00000100011

word: 01101000010

combo: 00000100001

word: 01111000000

combo: 00000100000

exiting generate_children
in generate_children
Given code in standard form:
[1 1 1 1 1 1 1 1]
limit on degree (length): 12
ortho basis:
000010000010
000010000100
000010001000
000010010000
000010100000
000011000000
100100000000
101000000000
110000000000

B_can_lab before row reduction:
000011111111

B_can_lab after row reduction:
000011111111
101011000011001

word generated as sum over rows of ortho_basis starting at 6: 111100000000
gate: 000000000001
k_gate: 000000111111
nonzero_gate: 111100000000
radix_gate: 000000011111

Starting main loop:
word: 111100000000

combo: 000000000000

temp: 000000000000

orbit_checks[temp>>log2radix]= 000000000000

passed if statements
temp basis:
000011111111
rs list:
1 1 1 1 1 1 1 1 0 0 0 0 
B_aug:
[1 1 1 1 1 1 1 1 0 0 0 0]
[0 0 0 0 0 0 0 0 1 1 1 1]
m:
[1 1 1 1 1 1 1 1 0 0 0 0]
Intersection of automorphism groups of m and B_aug:
Group( [ (11,12), (10,11), ( 9,10), (7,8), (6,7), (5,6), (4,5), (3,4), (2,3), (1,2) ] )
Right transversal of automorphism group of B_aug:
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
orbits:
111100000000
word: 111110000010

combo: 000000000001

word: 111100000110

combo: 000000000011

word: 111110000100

combo: 000000000010

word: 111100001100

combo: 000000000110

word: 111110001110

combo: 000000000111

temp: 000000000111

orbit_checks[temp>>log2radix]= 000000000001

passed if statements
temp basis:
111101110001
rs list:
1 0 0 0 1 1 1 0 1 1 1 1 
B_aug:
[1 1 1 1 1 1 1 1 0 0 0 0]
[0 1 1 1 0 0 0 1 1 1 1 1]
m:
[1 0 0 0 1 1 1 0 1 1 1 1]
Intersection of automorphism groups of m and B_aug:
Group( [ (4,8), (2,4), (2,3), ( 2, 3)(10,11), ( 2, 3)(10,11,12), ( 2, 3)( 9,10,11,12), ( 2, 3)( 5, 6)(10,11,12), ( 2, 3)( 5, 6, 7)(10,11,12), ( 1, 5, 6, 7)( 2, 3)(10,11,12), ( 1, 9)( 2, 3)( 5,11, 7,10, 6,12) ] )
Right transversal of automorphism group of B_aug:
[1, 0, 4, 5, 2, 3, 7, 6, 8, 9, 10, 11]
[1, 8, 9, 10, 2, 3, 7, 11, 0, 4, 5, 6]
orbits:
111110001110
111101001110
111110010110
111101110010
111100101110
111101010110
111110110010
111110100110
111110011010
111101101010
111101110100
111100011110
111100110110
111111010010
111101100110
111101011010
111110101010
111110110100
111111000110
111110011100
111101101100
111101111000
111111100010
111100111010
111111001010
111111010100
111101011100
111110101100
111110111000
111111100100
111100111100
111111001100
111111011000
111111101000
111111110000
word: 111100001010

combo: 000000000101

word: 111110001000

combo: 000000000100

word: 111100011000

combo: 000000001100

word: 111110011010

combo: 000000001101

temp: 000000001101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111100011110

combo: 000000001111

temp: 000000001111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111110011100

combo: 000000001110

temp: 000000001110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111100010100

combo: 000000001010

word: 111110010110

combo: 000000001011

temp: 000000001011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111100010010

combo: 000000001001

word: 111110010000

combo: 000000001000

word: 111100110000

combo: 000000011000

word: 111110110010

combo: 000000011001

temp: 000000011001

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111100110110

combo: 000000011011

temp: 000000011011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111110110100

combo: 000000011010

temp: 000000011010

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111100111100

combo: 000000011110

temp: 000000011110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111110111110

combo: 000000011111

word: 111100111010

combo: 000000011101

temp: 000000011101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111110111000

combo: 000000011100

temp: 000000011100

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111100101000

combo: 000000010100

word: 111110101010

combo: 000000010101

temp: 000000010101

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111100101110

combo: 000000010111

temp: 000000010111

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111110101100

combo: 000000010110

temp: 000000010110

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111100100100

combo: 000000010010

word: 111110100110

combo: 000000010011

temp: 000000010011

orbit_checks[temp>>log2radix]= 1111110111010001110100010000001

word: 111100100010

combo: 000000010001

word: 111110100000

combo: 000000010000

word: 111101100000

combo: 000000110000

word: 111111100010

combo: 000000110001

temp: 000000110001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101100110

combo: 000000110011

temp: 000000110011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111100100

combo: 000000110010

temp: 000000110010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101101100

combo: 000000110110

temp: 000000110110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111101110

combo: 000000110111

word: 111101101010

combo: 000000110101

temp: 000000110101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111101000

combo: 000000110100

temp: 000000110100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101111000

combo: 000000111100

temp: 000000111100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111111010

combo: 000000111101

word: 111101111110

combo: 000000111111

word: 111111111100

combo: 000000111110

word: 111101110100

combo: 000000111010

temp: 000000111010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111110110

combo: 000000111011

word: 111101110010

combo: 000000111001

temp: 000000111001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111110000

combo: 000000111000

temp: 000000111000

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101010000

combo: 000000101000

word: 111111010010

combo: 000000101001

temp: 000000101001

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101010110

combo: 000000101011

temp: 000000101011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111010100

combo: 000000101010

temp: 000000101010

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101011100

combo: 000000101110

temp: 000000101110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111011110

combo: 000000101111

word: 111101011010

combo: 000000101101

temp: 000000101101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111011000

combo: 000000101100

temp: 000000101100

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101001000

combo: 000000100100

word: 111111001010

combo: 000000100101

temp: 000000100101

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101001110

combo: 000000100111

temp: 000000100111

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111111001100

combo: 000000100110

temp: 000000100110

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101000100

combo: 000000100010

word: 111111000110

combo: 000000100011

temp: 000000100011

orbit_checks[temp>>log2radix]= 10111011111100111111011101000

word: 111101000010

combo: 000000100001

word: 111111000000

combo: 000000100000

exiting generate_children
